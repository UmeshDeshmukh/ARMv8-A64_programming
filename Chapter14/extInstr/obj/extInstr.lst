AARCH64 GAS  obj/extInstr.s 			page 1


 GNU assembler version 2.35.2 (aarch64-linux-gnu)
	 using BFD version (GNU Binutils for Debian) 2.35.2.
 options passed	: -I -I -EL -march=armv8-a+simd -mabi=lp64 -aghl=obj/extInstr.lst 
 input file    	: obj/extInstr.s
 output file   	: obj/extInstr.o
 target        	: aarch64-unknown-linux-gnu
 time stamp    	: 2022-07-25T15:15:51.000-0400

AARCH64 GAS  obj/extInstr.s 			page 2


   1              		.arch armv8-a
   2              		.file	"extInstr.cpp"
   3              		.text
   4              	.Ltext0:
   5              		.align	2
   6              		.p2align 4,,11
   7              		.type	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0, %function
   8              	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0:
   9              	.LVL0:
  10              	.LFB2823:
  11              		.file 1 "/usr/include/c++/10/ostream"
   1:/usr/include/c++/10/ostream **** // Output streams -*- C++ -*-
   2:/usr/include/c++/10/ostream **** 
   3:/usr/include/c++/10/ostream **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:/usr/include/c++/10/ostream **** //
   5:/usr/include/c++/10/ostream **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/10/ostream **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/10/ostream **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/10/ostream **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/10/ostream **** // any later version.
  10:/usr/include/c++/10/ostream **** 
  11:/usr/include/c++/10/ostream **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/10/ostream **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/10/ostream **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/10/ostream **** // GNU General Public License for more details.
  15:/usr/include/c++/10/ostream **** 
  16:/usr/include/c++/10/ostream **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/10/ostream **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/10/ostream **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/10/ostream **** 
  20:/usr/include/c++/10/ostream **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/10/ostream **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/10/ostream **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/10/ostream **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/10/ostream **** 
  25:/usr/include/c++/10/ostream **** /** @file include/ostream
  26:/usr/include/c++/10/ostream ****  *  This is a Standard C++ Library header.
  27:/usr/include/c++/10/ostream ****  */
  28:/usr/include/c++/10/ostream **** 
  29:/usr/include/c++/10/ostream **** //
  30:/usr/include/c++/10/ostream **** // ISO C++ 14882: 27.6.2  Output streams
  31:/usr/include/c++/10/ostream **** //
  32:/usr/include/c++/10/ostream **** 
  33:/usr/include/c++/10/ostream **** #ifndef _GLIBCXX_OSTREAM
  34:/usr/include/c++/10/ostream **** #define _GLIBCXX_OSTREAM 1
  35:/usr/include/c++/10/ostream **** 
  36:/usr/include/c++/10/ostream **** #pragma GCC system_header
  37:/usr/include/c++/10/ostream **** 
  38:/usr/include/c++/10/ostream **** #include <ios>
  39:/usr/include/c++/10/ostream **** #include <bits/ostream_insert.h>
  40:/usr/include/c++/10/ostream **** 
  41:/usr/include/c++/10/ostream **** namespace std _GLIBCXX_VISIBILITY(default)
  42:/usr/include/c++/10/ostream **** {
  43:/usr/include/c++/10/ostream **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:/usr/include/c++/10/ostream **** 
  45:/usr/include/c++/10/ostream ****   /**
  46:/usr/include/c++/10/ostream ****    *  @brief  Template class basic_ostream.
AARCH64 GAS  obj/extInstr.s 			page 3


  47:/usr/include/c++/10/ostream ****    *  @ingroup io
  48:/usr/include/c++/10/ostream ****    *
  49:/usr/include/c++/10/ostream ****    *  @tparam _CharT  Type of character stream.
  50:/usr/include/c++/10/ostream ****    *  @tparam _Traits  Traits for character type, defaults to
  51:/usr/include/c++/10/ostream ****    *                   char_traits<_CharT>.
  52:/usr/include/c++/10/ostream ****    *
  53:/usr/include/c++/10/ostream ****    *  This is the base class for all output streams.  It provides text
  54:/usr/include/c++/10/ostream ****    *  formatting of all builtin types, and communicates with any class
  55:/usr/include/c++/10/ostream ****    *  derived from basic_streambuf to do the actual output.
  56:/usr/include/c++/10/ostream ****   */
  57:/usr/include/c++/10/ostream ****   template<typename _CharT, typename _Traits>
  58:/usr/include/c++/10/ostream ****     class basic_ostream : virtual public basic_ios<_CharT, _Traits>
  59:/usr/include/c++/10/ostream ****     {
  60:/usr/include/c++/10/ostream ****     public:
  61:/usr/include/c++/10/ostream ****       // Types (inherited from basic_ios):
  62:/usr/include/c++/10/ostream ****       typedef _CharT			 		char_type;
  63:/usr/include/c++/10/ostream ****       typedef typename _Traits::int_type 		int_type;
  64:/usr/include/c++/10/ostream ****       typedef typename _Traits::pos_type 		pos_type;
  65:/usr/include/c++/10/ostream ****       typedef typename _Traits::off_type 		off_type;
  66:/usr/include/c++/10/ostream ****       typedef _Traits			 		traits_type;
  67:/usr/include/c++/10/ostream **** 
  68:/usr/include/c++/10/ostream ****       // Non-standard Types:
  69:/usr/include/c++/10/ostream ****       typedef basic_streambuf<_CharT, _Traits> 		__streambuf_type;
  70:/usr/include/c++/10/ostream ****       typedef basic_ios<_CharT, _Traits>		__ios_type;
  71:/usr/include/c++/10/ostream ****       typedef basic_ostream<_CharT, _Traits>		__ostream_type;
  72:/usr/include/c++/10/ostream ****       typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> >
  73:/usr/include/c++/10/ostream ****       							__num_put_type;
  74:/usr/include/c++/10/ostream ****       typedef ctype<_CharT>	      			__ctype_type;
  75:/usr/include/c++/10/ostream **** 
  76:/usr/include/c++/10/ostream ****       /**
  77:/usr/include/c++/10/ostream ****        *  @brief  Base constructor.
  78:/usr/include/c++/10/ostream ****        *
  79:/usr/include/c++/10/ostream ****        *  This ctor is almost never called by the user directly, rather from
  80:/usr/include/c++/10/ostream ****        *  derived classes' initialization lists, which pass a pointer to
  81:/usr/include/c++/10/ostream ****        *  their own stream buffer.
  82:/usr/include/c++/10/ostream ****       */
  83:/usr/include/c++/10/ostream ****       explicit
  84:/usr/include/c++/10/ostream ****       basic_ostream(__streambuf_type* __sb)
  85:/usr/include/c++/10/ostream ****       { this->init(__sb); }
  86:/usr/include/c++/10/ostream **** 
  87:/usr/include/c++/10/ostream ****       /**
  88:/usr/include/c++/10/ostream ****        *  @brief  Base destructor.
  89:/usr/include/c++/10/ostream ****        *
  90:/usr/include/c++/10/ostream ****        *  This does very little apart from providing a virtual base dtor.
  91:/usr/include/c++/10/ostream ****       */
  92:/usr/include/c++/10/ostream ****       virtual
  93:/usr/include/c++/10/ostream ****       ~basic_ostream() { }
  94:/usr/include/c++/10/ostream **** 
  95:/usr/include/c++/10/ostream ****       /// Safe prefix/suffix operations.
  96:/usr/include/c++/10/ostream ****       class sentry;
  97:/usr/include/c++/10/ostream ****       friend class sentry;
  98:/usr/include/c++/10/ostream **** 
  99:/usr/include/c++/10/ostream ****       //@{
 100:/usr/include/c++/10/ostream ****       /**
 101:/usr/include/c++/10/ostream ****        *  @brief  Interface for manipulators.
 102:/usr/include/c++/10/ostream ****        *
 103:/usr/include/c++/10/ostream ****        *  Manipulators such as @c std::endl and @c std::hex use these
AARCH64 GAS  obj/extInstr.s 			page 4


 104:/usr/include/c++/10/ostream ****        *  functions in constructs like "std::cout << std::endl".  For more
 105:/usr/include/c++/10/ostream ****        *  information, see the iomanip header.
 106:/usr/include/c++/10/ostream ****       */
 107:/usr/include/c++/10/ostream ****       __ostream_type&
 108:/usr/include/c++/10/ostream ****       operator<<(__ostream_type& (*__pf)(__ostream_type&))
 109:/usr/include/c++/10/ostream ****       {
 110:/usr/include/c++/10/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 111:/usr/include/c++/10/ostream **** 	// DR 60. What is a formatted input function?
 112:/usr/include/c++/10/ostream **** 	// The inserters for manipulators are *not* formatted output functions.
 113:/usr/include/c++/10/ostream **** 	return __pf(*this);
 114:/usr/include/c++/10/ostream ****       }
 115:/usr/include/c++/10/ostream **** 
 116:/usr/include/c++/10/ostream ****       __ostream_type&
 117:/usr/include/c++/10/ostream ****       operator<<(__ios_type& (*__pf)(__ios_type&))
 118:/usr/include/c++/10/ostream ****       {
 119:/usr/include/c++/10/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 120:/usr/include/c++/10/ostream **** 	// DR 60. What is a formatted input function?
 121:/usr/include/c++/10/ostream **** 	// The inserters for manipulators are *not* formatted output functions.
 122:/usr/include/c++/10/ostream **** 	__pf(*this);
 123:/usr/include/c++/10/ostream **** 	return *this;
 124:/usr/include/c++/10/ostream ****       }
 125:/usr/include/c++/10/ostream **** 
 126:/usr/include/c++/10/ostream ****       __ostream_type&
 127:/usr/include/c++/10/ostream ****       operator<<(ios_base& (*__pf) (ios_base&))
 128:/usr/include/c++/10/ostream ****       {
 129:/usr/include/c++/10/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 130:/usr/include/c++/10/ostream **** 	// DR 60. What is a formatted input function?
 131:/usr/include/c++/10/ostream **** 	// The inserters for manipulators are *not* formatted output functions.
 132:/usr/include/c++/10/ostream **** 	__pf(*this);
 133:/usr/include/c++/10/ostream **** 	return *this;
 134:/usr/include/c++/10/ostream ****       }
 135:/usr/include/c++/10/ostream ****       //@}
 136:/usr/include/c++/10/ostream **** 
 137:/usr/include/c++/10/ostream ****       //@{
 138:/usr/include/c++/10/ostream ****       /**
 139:/usr/include/c++/10/ostream ****        *  @name Inserters
 140:/usr/include/c++/10/ostream ****        *
 141:/usr/include/c++/10/ostream ****        *  All the @c operator<< functions (aka <em>formatted output
 142:/usr/include/c++/10/ostream ****        *  functions</em>) have some common behavior.  Each starts by
 143:/usr/include/c++/10/ostream ****        *  constructing a temporary object of type std::basic_ostream::sentry.
 144:/usr/include/c++/10/ostream ****        *  This can have several effects, concluding with the setting of a
 145:/usr/include/c++/10/ostream ****        *  status flag; see the sentry documentation for more.
 146:/usr/include/c++/10/ostream ****        *
 147:/usr/include/c++/10/ostream ****        *  If the sentry status is good, the function tries to generate
 148:/usr/include/c++/10/ostream ****        *  whatever data is appropriate for the type of the argument.
 149:/usr/include/c++/10/ostream ****        *
 150:/usr/include/c++/10/ostream ****        *  If an exception is thrown during insertion, ios_base::badbit
 151:/usr/include/c++/10/ostream ****        *  will be turned on in the stream's error state without causing an
 152:/usr/include/c++/10/ostream ****        *  ios_base::failure to be thrown.  The original exception will then
 153:/usr/include/c++/10/ostream ****        *  be rethrown.
 154:/usr/include/c++/10/ostream ****       */
 155:/usr/include/c++/10/ostream **** 
 156:/usr/include/c++/10/ostream ****       //@{
 157:/usr/include/c++/10/ostream ****       /**
 158:/usr/include/c++/10/ostream ****        *  @brief Integer arithmetic inserters
 159:/usr/include/c++/10/ostream ****        *  @param  __n A variable of builtin integral type.
 160:/usr/include/c++/10/ostream ****        *  @return  @c *this if successful
AARCH64 GAS  obj/extInstr.s 			page 5


 161:/usr/include/c++/10/ostream ****        *
 162:/usr/include/c++/10/ostream ****        *  These functions use the stream's current locale (specifically, the
 163:/usr/include/c++/10/ostream ****        *  @c num_get facet) to perform numeric formatting.
 164:/usr/include/c++/10/ostream ****       */
 165:/usr/include/c++/10/ostream ****       __ostream_type&
 166:/usr/include/c++/10/ostream ****       operator<<(long __n)
 167:/usr/include/c++/10/ostream ****       { return _M_insert(__n); }
 168:/usr/include/c++/10/ostream **** 
 169:/usr/include/c++/10/ostream ****       __ostream_type&
 170:/usr/include/c++/10/ostream ****       operator<<(unsigned long __n)
 171:/usr/include/c++/10/ostream ****       { return _M_insert(__n); }
 172:/usr/include/c++/10/ostream **** 
 173:/usr/include/c++/10/ostream ****       __ostream_type&
 174:/usr/include/c++/10/ostream ****       operator<<(bool __n)
 175:/usr/include/c++/10/ostream ****       { return _M_insert(__n); }
 176:/usr/include/c++/10/ostream **** 
 177:/usr/include/c++/10/ostream ****       __ostream_type&
 178:/usr/include/c++/10/ostream ****       operator<<(short __n);
 179:/usr/include/c++/10/ostream **** 
 180:/usr/include/c++/10/ostream ****       __ostream_type&
 181:/usr/include/c++/10/ostream ****       operator<<(unsigned short __n)
 182:/usr/include/c++/10/ostream ****       {
 183:/usr/include/c++/10/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 184:/usr/include/c++/10/ostream **** 	// 117. basic_ostream uses nonexistent num_put member functions.
 185:/usr/include/c++/10/ostream **** 	return _M_insert(static_cast<unsigned long>(__n));
 186:/usr/include/c++/10/ostream ****       }
 187:/usr/include/c++/10/ostream **** 
 188:/usr/include/c++/10/ostream ****       __ostream_type&
 189:/usr/include/c++/10/ostream ****       operator<<(int __n);
 190:/usr/include/c++/10/ostream **** 
 191:/usr/include/c++/10/ostream ****       __ostream_type&
 192:/usr/include/c++/10/ostream ****       operator<<(unsigned int __n)
 193:/usr/include/c++/10/ostream ****       {
 194:/usr/include/c++/10/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 195:/usr/include/c++/10/ostream **** 	// 117. basic_ostream uses nonexistent num_put member functions.
 196:/usr/include/c++/10/ostream **** 	return _M_insert(static_cast<unsigned long>(__n));
 197:/usr/include/c++/10/ostream ****       }
 198:/usr/include/c++/10/ostream **** 
 199:/usr/include/c++/10/ostream **** #ifdef _GLIBCXX_USE_LONG_LONG
 200:/usr/include/c++/10/ostream ****       __ostream_type&
 201:/usr/include/c++/10/ostream ****       operator<<(long long __n)
 202:/usr/include/c++/10/ostream ****       { return _M_insert(__n); }
 203:/usr/include/c++/10/ostream **** 
 204:/usr/include/c++/10/ostream ****       __ostream_type&
 205:/usr/include/c++/10/ostream ****       operator<<(unsigned long long __n)
 206:/usr/include/c++/10/ostream ****       { return _M_insert(__n); }
 207:/usr/include/c++/10/ostream **** #endif
 208:/usr/include/c++/10/ostream ****       //@}
 209:/usr/include/c++/10/ostream **** 
 210:/usr/include/c++/10/ostream ****       //@{
 211:/usr/include/c++/10/ostream ****       /**
 212:/usr/include/c++/10/ostream ****        *  @brief  Floating point arithmetic inserters
 213:/usr/include/c++/10/ostream ****        *  @param  __f A variable of builtin floating point type.
 214:/usr/include/c++/10/ostream ****        *  @return  @c *this if successful
 215:/usr/include/c++/10/ostream ****        *
 216:/usr/include/c++/10/ostream ****        *  These functions use the stream's current locale (specifically, the
 217:/usr/include/c++/10/ostream ****        *  @c num_get facet) to perform numeric formatting.
AARCH64 GAS  obj/extInstr.s 			page 6


 218:/usr/include/c++/10/ostream ****       */
 219:/usr/include/c++/10/ostream ****       __ostream_type&
 220:/usr/include/c++/10/ostream ****       operator<<(double __f)
 221:/usr/include/c++/10/ostream ****       { return _M_insert(__f); }
 222:/usr/include/c++/10/ostream **** 
 223:/usr/include/c++/10/ostream ****       __ostream_type&
 224:/usr/include/c++/10/ostream ****       operator<<(float __f)
 225:/usr/include/c++/10/ostream ****       {
 226:/usr/include/c++/10/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 227:/usr/include/c++/10/ostream **** 	// 117. basic_ostream uses nonexistent num_put member functions.
 228:/usr/include/c++/10/ostream **** 	return _M_insert(static_cast<double>(__f));
 229:/usr/include/c++/10/ostream ****       }
 230:/usr/include/c++/10/ostream **** 
 231:/usr/include/c++/10/ostream ****       __ostream_type&
 232:/usr/include/c++/10/ostream ****       operator<<(long double __f)
 233:/usr/include/c++/10/ostream ****       { return _M_insert(__f); }
 234:/usr/include/c++/10/ostream ****       //@}
 235:/usr/include/c++/10/ostream **** 
 236:/usr/include/c++/10/ostream ****       /**
 237:/usr/include/c++/10/ostream ****        *  @brief  Pointer arithmetic inserters
 238:/usr/include/c++/10/ostream ****        *  @param  __p A variable of pointer type.
 239:/usr/include/c++/10/ostream ****        *  @return  @c *this if successful
 240:/usr/include/c++/10/ostream ****        *
 241:/usr/include/c++/10/ostream ****        *  These functions use the stream's current locale (specifically, the
 242:/usr/include/c++/10/ostream ****        *  @c num_get facet) to perform numeric formatting.
 243:/usr/include/c++/10/ostream ****       */
 244:/usr/include/c++/10/ostream ****       __ostream_type&
 245:/usr/include/c++/10/ostream ****       operator<<(const void* __p)
 246:/usr/include/c++/10/ostream ****       { return _M_insert(__p); }
 247:/usr/include/c++/10/ostream **** 
 248:/usr/include/c++/10/ostream **** #if __cplusplus >= 201703L
 249:/usr/include/c++/10/ostream ****       __ostream_type&
 250:/usr/include/c++/10/ostream ****       operator<<(nullptr_t)
 251:/usr/include/c++/10/ostream ****       { return *this << "nullptr"; }
 252:/usr/include/c++/10/ostream **** #endif
 253:/usr/include/c++/10/ostream **** 
 254:/usr/include/c++/10/ostream ****       /**
 255:/usr/include/c++/10/ostream ****        *  @brief  Extracting from another streambuf.
 256:/usr/include/c++/10/ostream ****        *  @param  __sb  A pointer to a streambuf
 257:/usr/include/c++/10/ostream ****        *
 258:/usr/include/c++/10/ostream ****        *  This function behaves like one of the basic arithmetic extractors,
 259:/usr/include/c++/10/ostream ****        *  in that it also constructs a sentry object and has the same error
 260:/usr/include/c++/10/ostream ****        *  handling behavior.
 261:/usr/include/c++/10/ostream ****        *
 262:/usr/include/c++/10/ostream ****        *  If @p __sb is NULL, the stream will set failbit in its error state.
 263:/usr/include/c++/10/ostream ****        *
 264:/usr/include/c++/10/ostream ****        *  Characters are extracted from @p __sb and inserted into @c *this
 265:/usr/include/c++/10/ostream ****        *  until one of the following occurs:
 266:/usr/include/c++/10/ostream ****        *
 267:/usr/include/c++/10/ostream ****        *  - the input stream reaches end-of-file,
 268:/usr/include/c++/10/ostream ****        *  - insertion into the output sequence fails (in this case, the
 269:/usr/include/c++/10/ostream ****        *    character that would have been inserted is not extracted), or
 270:/usr/include/c++/10/ostream ****        *  - an exception occurs while getting a character from @p __sb, which
 271:/usr/include/c++/10/ostream ****        *    sets failbit in the error state
 272:/usr/include/c++/10/ostream ****        *
 273:/usr/include/c++/10/ostream ****        *  If the function inserts no characters, failbit is set.
 274:/usr/include/c++/10/ostream ****       */
AARCH64 GAS  obj/extInstr.s 			page 7


 275:/usr/include/c++/10/ostream ****       __ostream_type&
 276:/usr/include/c++/10/ostream ****       operator<<(__streambuf_type* __sb);
 277:/usr/include/c++/10/ostream ****       //@}
 278:/usr/include/c++/10/ostream **** 
 279:/usr/include/c++/10/ostream ****       //@{
 280:/usr/include/c++/10/ostream ****       /**
 281:/usr/include/c++/10/ostream ****        *  @name Unformatted Output Functions
 282:/usr/include/c++/10/ostream ****        *
 283:/usr/include/c++/10/ostream ****        *  All the unformatted output functions have some common behavior.
 284:/usr/include/c++/10/ostream ****        *  Each starts by constructing a temporary object of type
 285:/usr/include/c++/10/ostream ****        *  std::basic_ostream::sentry.  This has several effects, concluding
 286:/usr/include/c++/10/ostream ****        *  with the setting of a status flag; see the sentry documentation
 287:/usr/include/c++/10/ostream ****        *  for more.
 288:/usr/include/c++/10/ostream ****        *
 289:/usr/include/c++/10/ostream ****        *  If the sentry status is good, the function tries to generate
 290:/usr/include/c++/10/ostream ****        *  whatever data is appropriate for the type of the argument.
 291:/usr/include/c++/10/ostream ****        *
 292:/usr/include/c++/10/ostream ****        *  If an exception is thrown during insertion, ios_base::badbit
 293:/usr/include/c++/10/ostream ****        *  will be turned on in the stream's error state.  If badbit is on in
 294:/usr/include/c++/10/ostream ****        *  the stream's exceptions mask, the exception will be rethrown
 295:/usr/include/c++/10/ostream ****        *  without completing its actions.
 296:/usr/include/c++/10/ostream ****       */
 297:/usr/include/c++/10/ostream **** 
 298:/usr/include/c++/10/ostream ****       /**
 299:/usr/include/c++/10/ostream ****        *  @brief  Simple insertion.
 300:/usr/include/c++/10/ostream ****        *  @param  __c  The character to insert.
 301:/usr/include/c++/10/ostream ****        *  @return  *this
 302:/usr/include/c++/10/ostream ****        *
 303:/usr/include/c++/10/ostream ****        *  Tries to insert @p __c.
 304:/usr/include/c++/10/ostream ****        *
 305:/usr/include/c++/10/ostream ****        *  @note  This function is not overloaded on signed char and
 306:/usr/include/c++/10/ostream ****        *         unsigned char.
 307:/usr/include/c++/10/ostream ****       */
 308:/usr/include/c++/10/ostream ****       __ostream_type&
 309:/usr/include/c++/10/ostream ****       put(char_type __c);
 310:/usr/include/c++/10/ostream **** 
 311:/usr/include/c++/10/ostream ****       /**
 312:/usr/include/c++/10/ostream ****        *  @brief  Core write functionality, without sentry.
 313:/usr/include/c++/10/ostream ****        *  @param  __s  The array to insert.
 314:/usr/include/c++/10/ostream ****        *  @param  __n  Maximum number of characters to insert.
 315:/usr/include/c++/10/ostream ****       */
 316:/usr/include/c++/10/ostream ****       void
 317:/usr/include/c++/10/ostream ****       _M_write(const char_type* __s, streamsize __n)
 318:/usr/include/c++/10/ostream ****       {
 319:/usr/include/c++/10/ostream **** 	const streamsize __put = this->rdbuf()->sputn(__s, __n);
 320:/usr/include/c++/10/ostream **** 	if (__put != __n)
 321:/usr/include/c++/10/ostream **** 	  this->setstate(ios_base::badbit);
 322:/usr/include/c++/10/ostream ****       }
 323:/usr/include/c++/10/ostream **** 
 324:/usr/include/c++/10/ostream ****       /**
 325:/usr/include/c++/10/ostream ****        *  @brief  Character string insertion.
 326:/usr/include/c++/10/ostream ****        *  @param  __s  The array to insert.
 327:/usr/include/c++/10/ostream ****        *  @param  __n  Maximum number of characters to insert.
 328:/usr/include/c++/10/ostream ****        *  @return  *this
 329:/usr/include/c++/10/ostream ****        *
 330:/usr/include/c++/10/ostream ****        *  Characters are copied from @p __s and inserted into the stream until
 331:/usr/include/c++/10/ostream ****        *  one of the following happens:
AARCH64 GAS  obj/extInstr.s 			page 8


 332:/usr/include/c++/10/ostream ****        *
 333:/usr/include/c++/10/ostream ****        *  - @p __n characters are inserted
 334:/usr/include/c++/10/ostream ****        *  - inserting into the output sequence fails (in this case, badbit
 335:/usr/include/c++/10/ostream ****        *    will be set in the stream's error state)
 336:/usr/include/c++/10/ostream ****        *
 337:/usr/include/c++/10/ostream ****        *  @note  This function is not overloaded on signed char and
 338:/usr/include/c++/10/ostream ****        *         unsigned char.
 339:/usr/include/c++/10/ostream ****       */
 340:/usr/include/c++/10/ostream ****       __ostream_type&
 341:/usr/include/c++/10/ostream ****       write(const char_type* __s, streamsize __n);
 342:/usr/include/c++/10/ostream ****       //@}
 343:/usr/include/c++/10/ostream **** 
 344:/usr/include/c++/10/ostream ****       /**
 345:/usr/include/c++/10/ostream ****        *  @brief  Synchronizing the stream buffer.
 346:/usr/include/c++/10/ostream ****        *  @return  *this
 347:/usr/include/c++/10/ostream ****        *
 348:/usr/include/c++/10/ostream ****        *  If @c rdbuf() is a null pointer, changes nothing.
 349:/usr/include/c++/10/ostream ****        *
 350:/usr/include/c++/10/ostream ****        *  Otherwise, calls @c rdbuf()->pubsync(), and if that returns -1,
 351:/usr/include/c++/10/ostream ****        *  sets badbit.
 352:/usr/include/c++/10/ostream ****       */
 353:/usr/include/c++/10/ostream ****       __ostream_type&
 354:/usr/include/c++/10/ostream ****       flush();
 355:/usr/include/c++/10/ostream **** 
 356:/usr/include/c++/10/ostream ****       /**
 357:/usr/include/c++/10/ostream ****        *  @brief  Getting the current write position.
 358:/usr/include/c++/10/ostream ****        *  @return  A file position object.
 359:/usr/include/c++/10/ostream ****        *
 360:/usr/include/c++/10/ostream ****        *  If @c fail() is not false, returns @c pos_type(-1) to indicate
 361:/usr/include/c++/10/ostream ****        *  failure.  Otherwise returns @c rdbuf()->pubseekoff(0,cur,out).
 362:/usr/include/c++/10/ostream ****       */
 363:/usr/include/c++/10/ostream ****       pos_type
 364:/usr/include/c++/10/ostream ****       tellp();
 365:/usr/include/c++/10/ostream **** 
 366:/usr/include/c++/10/ostream ****       /**
 367:/usr/include/c++/10/ostream ****        *  @brief  Changing the current write position.
 368:/usr/include/c++/10/ostream ****        *  @param  __pos  A file position object.
 369:/usr/include/c++/10/ostream ****        *  @return  *this
 370:/usr/include/c++/10/ostream ****        *
 371:/usr/include/c++/10/ostream ****        *  If @c fail() is not true, calls @c rdbuf()->pubseekpos(pos).  If
 372:/usr/include/c++/10/ostream ****        *  that function fails, sets failbit.
 373:/usr/include/c++/10/ostream ****       */
 374:/usr/include/c++/10/ostream ****       __ostream_type&
 375:/usr/include/c++/10/ostream ****       seekp(pos_type);
 376:/usr/include/c++/10/ostream **** 
 377:/usr/include/c++/10/ostream ****       /**
 378:/usr/include/c++/10/ostream ****        *  @brief  Changing the current write position.
 379:/usr/include/c++/10/ostream ****        *  @param  __off  A file offset object.
 380:/usr/include/c++/10/ostream ****        *  @param  __dir  The direction in which to seek.
 381:/usr/include/c++/10/ostream ****        *  @return  *this
 382:/usr/include/c++/10/ostream ****        *
 383:/usr/include/c++/10/ostream ****        *  If @c fail() is not true, calls @c rdbuf()->pubseekoff(off,dir).
 384:/usr/include/c++/10/ostream ****        *  If that function fails, sets failbit.
 385:/usr/include/c++/10/ostream ****       */
 386:/usr/include/c++/10/ostream ****        __ostream_type&
 387:/usr/include/c++/10/ostream ****       seekp(off_type, ios_base::seekdir);
 388:/usr/include/c++/10/ostream **** 
AARCH64 GAS  obj/extInstr.s 			page 9


 389:/usr/include/c++/10/ostream ****     protected:
 390:/usr/include/c++/10/ostream ****       basic_ostream()
 391:/usr/include/c++/10/ostream ****       { this->init(0); }
 392:/usr/include/c++/10/ostream **** 
 393:/usr/include/c++/10/ostream **** #if __cplusplus >= 201103L
 394:/usr/include/c++/10/ostream ****       // Non-standard constructor that does not call init()
 395:/usr/include/c++/10/ostream ****       basic_ostream(basic_iostream<_CharT, _Traits>&) { }
 396:/usr/include/c++/10/ostream **** 
 397:/usr/include/c++/10/ostream ****       basic_ostream(const basic_ostream&) = delete;
 398:/usr/include/c++/10/ostream **** 
 399:/usr/include/c++/10/ostream ****       basic_ostream(basic_ostream&& __rhs)
 400:/usr/include/c++/10/ostream ****       : __ios_type()
 401:/usr/include/c++/10/ostream ****       { __ios_type::move(__rhs); }
 402:/usr/include/c++/10/ostream **** 
 403:/usr/include/c++/10/ostream ****       // 27.7.3.3 Assign/swap
 404:/usr/include/c++/10/ostream **** 
 405:/usr/include/c++/10/ostream ****       basic_ostream& operator=(const basic_ostream&) = delete;
 406:/usr/include/c++/10/ostream **** 
 407:/usr/include/c++/10/ostream ****       basic_ostream&
 408:/usr/include/c++/10/ostream ****       operator=(basic_ostream&& __rhs)
 409:/usr/include/c++/10/ostream ****       {
 410:/usr/include/c++/10/ostream **** 	swap(__rhs);
 411:/usr/include/c++/10/ostream **** 	return *this;
 412:/usr/include/c++/10/ostream ****       }
 413:/usr/include/c++/10/ostream **** 
 414:/usr/include/c++/10/ostream ****       void
 415:/usr/include/c++/10/ostream ****       swap(basic_ostream& __rhs)
 416:/usr/include/c++/10/ostream ****       { __ios_type::swap(__rhs); }
 417:/usr/include/c++/10/ostream **** #endif
 418:/usr/include/c++/10/ostream **** 
 419:/usr/include/c++/10/ostream ****       template<typename _ValueT>
 420:/usr/include/c++/10/ostream **** 	__ostream_type&
 421:/usr/include/c++/10/ostream **** 	_M_insert(_ValueT __v);
 422:/usr/include/c++/10/ostream ****     };
 423:/usr/include/c++/10/ostream **** 
 424:/usr/include/c++/10/ostream ****   /**
 425:/usr/include/c++/10/ostream ****    *  @brief  Performs setup work for output streams.
 426:/usr/include/c++/10/ostream ****    *
 427:/usr/include/c++/10/ostream ****    *  Objects of this class are created before all of the standard
 428:/usr/include/c++/10/ostream ****    *  inserters are run.  It is responsible for <em>exception-safe prefix and
 429:/usr/include/c++/10/ostream ****    *  suffix operations</em>.
 430:/usr/include/c++/10/ostream ****   */
 431:/usr/include/c++/10/ostream ****   template <typename _CharT, typename _Traits>
 432:/usr/include/c++/10/ostream ****     class basic_ostream<_CharT, _Traits>::sentry
 433:/usr/include/c++/10/ostream ****     {
 434:/usr/include/c++/10/ostream ****       // Data Members.
 435:/usr/include/c++/10/ostream ****       bool 				_M_ok;
 436:/usr/include/c++/10/ostream ****       basic_ostream<_CharT, _Traits>& 	_M_os;
 437:/usr/include/c++/10/ostream **** 
 438:/usr/include/c++/10/ostream ****     public:
 439:/usr/include/c++/10/ostream ****       /**
 440:/usr/include/c++/10/ostream ****        *  @brief  The constructor performs preparatory work.
 441:/usr/include/c++/10/ostream ****        *  @param  __os  The output stream to guard.
 442:/usr/include/c++/10/ostream ****        *
 443:/usr/include/c++/10/ostream ****        *  If the stream state is good (@a __os.good() is true), then if the
 444:/usr/include/c++/10/ostream ****        *  stream is tied to another output stream, @c is.tie()->flush()
 445:/usr/include/c++/10/ostream ****        *  is called to synchronize the output sequences.
AARCH64 GAS  obj/extInstr.s 			page 10


 446:/usr/include/c++/10/ostream ****        *
 447:/usr/include/c++/10/ostream ****        *  If the stream state is still good, then the sentry state becomes
 448:/usr/include/c++/10/ostream ****        *  true (@a okay).
 449:/usr/include/c++/10/ostream ****       */
 450:/usr/include/c++/10/ostream ****       explicit
 451:/usr/include/c++/10/ostream ****       sentry(basic_ostream<_CharT, _Traits>& __os);
 452:/usr/include/c++/10/ostream **** 
 453:/usr/include/c++/10/ostream **** #pragma GCC diagnostic push
 454:/usr/include/c++/10/ostream **** #pragma GCC diagnostic ignored "-Wdeprecated-declarations"
 455:/usr/include/c++/10/ostream ****       /**
 456:/usr/include/c++/10/ostream ****        *  @brief  Possibly flushes the stream.
 457:/usr/include/c++/10/ostream ****        *
 458:/usr/include/c++/10/ostream ****        *  If @c ios_base::unitbuf is set in @c os.flags(), and
 459:/usr/include/c++/10/ostream ****        *  @c std::uncaught_exception() is true, the sentry destructor calls
 460:/usr/include/c++/10/ostream ****        *  @c flush() on the output stream.
 461:/usr/include/c++/10/ostream ****       */
 462:/usr/include/c++/10/ostream ****       ~sentry()
 463:/usr/include/c++/10/ostream ****       {
 464:/usr/include/c++/10/ostream **** 	// XXX MT
 465:/usr/include/c++/10/ostream **** 	if (bool(_M_os.flags() & ios_base::unitbuf) && !uncaught_exception())
 466:/usr/include/c++/10/ostream **** 	  {
 467:/usr/include/c++/10/ostream **** 	    // Can't call flush directly or else will get into recursive lock.
 468:/usr/include/c++/10/ostream **** 	    if (_M_os.rdbuf() && _M_os.rdbuf()->pubsync() == -1)
 469:/usr/include/c++/10/ostream **** 	      _M_os.setstate(ios_base::badbit);
 470:/usr/include/c++/10/ostream **** 	  }
 471:/usr/include/c++/10/ostream ****       }
 472:/usr/include/c++/10/ostream **** #pragma GCC diagnostic pop
 473:/usr/include/c++/10/ostream **** 
 474:/usr/include/c++/10/ostream ****       /**
 475:/usr/include/c++/10/ostream ****        *  @brief  Quick status checking.
 476:/usr/include/c++/10/ostream ****        *  @return  The sentry state.
 477:/usr/include/c++/10/ostream ****        *
 478:/usr/include/c++/10/ostream ****        *  For ease of use, sentries may be converted to booleans.  The
 479:/usr/include/c++/10/ostream ****        *  return value is that of the sentry state (true == okay).
 480:/usr/include/c++/10/ostream ****       */
 481:/usr/include/c++/10/ostream **** #if __cplusplus >= 201103L
 482:/usr/include/c++/10/ostream ****       explicit
 483:/usr/include/c++/10/ostream **** #endif
 484:/usr/include/c++/10/ostream ****       operator bool() const
 485:/usr/include/c++/10/ostream ****       { return _M_ok; }
 486:/usr/include/c++/10/ostream ****     };
 487:/usr/include/c++/10/ostream **** 
 488:/usr/include/c++/10/ostream ****   //@{
 489:/usr/include/c++/10/ostream ****   /**
 490:/usr/include/c++/10/ostream ****    *  @brief  Character inserters
 491:/usr/include/c++/10/ostream ****    *  @param  __out  An output stream.
 492:/usr/include/c++/10/ostream ****    *  @param  __c  A character.
 493:/usr/include/c++/10/ostream ****    *  @return  out
 494:/usr/include/c++/10/ostream ****    *
 495:/usr/include/c++/10/ostream ****    *  Behaves like one of the formatted arithmetic inserters described in
 496:/usr/include/c++/10/ostream ****    *  std::basic_ostream.  After constructing a sentry object with good
 497:/usr/include/c++/10/ostream ****    *  status, this function inserts a single character and any required
 498:/usr/include/c++/10/ostream ****    *  padding (as determined by [22.2.2.2.2]).  @c __out.width(0) is then
 499:/usr/include/c++/10/ostream ****    *  called.
 500:/usr/include/c++/10/ostream ****    *
 501:/usr/include/c++/10/ostream ****    *  If @p __c is of type @c char and the character type of the stream is not
 502:/usr/include/c++/10/ostream ****    *  @c char, the character is widened before insertion.
AARCH64 GAS  obj/extInstr.s 			page 11


 503:/usr/include/c++/10/ostream ****   */
 504:/usr/include/c++/10/ostream ****   template<typename _CharT, typename _Traits>
 505:/usr/include/c++/10/ostream ****     inline basic_ostream<_CharT, _Traits>&
 506:/usr/include/c++/10/ostream ****     operator<<(basic_ostream<_CharT, _Traits>& __out, _CharT __c)
 507:/usr/include/c++/10/ostream ****     { return __ostream_insert(__out, &__c, 1); }
 508:/usr/include/c++/10/ostream **** 
 509:/usr/include/c++/10/ostream ****   template<typename _CharT, typename _Traits>
 510:/usr/include/c++/10/ostream ****     inline basic_ostream<_CharT, _Traits>&
 511:/usr/include/c++/10/ostream ****     operator<<(basic_ostream<_CharT, _Traits>& __out, char __c)
 512:/usr/include/c++/10/ostream ****     { return (__out << __out.widen(__c)); }
 513:/usr/include/c++/10/ostream **** 
 514:/usr/include/c++/10/ostream ****   // Specialization
 515:/usr/include/c++/10/ostream ****   template<typename _Traits>
 516:/usr/include/c++/10/ostream ****     inline basic_ostream<char, _Traits>&
 517:/usr/include/c++/10/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, char __c)
 518:/usr/include/c++/10/ostream ****     { return __ostream_insert(__out, &__c, 1); }
 519:/usr/include/c++/10/ostream **** 
 520:/usr/include/c++/10/ostream ****   // Signed and unsigned
 521:/usr/include/c++/10/ostream ****   template<typename _Traits>
 522:/usr/include/c++/10/ostream ****     inline basic_ostream<char, _Traits>&
 523:/usr/include/c++/10/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, signed char __c)
 524:/usr/include/c++/10/ostream ****     { return (__out << static_cast<char>(__c)); }
 525:/usr/include/c++/10/ostream **** 
 526:/usr/include/c++/10/ostream ****   template<typename _Traits>
 527:/usr/include/c++/10/ostream ****     inline basic_ostream<char, _Traits>&
 528:/usr/include/c++/10/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, unsigned char __c)
 529:/usr/include/c++/10/ostream ****     { return (__out << static_cast<char>(__c)); }
 530:/usr/include/c++/10/ostream **** 
 531:/usr/include/c++/10/ostream **** #if __cplusplus > 201703L
 532:/usr/include/c++/10/ostream ****   // The following deleted overloads prevent formatting character values as
 533:/usr/include/c++/10/ostream ****   // numeric values.
 534:/usr/include/c++/10/ostream **** 
 535:/usr/include/c++/10/ostream **** #ifdef _GLIBCXX_USE_WCHAR_T
 536:/usr/include/c++/10/ostream ****   template<typename _Traits>
 537:/usr/include/c++/10/ostream ****     basic_ostream<char, _Traits>&
 538:/usr/include/c++/10/ostream ****     operator<<(basic_ostream<char, _Traits>&, wchar_t) = delete;
 539:/usr/include/c++/10/ostream **** #endif // _GLIBCXX_USE_WCHAR_T
 540:/usr/include/c++/10/ostream **** 
 541:/usr/include/c++/10/ostream **** #ifdef _GLIBCXX_USE_CHAR8_T
 542:/usr/include/c++/10/ostream ****   template<typename _Traits>
 543:/usr/include/c++/10/ostream ****     basic_ostream<char, _Traits>&
 544:/usr/include/c++/10/ostream ****     operator<<(basic_ostream<char, _Traits>&, char8_t) = delete;
 545:/usr/include/c++/10/ostream **** #endif
 546:/usr/include/c++/10/ostream **** 
 547:/usr/include/c++/10/ostream ****   template<typename _Traits>
 548:/usr/include/c++/10/ostream ****     basic_ostream<char, _Traits>&
 549:/usr/include/c++/10/ostream ****     operator<<(basic_ostream<char, _Traits>&, char16_t) = delete;
 550:/usr/include/c++/10/ostream **** 
 551:/usr/include/c++/10/ostream ****   template<typename _Traits>
 552:/usr/include/c++/10/ostream ****     basic_ostream<char, _Traits>&
 553:/usr/include/c++/10/ostream ****     operator<<(basic_ostream<char, _Traits>&, char32_t) = delete;
 554:/usr/include/c++/10/ostream **** 
 555:/usr/include/c++/10/ostream **** #ifdef _GLIBCXX_USE_WCHAR_T
 556:/usr/include/c++/10/ostream **** #ifdef _GLIBCXX_USE_CHAR8_T
 557:/usr/include/c++/10/ostream ****   template<typename _Traits>
 558:/usr/include/c++/10/ostream ****     basic_ostream<wchar_t, _Traits>&
 559:/usr/include/c++/10/ostream ****     operator<<(basic_ostream<wchar_t, _Traits>&, char8_t) = delete;
AARCH64 GAS  obj/extInstr.s 			page 12


 560:/usr/include/c++/10/ostream **** #endif // _GLIBCXX_USE_CHAR8_T
 561:/usr/include/c++/10/ostream **** 
 562:/usr/include/c++/10/ostream ****   template<typename _Traits>
 563:/usr/include/c++/10/ostream ****     basic_ostream<wchar_t, _Traits>&
 564:/usr/include/c++/10/ostream ****     operator<<(basic_ostream<wchar_t, _Traits>&, char16_t) = delete;
 565:/usr/include/c++/10/ostream **** 
 566:/usr/include/c++/10/ostream ****   template<typename _Traits>
 567:/usr/include/c++/10/ostream ****     basic_ostream<wchar_t, _Traits>&
 568:/usr/include/c++/10/ostream ****     operator<<(basic_ostream<wchar_t, _Traits>&, char32_t) = delete;
 569:/usr/include/c++/10/ostream **** #endif // _GLIBCXX_USE_WCHAR_T
 570:/usr/include/c++/10/ostream **** #endif // C++20
 571:/usr/include/c++/10/ostream ****   //@}
 572:/usr/include/c++/10/ostream **** 
 573:/usr/include/c++/10/ostream ****   //@{
 574:/usr/include/c++/10/ostream ****   /**
 575:/usr/include/c++/10/ostream ****    *  @brief  String inserters
 576:/usr/include/c++/10/ostream ****    *  @param  __out  An output stream.
 577:/usr/include/c++/10/ostream ****    *  @param  __s  A character string.
 578:/usr/include/c++/10/ostream ****    *  @return  out
 579:/usr/include/c++/10/ostream ****    *  @pre  @p __s must be a non-NULL pointer
 580:/usr/include/c++/10/ostream ****    *
 581:/usr/include/c++/10/ostream ****    *  Behaves like one of the formatted arithmetic inserters described in
 582:/usr/include/c++/10/ostream ****    *  std::basic_ostream.  After constructing a sentry object with good
 583:/usr/include/c++/10/ostream ****    *  status, this function inserts @c traits::length(__s) characters starting
 584:/usr/include/c++/10/ostream ****    *  at @p __s, widened if necessary, followed by any required padding (as
 585:/usr/include/c++/10/ostream ****    *  determined by [22.2.2.2.2]).  @c __out.width(0) is then called.
 586:/usr/include/c++/10/ostream ****   */
 587:/usr/include/c++/10/ostream ****   template<typename _CharT, typename _Traits>
 588:/usr/include/c++/10/ostream ****     inline basic_ostream<_CharT, _Traits>&
 589:/usr/include/c++/10/ostream ****     operator<<(basic_ostream<_CharT, _Traits>& __out, const _CharT* __s)
 590:/usr/include/c++/10/ostream ****     {
 591:/usr/include/c++/10/ostream ****       if (!__s)
 592:/usr/include/c++/10/ostream **** 	__out.setstate(ios_base::badbit);
 593:/usr/include/c++/10/ostream ****       else
 594:/usr/include/c++/10/ostream **** 	__ostream_insert(__out, __s,
 595:/usr/include/c++/10/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 596:/usr/include/c++/10/ostream ****       return __out;
 597:/usr/include/c++/10/ostream ****     }
 598:/usr/include/c++/10/ostream **** 
 599:/usr/include/c++/10/ostream ****   template<typename _CharT, typename _Traits>
 600:/usr/include/c++/10/ostream ****     basic_ostream<_CharT, _Traits> &
 601:/usr/include/c++/10/ostream ****     operator<<(basic_ostream<_CharT, _Traits>& __out, const char* __s);
 602:/usr/include/c++/10/ostream **** 
 603:/usr/include/c++/10/ostream ****   // Partial specializations
 604:/usr/include/c++/10/ostream ****   template<typename _Traits>
 605:/usr/include/c++/10/ostream ****     inline basic_ostream<char, _Traits>&
 606:/usr/include/c++/10/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
 607:/usr/include/c++/10/ostream ****     {
 608:/usr/include/c++/10/ostream ****       if (!__s)
 609:/usr/include/c++/10/ostream **** 	__out.setstate(ios_base::badbit);
 610:/usr/include/c++/10/ostream ****       else
 611:/usr/include/c++/10/ostream **** 	__ostream_insert(__out, __s,
 612:/usr/include/c++/10/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 613:/usr/include/c++/10/ostream ****       return __out;
 614:/usr/include/c++/10/ostream ****     }
 615:/usr/include/c++/10/ostream **** 
 616:/usr/include/c++/10/ostream ****   // Signed and unsigned
AARCH64 GAS  obj/extInstr.s 			page 13


 617:/usr/include/c++/10/ostream ****   template<typename _Traits>
 618:/usr/include/c++/10/ostream ****     inline basic_ostream<char, _Traits>&
 619:/usr/include/c++/10/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, const signed char* __s)
 620:/usr/include/c++/10/ostream ****     { return (__out << reinterpret_cast<const char*>(__s)); }
 621:/usr/include/c++/10/ostream **** 
 622:/usr/include/c++/10/ostream ****   template<typename _Traits>
 623:/usr/include/c++/10/ostream ****     inline basic_ostream<char, _Traits> &
 624:/usr/include/c++/10/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, const unsigned char* __s)
 625:/usr/include/c++/10/ostream ****     { return (__out << reinterpret_cast<const char*>(__s)); }
 626:/usr/include/c++/10/ostream **** 
 627:/usr/include/c++/10/ostream **** #if __cplusplus > 201703L
 628:/usr/include/c++/10/ostream ****    // The following deleted overloads prevent formatting strings as
 629:/usr/include/c++/10/ostream ****    // pointer values.
 630:/usr/include/c++/10/ostream **** 
 631:/usr/include/c++/10/ostream **** #ifdef _GLIBCXX_USE_WCHAR_T
 632:/usr/include/c++/10/ostream ****   template<typename _Traits>
 633:/usr/include/c++/10/ostream ****     basic_ostream<char, _Traits>&
 634:/usr/include/c++/10/ostream ****     operator<<(basic_ostream<char, _Traits>&, const wchar_t*) = delete;
 635:/usr/include/c++/10/ostream **** #endif // _GLIBCXX_USE_WCHAR_T
 636:/usr/include/c++/10/ostream **** 
 637:/usr/include/c++/10/ostream **** #ifdef _GLIBCXX_USE_CHAR8_T
 638:/usr/include/c++/10/ostream ****   template<typename _Traits>
 639:/usr/include/c++/10/ostream ****     basic_ostream<char, _Traits>&
 640:/usr/include/c++/10/ostream ****     operator<<(basic_ostream<char, _Traits>&, const char8_t*) = delete;
 641:/usr/include/c++/10/ostream **** #endif // _GLIBCXX_USE_CHAR8_T
 642:/usr/include/c++/10/ostream **** 
 643:/usr/include/c++/10/ostream ****   template<typename _Traits>
 644:/usr/include/c++/10/ostream ****     basic_ostream<char, _Traits>&
 645:/usr/include/c++/10/ostream ****     operator<<(basic_ostream<char, _Traits>&, const char16_t*) = delete;
 646:/usr/include/c++/10/ostream **** 
 647:/usr/include/c++/10/ostream ****   template<typename _Traits>
 648:/usr/include/c++/10/ostream ****     basic_ostream<char, _Traits>&
 649:/usr/include/c++/10/ostream ****     operator<<(basic_ostream<char, _Traits>&, const char32_t*) = delete;
 650:/usr/include/c++/10/ostream **** 
 651:/usr/include/c++/10/ostream **** #ifdef _GLIBCXX_USE_WCHAR_T
 652:/usr/include/c++/10/ostream **** #ifdef _GLIBCXX_USE_CHAR8_T
 653:/usr/include/c++/10/ostream ****   template<typename _Traits>
 654:/usr/include/c++/10/ostream ****     basic_ostream<wchar_t, _Traits>&
 655:/usr/include/c++/10/ostream ****     operator<<(basic_ostream<wchar_t, _Traits>&, const char8_t*) = delete;
 656:/usr/include/c++/10/ostream **** #endif
 657:/usr/include/c++/10/ostream **** 
 658:/usr/include/c++/10/ostream ****   template<typename _Traits>
 659:/usr/include/c++/10/ostream ****     basic_ostream<wchar_t, _Traits>&
 660:/usr/include/c++/10/ostream ****     operator<<(basic_ostream<wchar_t, _Traits>&, const char16_t*) = delete;
 661:/usr/include/c++/10/ostream **** 
 662:/usr/include/c++/10/ostream ****   template<typename _Traits>
 663:/usr/include/c++/10/ostream ****     basic_ostream<wchar_t, _Traits>&
 664:/usr/include/c++/10/ostream ****     operator<<(basic_ostream<wchar_t, _Traits>&, const char32_t*) = delete;
 665:/usr/include/c++/10/ostream **** #endif // _GLIBCXX_USE_WCHAR_T
 666:/usr/include/c++/10/ostream **** #endif // C++20
 667:/usr/include/c++/10/ostream ****   //@}
 668:/usr/include/c++/10/ostream **** 
 669:/usr/include/c++/10/ostream ****   // Standard basic_ostream manipulators
 670:/usr/include/c++/10/ostream **** 
 671:/usr/include/c++/10/ostream ****   /**
 672:/usr/include/c++/10/ostream ****    *  @brief  Write a newline and flush the stream.
 673:/usr/include/c++/10/ostream ****    *
AARCH64 GAS  obj/extInstr.s 			page 14


 674:/usr/include/c++/10/ostream ****    *  This manipulator is often mistakenly used when a simple newline is
 675:/usr/include/c++/10/ostream ****    *  desired, leading to poor buffering performance.  See
 676:/usr/include/c++/10/ostream ****    *  https://gcc.gnu.org/onlinedocs/libstdc++/manual/streambufs.html#io.streambuf.buffering
 677:/usr/include/c++/10/ostream ****    *  for more on this subject.
 678:/usr/include/c++/10/ostream ****   */
 679:/usr/include/c++/10/ostream ****   template<typename _CharT, typename _Traits>
 680:/usr/include/c++/10/ostream ****     inline basic_ostream<_CharT, _Traits>&
 681:/usr/include/c++/10/ostream ****     endl(basic_ostream<_CharT, _Traits>& __os)
  12              		.loc 1 681 5 view -0
  13              		.cfi_startproc
  14              		.loc 1 681 5 is_stmt 0 view .LVU1
  15 0000 FD7BBEA9 		stp	x29, x30, [sp, -32]!
  16              		.cfi_def_cfa_offset 32
  17              		.cfi_offset 29, -32
  18              		.cfi_offset 30, -24
  19 0004 FD030091 		mov	x29, sp
  20 0008 F35301A9 		stp	x19, x20, [sp, 16]
  21              		.cfi_offset 19, -16
  22              		.cfi_offset 20, -8
  23              		.loc 1 681 5 view .LVU2
  24 000c F30300AA 		mov	x19, x0
 682:/usr/include/c++/10/ostream ****     { return flush(__os.put(__os.widen('\n'))); }
  25              		.loc 1 682 19 view .LVU3
  26 0010 000040F9 		ldr	x0, [x0]
  27              	.LVL1:
  28              		.loc 1 682 19 view .LVU4
  29 0014 00805EF8 		ldr	x0, [x0, -24]
  30 0018 6002008B 		add	x0, x19, x0
  31 001c 147840F9 		ldr	x20, [x0, 240]
  32              	.LVL2:
  33              	.LBB605:
  34              	.LBI605:
  35              		.file 2 "/usr/include/c++/10/bits/basic_ios.h"
   1:/usr/include/c++/10/bits/basic_ios.h **** // Iostreams base classes -*- C++ -*-
   2:/usr/include/c++/10/bits/basic_ios.h **** 
   3:/usr/include/c++/10/bits/basic_ios.h **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:/usr/include/c++/10/bits/basic_ios.h **** //
   5:/usr/include/c++/10/bits/basic_ios.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/10/bits/basic_ios.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/10/bits/basic_ios.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/10/bits/basic_ios.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/10/bits/basic_ios.h **** // any later version.
  10:/usr/include/c++/10/bits/basic_ios.h **** 
  11:/usr/include/c++/10/bits/basic_ios.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/10/bits/basic_ios.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/10/bits/basic_ios.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/10/bits/basic_ios.h **** // GNU General Public License for more details.
  15:/usr/include/c++/10/bits/basic_ios.h **** 
  16:/usr/include/c++/10/bits/basic_ios.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/10/bits/basic_ios.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/10/bits/basic_ios.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/10/bits/basic_ios.h **** 
  20:/usr/include/c++/10/bits/basic_ios.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/10/bits/basic_ios.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/10/bits/basic_ios.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/10/bits/basic_ios.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/10/bits/basic_ios.h **** 
AARCH64 GAS  obj/extInstr.s 			page 15


  25:/usr/include/c++/10/bits/basic_ios.h **** /** @file bits/basic_ios.h
  26:/usr/include/c++/10/bits/basic_ios.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/10/bits/basic_ios.h ****  *  Do not attempt to use it directly. @headername{ios}
  28:/usr/include/c++/10/bits/basic_ios.h ****  */
  29:/usr/include/c++/10/bits/basic_ios.h **** 
  30:/usr/include/c++/10/bits/basic_ios.h **** #ifndef _BASIC_IOS_H
  31:/usr/include/c++/10/bits/basic_ios.h **** #define _BASIC_IOS_H 1
  32:/usr/include/c++/10/bits/basic_ios.h **** 
  33:/usr/include/c++/10/bits/basic_ios.h **** #pragma GCC system_header
  34:/usr/include/c++/10/bits/basic_ios.h **** 
  35:/usr/include/c++/10/bits/basic_ios.h **** #include <bits/localefwd.h>
  36:/usr/include/c++/10/bits/basic_ios.h **** #include <bits/locale_classes.h>
  37:/usr/include/c++/10/bits/basic_ios.h **** #include <bits/locale_facets.h>
  38:/usr/include/c++/10/bits/basic_ios.h **** #include <bits/streambuf_iterator.h>
  39:/usr/include/c++/10/bits/basic_ios.h **** #include <bits/move.h>
  40:/usr/include/c++/10/bits/basic_ios.h **** 
  41:/usr/include/c++/10/bits/basic_ios.h **** namespace std _GLIBCXX_VISIBILITY(default)
  42:/usr/include/c++/10/bits/basic_ios.h **** {
  43:/usr/include/c++/10/bits/basic_ios.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:/usr/include/c++/10/bits/basic_ios.h **** 
  45:/usr/include/c++/10/bits/basic_ios.h ****   template<typename _Facet>
  46:/usr/include/c++/10/bits/basic_ios.h ****     inline const _Facet&
  47:/usr/include/c++/10/bits/basic_ios.h ****     __check_facet(const _Facet* __f)
  48:/usr/include/c++/10/bits/basic_ios.h ****     {
  49:/usr/include/c++/10/bits/basic_ios.h ****       if (!__f)
  50:/usr/include/c++/10/bits/basic_ios.h **** 	__throw_bad_cast();
  51:/usr/include/c++/10/bits/basic_ios.h ****       return *__f;
  52:/usr/include/c++/10/bits/basic_ios.h ****     }
  53:/usr/include/c++/10/bits/basic_ios.h **** 
  54:/usr/include/c++/10/bits/basic_ios.h ****   /**
  55:/usr/include/c++/10/bits/basic_ios.h ****    *  @brief Template class basic_ios, virtual base class for all
  56:/usr/include/c++/10/bits/basic_ios.h ****    *  stream classes. 
  57:/usr/include/c++/10/bits/basic_ios.h ****    *  @ingroup io
  58:/usr/include/c++/10/bits/basic_ios.h ****    *
  59:/usr/include/c++/10/bits/basic_ios.h ****    *  @tparam _CharT  Type of character stream.
  60:/usr/include/c++/10/bits/basic_ios.h ****    *  @tparam _Traits  Traits for character type, defaults to
  61:/usr/include/c++/10/bits/basic_ios.h ****    *                   char_traits<_CharT>.
  62:/usr/include/c++/10/bits/basic_ios.h ****    *
  63:/usr/include/c++/10/bits/basic_ios.h ****    *  Most of the member functions called dispatched on stream objects
  64:/usr/include/c++/10/bits/basic_ios.h ****    *  (e.g., @c std::cout.foo(bar);) are consolidated in this class.
  65:/usr/include/c++/10/bits/basic_ios.h ****   */
  66:/usr/include/c++/10/bits/basic_ios.h ****   template<typename _CharT, typename _Traits>
  67:/usr/include/c++/10/bits/basic_ios.h ****     class basic_ios : public ios_base
  68:/usr/include/c++/10/bits/basic_ios.h ****     {
  69:/usr/include/c++/10/bits/basic_ios.h ****     public:
  70:/usr/include/c++/10/bits/basic_ios.h ****       //@{
  71:/usr/include/c++/10/bits/basic_ios.h ****       /**
  72:/usr/include/c++/10/bits/basic_ios.h ****        *  These are standard types.  They permit a standardized way of
  73:/usr/include/c++/10/bits/basic_ios.h ****        *  referring to names of (or names dependent on) the template
  74:/usr/include/c++/10/bits/basic_ios.h ****        *  parameters, which are specific to the implementation.
  75:/usr/include/c++/10/bits/basic_ios.h ****       */
  76:/usr/include/c++/10/bits/basic_ios.h ****       typedef _CharT                                 char_type;
  77:/usr/include/c++/10/bits/basic_ios.h ****       typedef typename _Traits::int_type             int_type;
  78:/usr/include/c++/10/bits/basic_ios.h ****       typedef typename _Traits::pos_type             pos_type;
  79:/usr/include/c++/10/bits/basic_ios.h ****       typedef typename _Traits::off_type             off_type;
  80:/usr/include/c++/10/bits/basic_ios.h ****       typedef _Traits                                traits_type;
  81:/usr/include/c++/10/bits/basic_ios.h ****       //@}
AARCH64 GAS  obj/extInstr.s 			page 16


  82:/usr/include/c++/10/bits/basic_ios.h **** 
  83:/usr/include/c++/10/bits/basic_ios.h ****       //@{
  84:/usr/include/c++/10/bits/basic_ios.h ****       /**
  85:/usr/include/c++/10/bits/basic_ios.h ****        *  These are non-standard types.
  86:/usr/include/c++/10/bits/basic_ios.h ****       */
  87:/usr/include/c++/10/bits/basic_ios.h ****       typedef ctype<_CharT>                          __ctype_type;
  88:/usr/include/c++/10/bits/basic_ios.h ****       typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> >
  89:/usr/include/c++/10/bits/basic_ios.h **** 						     __num_put_type;
  90:/usr/include/c++/10/bits/basic_ios.h ****       typedef num_get<_CharT, istreambuf_iterator<_CharT, _Traits> >
  91:/usr/include/c++/10/bits/basic_ios.h **** 						     __num_get_type;
  92:/usr/include/c++/10/bits/basic_ios.h ****       //@}
  93:/usr/include/c++/10/bits/basic_ios.h **** 
  94:/usr/include/c++/10/bits/basic_ios.h ****       // Data members:
  95:/usr/include/c++/10/bits/basic_ios.h ****     protected:
  96:/usr/include/c++/10/bits/basic_ios.h ****       basic_ostream<_CharT, _Traits>*                _M_tie;
  97:/usr/include/c++/10/bits/basic_ios.h ****       mutable char_type                              _M_fill;
  98:/usr/include/c++/10/bits/basic_ios.h ****       mutable bool                                   _M_fill_init;
  99:/usr/include/c++/10/bits/basic_ios.h ****       basic_streambuf<_CharT, _Traits>*              _M_streambuf;
 100:/usr/include/c++/10/bits/basic_ios.h **** 
 101:/usr/include/c++/10/bits/basic_ios.h ****       // Cached use_facet<ctype>, which is based on the current locale info.
 102:/usr/include/c++/10/bits/basic_ios.h ****       const __ctype_type*                            _M_ctype;
 103:/usr/include/c++/10/bits/basic_ios.h ****       // For ostream.
 104:/usr/include/c++/10/bits/basic_ios.h ****       const __num_put_type*                          _M_num_put;
 105:/usr/include/c++/10/bits/basic_ios.h ****       // For istream.
 106:/usr/include/c++/10/bits/basic_ios.h ****       const __num_get_type*                          _M_num_get;
 107:/usr/include/c++/10/bits/basic_ios.h **** 
 108:/usr/include/c++/10/bits/basic_ios.h ****     public:
 109:/usr/include/c++/10/bits/basic_ios.h ****       //@{
 110:/usr/include/c++/10/bits/basic_ios.h ****       /**
 111:/usr/include/c++/10/bits/basic_ios.h ****        *  @brief  The quick-and-easy status check.
 112:/usr/include/c++/10/bits/basic_ios.h ****        *
 113:/usr/include/c++/10/bits/basic_ios.h ****        *  This allows you to write constructs such as
 114:/usr/include/c++/10/bits/basic_ios.h ****        *  <code>if (!a_stream) ...</code> and <code>while (a_stream) ...</code>
 115:/usr/include/c++/10/bits/basic_ios.h ****       */
 116:/usr/include/c++/10/bits/basic_ios.h **** #if __cplusplus >= 201103L
 117:/usr/include/c++/10/bits/basic_ios.h ****       explicit operator bool() const
 118:/usr/include/c++/10/bits/basic_ios.h ****       { return !this->fail(); }
 119:/usr/include/c++/10/bits/basic_ios.h **** #else
 120:/usr/include/c++/10/bits/basic_ios.h ****       operator void*() const
 121:/usr/include/c++/10/bits/basic_ios.h ****       { return this->fail() ? 0 : const_cast<basic_ios*>(this); }
 122:/usr/include/c++/10/bits/basic_ios.h **** #endif
 123:/usr/include/c++/10/bits/basic_ios.h **** 
 124:/usr/include/c++/10/bits/basic_ios.h ****       bool
 125:/usr/include/c++/10/bits/basic_ios.h ****       operator!() const
 126:/usr/include/c++/10/bits/basic_ios.h ****       { return this->fail(); }
 127:/usr/include/c++/10/bits/basic_ios.h ****       //@}
 128:/usr/include/c++/10/bits/basic_ios.h **** 
 129:/usr/include/c++/10/bits/basic_ios.h ****       /**
 130:/usr/include/c++/10/bits/basic_ios.h ****        *  @brief  Returns the error state of the stream buffer.
 131:/usr/include/c++/10/bits/basic_ios.h ****        *  @return  A bit pattern (well, isn't everything?)
 132:/usr/include/c++/10/bits/basic_ios.h ****        *
 133:/usr/include/c++/10/bits/basic_ios.h ****        *  See std::ios_base::iostate for the possible bit values.  Most
 134:/usr/include/c++/10/bits/basic_ios.h ****        *  users will call one of the interpreting wrappers, e.g., good().
 135:/usr/include/c++/10/bits/basic_ios.h ****       */
 136:/usr/include/c++/10/bits/basic_ios.h ****       iostate
 137:/usr/include/c++/10/bits/basic_ios.h ****       rdstate() const
 138:/usr/include/c++/10/bits/basic_ios.h ****       { return _M_streambuf_state; }
AARCH64 GAS  obj/extInstr.s 			page 17


 139:/usr/include/c++/10/bits/basic_ios.h **** 
 140:/usr/include/c++/10/bits/basic_ios.h ****       /**
 141:/usr/include/c++/10/bits/basic_ios.h ****        *  @brief  [Re]sets the error state.
 142:/usr/include/c++/10/bits/basic_ios.h ****        *  @param  __state  The new state flag(s) to set.
 143:/usr/include/c++/10/bits/basic_ios.h ****        *
 144:/usr/include/c++/10/bits/basic_ios.h ****        *  See std::ios_base::iostate for the possible bit values.  Most
 145:/usr/include/c++/10/bits/basic_ios.h ****        *  users will not need to pass an argument.
 146:/usr/include/c++/10/bits/basic_ios.h ****       */
 147:/usr/include/c++/10/bits/basic_ios.h ****       void
 148:/usr/include/c++/10/bits/basic_ios.h ****       clear(iostate __state = goodbit);
 149:/usr/include/c++/10/bits/basic_ios.h **** 
 150:/usr/include/c++/10/bits/basic_ios.h ****       /**
 151:/usr/include/c++/10/bits/basic_ios.h ****        *  @brief  Sets additional flags in the error state.
 152:/usr/include/c++/10/bits/basic_ios.h ****        *  @param  __state  The additional state flag(s) to set.
 153:/usr/include/c++/10/bits/basic_ios.h ****        *
 154:/usr/include/c++/10/bits/basic_ios.h ****        *  See std::ios_base::iostate for the possible bit values.
 155:/usr/include/c++/10/bits/basic_ios.h ****       */
 156:/usr/include/c++/10/bits/basic_ios.h ****       void
 157:/usr/include/c++/10/bits/basic_ios.h ****       setstate(iostate __state)
 158:/usr/include/c++/10/bits/basic_ios.h ****       { this->clear(this->rdstate() | __state); }
 159:/usr/include/c++/10/bits/basic_ios.h **** 
 160:/usr/include/c++/10/bits/basic_ios.h ****       // Flip the internal state on for the proper state bits, then
 161:/usr/include/c++/10/bits/basic_ios.h ****       // rethrows the propagated exception if bit also set in
 162:/usr/include/c++/10/bits/basic_ios.h ****       // exceptions().
 163:/usr/include/c++/10/bits/basic_ios.h ****       void
 164:/usr/include/c++/10/bits/basic_ios.h ****       _M_setstate(iostate __state)
 165:/usr/include/c++/10/bits/basic_ios.h ****       {
 166:/usr/include/c++/10/bits/basic_ios.h **** 	// 27.6.1.2.1 Common requirements.
 167:/usr/include/c++/10/bits/basic_ios.h **** 	// Turn this on without causing an ios::failure to be thrown.
 168:/usr/include/c++/10/bits/basic_ios.h **** 	_M_streambuf_state |= __state;
 169:/usr/include/c++/10/bits/basic_ios.h **** 	if (this->exceptions() & __state)
 170:/usr/include/c++/10/bits/basic_ios.h **** 	  __throw_exception_again;
 171:/usr/include/c++/10/bits/basic_ios.h ****       }
 172:/usr/include/c++/10/bits/basic_ios.h **** 
 173:/usr/include/c++/10/bits/basic_ios.h ****       /**
 174:/usr/include/c++/10/bits/basic_ios.h ****        *  @brief  Fast error checking.
 175:/usr/include/c++/10/bits/basic_ios.h ****        *  @return  True if no error flags are set.
 176:/usr/include/c++/10/bits/basic_ios.h ****        *
 177:/usr/include/c++/10/bits/basic_ios.h ****        *  A wrapper around rdstate.
 178:/usr/include/c++/10/bits/basic_ios.h ****       */
 179:/usr/include/c++/10/bits/basic_ios.h ****       bool
 180:/usr/include/c++/10/bits/basic_ios.h ****       good() const
 181:/usr/include/c++/10/bits/basic_ios.h ****       { return this->rdstate() == 0; }
 182:/usr/include/c++/10/bits/basic_ios.h **** 
 183:/usr/include/c++/10/bits/basic_ios.h ****       /**
 184:/usr/include/c++/10/bits/basic_ios.h ****        *  @brief  Fast error checking.
 185:/usr/include/c++/10/bits/basic_ios.h ****        *  @return  True if the eofbit is set.
 186:/usr/include/c++/10/bits/basic_ios.h ****        *
 187:/usr/include/c++/10/bits/basic_ios.h ****        *  Note that other iostate flags may also be set.
 188:/usr/include/c++/10/bits/basic_ios.h ****       */
 189:/usr/include/c++/10/bits/basic_ios.h ****       bool
 190:/usr/include/c++/10/bits/basic_ios.h ****       eof() const
 191:/usr/include/c++/10/bits/basic_ios.h ****       { return (this->rdstate() & eofbit) != 0; }
 192:/usr/include/c++/10/bits/basic_ios.h **** 
 193:/usr/include/c++/10/bits/basic_ios.h ****       /**
 194:/usr/include/c++/10/bits/basic_ios.h ****        *  @brief  Fast error checking.
 195:/usr/include/c++/10/bits/basic_ios.h ****        *  @return  True if either the badbit or the failbit is set.
AARCH64 GAS  obj/extInstr.s 			page 18


 196:/usr/include/c++/10/bits/basic_ios.h ****        *
 197:/usr/include/c++/10/bits/basic_ios.h ****        *  Checking the badbit in fail() is historical practice.
 198:/usr/include/c++/10/bits/basic_ios.h ****        *  Note that other iostate flags may also be set.
 199:/usr/include/c++/10/bits/basic_ios.h ****       */
 200:/usr/include/c++/10/bits/basic_ios.h ****       bool
 201:/usr/include/c++/10/bits/basic_ios.h ****       fail() const
 202:/usr/include/c++/10/bits/basic_ios.h ****       { return (this->rdstate() & (badbit | failbit)) != 0; }
 203:/usr/include/c++/10/bits/basic_ios.h **** 
 204:/usr/include/c++/10/bits/basic_ios.h ****       /**
 205:/usr/include/c++/10/bits/basic_ios.h ****        *  @brief  Fast error checking.
 206:/usr/include/c++/10/bits/basic_ios.h ****        *  @return  True if the badbit is set.
 207:/usr/include/c++/10/bits/basic_ios.h ****        *
 208:/usr/include/c++/10/bits/basic_ios.h ****        *  Note that other iostate flags may also be set.
 209:/usr/include/c++/10/bits/basic_ios.h ****       */
 210:/usr/include/c++/10/bits/basic_ios.h ****       bool
 211:/usr/include/c++/10/bits/basic_ios.h ****       bad() const
 212:/usr/include/c++/10/bits/basic_ios.h ****       { return (this->rdstate() & badbit) != 0; }
 213:/usr/include/c++/10/bits/basic_ios.h **** 
 214:/usr/include/c++/10/bits/basic_ios.h ****       /**
 215:/usr/include/c++/10/bits/basic_ios.h ****        *  @brief  Throwing exceptions on errors.
 216:/usr/include/c++/10/bits/basic_ios.h ****        *  @return  The current exceptions mask.
 217:/usr/include/c++/10/bits/basic_ios.h ****        *
 218:/usr/include/c++/10/bits/basic_ios.h ****        *  This changes nothing in the stream.  See the one-argument version
 219:/usr/include/c++/10/bits/basic_ios.h ****        *  of exceptions(iostate) for the meaning of the return value.
 220:/usr/include/c++/10/bits/basic_ios.h ****       */
 221:/usr/include/c++/10/bits/basic_ios.h ****       iostate
 222:/usr/include/c++/10/bits/basic_ios.h ****       exceptions() const
 223:/usr/include/c++/10/bits/basic_ios.h ****       { return _M_exception; }
 224:/usr/include/c++/10/bits/basic_ios.h **** 
 225:/usr/include/c++/10/bits/basic_ios.h ****       /**
 226:/usr/include/c++/10/bits/basic_ios.h ****        *  @brief  Throwing exceptions on errors.
 227:/usr/include/c++/10/bits/basic_ios.h ****        *  @param  __except  The new exceptions mask.
 228:/usr/include/c++/10/bits/basic_ios.h ****        *
 229:/usr/include/c++/10/bits/basic_ios.h ****        *  By default, error flags are set silently.  You can set an
 230:/usr/include/c++/10/bits/basic_ios.h ****        *  exceptions mask for each stream; if a bit in the mask becomes set
 231:/usr/include/c++/10/bits/basic_ios.h ****        *  in the error flags, then an exception of type
 232:/usr/include/c++/10/bits/basic_ios.h ****        *  std::ios_base::failure is thrown.
 233:/usr/include/c++/10/bits/basic_ios.h ****        *
 234:/usr/include/c++/10/bits/basic_ios.h ****        *  If the error flag is already set when the exceptions mask is
 235:/usr/include/c++/10/bits/basic_ios.h ****        *  added, the exception is immediately thrown.  Try running the
 236:/usr/include/c++/10/bits/basic_ios.h ****        *  following under GCC 3.1 or later:
 237:/usr/include/c++/10/bits/basic_ios.h ****        *  @code
 238:/usr/include/c++/10/bits/basic_ios.h ****        *  #include <iostream>
 239:/usr/include/c++/10/bits/basic_ios.h ****        *  #include <fstream>
 240:/usr/include/c++/10/bits/basic_ios.h ****        *  #include <exception>
 241:/usr/include/c++/10/bits/basic_ios.h ****        *
 242:/usr/include/c++/10/bits/basic_ios.h ****        *  int main()
 243:/usr/include/c++/10/bits/basic_ios.h ****        *  {
 244:/usr/include/c++/10/bits/basic_ios.h ****        *      std::set_terminate (__gnu_cxx::__verbose_terminate_handler);
 245:/usr/include/c++/10/bits/basic_ios.h ****        *
 246:/usr/include/c++/10/bits/basic_ios.h ****        *      std::ifstream f ("/etc/motd");
 247:/usr/include/c++/10/bits/basic_ios.h ****        *
 248:/usr/include/c++/10/bits/basic_ios.h ****        *      std::cerr << "Setting badbit\n";
 249:/usr/include/c++/10/bits/basic_ios.h ****        *      f.setstate (std::ios_base::badbit);
 250:/usr/include/c++/10/bits/basic_ios.h ****        *
 251:/usr/include/c++/10/bits/basic_ios.h ****        *      std::cerr << "Setting exception mask\n";
 252:/usr/include/c++/10/bits/basic_ios.h ****        *      f.exceptions (std::ios_base::badbit);
AARCH64 GAS  obj/extInstr.s 			page 19


 253:/usr/include/c++/10/bits/basic_ios.h ****        *  }
 254:/usr/include/c++/10/bits/basic_ios.h ****        *  @endcode
 255:/usr/include/c++/10/bits/basic_ios.h ****       */
 256:/usr/include/c++/10/bits/basic_ios.h ****       void
 257:/usr/include/c++/10/bits/basic_ios.h ****       exceptions(iostate __except)
 258:/usr/include/c++/10/bits/basic_ios.h ****       {
 259:/usr/include/c++/10/bits/basic_ios.h ****         _M_exception = __except;
 260:/usr/include/c++/10/bits/basic_ios.h ****         this->clear(_M_streambuf_state);
 261:/usr/include/c++/10/bits/basic_ios.h ****       }
 262:/usr/include/c++/10/bits/basic_ios.h **** 
 263:/usr/include/c++/10/bits/basic_ios.h ****       // Constructor/destructor:
 264:/usr/include/c++/10/bits/basic_ios.h ****       /**
 265:/usr/include/c++/10/bits/basic_ios.h ****        *  @brief  Constructor performs initialization.
 266:/usr/include/c++/10/bits/basic_ios.h ****        *
 267:/usr/include/c++/10/bits/basic_ios.h ****        *  The parameter is passed by derived streams.
 268:/usr/include/c++/10/bits/basic_ios.h ****       */
 269:/usr/include/c++/10/bits/basic_ios.h ****       explicit
 270:/usr/include/c++/10/bits/basic_ios.h ****       basic_ios(basic_streambuf<_CharT, _Traits>* __sb)
 271:/usr/include/c++/10/bits/basic_ios.h ****       : ios_base(), _M_tie(0), _M_fill(), _M_fill_init(false), _M_streambuf(0),
 272:/usr/include/c++/10/bits/basic_ios.h **** 	_M_ctype(0), _M_num_put(0), _M_num_get(0)
 273:/usr/include/c++/10/bits/basic_ios.h ****       { this->init(__sb); }
 274:/usr/include/c++/10/bits/basic_ios.h **** 
 275:/usr/include/c++/10/bits/basic_ios.h ****       /**
 276:/usr/include/c++/10/bits/basic_ios.h ****        *  @brief  Empty.
 277:/usr/include/c++/10/bits/basic_ios.h ****        *
 278:/usr/include/c++/10/bits/basic_ios.h ****        *  The destructor does nothing.  More specifically, it does not
 279:/usr/include/c++/10/bits/basic_ios.h ****        *  destroy the streambuf held by rdbuf().
 280:/usr/include/c++/10/bits/basic_ios.h ****       */
 281:/usr/include/c++/10/bits/basic_ios.h ****       virtual
 282:/usr/include/c++/10/bits/basic_ios.h ****       ~basic_ios() { }
 283:/usr/include/c++/10/bits/basic_ios.h **** 
 284:/usr/include/c++/10/bits/basic_ios.h ****       // Members:
 285:/usr/include/c++/10/bits/basic_ios.h ****       /**
 286:/usr/include/c++/10/bits/basic_ios.h ****        *  @brief  Fetches the current @e tied stream.
 287:/usr/include/c++/10/bits/basic_ios.h ****        *  @return  A pointer to the tied stream, or NULL if the stream is
 288:/usr/include/c++/10/bits/basic_ios.h ****        *           not tied.
 289:/usr/include/c++/10/bits/basic_ios.h ****        *
 290:/usr/include/c++/10/bits/basic_ios.h ****        *  A stream may be @e tied (or synchronized) to a second output
 291:/usr/include/c++/10/bits/basic_ios.h ****        *  stream.  When this stream performs any I/O, the tied stream is
 292:/usr/include/c++/10/bits/basic_ios.h ****        *  first flushed.  For example, @c std::cin is tied to @c std::cout.
 293:/usr/include/c++/10/bits/basic_ios.h ****       */
 294:/usr/include/c++/10/bits/basic_ios.h ****       basic_ostream<_CharT, _Traits>*
 295:/usr/include/c++/10/bits/basic_ios.h ****       tie() const
 296:/usr/include/c++/10/bits/basic_ios.h ****       { return _M_tie; }
 297:/usr/include/c++/10/bits/basic_ios.h **** 
 298:/usr/include/c++/10/bits/basic_ios.h ****       /**
 299:/usr/include/c++/10/bits/basic_ios.h ****        *  @brief  Ties this stream to an output stream.
 300:/usr/include/c++/10/bits/basic_ios.h ****        *  @param  __tiestr  The output stream.
 301:/usr/include/c++/10/bits/basic_ios.h ****        *  @return  The previously tied output stream, or NULL if the stream
 302:/usr/include/c++/10/bits/basic_ios.h ****        *           was not tied.
 303:/usr/include/c++/10/bits/basic_ios.h ****        *
 304:/usr/include/c++/10/bits/basic_ios.h ****        *  This sets up a new tie; see tie() for more.
 305:/usr/include/c++/10/bits/basic_ios.h ****       */
 306:/usr/include/c++/10/bits/basic_ios.h ****       basic_ostream<_CharT, _Traits>*
 307:/usr/include/c++/10/bits/basic_ios.h ****       tie(basic_ostream<_CharT, _Traits>* __tiestr)
 308:/usr/include/c++/10/bits/basic_ios.h ****       {
 309:/usr/include/c++/10/bits/basic_ios.h ****         basic_ostream<_CharT, _Traits>* __old = _M_tie;
AARCH64 GAS  obj/extInstr.s 			page 20


 310:/usr/include/c++/10/bits/basic_ios.h ****         _M_tie = __tiestr;
 311:/usr/include/c++/10/bits/basic_ios.h ****         return __old;
 312:/usr/include/c++/10/bits/basic_ios.h ****       }
 313:/usr/include/c++/10/bits/basic_ios.h **** 
 314:/usr/include/c++/10/bits/basic_ios.h ****       /**
 315:/usr/include/c++/10/bits/basic_ios.h ****        *  @brief  Accessing the underlying buffer.
 316:/usr/include/c++/10/bits/basic_ios.h ****        *  @return  The current stream buffer.
 317:/usr/include/c++/10/bits/basic_ios.h ****        *
 318:/usr/include/c++/10/bits/basic_ios.h ****        *  This does not change the state of the stream.
 319:/usr/include/c++/10/bits/basic_ios.h ****       */
 320:/usr/include/c++/10/bits/basic_ios.h ****       basic_streambuf<_CharT, _Traits>*
 321:/usr/include/c++/10/bits/basic_ios.h ****       rdbuf() const
 322:/usr/include/c++/10/bits/basic_ios.h ****       { return _M_streambuf; }
 323:/usr/include/c++/10/bits/basic_ios.h **** 
 324:/usr/include/c++/10/bits/basic_ios.h ****       /**
 325:/usr/include/c++/10/bits/basic_ios.h ****        *  @brief  Changing the underlying buffer.
 326:/usr/include/c++/10/bits/basic_ios.h ****        *  @param  __sb  The new stream buffer.
 327:/usr/include/c++/10/bits/basic_ios.h ****        *  @return  The previous stream buffer.
 328:/usr/include/c++/10/bits/basic_ios.h ****        *
 329:/usr/include/c++/10/bits/basic_ios.h ****        *  Associates a new buffer with the current stream, and clears the
 330:/usr/include/c++/10/bits/basic_ios.h ****        *  error state.
 331:/usr/include/c++/10/bits/basic_ios.h ****        *
 332:/usr/include/c++/10/bits/basic_ios.h ****        *  Due to historical accidents which the LWG refuses to correct, the
 333:/usr/include/c++/10/bits/basic_ios.h ****        *  I/O library suffers from a design error:  this function is hidden
 334:/usr/include/c++/10/bits/basic_ios.h ****        *  in derived classes by overrides of the zero-argument @c rdbuf(),
 335:/usr/include/c++/10/bits/basic_ios.h ****        *  which is non-virtual for hysterical raisins.  As a result, you
 336:/usr/include/c++/10/bits/basic_ios.h ****        *  must use explicit qualifications to access this function via any
 337:/usr/include/c++/10/bits/basic_ios.h ****        *  derived class.  For example:
 338:/usr/include/c++/10/bits/basic_ios.h ****        *
 339:/usr/include/c++/10/bits/basic_ios.h ****        *  @code
 340:/usr/include/c++/10/bits/basic_ios.h ****        *  std::fstream     foo;         // or some other derived type
 341:/usr/include/c++/10/bits/basic_ios.h ****        *  std::streambuf*  p = .....;
 342:/usr/include/c++/10/bits/basic_ios.h ****        *
 343:/usr/include/c++/10/bits/basic_ios.h ****        *  foo.ios::rdbuf(p);            // ios == basic_ios<char>
 344:/usr/include/c++/10/bits/basic_ios.h ****        *  @endcode
 345:/usr/include/c++/10/bits/basic_ios.h ****       */
 346:/usr/include/c++/10/bits/basic_ios.h ****       basic_streambuf<_CharT, _Traits>*
 347:/usr/include/c++/10/bits/basic_ios.h ****       rdbuf(basic_streambuf<_CharT, _Traits>* __sb);
 348:/usr/include/c++/10/bits/basic_ios.h **** 
 349:/usr/include/c++/10/bits/basic_ios.h ****       /**
 350:/usr/include/c++/10/bits/basic_ios.h ****        *  @brief  Copies fields of __rhs into this.
 351:/usr/include/c++/10/bits/basic_ios.h ****        *  @param  __rhs  The source values for the copies.
 352:/usr/include/c++/10/bits/basic_ios.h ****        *  @return  Reference to this object.
 353:/usr/include/c++/10/bits/basic_ios.h ****        *
 354:/usr/include/c++/10/bits/basic_ios.h ****        *  All fields of __rhs are copied into this object except that rdbuf()
 355:/usr/include/c++/10/bits/basic_ios.h ****        *  and rdstate() remain unchanged.  All values in the pword and iword
 356:/usr/include/c++/10/bits/basic_ios.h ****        *  arrays are copied.  Before copying, each callback is invoked with
 357:/usr/include/c++/10/bits/basic_ios.h ****        *  erase_event.  After copying, each (new) callback is invoked with
 358:/usr/include/c++/10/bits/basic_ios.h ****        *  copyfmt_event.  The final step is to copy exceptions().
 359:/usr/include/c++/10/bits/basic_ios.h ****       */
 360:/usr/include/c++/10/bits/basic_ios.h ****       basic_ios&
 361:/usr/include/c++/10/bits/basic_ios.h ****       copyfmt(const basic_ios& __rhs);
 362:/usr/include/c++/10/bits/basic_ios.h **** 
 363:/usr/include/c++/10/bits/basic_ios.h ****       /**
 364:/usr/include/c++/10/bits/basic_ios.h ****        *  @brief  Retrieves the @a empty character.
 365:/usr/include/c++/10/bits/basic_ios.h ****        *  @return  The current fill character.
 366:/usr/include/c++/10/bits/basic_ios.h ****        *
AARCH64 GAS  obj/extInstr.s 			page 21


 367:/usr/include/c++/10/bits/basic_ios.h ****        *  It defaults to a space (' ') in the current locale.
 368:/usr/include/c++/10/bits/basic_ios.h ****       */
 369:/usr/include/c++/10/bits/basic_ios.h ****       char_type
 370:/usr/include/c++/10/bits/basic_ios.h ****       fill() const
 371:/usr/include/c++/10/bits/basic_ios.h ****       {
 372:/usr/include/c++/10/bits/basic_ios.h **** 	if (!_M_fill_init)
 373:/usr/include/c++/10/bits/basic_ios.h **** 	  {
 374:/usr/include/c++/10/bits/basic_ios.h **** 	    _M_fill = this->widen(' ');
 375:/usr/include/c++/10/bits/basic_ios.h **** 	    _M_fill_init = true;
 376:/usr/include/c++/10/bits/basic_ios.h **** 	  }
 377:/usr/include/c++/10/bits/basic_ios.h **** 	return _M_fill;
 378:/usr/include/c++/10/bits/basic_ios.h ****       }
 379:/usr/include/c++/10/bits/basic_ios.h **** 
 380:/usr/include/c++/10/bits/basic_ios.h ****       /**
 381:/usr/include/c++/10/bits/basic_ios.h ****        *  @brief  Sets a new @a empty character.
 382:/usr/include/c++/10/bits/basic_ios.h ****        *  @param  __ch  The new character.
 383:/usr/include/c++/10/bits/basic_ios.h ****        *  @return  The previous fill character.
 384:/usr/include/c++/10/bits/basic_ios.h ****        *
 385:/usr/include/c++/10/bits/basic_ios.h ****        *  The fill character is used to fill out space when P+ characters
 386:/usr/include/c++/10/bits/basic_ios.h ****        *  have been requested (e.g., via setw), Q characters are actually
 387:/usr/include/c++/10/bits/basic_ios.h ****        *  used, and Q<P.  It defaults to a space (' ') in the current locale.
 388:/usr/include/c++/10/bits/basic_ios.h ****       */
 389:/usr/include/c++/10/bits/basic_ios.h ****       char_type
 390:/usr/include/c++/10/bits/basic_ios.h ****       fill(char_type __ch)
 391:/usr/include/c++/10/bits/basic_ios.h ****       {
 392:/usr/include/c++/10/bits/basic_ios.h **** 	char_type __old = this->fill();
 393:/usr/include/c++/10/bits/basic_ios.h **** 	_M_fill = __ch;
 394:/usr/include/c++/10/bits/basic_ios.h **** 	return __old;
 395:/usr/include/c++/10/bits/basic_ios.h ****       }
 396:/usr/include/c++/10/bits/basic_ios.h **** 
 397:/usr/include/c++/10/bits/basic_ios.h ****       // Locales:
 398:/usr/include/c++/10/bits/basic_ios.h ****       /**
 399:/usr/include/c++/10/bits/basic_ios.h ****        *  @brief  Moves to a new locale.
 400:/usr/include/c++/10/bits/basic_ios.h ****        *  @param  __loc  The new locale.
 401:/usr/include/c++/10/bits/basic_ios.h ****        *  @return  The previous locale.
 402:/usr/include/c++/10/bits/basic_ios.h ****        *
 403:/usr/include/c++/10/bits/basic_ios.h ****        *  Calls @c ios_base::imbue(loc), and if a stream buffer is associated
 404:/usr/include/c++/10/bits/basic_ios.h ****        *  with this stream, calls that buffer's @c pubimbue(loc).
 405:/usr/include/c++/10/bits/basic_ios.h ****        *
 406:/usr/include/c++/10/bits/basic_ios.h ****        *  Additional l10n notes are at
 407:/usr/include/c++/10/bits/basic_ios.h ****        *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/localization.html
 408:/usr/include/c++/10/bits/basic_ios.h ****       */
 409:/usr/include/c++/10/bits/basic_ios.h ****       locale
 410:/usr/include/c++/10/bits/basic_ios.h ****       imbue(const locale& __loc);
 411:/usr/include/c++/10/bits/basic_ios.h **** 
 412:/usr/include/c++/10/bits/basic_ios.h ****       /**
 413:/usr/include/c++/10/bits/basic_ios.h ****        *  @brief  Squeezes characters.
 414:/usr/include/c++/10/bits/basic_ios.h ****        *  @param  __c  The character to narrow.
 415:/usr/include/c++/10/bits/basic_ios.h ****        *  @param  __dfault  The character to narrow.
 416:/usr/include/c++/10/bits/basic_ios.h ****        *  @return  The narrowed character.
 417:/usr/include/c++/10/bits/basic_ios.h ****        *
 418:/usr/include/c++/10/bits/basic_ios.h ****        *  Maps a character of @c char_type to a character of @c char,
 419:/usr/include/c++/10/bits/basic_ios.h ****        *  if possible.
 420:/usr/include/c++/10/bits/basic_ios.h ****        *
 421:/usr/include/c++/10/bits/basic_ios.h ****        *  Returns the result of
 422:/usr/include/c++/10/bits/basic_ios.h ****        *  @code
 423:/usr/include/c++/10/bits/basic_ios.h ****        *    std::use_facet<ctype<char_type> >(getloc()).narrow(c,dfault)
AARCH64 GAS  obj/extInstr.s 			page 22


 424:/usr/include/c++/10/bits/basic_ios.h ****        *  @endcode
 425:/usr/include/c++/10/bits/basic_ios.h ****        *
 426:/usr/include/c++/10/bits/basic_ios.h ****        *  Additional l10n notes are at
 427:/usr/include/c++/10/bits/basic_ios.h ****        *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/localization.html
 428:/usr/include/c++/10/bits/basic_ios.h ****       */
 429:/usr/include/c++/10/bits/basic_ios.h ****       char
 430:/usr/include/c++/10/bits/basic_ios.h ****       narrow(char_type __c, char __dfault) const
 431:/usr/include/c++/10/bits/basic_ios.h ****       { return __check_facet(_M_ctype).narrow(__c, __dfault); }
 432:/usr/include/c++/10/bits/basic_ios.h **** 
 433:/usr/include/c++/10/bits/basic_ios.h ****       /**
 434:/usr/include/c++/10/bits/basic_ios.h ****        *  @brief  Widens characters.
 435:/usr/include/c++/10/bits/basic_ios.h ****        *  @param  __c  The character to widen.
 436:/usr/include/c++/10/bits/basic_ios.h ****        *  @return  The widened character.
 437:/usr/include/c++/10/bits/basic_ios.h ****        *
 438:/usr/include/c++/10/bits/basic_ios.h ****        *  Maps a character of @c char to a character of @c char_type.
 439:/usr/include/c++/10/bits/basic_ios.h ****        *
 440:/usr/include/c++/10/bits/basic_ios.h ****        *  Returns the result of
 441:/usr/include/c++/10/bits/basic_ios.h ****        *  @code
 442:/usr/include/c++/10/bits/basic_ios.h ****        *    std::use_facet<ctype<char_type> >(getloc()).widen(c)
 443:/usr/include/c++/10/bits/basic_ios.h ****        *  @endcode
 444:/usr/include/c++/10/bits/basic_ios.h ****        *
 445:/usr/include/c++/10/bits/basic_ios.h ****        *  Additional l10n notes are at
 446:/usr/include/c++/10/bits/basic_ios.h ****        *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/localization.html
 447:/usr/include/c++/10/bits/basic_ios.h ****       */
 448:/usr/include/c++/10/bits/basic_ios.h ****       char_type
 449:/usr/include/c++/10/bits/basic_ios.h ****       widen(char __c) const
  36              		.loc 2 449 7 is_stmt 1 view .LVU5
  37              	.LBB606:
  38              	.LBI606:
  47:/usr/include/c++/10/bits/basic_ios.h ****     {
  39              		.loc 2 47 5 view .LVU6
  40              	.LBB607:
  49:/usr/include/c++/10/bits/basic_ios.h **** 	__throw_bad_cast();
  41              		.loc 2 49 7 is_stmt 0 view .LVU7
  42 0020 540200B4 		cbz	x20, .L7
  43              	.LVL3:
  49:/usr/include/c++/10/bits/basic_ios.h **** 	__throw_bad_cast();
  44              		.loc 2 49 7 view .LVU8
  45              	.LBE607:
  46              	.LBE606:
  47              	.LBB609:
  48              	.LBI609:
  49              		.file 3 "/usr/include/c++/10/bits/locale_facets.h"
   1:/usr/include/c++/10/bits/locale_facets.h **** // Locale support -*- C++ -*-
   2:/usr/include/c++/10/bits/locale_facets.h **** 
   3:/usr/include/c++/10/bits/locale_facets.h **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:/usr/include/c++/10/bits/locale_facets.h **** //
   5:/usr/include/c++/10/bits/locale_facets.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/10/bits/locale_facets.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/10/bits/locale_facets.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/10/bits/locale_facets.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/10/bits/locale_facets.h **** // any later version.
  10:/usr/include/c++/10/bits/locale_facets.h **** 
  11:/usr/include/c++/10/bits/locale_facets.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/10/bits/locale_facets.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/10/bits/locale_facets.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/10/bits/locale_facets.h **** // GNU General Public License for more details.
AARCH64 GAS  obj/extInstr.s 			page 23


  15:/usr/include/c++/10/bits/locale_facets.h **** 
  16:/usr/include/c++/10/bits/locale_facets.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/10/bits/locale_facets.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/10/bits/locale_facets.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/10/bits/locale_facets.h **** 
  20:/usr/include/c++/10/bits/locale_facets.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/10/bits/locale_facets.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/10/bits/locale_facets.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/10/bits/locale_facets.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/10/bits/locale_facets.h **** 
  25:/usr/include/c++/10/bits/locale_facets.h **** /** @file bits/locale_facets.h
  26:/usr/include/c++/10/bits/locale_facets.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/10/bits/locale_facets.h ****  *  Do not attempt to use it directly. @headername{locale}
  28:/usr/include/c++/10/bits/locale_facets.h ****  */
  29:/usr/include/c++/10/bits/locale_facets.h **** 
  30:/usr/include/c++/10/bits/locale_facets.h **** //
  31:/usr/include/c++/10/bits/locale_facets.h **** // ISO C++ 14882: 22.1  Locales
  32:/usr/include/c++/10/bits/locale_facets.h **** //
  33:/usr/include/c++/10/bits/locale_facets.h **** 
  34:/usr/include/c++/10/bits/locale_facets.h **** #ifndef _LOCALE_FACETS_H
  35:/usr/include/c++/10/bits/locale_facets.h **** #define _LOCALE_FACETS_H 1
  36:/usr/include/c++/10/bits/locale_facets.h **** 
  37:/usr/include/c++/10/bits/locale_facets.h **** #pragma GCC system_header
  38:/usr/include/c++/10/bits/locale_facets.h **** 
  39:/usr/include/c++/10/bits/locale_facets.h **** #include <cwctype>	// For wctype_t
  40:/usr/include/c++/10/bits/locale_facets.h **** #include <cctype>
  41:/usr/include/c++/10/bits/locale_facets.h **** #include <bits/ctype_base.h>
  42:/usr/include/c++/10/bits/locale_facets.h **** #include <iosfwd>
  43:/usr/include/c++/10/bits/locale_facets.h **** #include <bits/ios_base.h>  // For ios_base, ios_base::iostate
  44:/usr/include/c++/10/bits/locale_facets.h **** #include <streambuf>
  45:/usr/include/c++/10/bits/locale_facets.h **** #include <bits/cpp_type_traits.h>
  46:/usr/include/c++/10/bits/locale_facets.h **** #include <ext/type_traits.h>
  47:/usr/include/c++/10/bits/locale_facets.h **** #include <ext/numeric_traits.h>
  48:/usr/include/c++/10/bits/locale_facets.h **** #include <bits/streambuf_iterator.h>
  49:/usr/include/c++/10/bits/locale_facets.h **** 
  50:/usr/include/c++/10/bits/locale_facets.h **** namespace std _GLIBCXX_VISIBILITY(default)
  51:/usr/include/c++/10/bits/locale_facets.h **** {
  52:/usr/include/c++/10/bits/locale_facets.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  53:/usr/include/c++/10/bits/locale_facets.h **** 
  54:/usr/include/c++/10/bits/locale_facets.h ****   // NB: Don't instantiate required wchar_t facets if no wchar_t support.
  55:/usr/include/c++/10/bits/locale_facets.h **** #ifdef _GLIBCXX_USE_WCHAR_T
  56:/usr/include/c++/10/bits/locale_facets.h **** # define  _GLIBCXX_NUM_FACETS 28
  57:/usr/include/c++/10/bits/locale_facets.h **** # define  _GLIBCXX_NUM_CXX11_FACETS 16
  58:/usr/include/c++/10/bits/locale_facets.h **** #else
  59:/usr/include/c++/10/bits/locale_facets.h **** # define  _GLIBCXX_NUM_FACETS 14
  60:/usr/include/c++/10/bits/locale_facets.h **** # define  _GLIBCXX_NUM_CXX11_FACETS 8
  61:/usr/include/c++/10/bits/locale_facets.h **** #endif
  62:/usr/include/c++/10/bits/locale_facets.h **** #ifdef _GLIBCXX_USE_CHAR8_T
  63:/usr/include/c++/10/bits/locale_facets.h **** # define _GLIBCXX_NUM_UNICODE_FACETS 4
  64:/usr/include/c++/10/bits/locale_facets.h **** #else
  65:/usr/include/c++/10/bits/locale_facets.h **** # define _GLIBCXX_NUM_UNICODE_FACETS 2
  66:/usr/include/c++/10/bits/locale_facets.h **** #endif
  67:/usr/include/c++/10/bits/locale_facets.h **** 
  68:/usr/include/c++/10/bits/locale_facets.h ****   // Convert string to numeric value of type _Tp and store results.
  69:/usr/include/c++/10/bits/locale_facets.h ****   // NB: This is specialized for all required types, there is no
  70:/usr/include/c++/10/bits/locale_facets.h ****   // generic definition.
  71:/usr/include/c++/10/bits/locale_facets.h ****   template<typename _Tp>
AARCH64 GAS  obj/extInstr.s 			page 24


  72:/usr/include/c++/10/bits/locale_facets.h ****     void
  73:/usr/include/c++/10/bits/locale_facets.h ****     __convert_to_v(const char*, _Tp&, ios_base::iostate&,
  74:/usr/include/c++/10/bits/locale_facets.h **** 		   const __c_locale&) throw();
  75:/usr/include/c++/10/bits/locale_facets.h **** 
  76:/usr/include/c++/10/bits/locale_facets.h ****   // Explicit specializations for required types.
  77:/usr/include/c++/10/bits/locale_facets.h ****   template<>
  78:/usr/include/c++/10/bits/locale_facets.h ****     void
  79:/usr/include/c++/10/bits/locale_facets.h ****     __convert_to_v(const char*, float&, ios_base::iostate&,
  80:/usr/include/c++/10/bits/locale_facets.h **** 		   const __c_locale&) throw();
  81:/usr/include/c++/10/bits/locale_facets.h **** 
  82:/usr/include/c++/10/bits/locale_facets.h ****   template<>
  83:/usr/include/c++/10/bits/locale_facets.h ****     void
  84:/usr/include/c++/10/bits/locale_facets.h ****     __convert_to_v(const char*, double&, ios_base::iostate&,
  85:/usr/include/c++/10/bits/locale_facets.h **** 		   const __c_locale&) throw();
  86:/usr/include/c++/10/bits/locale_facets.h **** 
  87:/usr/include/c++/10/bits/locale_facets.h ****   template<>
  88:/usr/include/c++/10/bits/locale_facets.h ****     void
  89:/usr/include/c++/10/bits/locale_facets.h ****     __convert_to_v(const char*, long double&, ios_base::iostate&,
  90:/usr/include/c++/10/bits/locale_facets.h **** 		   const __c_locale&) throw();
  91:/usr/include/c++/10/bits/locale_facets.h **** 
  92:/usr/include/c++/10/bits/locale_facets.h ****   // NB: __pad is a struct, rather than a function, so it can be
  93:/usr/include/c++/10/bits/locale_facets.h ****   // partially-specialized.
  94:/usr/include/c++/10/bits/locale_facets.h ****   template<typename _CharT, typename _Traits>
  95:/usr/include/c++/10/bits/locale_facets.h ****     struct __pad
  96:/usr/include/c++/10/bits/locale_facets.h ****     {
  97:/usr/include/c++/10/bits/locale_facets.h ****       static void
  98:/usr/include/c++/10/bits/locale_facets.h ****       _S_pad(ios_base& __io, _CharT __fill, _CharT* __news,
  99:/usr/include/c++/10/bits/locale_facets.h **** 	     const _CharT* __olds, streamsize __newlen, streamsize __oldlen);
 100:/usr/include/c++/10/bits/locale_facets.h ****     };
 101:/usr/include/c++/10/bits/locale_facets.h **** 
 102:/usr/include/c++/10/bits/locale_facets.h ****   // Used by both numeric and monetary facets.
 103:/usr/include/c++/10/bits/locale_facets.h ****   // Inserts "group separator" characters into an array of characters.
 104:/usr/include/c++/10/bits/locale_facets.h ****   // It's recursive, one iteration per group.  It moves the characters
 105:/usr/include/c++/10/bits/locale_facets.h ****   // in the buffer this way: "xxxx12345" -> "12,345xxx".  Call this
 106:/usr/include/c++/10/bits/locale_facets.h ****   // only with __gsize != 0.
 107:/usr/include/c++/10/bits/locale_facets.h ****   template<typename _CharT>
 108:/usr/include/c++/10/bits/locale_facets.h ****     _CharT*
 109:/usr/include/c++/10/bits/locale_facets.h ****     __add_grouping(_CharT* __s, _CharT __sep,
 110:/usr/include/c++/10/bits/locale_facets.h **** 		   const char* __gbeg, size_t __gsize,
 111:/usr/include/c++/10/bits/locale_facets.h **** 		   const _CharT* __first, const _CharT* __last);
 112:/usr/include/c++/10/bits/locale_facets.h **** 
 113:/usr/include/c++/10/bits/locale_facets.h ****   // This template permits specializing facet output code for
 114:/usr/include/c++/10/bits/locale_facets.h ****   // ostreambuf_iterator.  For ostreambuf_iterator, sputn is
 115:/usr/include/c++/10/bits/locale_facets.h ****   // significantly more efficient than incrementing iterators.
 116:/usr/include/c++/10/bits/locale_facets.h ****   template<typename _CharT>
 117:/usr/include/c++/10/bits/locale_facets.h ****     inline
 118:/usr/include/c++/10/bits/locale_facets.h ****     ostreambuf_iterator<_CharT>
 119:/usr/include/c++/10/bits/locale_facets.h ****     __write(ostreambuf_iterator<_CharT> __s, const _CharT* __ws, int __len)
 120:/usr/include/c++/10/bits/locale_facets.h ****     {
 121:/usr/include/c++/10/bits/locale_facets.h ****       __s._M_put(__ws, __len);
 122:/usr/include/c++/10/bits/locale_facets.h ****       return __s;
 123:/usr/include/c++/10/bits/locale_facets.h ****     }
 124:/usr/include/c++/10/bits/locale_facets.h **** 
 125:/usr/include/c++/10/bits/locale_facets.h ****   // This is the unspecialized form of the template.
 126:/usr/include/c++/10/bits/locale_facets.h ****   template<typename _CharT, typename _OutIter>
 127:/usr/include/c++/10/bits/locale_facets.h ****     inline
 128:/usr/include/c++/10/bits/locale_facets.h ****     _OutIter
AARCH64 GAS  obj/extInstr.s 			page 25


 129:/usr/include/c++/10/bits/locale_facets.h ****     __write(_OutIter __s, const _CharT* __ws, int __len)
 130:/usr/include/c++/10/bits/locale_facets.h ****     {
 131:/usr/include/c++/10/bits/locale_facets.h ****       for (int __j = 0; __j < __len; __j++, ++__s)
 132:/usr/include/c++/10/bits/locale_facets.h **** 	*__s = __ws[__j];
 133:/usr/include/c++/10/bits/locale_facets.h ****       return __s;
 134:/usr/include/c++/10/bits/locale_facets.h ****     }
 135:/usr/include/c++/10/bits/locale_facets.h **** 
 136:/usr/include/c++/10/bits/locale_facets.h **** 
 137:/usr/include/c++/10/bits/locale_facets.h ****   // 22.2.1.1  Template class ctype
 138:/usr/include/c++/10/bits/locale_facets.h ****   // Include host and configuration specific ctype enums for ctype_base.
 139:/usr/include/c++/10/bits/locale_facets.h **** 
 140:/usr/include/c++/10/bits/locale_facets.h ****   /**
 141:/usr/include/c++/10/bits/locale_facets.h ****    *  @brief  Common base for ctype facet
 142:/usr/include/c++/10/bits/locale_facets.h ****    *
 143:/usr/include/c++/10/bits/locale_facets.h ****    *  This template class provides implementations of the public functions
 144:/usr/include/c++/10/bits/locale_facets.h ****    *  that forward to the protected virtual functions.
 145:/usr/include/c++/10/bits/locale_facets.h ****    *
 146:/usr/include/c++/10/bits/locale_facets.h ****    *  This template also provides abstract stubs for the protected virtual
 147:/usr/include/c++/10/bits/locale_facets.h ****    *  functions.
 148:/usr/include/c++/10/bits/locale_facets.h ****   */
 149:/usr/include/c++/10/bits/locale_facets.h ****   template<typename _CharT>
 150:/usr/include/c++/10/bits/locale_facets.h ****     class __ctype_abstract_base : public locale::facet, public ctype_base
 151:/usr/include/c++/10/bits/locale_facets.h ****     {
 152:/usr/include/c++/10/bits/locale_facets.h ****     public:
 153:/usr/include/c++/10/bits/locale_facets.h ****       // Types:
 154:/usr/include/c++/10/bits/locale_facets.h ****       /// Typedef for the template parameter
 155:/usr/include/c++/10/bits/locale_facets.h ****       typedef _CharT char_type;
 156:/usr/include/c++/10/bits/locale_facets.h **** 
 157:/usr/include/c++/10/bits/locale_facets.h ****       /**
 158:/usr/include/c++/10/bits/locale_facets.h ****        *  @brief  Test char_type classification.
 159:/usr/include/c++/10/bits/locale_facets.h ****        *
 160:/usr/include/c++/10/bits/locale_facets.h ****        *  This function finds a mask M for @a __c and compares it to
 161:/usr/include/c++/10/bits/locale_facets.h ****        *  mask @a __m.  It does so by returning the value of
 162:/usr/include/c++/10/bits/locale_facets.h ****        *  ctype<char_type>::do_is().
 163:/usr/include/c++/10/bits/locale_facets.h ****        *
 164:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __c  The char_type to compare the mask of.
 165:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 166:/usr/include/c++/10/bits/locale_facets.h ****        *  @return  (M & __m) != 0.
 167:/usr/include/c++/10/bits/locale_facets.h ****       */
 168:/usr/include/c++/10/bits/locale_facets.h ****       bool
 169:/usr/include/c++/10/bits/locale_facets.h ****       is(mask __m, char_type __c) const
 170:/usr/include/c++/10/bits/locale_facets.h ****       { return this->do_is(__m, __c); }
 171:/usr/include/c++/10/bits/locale_facets.h **** 
 172:/usr/include/c++/10/bits/locale_facets.h ****       /**
 173:/usr/include/c++/10/bits/locale_facets.h ****        *  @brief  Return a mask array.
 174:/usr/include/c++/10/bits/locale_facets.h ****        *
 175:/usr/include/c++/10/bits/locale_facets.h ****        *  This function finds the mask for each char_type in the range [lo,hi)
 176:/usr/include/c++/10/bits/locale_facets.h ****        *  and successively writes it to vec.  vec must have as many elements
 177:/usr/include/c++/10/bits/locale_facets.h ****        *  as the char array.  It does so by returning the value of
 178:/usr/include/c++/10/bits/locale_facets.h ****        *  ctype<char_type>::do_is().
 179:/usr/include/c++/10/bits/locale_facets.h ****        *
 180:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 181:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 182:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __vec  Pointer to an array of mask storage.
 183:/usr/include/c++/10/bits/locale_facets.h ****        *  @return  @a __hi.
 184:/usr/include/c++/10/bits/locale_facets.h ****       */
 185:/usr/include/c++/10/bits/locale_facets.h ****       const char_type*
AARCH64 GAS  obj/extInstr.s 			page 26


 186:/usr/include/c++/10/bits/locale_facets.h ****       is(const char_type *__lo, const char_type *__hi, mask *__vec) const
 187:/usr/include/c++/10/bits/locale_facets.h ****       { return this->do_is(__lo, __hi, __vec); }
 188:/usr/include/c++/10/bits/locale_facets.h **** 
 189:/usr/include/c++/10/bits/locale_facets.h ****       /**
 190:/usr/include/c++/10/bits/locale_facets.h ****        *  @brief  Find char_type matching a mask
 191:/usr/include/c++/10/bits/locale_facets.h ****        *
 192:/usr/include/c++/10/bits/locale_facets.h ****        *  This function searches for and returns the first char_type c in
 193:/usr/include/c++/10/bits/locale_facets.h ****        *  [lo,hi) for which is(m,c) is true.  It does so by returning
 194:/usr/include/c++/10/bits/locale_facets.h ****        *  ctype<char_type>::do_scan_is().
 195:/usr/include/c++/10/bits/locale_facets.h ****        *
 196:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 197:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 198:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 199:/usr/include/c++/10/bits/locale_facets.h ****        *  @return  Pointer to matching char_type if found, else @a __hi.
 200:/usr/include/c++/10/bits/locale_facets.h ****       */
 201:/usr/include/c++/10/bits/locale_facets.h ****       const char_type*
 202:/usr/include/c++/10/bits/locale_facets.h ****       scan_is(mask __m, const char_type* __lo, const char_type* __hi) const
 203:/usr/include/c++/10/bits/locale_facets.h ****       { return this->do_scan_is(__m, __lo, __hi); }
 204:/usr/include/c++/10/bits/locale_facets.h **** 
 205:/usr/include/c++/10/bits/locale_facets.h ****       /**
 206:/usr/include/c++/10/bits/locale_facets.h ****        *  @brief  Find char_type not matching a mask
 207:/usr/include/c++/10/bits/locale_facets.h ****        *
 208:/usr/include/c++/10/bits/locale_facets.h ****        *  This function searches for and returns the first char_type c in
 209:/usr/include/c++/10/bits/locale_facets.h ****        *  [lo,hi) for which is(m,c) is false.  It does so by returning
 210:/usr/include/c++/10/bits/locale_facets.h ****        *  ctype<char_type>::do_scan_not().
 211:/usr/include/c++/10/bits/locale_facets.h ****        *
 212:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 213:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __lo  Pointer to first char in range.
 214:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 215:/usr/include/c++/10/bits/locale_facets.h ****        *  @return  Pointer to non-matching char if found, else @a __hi.
 216:/usr/include/c++/10/bits/locale_facets.h ****       */
 217:/usr/include/c++/10/bits/locale_facets.h ****       const char_type*
 218:/usr/include/c++/10/bits/locale_facets.h ****       scan_not(mask __m, const char_type* __lo, const char_type* __hi) const
 219:/usr/include/c++/10/bits/locale_facets.h ****       { return this->do_scan_not(__m, __lo, __hi); }
 220:/usr/include/c++/10/bits/locale_facets.h **** 
 221:/usr/include/c++/10/bits/locale_facets.h ****       /**
 222:/usr/include/c++/10/bits/locale_facets.h ****        *  @brief  Convert to uppercase.
 223:/usr/include/c++/10/bits/locale_facets.h ****        *
 224:/usr/include/c++/10/bits/locale_facets.h ****        *  This function converts the argument to uppercase if possible.
 225:/usr/include/c++/10/bits/locale_facets.h ****        *  If not possible (for example, '2'), returns the argument.  It does
 226:/usr/include/c++/10/bits/locale_facets.h ****        *  so by returning ctype<char_type>::do_toupper().
 227:/usr/include/c++/10/bits/locale_facets.h ****        *
 228:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 229:/usr/include/c++/10/bits/locale_facets.h ****        *  @return  The uppercase char_type if convertible, else @a __c.
 230:/usr/include/c++/10/bits/locale_facets.h ****       */
 231:/usr/include/c++/10/bits/locale_facets.h ****       char_type
 232:/usr/include/c++/10/bits/locale_facets.h ****       toupper(char_type __c) const
 233:/usr/include/c++/10/bits/locale_facets.h ****       { return this->do_toupper(__c); }
 234:/usr/include/c++/10/bits/locale_facets.h **** 
 235:/usr/include/c++/10/bits/locale_facets.h ****       /**
 236:/usr/include/c++/10/bits/locale_facets.h ****        *  @brief  Convert array to uppercase.
 237:/usr/include/c++/10/bits/locale_facets.h ****        *
 238:/usr/include/c++/10/bits/locale_facets.h ****        *  This function converts each char_type in the range [lo,hi) to
 239:/usr/include/c++/10/bits/locale_facets.h ****        *  uppercase if possible.  Other elements remain untouched.  It does so
 240:/usr/include/c++/10/bits/locale_facets.h ****        *  by returning ctype<char_type>:: do_toupper(lo, hi).
 241:/usr/include/c++/10/bits/locale_facets.h ****        *
 242:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
AARCH64 GAS  obj/extInstr.s 			page 27


 243:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 244:/usr/include/c++/10/bits/locale_facets.h ****        *  @return  @a __hi.
 245:/usr/include/c++/10/bits/locale_facets.h ****       */
 246:/usr/include/c++/10/bits/locale_facets.h ****       const char_type*
 247:/usr/include/c++/10/bits/locale_facets.h ****       toupper(char_type *__lo, const char_type* __hi) const
 248:/usr/include/c++/10/bits/locale_facets.h ****       { return this->do_toupper(__lo, __hi); }
 249:/usr/include/c++/10/bits/locale_facets.h **** 
 250:/usr/include/c++/10/bits/locale_facets.h ****       /**
 251:/usr/include/c++/10/bits/locale_facets.h ****        *  @brief  Convert to lowercase.
 252:/usr/include/c++/10/bits/locale_facets.h ****        *
 253:/usr/include/c++/10/bits/locale_facets.h ****        *  This function converts the argument to lowercase if possible.  If
 254:/usr/include/c++/10/bits/locale_facets.h ****        *  not possible (for example, '2'), returns the argument.  It does so
 255:/usr/include/c++/10/bits/locale_facets.h ****        *  by returning ctype<char_type>::do_tolower(c).
 256:/usr/include/c++/10/bits/locale_facets.h ****        *
 257:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 258:/usr/include/c++/10/bits/locale_facets.h ****        *  @return  The lowercase char_type if convertible, else @a __c.
 259:/usr/include/c++/10/bits/locale_facets.h ****       */
 260:/usr/include/c++/10/bits/locale_facets.h ****       char_type
 261:/usr/include/c++/10/bits/locale_facets.h ****       tolower(char_type __c) const
 262:/usr/include/c++/10/bits/locale_facets.h ****       { return this->do_tolower(__c); }
 263:/usr/include/c++/10/bits/locale_facets.h **** 
 264:/usr/include/c++/10/bits/locale_facets.h ****       /**
 265:/usr/include/c++/10/bits/locale_facets.h ****        *  @brief  Convert array to lowercase.
 266:/usr/include/c++/10/bits/locale_facets.h ****        *
 267:/usr/include/c++/10/bits/locale_facets.h ****        *  This function converts each char_type in the range [__lo,__hi) to
 268:/usr/include/c++/10/bits/locale_facets.h ****        *  lowercase if possible.  Other elements remain untouched.  It does so
 269:/usr/include/c++/10/bits/locale_facets.h ****        *  by returning ctype<char_type>:: do_tolower(__lo, __hi).
 270:/usr/include/c++/10/bits/locale_facets.h ****        *
 271:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 272:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 273:/usr/include/c++/10/bits/locale_facets.h ****        *  @return  @a __hi.
 274:/usr/include/c++/10/bits/locale_facets.h ****       */
 275:/usr/include/c++/10/bits/locale_facets.h ****       const char_type*
 276:/usr/include/c++/10/bits/locale_facets.h ****       tolower(char_type* __lo, const char_type* __hi) const
 277:/usr/include/c++/10/bits/locale_facets.h ****       { return this->do_tolower(__lo, __hi); }
 278:/usr/include/c++/10/bits/locale_facets.h **** 
 279:/usr/include/c++/10/bits/locale_facets.h ****       /**
 280:/usr/include/c++/10/bits/locale_facets.h ****        *  @brief  Widen char to char_type
 281:/usr/include/c++/10/bits/locale_facets.h ****        *
 282:/usr/include/c++/10/bits/locale_facets.h ****        *  This function converts the char argument to char_type using the
 283:/usr/include/c++/10/bits/locale_facets.h ****        *  simplest reasonable transformation.  It does so by returning
 284:/usr/include/c++/10/bits/locale_facets.h ****        *  ctype<char_type>::do_widen(c).
 285:/usr/include/c++/10/bits/locale_facets.h ****        *
 286:/usr/include/c++/10/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 287:/usr/include/c++/10/bits/locale_facets.h ****        *  codecvt for that.
 288:/usr/include/c++/10/bits/locale_facets.h ****        *
 289:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __c  The char to convert.
 290:/usr/include/c++/10/bits/locale_facets.h ****        *  @return  The converted char_type.
 291:/usr/include/c++/10/bits/locale_facets.h ****       */
 292:/usr/include/c++/10/bits/locale_facets.h ****       char_type
 293:/usr/include/c++/10/bits/locale_facets.h ****       widen(char __c) const
 294:/usr/include/c++/10/bits/locale_facets.h ****       { return this->do_widen(__c); }
 295:/usr/include/c++/10/bits/locale_facets.h **** 
 296:/usr/include/c++/10/bits/locale_facets.h ****       /**
 297:/usr/include/c++/10/bits/locale_facets.h ****        *  @brief  Widen array to char_type
 298:/usr/include/c++/10/bits/locale_facets.h ****        *
 299:/usr/include/c++/10/bits/locale_facets.h ****        *  This function converts each char in the input to char_type using the
AARCH64 GAS  obj/extInstr.s 			page 28


 300:/usr/include/c++/10/bits/locale_facets.h ****        *  simplest reasonable transformation.  It does so by returning
 301:/usr/include/c++/10/bits/locale_facets.h ****        *  ctype<char_type>::do_widen(c).
 302:/usr/include/c++/10/bits/locale_facets.h ****        *
 303:/usr/include/c++/10/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 304:/usr/include/c++/10/bits/locale_facets.h ****        *  codecvt for that.
 305:/usr/include/c++/10/bits/locale_facets.h ****        *
 306:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 307:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 308:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __to  Pointer to the destination array.
 309:/usr/include/c++/10/bits/locale_facets.h ****        *  @return  @a __hi.
 310:/usr/include/c++/10/bits/locale_facets.h ****       */
 311:/usr/include/c++/10/bits/locale_facets.h ****       const char*
 312:/usr/include/c++/10/bits/locale_facets.h ****       widen(const char* __lo, const char* __hi, char_type* __to) const
 313:/usr/include/c++/10/bits/locale_facets.h ****       { return this->do_widen(__lo, __hi, __to); }
 314:/usr/include/c++/10/bits/locale_facets.h **** 
 315:/usr/include/c++/10/bits/locale_facets.h ****       /**
 316:/usr/include/c++/10/bits/locale_facets.h ****        *  @brief  Narrow char_type to char
 317:/usr/include/c++/10/bits/locale_facets.h ****        *
 318:/usr/include/c++/10/bits/locale_facets.h ****        *  This function converts the char_type to char using the simplest
 319:/usr/include/c++/10/bits/locale_facets.h ****        *  reasonable transformation.  If the conversion fails, dfault is
 320:/usr/include/c++/10/bits/locale_facets.h ****        *  returned instead.  It does so by returning
 321:/usr/include/c++/10/bits/locale_facets.h ****        *  ctype<char_type>::do_narrow(__c).
 322:/usr/include/c++/10/bits/locale_facets.h ****        *
 323:/usr/include/c++/10/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 324:/usr/include/c++/10/bits/locale_facets.h ****        *  codecvt for that.
 325:/usr/include/c++/10/bits/locale_facets.h ****        *
 326:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 327:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __dfault  Char to return if conversion fails.
 328:/usr/include/c++/10/bits/locale_facets.h ****        *  @return  The converted char.
 329:/usr/include/c++/10/bits/locale_facets.h ****       */
 330:/usr/include/c++/10/bits/locale_facets.h ****       char
 331:/usr/include/c++/10/bits/locale_facets.h ****       narrow(char_type __c, char __dfault) const
 332:/usr/include/c++/10/bits/locale_facets.h ****       { return this->do_narrow(__c, __dfault); }
 333:/usr/include/c++/10/bits/locale_facets.h **** 
 334:/usr/include/c++/10/bits/locale_facets.h ****       /**
 335:/usr/include/c++/10/bits/locale_facets.h ****        *  @brief  Narrow array to char array
 336:/usr/include/c++/10/bits/locale_facets.h ****        *
 337:/usr/include/c++/10/bits/locale_facets.h ****        *  This function converts each char_type in the input to char using the
 338:/usr/include/c++/10/bits/locale_facets.h ****        *  simplest reasonable transformation and writes the results to the
 339:/usr/include/c++/10/bits/locale_facets.h ****        *  destination array.  For any char_type in the input that cannot be
 340:/usr/include/c++/10/bits/locale_facets.h ****        *  converted, @a dfault is used instead.  It does so by returning
 341:/usr/include/c++/10/bits/locale_facets.h ****        *  ctype<char_type>::do_narrow(__lo, __hi, __dfault, __to).
 342:/usr/include/c++/10/bits/locale_facets.h ****        *
 343:/usr/include/c++/10/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 344:/usr/include/c++/10/bits/locale_facets.h ****        *  codecvt for that.
 345:/usr/include/c++/10/bits/locale_facets.h ****        *
 346:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 347:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 348:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __dfault  Char to use if conversion fails.
 349:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __to  Pointer to the destination array.
 350:/usr/include/c++/10/bits/locale_facets.h ****        *  @return  @a __hi.
 351:/usr/include/c++/10/bits/locale_facets.h ****       */
 352:/usr/include/c++/10/bits/locale_facets.h ****       const char_type*
 353:/usr/include/c++/10/bits/locale_facets.h ****       narrow(const char_type* __lo, const char_type* __hi,
 354:/usr/include/c++/10/bits/locale_facets.h **** 	      char __dfault, char* __to) const
 355:/usr/include/c++/10/bits/locale_facets.h ****       { return this->do_narrow(__lo, __hi, __dfault, __to); }
 356:/usr/include/c++/10/bits/locale_facets.h **** 
AARCH64 GAS  obj/extInstr.s 			page 29


 357:/usr/include/c++/10/bits/locale_facets.h ****     protected:
 358:/usr/include/c++/10/bits/locale_facets.h ****       explicit
 359:/usr/include/c++/10/bits/locale_facets.h ****       __ctype_abstract_base(size_t __refs = 0): facet(__refs) { }
 360:/usr/include/c++/10/bits/locale_facets.h **** 
 361:/usr/include/c++/10/bits/locale_facets.h ****       virtual
 362:/usr/include/c++/10/bits/locale_facets.h ****       ~__ctype_abstract_base() { }
 363:/usr/include/c++/10/bits/locale_facets.h **** 
 364:/usr/include/c++/10/bits/locale_facets.h ****       /**
 365:/usr/include/c++/10/bits/locale_facets.h ****        *  @brief  Test char_type classification.
 366:/usr/include/c++/10/bits/locale_facets.h ****        *
 367:/usr/include/c++/10/bits/locale_facets.h ****        *  This function finds a mask M for @a c and compares it to mask @a m.
 368:/usr/include/c++/10/bits/locale_facets.h ****        *
 369:/usr/include/c++/10/bits/locale_facets.h ****        *  do_is() is a hook for a derived facet to change the behavior of
 370:/usr/include/c++/10/bits/locale_facets.h ****        *  classifying.  do_is() must always return the same result for the
 371:/usr/include/c++/10/bits/locale_facets.h ****        *  same input.
 372:/usr/include/c++/10/bits/locale_facets.h ****        *
 373:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __c  The char_type to find the mask of.
 374:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 375:/usr/include/c++/10/bits/locale_facets.h ****        *  @return  (M & __m) != 0.
 376:/usr/include/c++/10/bits/locale_facets.h ****       */
 377:/usr/include/c++/10/bits/locale_facets.h ****       virtual bool
 378:/usr/include/c++/10/bits/locale_facets.h ****       do_is(mask __m, char_type __c) const = 0;
 379:/usr/include/c++/10/bits/locale_facets.h **** 
 380:/usr/include/c++/10/bits/locale_facets.h ****       /**
 381:/usr/include/c++/10/bits/locale_facets.h ****        *  @brief  Return a mask array.
 382:/usr/include/c++/10/bits/locale_facets.h ****        *
 383:/usr/include/c++/10/bits/locale_facets.h ****        *  This function finds the mask for each char_type in the range [lo,hi)
 384:/usr/include/c++/10/bits/locale_facets.h ****        *  and successively writes it to vec.  vec must have as many elements
 385:/usr/include/c++/10/bits/locale_facets.h ****        *  as the input.
 386:/usr/include/c++/10/bits/locale_facets.h ****        *
 387:/usr/include/c++/10/bits/locale_facets.h ****        *  do_is() is a hook for a derived facet to change the behavior of
 388:/usr/include/c++/10/bits/locale_facets.h ****        *  classifying.  do_is() must always return the same result for the
 389:/usr/include/c++/10/bits/locale_facets.h ****        *  same input.
 390:/usr/include/c++/10/bits/locale_facets.h ****        *
 391:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 392:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 393:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __vec  Pointer to an array of mask storage.
 394:/usr/include/c++/10/bits/locale_facets.h ****        *  @return  @a __hi.
 395:/usr/include/c++/10/bits/locale_facets.h ****       */
 396:/usr/include/c++/10/bits/locale_facets.h ****       virtual const char_type*
 397:/usr/include/c++/10/bits/locale_facets.h ****       do_is(const char_type* __lo, const char_type* __hi,
 398:/usr/include/c++/10/bits/locale_facets.h **** 	    mask* __vec) const = 0;
 399:/usr/include/c++/10/bits/locale_facets.h **** 
 400:/usr/include/c++/10/bits/locale_facets.h ****       /**
 401:/usr/include/c++/10/bits/locale_facets.h ****        *  @brief  Find char_type matching mask
 402:/usr/include/c++/10/bits/locale_facets.h ****        *
 403:/usr/include/c++/10/bits/locale_facets.h ****        *  This function searches for and returns the first char_type c in
 404:/usr/include/c++/10/bits/locale_facets.h ****        *  [__lo,__hi) for which is(__m,c) is true.
 405:/usr/include/c++/10/bits/locale_facets.h ****        *
 406:/usr/include/c++/10/bits/locale_facets.h ****        *  do_scan_is() is a hook for a derived facet to change the behavior of
 407:/usr/include/c++/10/bits/locale_facets.h ****        *  match searching.  do_is() must always return the same result for the
 408:/usr/include/c++/10/bits/locale_facets.h ****        *  same input.
 409:/usr/include/c++/10/bits/locale_facets.h ****        *
 410:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 411:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 412:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 413:/usr/include/c++/10/bits/locale_facets.h ****        *  @return  Pointer to a matching char_type if found, else @a __hi.
AARCH64 GAS  obj/extInstr.s 			page 30


 414:/usr/include/c++/10/bits/locale_facets.h ****       */
 415:/usr/include/c++/10/bits/locale_facets.h ****       virtual const char_type*
 416:/usr/include/c++/10/bits/locale_facets.h ****       do_scan_is(mask __m, const char_type* __lo,
 417:/usr/include/c++/10/bits/locale_facets.h **** 		 const char_type* __hi) const = 0;
 418:/usr/include/c++/10/bits/locale_facets.h **** 
 419:/usr/include/c++/10/bits/locale_facets.h ****       /**
 420:/usr/include/c++/10/bits/locale_facets.h ****        *  @brief  Find char_type not matching mask
 421:/usr/include/c++/10/bits/locale_facets.h ****        *
 422:/usr/include/c++/10/bits/locale_facets.h ****        *  This function searches for and returns a pointer to the first
 423:/usr/include/c++/10/bits/locale_facets.h ****        *  char_type c of [lo,hi) for which is(m,c) is false.
 424:/usr/include/c++/10/bits/locale_facets.h ****        *
 425:/usr/include/c++/10/bits/locale_facets.h ****        *  do_scan_is() is a hook for a derived facet to change the behavior of
 426:/usr/include/c++/10/bits/locale_facets.h ****        *  match searching.  do_is() must always return the same result for the
 427:/usr/include/c++/10/bits/locale_facets.h ****        *  same input.
 428:/usr/include/c++/10/bits/locale_facets.h ****        *
 429:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 430:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 431:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 432:/usr/include/c++/10/bits/locale_facets.h ****        *  @return  Pointer to a non-matching char_type if found, else @a __hi.
 433:/usr/include/c++/10/bits/locale_facets.h ****       */
 434:/usr/include/c++/10/bits/locale_facets.h ****       virtual const char_type*
 435:/usr/include/c++/10/bits/locale_facets.h ****       do_scan_not(mask __m, const char_type* __lo,
 436:/usr/include/c++/10/bits/locale_facets.h **** 		  const char_type* __hi) const = 0;
 437:/usr/include/c++/10/bits/locale_facets.h **** 
 438:/usr/include/c++/10/bits/locale_facets.h ****       /**
 439:/usr/include/c++/10/bits/locale_facets.h ****        *  @brief  Convert to uppercase.
 440:/usr/include/c++/10/bits/locale_facets.h ****        *
 441:/usr/include/c++/10/bits/locale_facets.h ****        *  This virtual function converts the char_type argument to uppercase
 442:/usr/include/c++/10/bits/locale_facets.h ****        *  if possible.  If not possible (for example, '2'), returns the
 443:/usr/include/c++/10/bits/locale_facets.h ****        *  argument.
 444:/usr/include/c++/10/bits/locale_facets.h ****        *
 445:/usr/include/c++/10/bits/locale_facets.h ****        *  do_toupper() is a hook for a derived facet to change the behavior of
 446:/usr/include/c++/10/bits/locale_facets.h ****        *  uppercasing.  do_toupper() must always return the same result for
 447:/usr/include/c++/10/bits/locale_facets.h ****        *  the same input.
 448:/usr/include/c++/10/bits/locale_facets.h ****        *
 449:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 450:/usr/include/c++/10/bits/locale_facets.h ****        *  @return  The uppercase char_type if convertible, else @a __c.
 451:/usr/include/c++/10/bits/locale_facets.h ****       */
 452:/usr/include/c++/10/bits/locale_facets.h ****       virtual char_type
 453:/usr/include/c++/10/bits/locale_facets.h ****       do_toupper(char_type __c) const = 0;
 454:/usr/include/c++/10/bits/locale_facets.h **** 
 455:/usr/include/c++/10/bits/locale_facets.h ****       /**
 456:/usr/include/c++/10/bits/locale_facets.h ****        *  @brief  Convert array to uppercase.
 457:/usr/include/c++/10/bits/locale_facets.h ****        *
 458:/usr/include/c++/10/bits/locale_facets.h ****        *  This virtual function converts each char_type in the range [__lo,__hi)
 459:/usr/include/c++/10/bits/locale_facets.h ****        *  to uppercase if possible.  Other elements remain untouched.
 460:/usr/include/c++/10/bits/locale_facets.h ****        *
 461:/usr/include/c++/10/bits/locale_facets.h ****        *  do_toupper() is a hook for a derived facet to change the behavior of
 462:/usr/include/c++/10/bits/locale_facets.h ****        *  uppercasing.  do_toupper() must always return the same result for
 463:/usr/include/c++/10/bits/locale_facets.h ****        *  the same input.
 464:/usr/include/c++/10/bits/locale_facets.h ****        *
 465:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 466:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 467:/usr/include/c++/10/bits/locale_facets.h ****        *  @return  @a __hi.
 468:/usr/include/c++/10/bits/locale_facets.h ****       */
 469:/usr/include/c++/10/bits/locale_facets.h ****       virtual const char_type*
 470:/usr/include/c++/10/bits/locale_facets.h ****       do_toupper(char_type* __lo, const char_type* __hi) const = 0;
AARCH64 GAS  obj/extInstr.s 			page 31


 471:/usr/include/c++/10/bits/locale_facets.h **** 
 472:/usr/include/c++/10/bits/locale_facets.h ****       /**
 473:/usr/include/c++/10/bits/locale_facets.h ****        *  @brief  Convert to lowercase.
 474:/usr/include/c++/10/bits/locale_facets.h ****        *
 475:/usr/include/c++/10/bits/locale_facets.h ****        *  This virtual function converts the argument to lowercase if
 476:/usr/include/c++/10/bits/locale_facets.h ****        *  possible.  If not possible (for example, '2'), returns the argument.
 477:/usr/include/c++/10/bits/locale_facets.h ****        *
 478:/usr/include/c++/10/bits/locale_facets.h ****        *  do_tolower() is a hook for a derived facet to change the behavior of
 479:/usr/include/c++/10/bits/locale_facets.h ****        *  lowercasing.  do_tolower() must always return the same result for
 480:/usr/include/c++/10/bits/locale_facets.h ****        *  the same input.
 481:/usr/include/c++/10/bits/locale_facets.h ****        *
 482:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 483:/usr/include/c++/10/bits/locale_facets.h ****        *  @return  The lowercase char_type if convertible, else @a __c.
 484:/usr/include/c++/10/bits/locale_facets.h ****       */
 485:/usr/include/c++/10/bits/locale_facets.h ****       virtual char_type
 486:/usr/include/c++/10/bits/locale_facets.h ****       do_tolower(char_type __c) const = 0;
 487:/usr/include/c++/10/bits/locale_facets.h **** 
 488:/usr/include/c++/10/bits/locale_facets.h ****       /**
 489:/usr/include/c++/10/bits/locale_facets.h ****        *  @brief  Convert array to lowercase.
 490:/usr/include/c++/10/bits/locale_facets.h ****        *
 491:/usr/include/c++/10/bits/locale_facets.h ****        *  This virtual function converts each char_type in the range [__lo,__hi)
 492:/usr/include/c++/10/bits/locale_facets.h ****        *  to lowercase if possible.  Other elements remain untouched.
 493:/usr/include/c++/10/bits/locale_facets.h ****        *
 494:/usr/include/c++/10/bits/locale_facets.h ****        *  do_tolower() is a hook for a derived facet to change the behavior of
 495:/usr/include/c++/10/bits/locale_facets.h ****        *  lowercasing.  do_tolower() must always return the same result for
 496:/usr/include/c++/10/bits/locale_facets.h ****        *  the same input.
 497:/usr/include/c++/10/bits/locale_facets.h ****        *
 498:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 499:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 500:/usr/include/c++/10/bits/locale_facets.h ****        *  @return  @a __hi.
 501:/usr/include/c++/10/bits/locale_facets.h ****       */
 502:/usr/include/c++/10/bits/locale_facets.h ****       virtual const char_type*
 503:/usr/include/c++/10/bits/locale_facets.h ****       do_tolower(char_type* __lo, const char_type* __hi) const = 0;
 504:/usr/include/c++/10/bits/locale_facets.h **** 
 505:/usr/include/c++/10/bits/locale_facets.h ****       /**
 506:/usr/include/c++/10/bits/locale_facets.h ****        *  @brief  Widen char
 507:/usr/include/c++/10/bits/locale_facets.h ****        *
 508:/usr/include/c++/10/bits/locale_facets.h ****        *  This virtual function converts the char to char_type using the
 509:/usr/include/c++/10/bits/locale_facets.h ****        *  simplest reasonable transformation.
 510:/usr/include/c++/10/bits/locale_facets.h ****        *
 511:/usr/include/c++/10/bits/locale_facets.h ****        *  do_widen() is a hook for a derived facet to change the behavior of
 512:/usr/include/c++/10/bits/locale_facets.h ****        *  widening.  do_widen() must always return the same result for the
 513:/usr/include/c++/10/bits/locale_facets.h ****        *  same input.
 514:/usr/include/c++/10/bits/locale_facets.h ****        *
 515:/usr/include/c++/10/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 516:/usr/include/c++/10/bits/locale_facets.h ****        *  codecvt for that.
 517:/usr/include/c++/10/bits/locale_facets.h ****        *
 518:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __c  The char to convert.
 519:/usr/include/c++/10/bits/locale_facets.h ****        *  @return  The converted char_type
 520:/usr/include/c++/10/bits/locale_facets.h ****       */
 521:/usr/include/c++/10/bits/locale_facets.h ****       virtual char_type
 522:/usr/include/c++/10/bits/locale_facets.h ****       do_widen(char __c) const = 0;
 523:/usr/include/c++/10/bits/locale_facets.h **** 
 524:/usr/include/c++/10/bits/locale_facets.h ****       /**
 525:/usr/include/c++/10/bits/locale_facets.h ****        *  @brief  Widen char array
 526:/usr/include/c++/10/bits/locale_facets.h ****        *
 527:/usr/include/c++/10/bits/locale_facets.h ****        *  This function converts each char in the input to char_type using the
AARCH64 GAS  obj/extInstr.s 			page 32


 528:/usr/include/c++/10/bits/locale_facets.h ****        *  simplest reasonable transformation.
 529:/usr/include/c++/10/bits/locale_facets.h ****        *
 530:/usr/include/c++/10/bits/locale_facets.h ****        *  do_widen() is a hook for a derived facet to change the behavior of
 531:/usr/include/c++/10/bits/locale_facets.h ****        *  widening.  do_widen() must always return the same result for the
 532:/usr/include/c++/10/bits/locale_facets.h ****        *  same input.
 533:/usr/include/c++/10/bits/locale_facets.h ****        *
 534:/usr/include/c++/10/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 535:/usr/include/c++/10/bits/locale_facets.h ****        *  codecvt for that.
 536:/usr/include/c++/10/bits/locale_facets.h ****        *
 537:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __lo  Pointer to start range.
 538:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 539:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __to  Pointer to the destination array.
 540:/usr/include/c++/10/bits/locale_facets.h ****        *  @return  @a __hi.
 541:/usr/include/c++/10/bits/locale_facets.h ****       */
 542:/usr/include/c++/10/bits/locale_facets.h ****       virtual const char*
 543:/usr/include/c++/10/bits/locale_facets.h ****       do_widen(const char* __lo, const char* __hi, char_type* __to) const = 0;
 544:/usr/include/c++/10/bits/locale_facets.h **** 
 545:/usr/include/c++/10/bits/locale_facets.h ****       /**
 546:/usr/include/c++/10/bits/locale_facets.h ****        *  @brief  Narrow char_type to char
 547:/usr/include/c++/10/bits/locale_facets.h ****        *
 548:/usr/include/c++/10/bits/locale_facets.h ****        *  This virtual function converts the argument to char using the
 549:/usr/include/c++/10/bits/locale_facets.h ****        *  simplest reasonable transformation.  If the conversion fails, dfault
 550:/usr/include/c++/10/bits/locale_facets.h ****        *  is returned instead.
 551:/usr/include/c++/10/bits/locale_facets.h ****        *
 552:/usr/include/c++/10/bits/locale_facets.h ****        *  do_narrow() is a hook for a derived facet to change the behavior of
 553:/usr/include/c++/10/bits/locale_facets.h ****        *  narrowing.  do_narrow() must always return the same result for the
 554:/usr/include/c++/10/bits/locale_facets.h ****        *  same input.
 555:/usr/include/c++/10/bits/locale_facets.h ****        *
 556:/usr/include/c++/10/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 557:/usr/include/c++/10/bits/locale_facets.h ****        *  codecvt for that.
 558:/usr/include/c++/10/bits/locale_facets.h ****        *
 559:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 560:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __dfault  Char to return if conversion fails.
 561:/usr/include/c++/10/bits/locale_facets.h ****        *  @return  The converted char.
 562:/usr/include/c++/10/bits/locale_facets.h ****       */
 563:/usr/include/c++/10/bits/locale_facets.h ****       virtual char
 564:/usr/include/c++/10/bits/locale_facets.h ****       do_narrow(char_type __c, char __dfault) const = 0;
 565:/usr/include/c++/10/bits/locale_facets.h **** 
 566:/usr/include/c++/10/bits/locale_facets.h ****       /**
 567:/usr/include/c++/10/bits/locale_facets.h ****        *  @brief  Narrow char_type array to char
 568:/usr/include/c++/10/bits/locale_facets.h ****        *
 569:/usr/include/c++/10/bits/locale_facets.h ****        *  This virtual function converts each char_type in the range
 570:/usr/include/c++/10/bits/locale_facets.h ****        *  [__lo,__hi) to char using the simplest reasonable
 571:/usr/include/c++/10/bits/locale_facets.h ****        *  transformation and writes the results to the destination
 572:/usr/include/c++/10/bits/locale_facets.h ****        *  array.  For any element in the input that cannot be
 573:/usr/include/c++/10/bits/locale_facets.h ****        *  converted, @a __dfault is used instead.
 574:/usr/include/c++/10/bits/locale_facets.h ****        *
 575:/usr/include/c++/10/bits/locale_facets.h ****        *  do_narrow() is a hook for a derived facet to change the behavior of
 576:/usr/include/c++/10/bits/locale_facets.h ****        *  narrowing.  do_narrow() must always return the same result for the
 577:/usr/include/c++/10/bits/locale_facets.h ****        *  same input.
 578:/usr/include/c++/10/bits/locale_facets.h ****        *
 579:/usr/include/c++/10/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 580:/usr/include/c++/10/bits/locale_facets.h ****        *  codecvt for that.
 581:/usr/include/c++/10/bits/locale_facets.h ****        *
 582:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 583:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 584:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __dfault  Char to use if conversion fails.
AARCH64 GAS  obj/extInstr.s 			page 33


 585:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __to  Pointer to the destination array.
 586:/usr/include/c++/10/bits/locale_facets.h ****        *  @return  @a __hi.
 587:/usr/include/c++/10/bits/locale_facets.h ****       */
 588:/usr/include/c++/10/bits/locale_facets.h ****       virtual const char_type*
 589:/usr/include/c++/10/bits/locale_facets.h ****       do_narrow(const char_type* __lo, const char_type* __hi,
 590:/usr/include/c++/10/bits/locale_facets.h **** 		char __dfault, char* __to) const = 0;
 591:/usr/include/c++/10/bits/locale_facets.h ****     };
 592:/usr/include/c++/10/bits/locale_facets.h **** 
 593:/usr/include/c++/10/bits/locale_facets.h ****   /**
 594:/usr/include/c++/10/bits/locale_facets.h ****    *  @brief  Primary class template ctype facet.
 595:/usr/include/c++/10/bits/locale_facets.h ****    *  @ingroup locales
 596:/usr/include/c++/10/bits/locale_facets.h ****    *
 597:/usr/include/c++/10/bits/locale_facets.h ****    *  This template class defines classification and conversion functions for
 598:/usr/include/c++/10/bits/locale_facets.h ****    *  character sets.  It wraps cctype functionality.  Ctype gets used by
 599:/usr/include/c++/10/bits/locale_facets.h ****    *  streams for many I/O operations.
 600:/usr/include/c++/10/bits/locale_facets.h ****    *
 601:/usr/include/c++/10/bits/locale_facets.h ****    *  This template provides the protected virtual functions the developer
 602:/usr/include/c++/10/bits/locale_facets.h ****    *  will have to replace in a derived class or specialization to make a
 603:/usr/include/c++/10/bits/locale_facets.h ****    *  working facet.  The public functions that access them are defined in
 604:/usr/include/c++/10/bits/locale_facets.h ****    *  __ctype_abstract_base, to allow for implementation flexibility.  See
 605:/usr/include/c++/10/bits/locale_facets.h ****    *  ctype<wchar_t> for an example.  The functions are documented in
 606:/usr/include/c++/10/bits/locale_facets.h ****    *  __ctype_abstract_base.
 607:/usr/include/c++/10/bits/locale_facets.h ****    *
 608:/usr/include/c++/10/bits/locale_facets.h ****    *  Note: implementations are provided for all the protected virtual
 609:/usr/include/c++/10/bits/locale_facets.h ****    *  functions, but will likely not be useful.
 610:/usr/include/c++/10/bits/locale_facets.h ****   */
 611:/usr/include/c++/10/bits/locale_facets.h ****   template<typename _CharT>
 612:/usr/include/c++/10/bits/locale_facets.h ****     class ctype : public __ctype_abstract_base<_CharT>
 613:/usr/include/c++/10/bits/locale_facets.h ****     {
 614:/usr/include/c++/10/bits/locale_facets.h ****     public:
 615:/usr/include/c++/10/bits/locale_facets.h ****       // Types:
 616:/usr/include/c++/10/bits/locale_facets.h ****       typedef _CharT			char_type;
 617:/usr/include/c++/10/bits/locale_facets.h ****       typedef typename __ctype_abstract_base<_CharT>::mask mask;
 618:/usr/include/c++/10/bits/locale_facets.h **** 
 619:/usr/include/c++/10/bits/locale_facets.h ****       /// The facet id for ctype<char_type>
 620:/usr/include/c++/10/bits/locale_facets.h ****       static locale::id			id;
 621:/usr/include/c++/10/bits/locale_facets.h **** 
 622:/usr/include/c++/10/bits/locale_facets.h ****       explicit
 623:/usr/include/c++/10/bits/locale_facets.h ****       ctype(size_t __refs = 0) : __ctype_abstract_base<_CharT>(__refs) { }
 624:/usr/include/c++/10/bits/locale_facets.h **** 
 625:/usr/include/c++/10/bits/locale_facets.h ****    protected:
 626:/usr/include/c++/10/bits/locale_facets.h ****       virtual
 627:/usr/include/c++/10/bits/locale_facets.h ****       ~ctype();
 628:/usr/include/c++/10/bits/locale_facets.h **** 
 629:/usr/include/c++/10/bits/locale_facets.h ****       virtual bool
 630:/usr/include/c++/10/bits/locale_facets.h ****       do_is(mask __m, char_type __c) const;
 631:/usr/include/c++/10/bits/locale_facets.h **** 
 632:/usr/include/c++/10/bits/locale_facets.h ****       virtual const char_type*
 633:/usr/include/c++/10/bits/locale_facets.h ****       do_is(const char_type* __lo, const char_type* __hi, mask* __vec) const;
 634:/usr/include/c++/10/bits/locale_facets.h **** 
 635:/usr/include/c++/10/bits/locale_facets.h ****       virtual const char_type*
 636:/usr/include/c++/10/bits/locale_facets.h ****       do_scan_is(mask __m, const char_type* __lo, const char_type* __hi) const;
 637:/usr/include/c++/10/bits/locale_facets.h **** 
 638:/usr/include/c++/10/bits/locale_facets.h ****       virtual const char_type*
 639:/usr/include/c++/10/bits/locale_facets.h ****       do_scan_not(mask __m, const char_type* __lo,
 640:/usr/include/c++/10/bits/locale_facets.h **** 		  const char_type* __hi) const;
 641:/usr/include/c++/10/bits/locale_facets.h **** 
AARCH64 GAS  obj/extInstr.s 			page 34


 642:/usr/include/c++/10/bits/locale_facets.h ****       virtual char_type
 643:/usr/include/c++/10/bits/locale_facets.h ****       do_toupper(char_type __c) const;
 644:/usr/include/c++/10/bits/locale_facets.h **** 
 645:/usr/include/c++/10/bits/locale_facets.h ****       virtual const char_type*
 646:/usr/include/c++/10/bits/locale_facets.h ****       do_toupper(char_type* __lo, const char_type* __hi) const;
 647:/usr/include/c++/10/bits/locale_facets.h **** 
 648:/usr/include/c++/10/bits/locale_facets.h ****       virtual char_type
 649:/usr/include/c++/10/bits/locale_facets.h ****       do_tolower(char_type __c) const;
 650:/usr/include/c++/10/bits/locale_facets.h **** 
 651:/usr/include/c++/10/bits/locale_facets.h ****       virtual const char_type*
 652:/usr/include/c++/10/bits/locale_facets.h ****       do_tolower(char_type* __lo, const char_type* __hi) const;
 653:/usr/include/c++/10/bits/locale_facets.h **** 
 654:/usr/include/c++/10/bits/locale_facets.h ****       virtual char_type
 655:/usr/include/c++/10/bits/locale_facets.h ****       do_widen(char __c) const;
 656:/usr/include/c++/10/bits/locale_facets.h **** 
 657:/usr/include/c++/10/bits/locale_facets.h ****       virtual const char*
 658:/usr/include/c++/10/bits/locale_facets.h ****       do_widen(const char* __lo, const char* __hi, char_type* __dest) const;
 659:/usr/include/c++/10/bits/locale_facets.h **** 
 660:/usr/include/c++/10/bits/locale_facets.h ****       virtual char
 661:/usr/include/c++/10/bits/locale_facets.h ****       do_narrow(char_type, char __dfault) const;
 662:/usr/include/c++/10/bits/locale_facets.h **** 
 663:/usr/include/c++/10/bits/locale_facets.h ****       virtual const char_type*
 664:/usr/include/c++/10/bits/locale_facets.h ****       do_narrow(const char_type* __lo, const char_type* __hi,
 665:/usr/include/c++/10/bits/locale_facets.h **** 		char __dfault, char* __to) const;
 666:/usr/include/c++/10/bits/locale_facets.h ****     };
 667:/usr/include/c++/10/bits/locale_facets.h **** 
 668:/usr/include/c++/10/bits/locale_facets.h ****   template<typename _CharT>
 669:/usr/include/c++/10/bits/locale_facets.h ****     locale::id ctype<_CharT>::id;
 670:/usr/include/c++/10/bits/locale_facets.h **** 
 671:/usr/include/c++/10/bits/locale_facets.h ****   /**
 672:/usr/include/c++/10/bits/locale_facets.h ****    *  @brief  The ctype<char> specialization.
 673:/usr/include/c++/10/bits/locale_facets.h ****    *  @ingroup locales
 674:/usr/include/c++/10/bits/locale_facets.h ****    *
 675:/usr/include/c++/10/bits/locale_facets.h ****    *  This class defines classification and conversion functions for
 676:/usr/include/c++/10/bits/locale_facets.h ****    *  the char type.  It gets used by char streams for many I/O
 677:/usr/include/c++/10/bits/locale_facets.h ****    *  operations.  The char specialization provides a number of
 678:/usr/include/c++/10/bits/locale_facets.h ****    *  optimizations as well.
 679:/usr/include/c++/10/bits/locale_facets.h ****   */
 680:/usr/include/c++/10/bits/locale_facets.h ****   template<>
 681:/usr/include/c++/10/bits/locale_facets.h ****     class ctype<char> : public locale::facet, public ctype_base
 682:/usr/include/c++/10/bits/locale_facets.h ****     {
 683:/usr/include/c++/10/bits/locale_facets.h ****     public:
 684:/usr/include/c++/10/bits/locale_facets.h ****       // Types:
 685:/usr/include/c++/10/bits/locale_facets.h ****       /// Typedef for the template parameter char.
 686:/usr/include/c++/10/bits/locale_facets.h ****       typedef char		char_type;
 687:/usr/include/c++/10/bits/locale_facets.h **** 
 688:/usr/include/c++/10/bits/locale_facets.h ****     protected:
 689:/usr/include/c++/10/bits/locale_facets.h ****       // Data Members:
 690:/usr/include/c++/10/bits/locale_facets.h ****       __c_locale		_M_c_locale_ctype;
 691:/usr/include/c++/10/bits/locale_facets.h ****       bool			_M_del;
 692:/usr/include/c++/10/bits/locale_facets.h ****       __to_type			_M_toupper;
 693:/usr/include/c++/10/bits/locale_facets.h ****       __to_type			_M_tolower;
 694:/usr/include/c++/10/bits/locale_facets.h ****       const mask*		_M_table;
 695:/usr/include/c++/10/bits/locale_facets.h ****       mutable char		_M_widen_ok;
 696:/usr/include/c++/10/bits/locale_facets.h ****       mutable char		_M_widen[1 + static_cast<unsigned char>(-1)];
 697:/usr/include/c++/10/bits/locale_facets.h ****       mutable char		_M_narrow[1 + static_cast<unsigned char>(-1)];
 698:/usr/include/c++/10/bits/locale_facets.h ****       mutable char		_M_narrow_ok;	// 0 uninitialized, 1 init,
AARCH64 GAS  obj/extInstr.s 			page 35


 699:/usr/include/c++/10/bits/locale_facets.h **** 						// 2 memcpy can't be used
 700:/usr/include/c++/10/bits/locale_facets.h **** 
 701:/usr/include/c++/10/bits/locale_facets.h ****     public:
 702:/usr/include/c++/10/bits/locale_facets.h ****       /// The facet id for ctype<char>
 703:/usr/include/c++/10/bits/locale_facets.h ****       static locale::id        id;
 704:/usr/include/c++/10/bits/locale_facets.h ****       /// The size of the mask table.  It is SCHAR_MAX + 1.
 705:/usr/include/c++/10/bits/locale_facets.h ****       static const size_t      table_size = 1 + static_cast<unsigned char>(-1);
 706:/usr/include/c++/10/bits/locale_facets.h **** 
 707:/usr/include/c++/10/bits/locale_facets.h ****       /**
 708:/usr/include/c++/10/bits/locale_facets.h ****        *  @brief  Constructor performs initialization.
 709:/usr/include/c++/10/bits/locale_facets.h ****        *
 710:/usr/include/c++/10/bits/locale_facets.h ****        *  This is the constructor provided by the standard.
 711:/usr/include/c++/10/bits/locale_facets.h ****        *
 712:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __table If non-zero, table is used as the per-char mask.
 713:/usr/include/c++/10/bits/locale_facets.h ****        *               Else classic_table() is used.
 714:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __del   If true, passes ownership of table to this facet.
 715:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __refs  Passed to the base facet class.
 716:/usr/include/c++/10/bits/locale_facets.h ****       */
 717:/usr/include/c++/10/bits/locale_facets.h ****       explicit
 718:/usr/include/c++/10/bits/locale_facets.h ****       ctype(const mask* __table = 0, bool __del = false, size_t __refs = 0);
 719:/usr/include/c++/10/bits/locale_facets.h **** 
 720:/usr/include/c++/10/bits/locale_facets.h ****       /**
 721:/usr/include/c++/10/bits/locale_facets.h ****        *  @brief  Constructor performs static initialization.
 722:/usr/include/c++/10/bits/locale_facets.h ****        *
 723:/usr/include/c++/10/bits/locale_facets.h ****        *  This constructor is used to construct the initial C locale facet.
 724:/usr/include/c++/10/bits/locale_facets.h ****        *
 725:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __cloc  Handle to C locale data.
 726:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __table If non-zero, table is used as the per-char mask.
 727:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __del   If true, passes ownership of table to this facet.
 728:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __refs  Passed to the base facet class.
 729:/usr/include/c++/10/bits/locale_facets.h ****       */
 730:/usr/include/c++/10/bits/locale_facets.h ****       explicit
 731:/usr/include/c++/10/bits/locale_facets.h ****       ctype(__c_locale __cloc, const mask* __table = 0, bool __del = false,
 732:/usr/include/c++/10/bits/locale_facets.h **** 	    size_t __refs = 0);
 733:/usr/include/c++/10/bits/locale_facets.h **** 
 734:/usr/include/c++/10/bits/locale_facets.h ****       /**
 735:/usr/include/c++/10/bits/locale_facets.h ****        *  @brief  Test char classification.
 736:/usr/include/c++/10/bits/locale_facets.h ****        *
 737:/usr/include/c++/10/bits/locale_facets.h ****        *  This function compares the mask table[c] to @a __m.
 738:/usr/include/c++/10/bits/locale_facets.h ****        *
 739:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __c  The char to compare the mask of.
 740:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 741:/usr/include/c++/10/bits/locale_facets.h ****        *  @return  True if __m & table[__c] is true, false otherwise.
 742:/usr/include/c++/10/bits/locale_facets.h ****       */
 743:/usr/include/c++/10/bits/locale_facets.h ****       inline bool
 744:/usr/include/c++/10/bits/locale_facets.h ****       is(mask __m, char __c) const;
 745:/usr/include/c++/10/bits/locale_facets.h **** 
 746:/usr/include/c++/10/bits/locale_facets.h ****       /**
 747:/usr/include/c++/10/bits/locale_facets.h ****        *  @brief  Return a mask array.
 748:/usr/include/c++/10/bits/locale_facets.h ****        *
 749:/usr/include/c++/10/bits/locale_facets.h ****        *  This function finds the mask for each char in the range [lo, hi) and
 750:/usr/include/c++/10/bits/locale_facets.h ****        *  successively writes it to vec.  vec must have as many elements as
 751:/usr/include/c++/10/bits/locale_facets.h ****        *  the char array.
 752:/usr/include/c++/10/bits/locale_facets.h ****        *
 753:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 754:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 755:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __vec  Pointer to an array of mask storage.
AARCH64 GAS  obj/extInstr.s 			page 36


 756:/usr/include/c++/10/bits/locale_facets.h ****        *  @return  @a __hi.
 757:/usr/include/c++/10/bits/locale_facets.h ****       */
 758:/usr/include/c++/10/bits/locale_facets.h ****       inline const char*
 759:/usr/include/c++/10/bits/locale_facets.h ****       is(const char* __lo, const char* __hi, mask* __vec) const;
 760:/usr/include/c++/10/bits/locale_facets.h **** 
 761:/usr/include/c++/10/bits/locale_facets.h ****       /**
 762:/usr/include/c++/10/bits/locale_facets.h ****        *  @brief  Find char matching a mask
 763:/usr/include/c++/10/bits/locale_facets.h ****        *
 764:/usr/include/c++/10/bits/locale_facets.h ****        *  This function searches for and returns the first char in [lo,hi) for
 765:/usr/include/c++/10/bits/locale_facets.h ****        *  which is(m,char) is true.
 766:/usr/include/c++/10/bits/locale_facets.h ****        *
 767:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 768:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 769:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 770:/usr/include/c++/10/bits/locale_facets.h ****        *  @return  Pointer to a matching char if found, else @a __hi.
 771:/usr/include/c++/10/bits/locale_facets.h ****       */
 772:/usr/include/c++/10/bits/locale_facets.h ****       inline const char*
 773:/usr/include/c++/10/bits/locale_facets.h ****       scan_is(mask __m, const char* __lo, const char* __hi) const;
 774:/usr/include/c++/10/bits/locale_facets.h **** 
 775:/usr/include/c++/10/bits/locale_facets.h ****       /**
 776:/usr/include/c++/10/bits/locale_facets.h ****        *  @brief  Find char not matching a mask
 777:/usr/include/c++/10/bits/locale_facets.h ****        *
 778:/usr/include/c++/10/bits/locale_facets.h ****        *  This function searches for and returns a pointer to the first char
 779:/usr/include/c++/10/bits/locale_facets.h ****        *  in [__lo,__hi) for which is(m,char) is false.
 780:/usr/include/c++/10/bits/locale_facets.h ****        *
 781:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 782:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 783:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 784:/usr/include/c++/10/bits/locale_facets.h ****        *  @return  Pointer to a non-matching char if found, else @a __hi.
 785:/usr/include/c++/10/bits/locale_facets.h ****       */
 786:/usr/include/c++/10/bits/locale_facets.h ****       inline const char*
 787:/usr/include/c++/10/bits/locale_facets.h ****       scan_not(mask __m, const char* __lo, const char* __hi) const;
 788:/usr/include/c++/10/bits/locale_facets.h **** 
 789:/usr/include/c++/10/bits/locale_facets.h ****       /**
 790:/usr/include/c++/10/bits/locale_facets.h ****        *  @brief  Convert to uppercase.
 791:/usr/include/c++/10/bits/locale_facets.h ****        *
 792:/usr/include/c++/10/bits/locale_facets.h ****        *  This function converts the char argument to uppercase if possible.
 793:/usr/include/c++/10/bits/locale_facets.h ****        *  If not possible (for example, '2'), returns the argument.
 794:/usr/include/c++/10/bits/locale_facets.h ****        *
 795:/usr/include/c++/10/bits/locale_facets.h ****        *  toupper() acts as if it returns ctype<char>::do_toupper(c).
 796:/usr/include/c++/10/bits/locale_facets.h ****        *  do_toupper() must always return the same result for the same input.
 797:/usr/include/c++/10/bits/locale_facets.h ****        *
 798:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __c  The char to convert.
 799:/usr/include/c++/10/bits/locale_facets.h ****        *  @return  The uppercase char if convertible, else @a __c.
 800:/usr/include/c++/10/bits/locale_facets.h ****       */
 801:/usr/include/c++/10/bits/locale_facets.h ****       char_type
 802:/usr/include/c++/10/bits/locale_facets.h ****       toupper(char_type __c) const
 803:/usr/include/c++/10/bits/locale_facets.h ****       { return this->do_toupper(__c); }
 804:/usr/include/c++/10/bits/locale_facets.h **** 
 805:/usr/include/c++/10/bits/locale_facets.h ****       /**
 806:/usr/include/c++/10/bits/locale_facets.h ****        *  @brief  Convert array to uppercase.
 807:/usr/include/c++/10/bits/locale_facets.h ****        *
 808:/usr/include/c++/10/bits/locale_facets.h ****        *  This function converts each char in the range [__lo,__hi) to uppercase
 809:/usr/include/c++/10/bits/locale_facets.h ****        *  if possible.  Other chars remain untouched.
 810:/usr/include/c++/10/bits/locale_facets.h ****        *
 811:/usr/include/c++/10/bits/locale_facets.h ****        *  toupper() acts as if it returns ctype<char>:: do_toupper(__lo, __hi).
 812:/usr/include/c++/10/bits/locale_facets.h ****        *  do_toupper() must always return the same result for the same input.
AARCH64 GAS  obj/extInstr.s 			page 37


 813:/usr/include/c++/10/bits/locale_facets.h ****        *
 814:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __lo  Pointer to first char in range.
 815:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 816:/usr/include/c++/10/bits/locale_facets.h ****        *  @return  @a __hi.
 817:/usr/include/c++/10/bits/locale_facets.h ****       */
 818:/usr/include/c++/10/bits/locale_facets.h ****       const char_type*
 819:/usr/include/c++/10/bits/locale_facets.h ****       toupper(char_type *__lo, const char_type* __hi) const
 820:/usr/include/c++/10/bits/locale_facets.h ****       { return this->do_toupper(__lo, __hi); }
 821:/usr/include/c++/10/bits/locale_facets.h **** 
 822:/usr/include/c++/10/bits/locale_facets.h ****       /**
 823:/usr/include/c++/10/bits/locale_facets.h ****        *  @brief  Convert to lowercase.
 824:/usr/include/c++/10/bits/locale_facets.h ****        *
 825:/usr/include/c++/10/bits/locale_facets.h ****        *  This function converts the char argument to lowercase if possible.
 826:/usr/include/c++/10/bits/locale_facets.h ****        *  If not possible (for example, '2'), returns the argument.
 827:/usr/include/c++/10/bits/locale_facets.h ****        *
 828:/usr/include/c++/10/bits/locale_facets.h ****        *  tolower() acts as if it returns ctype<char>::do_tolower(__c).
 829:/usr/include/c++/10/bits/locale_facets.h ****        *  do_tolower() must always return the same result for the same input.
 830:/usr/include/c++/10/bits/locale_facets.h ****        *
 831:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __c  The char to convert.
 832:/usr/include/c++/10/bits/locale_facets.h ****        *  @return  The lowercase char if convertible, else @a __c.
 833:/usr/include/c++/10/bits/locale_facets.h ****       */
 834:/usr/include/c++/10/bits/locale_facets.h ****       char_type
 835:/usr/include/c++/10/bits/locale_facets.h ****       tolower(char_type __c) const
 836:/usr/include/c++/10/bits/locale_facets.h ****       { return this->do_tolower(__c); }
 837:/usr/include/c++/10/bits/locale_facets.h **** 
 838:/usr/include/c++/10/bits/locale_facets.h ****       /**
 839:/usr/include/c++/10/bits/locale_facets.h ****        *  @brief  Convert array to lowercase.
 840:/usr/include/c++/10/bits/locale_facets.h ****        *
 841:/usr/include/c++/10/bits/locale_facets.h ****        *  This function converts each char in the range [lo,hi) to lowercase
 842:/usr/include/c++/10/bits/locale_facets.h ****        *  if possible.  Other chars remain untouched.
 843:/usr/include/c++/10/bits/locale_facets.h ****        *
 844:/usr/include/c++/10/bits/locale_facets.h ****        *  tolower() acts as if it returns ctype<char>:: do_tolower(__lo, __hi).
 845:/usr/include/c++/10/bits/locale_facets.h ****        *  do_tolower() must always return the same result for the same input.
 846:/usr/include/c++/10/bits/locale_facets.h ****        *
 847:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __lo  Pointer to first char in range.
 848:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 849:/usr/include/c++/10/bits/locale_facets.h ****        *  @return  @a __hi.
 850:/usr/include/c++/10/bits/locale_facets.h ****       */
 851:/usr/include/c++/10/bits/locale_facets.h ****       const char_type*
 852:/usr/include/c++/10/bits/locale_facets.h ****       tolower(char_type* __lo, const char_type* __hi) const
 853:/usr/include/c++/10/bits/locale_facets.h ****       { return this->do_tolower(__lo, __hi); }
 854:/usr/include/c++/10/bits/locale_facets.h **** 
 855:/usr/include/c++/10/bits/locale_facets.h ****       /**
 856:/usr/include/c++/10/bits/locale_facets.h ****        *  @brief  Widen char
 857:/usr/include/c++/10/bits/locale_facets.h ****        *
 858:/usr/include/c++/10/bits/locale_facets.h ****        *  This function converts the char to char_type using the simplest
 859:/usr/include/c++/10/bits/locale_facets.h ****        *  reasonable transformation.  For an underived ctype<char> facet, the
 860:/usr/include/c++/10/bits/locale_facets.h ****        *  argument will be returned unchanged.
 861:/usr/include/c++/10/bits/locale_facets.h ****        *
 862:/usr/include/c++/10/bits/locale_facets.h ****        *  This function works as if it returns ctype<char>::do_widen(c).
 863:/usr/include/c++/10/bits/locale_facets.h ****        *  do_widen() must always return the same result for the same input.
 864:/usr/include/c++/10/bits/locale_facets.h ****        *
 865:/usr/include/c++/10/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 866:/usr/include/c++/10/bits/locale_facets.h ****        *  codecvt for that.
 867:/usr/include/c++/10/bits/locale_facets.h ****        *
 868:/usr/include/c++/10/bits/locale_facets.h ****        *  @param __c  The char to convert.
 869:/usr/include/c++/10/bits/locale_facets.h ****        *  @return  The converted character.
AARCH64 GAS  obj/extInstr.s 			page 38


 870:/usr/include/c++/10/bits/locale_facets.h ****       */
 871:/usr/include/c++/10/bits/locale_facets.h ****       char_type
 872:/usr/include/c++/10/bits/locale_facets.h ****       widen(char __c) const
  50              		.loc 3 872 7 is_stmt 1 view .LVU9
  51              	.LBB610:
 873:/usr/include/c++/10/bits/locale_facets.h ****       {
 874:/usr/include/c++/10/bits/locale_facets.h **** 	if (_M_widen_ok)
  52              		.loc 3 874 2 view .LVU10
  53 0024 80E24039 		ldrb	w0, [x20, 56]
  54              	.LVL4:
  55              		.loc 3 874 2 is_stmt 0 view .LVU11
  56 0028 E0000034 		cbz	w0, .L3
 875:/usr/include/c++/10/bits/locale_facets.h **** 	  return _M_widen[static_cast<unsigned char>(__c)];
  57              		.loc 3 875 4 is_stmt 1 view .LVU12
  58              		.loc 3 875 51 is_stmt 0 view .LVU13
  59 002c 810E4139 		ldrb	w1, [x20, 67]
  60              	.LVL5:
  61              	.L4:
  62              		.loc 3 875 51 view .LVU14
  63              	.LBE610:
  64              	.LBE609:
  65              	.LBE605:
  66              		.loc 1 682 19 view .LVU15
  67 0030 E00313AA 		mov	x0, x19
  68 0034 00000094 		bl	_ZNSo3putEc
  69              	.LVL6:
  70              	.LBB616:
  71              	.LBI616:
 683:/usr/include/c++/10/ostream **** 
 684:/usr/include/c++/10/ostream ****   /**
 685:/usr/include/c++/10/ostream ****    *  @brief  Write a null character into the output sequence.
 686:/usr/include/c++/10/ostream ****    *
 687:/usr/include/c++/10/ostream ****    *  <em>Null character</em> is @c CharT() by definition.  For CharT
 688:/usr/include/c++/10/ostream ****    *  of @c char, this correctly writes the ASCII @c NUL character
 689:/usr/include/c++/10/ostream ****    *  string terminator.
 690:/usr/include/c++/10/ostream ****   */
 691:/usr/include/c++/10/ostream ****   template<typename _CharT, typename _Traits>
 692:/usr/include/c++/10/ostream ****     inline basic_ostream<_CharT, _Traits>&
 693:/usr/include/c++/10/ostream ****     ends(basic_ostream<_CharT, _Traits>& __os)
 694:/usr/include/c++/10/ostream ****     { return __os.put(_CharT()); }
 695:/usr/include/c++/10/ostream **** 
 696:/usr/include/c++/10/ostream ****   /**
 697:/usr/include/c++/10/ostream ****    *  @brief  Flushes the output stream.
 698:/usr/include/c++/10/ostream ****    *
 699:/usr/include/c++/10/ostream ****    *  This manipulator simply calls the stream's @c flush() member function.
 700:/usr/include/c++/10/ostream ****   */
 701:/usr/include/c++/10/ostream ****   template<typename _CharT, typename _Traits>
 702:/usr/include/c++/10/ostream ****     inline basic_ostream<_CharT, _Traits>&
 703:/usr/include/c++/10/ostream ****     flush(basic_ostream<_CharT, _Traits>& __os)
  72              		.loc 1 703 5 is_stmt 1 view .LVU16
  73              	.LBE616:
 682:/usr/include/c++/10/ostream **** 
  74              		.loc 1 682 49 is_stmt 0 view .LVU17
  75 0038 F35341A9 		ldp	x19, x20, [sp, 16]
  76              	.LVL7:
 682:/usr/include/c++/10/ostream **** 
  77              		.loc 1 682 49 view .LVU18
AARCH64 GAS  obj/extInstr.s 			page 39


  78 003c FD7BC2A8 		ldp	x29, x30, [sp], 32
  79              		.cfi_remember_state
  80              		.cfi_restore 30
  81              		.cfi_restore 29
  82              		.cfi_restore 19
  83              		.cfi_restore 20
  84              		.cfi_def_cfa_offset 0
  85              	.LBB618:
  86              	.LBB617:
 704:/usr/include/c++/10/ostream ****     { return __os.flush(); }
  87              		.loc 1 704 24 view .LVU19
  88 0040 00000014 		b	_ZNSo5flushEv
  89              	.LVL8:
  90              	.L3:
  91              		.cfi_restore_state
  92              		.loc 1 704 24 view .LVU20
  93              	.LBE617:
  94              	.LBE618:
  95              	.LBB619:
  96              	.LBB614:
  97              	.LBB613:
  98              	.LBB611:
  99              	.LBI611:
 872:/usr/include/c++/10/bits/locale_facets.h ****       {
 100              		.loc 3 872 7 is_stmt 1 view .LVU21
 101              	.LBB612:
 876:/usr/include/c++/10/bits/locale_facets.h **** 	this->_M_widen_init();
 102              		.loc 3 876 2 view .LVU22
 103              		.loc 3 876 21 is_stmt 0 view .LVU23
 104 0044 E00314AA 		mov	x0, x20
 105 0048 00000094 		bl	_ZNKSt5ctypeIcE13_M_widen_initEv
 106              	.LVL9:
 877:/usr/include/c++/10/bits/locale_facets.h **** 	return this->do_widen(__c);
 107              		.loc 3 877 2 is_stmt 1 view .LVU24
 108              		.loc 3 877 27 is_stmt 0 view .LVU25
 109 004c 820240F9 		ldr	x2, [x20]
 110              		.loc 3 877 23 view .LVU26
 111 0050 41018052 		mov	w1, 10
 112 0054 E00314AA 		mov	x0, x20
 113 0058 421840F9 		ldr	x2, [x2, 48]
 114 005c 40003FD6 		blr	x2
 115              	.LVL10:
 116 0060 011C0012 		and	w1, w0, 255
 117              	.LVL11:
 118              		.loc 3 877 23 view .LVU27
 119 0064 F3FFFF17 		b	.L4
 120              	.LVL12:
 121              	.L7:
 122              		.loc 3 877 23 view .LVU28
 123              	.LBE612:
 124              	.LBE611:
 125              	.LBE613:
 126              	.LBE614:
 127              	.LBB615:
 128              	.LBB608:
  50:/usr/include/c++/10/bits/basic_ios.h ****       return *__f;
 129              		.loc 2 50 18 view .LVU29
AARCH64 GAS  obj/extInstr.s 			page 40


 130 0068 00000094 		bl	_ZSt16__throw_bad_castv
 131              	.LVL13:
  50:/usr/include/c++/10/bits/basic_ios.h ****       return *__f;
 132              		.loc 2 50 18 view .LVU30
 133              	.LBE608:
 134              	.LBE615:
 135              	.LBE619:
 136              		.cfi_endproc
 137              	.LFE2823:
 138              		.size	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0, .-_ZSt4endlIcSt11char_tra
 139              		.section	.rodata.str1.8,"aMS",@progbits,1
 140              		.align	3
 141              	.LC0:
 142 0000 45585420 		.string	"EXT instruction result:"
 142      696E7374 
 142      72756374 
 142      696F6E20 
 142      72657375 
 143              		.align	3
 144              	.LC1:
 145 0018 785B305D 		.string	"x[0]: "
 145      3A2000
 146 001f 00       		.align	3
 147              	.LC2:
 148 0020 2020207C 		.string	"   |"
 148      00
 149 0025 000000   		.align	3
 150              	.LC3:
 151 0028 54424C20 		.string	"TBL instruction result:"
 151      696E7374 
 151      72756374 
 151      696F6E20 
 151      72657375 
 152              		.align	3
 153              	.LC4:
 154 0040 793A2000 		.string	"y: "
 155              		.section	.text.startup,"ax",@progbits
 156              		.align	2
 157              		.p2align 4,,11
 158              		.global	main
 159              		.type	main, %function
 160              	main:
 161              	.LFB2202:
 162              		.file 4 "extInstr.cpp"
   1:extInstr.cpp  **** #include<iostream>
   2:extInstr.cpp  **** #include<string>
   3:extInstr.cpp  **** #include "Vec128.h"
   4:extInstr.cpp  **** 
   5:extInstr.cpp  **** using namespace std;
   6:extInstr.cpp  **** extern "C" void extInstr_(Vec128* x,Vec128& a,Vec128& b);
   7:extInstr.cpp  **** extern "C" void tblInstr_(Vec128* x,Vec128& a,Vec128& b,Vec128& indx);
   8:extInstr.cpp  **** Vec128 a,b,indx,x,y,a2,b2;
   9:extInstr.cpp  **** int main(){
 163              		.loc 4 9 11 is_stmt 1 view -0
 164              		.cfi_startproc
 165              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 166              		.cfi_lsda 0x1b,.LLSDA2202
AARCH64 GAS  obj/extInstr.s 			page 41


  10:extInstr.cpp  **** 	
  11:extInstr.cpp  **** 	a.m_U16[0] = 0; //b.m_U16[7] = 0;
 167              		.loc 4 11 2 view .LVU32
  12:extInstr.cpp  **** 	a.m_U16[1] = 1; //b.m_U16[6] = 1;
 168              		.loc 4 12 2 view .LVU33
  13:extInstr.cpp  **** 	a.m_U16[2] = 2; //b.m_U16[5] = 2;
 169              		.loc 4 13 2 view .LVU34
  14:extInstr.cpp  **** 	a.m_U16[3] = 3; //b.m_U16[4] = 3;
 170              		.loc 4 14 2 view .LVU35
  15:extInstr.cpp  **** 	a.m_U16[4] = 4; //b.m_U16[3] = 4;
 171              		.loc 4 15 2 view .LVU36
  16:extInstr.cpp  **** 	a.m_U16[5] = 5; //b.m_U16[2] = 5;
 172              		.loc 4 16 2 view .LVU37
  17:extInstr.cpp  **** 	a.m_U16[6] = 6; //b.m_U16[1] = 6;
 173              		.loc 4 17 2 view .LVU38
  18:extInstr.cpp  **** 	a.m_U16[7] = 7; //b.m_U16[0] = 7;
 174              		.loc 4 18 2 view .LVU39
   9:extInstr.cpp  **** 	
 175              		.loc 4 9 11 is_stmt 0 view .LVU40
 176 0000 FF0308D1 		sub	sp, sp, #512
 177              		.cfi_def_cfa_offset 512
  11:extInstr.cpp  **** 	a.m_U16[1] = 1; //b.m_U16[6] = 1;
 178              		.loc 4 11 13 view .LVU41
 179 0004 00000090 		adrp	x0, .LC5
   9:extInstr.cpp  **** 	
 180              		.loc 4 9 11 view .LVU42
 181 0008 FD7B00A9 		stp	x29, x30, [sp]
 182              		.cfi_offset 29, -512
 183              		.cfi_offset 30, -504
 184 000c FD030091 		mov	x29, sp
  11:extInstr.cpp  **** 	a.m_U16[1] = 1; //b.m_U16[6] = 1;
 185              		.loc 4 11 13 view .LVU43
 186 0010 0300C03D 		ldr	q3, [x0, #:lo12:.LC5]
  19:extInstr.cpp  **** 	
  20:extInstr.cpp  **** 	b.m_U16[7] = 15;
  21:extInstr.cpp  **** 	b.m_U16[6] = 14;
  22:extInstr.cpp  **** 	b.m_U16[5] = 13;
  23:extInstr.cpp  **** 	b.m_U16[4] = 12;
  24:extInstr.cpp  **** 	b.m_U16[3] = 11;
  25:extInstr.cpp  **** 	b.m_U16[2] = 10;
  26:extInstr.cpp  **** 	b.m_U16[1] = 9;
  27:extInstr.cpp  **** 	b.m_U16[0] = 8;
 187              		.loc 4 27 13 view .LVU44
 188 0014 00000090 		adrp	x0, .LC6
   9:extInstr.cpp  **** 	
 189              		.loc 4 9 11 view .LVU45
 190 0018 F55B02A9 		stp	x21, x22, [sp, 32]
 191              		.cfi_offset 21, -480
 192              		.cfi_offset 22, -472
  11:extInstr.cpp  **** 	a.m_U16[1] = 1; //b.m_U16[6] = 1;
 193              		.loc 4 11 13 view .LVU46
 194 001c 15000090 		adrp	x21, .LANCHOR0
 195 0020 B6020091 		add	x22, x21, :lo12:.LANCHOR0
 196              		.loc 4 27 13 view .LVU47
 197 0024 0200C03D 		ldr	q2, [x0, #:lo12:.LC6]
  28:extInstr.cpp  **** 	
  29:extInstr.cpp  **** 	indx.m_U8[0] = 0*2;indx.m_U8[8]  = 16;
AARCH64 GAS  obj/extInstr.s 			page 42


  30:extInstr.cpp  ****     indx.m_U8[1] = 1*2;indx.m_U8[9]  = 18;
  31:extInstr.cpp  ****     indx.m_U8[2] = 2*2;indx.m_U8[10] = 20;
  32:extInstr.cpp  ****     indx.m_U8[3] = 3*2;indx.m_U8[11] = 22;
  33:extInstr.cpp  ****     indx.m_U8[4] = 4*2;indx.m_U8[12] = 24;
  34:extInstr.cpp  ****     indx.m_U8[5] = 5*2;indx.m_U8[13] = 26;
  35:extInstr.cpp  **** 	indx.m_U8[6] = 6*2;indx.m_U8[14] = 28;
  36:extInstr.cpp  **** 	indx.m_U8[7] = 7*2;indx.m_U8[15] = 30;
  37:extInstr.cpp  **** 	
  38:extInstr.cpp  **** 	a2.m_U8[0] = 0*2;a2.m_U8[8]  = 8*2;
  39:extInstr.cpp  ****     a2.m_U8[1] = 1*2;a2.m_U8[9]  = 9*2;
  40:extInstr.cpp  ****     a2.m_U8[2] = 2*2;a2.m_U8[10] = 10*2;
  41:extInstr.cpp  ****     a2.m_U8[3] = 3*2;a2.m_U8[11] = 11*2;
  42:extInstr.cpp  ****     a2.m_U8[4] = 4*2;a2.m_U8[12] = 12*2;
  43:extInstr.cpp  ****     a2.m_U8[5] = 5*2;a2.m_U8[13] = 13*2;
  44:extInstr.cpp  **** 	a2.m_U8[6] = 6*2;a2.m_U8[14] = 14*2;
  45:extInstr.cpp  **** 	a2.m_U8[7] = 7*2;a2.m_U8[15] = 15*2;
  46:extInstr.cpp  **** 
  47:extInstr.cpp  **** 	b2.m_U8[0] = 0*3;b2.m_U8[8]  =  8*3;
 198              		.loc 4 47 13 view .LVU48
 199 0028 00000090 		adrp	x0, .LC7
   9:extInstr.cpp  **** 	
 200              		.loc 4 9 11 view .LVU49
 201 002c F35301A9 		stp	x19, x20, [sp, 16]
  48:extInstr.cpp  ****     b2.m_U8[1] = 1*3;b2.m_U8[9]  =  9*3;
  49:extInstr.cpp  ****     b2.m_U8[2] = 2*3;b2.m_U8[10] = 10*3;
  50:extInstr.cpp  ****     b2.m_U8[3] = 3*3;b2.m_U8[11] = 11*3;
  51:extInstr.cpp  ****     b2.m_U8[4] = 4*3;b2.m_U8[12] = 12*3;
  52:extInstr.cpp  ****     b2.m_U8[5] = 5*3;b2.m_U8[13] = 13*3;
  53:extInstr.cpp  **** 	b2.m_U8[6] = 6*3;b2.m_U8[14] = 14*3;
  54:extInstr.cpp  **** 	b2.m_U8[7] = 7*3;b2.m_U8[15] = 15*3;	
  55:extInstr.cpp  **** 	
  56:extInstr.cpp  **** 	extInstr_(&x,a,b);
 202              		.loc 4 56 11 view .LVU50
 203 0030 C2420091 		add	x2, x22, 16
 204 0034 E10316AA 		mov	x1, x22
  47:extInstr.cpp  ****     b2.m_U8[1] = 1*3;b2.m_U8[9]  =  9*3;
 205              		.loc 4 47 13 view .LVU51
 206 0038 0100C03D 		ldr	q1, [x0, #:lo12:.LC7]
  29:extInstr.cpp  ****     indx.m_U8[1] = 1*2;indx.m_U8[9]  = 18;
 207              		.loc 4 29 15 view .LVU52
 208 003c 00000090 		adrp	x0, .LC8
   9:extInstr.cpp  **** 	
 209              		.loc 4 9 11 view .LVU53
 210 0040 F76303A9 		stp	x23, x24, [sp, 48]
 211              		.cfi_offset 19, -496
 212              		.cfi_offset 20, -488
 213              		.cfi_offset 23, -464
 214              		.cfi_offset 24, -456
 215              	.LBB748:
 216              	.LBB749:
 611:/usr/include/c++/10/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 217              		.loc 1 611 18 view .LVU54
 218 0044 17000090 		adrp	x23, :got:_ZSt4cout
 219              	.LBE749:
 220              	.LBE748:
 221              	.LBB751:
 222              	.LBB752:
AARCH64 GAS  obj/extInstr.s 			page 43


 223              	.LBB753:
 224              	.LBB754:
 225              		.file 5 "../../Include/Vec128.h"
   1:../../Include/Vec128.h **** //------------------------------------------------
   2:../../Include/Vec128.h **** //               Vec128.h
   3:../../Include/Vec128.h **** //------------------------------------------------
   4:../../Include/Vec128.h **** 
   5:../../Include/Vec128.h **** #pragma once
   6:../../Include/Vec128.h **** #include <string>
   7:../../Include/Vec128.h **** #include <cstdint>
   8:../../Include/Vec128.h **** #include <sstream>
   9:../../Include/Vec128.h **** #include <iomanip>
  10:../../Include/Vec128.h **** 
  11:../../Include/Vec128.h **** struct alignas(16) Vec128
  12:../../Include/Vec128.h **** {
  13:../../Include/Vec128.h **** public:
  14:../../Include/Vec128.h ****     union
  15:../../Include/Vec128.h ****     {
  16:../../Include/Vec128.h ****         int8_t m_I8[16];
  17:../../Include/Vec128.h ****         int16_t m_I16[8];
  18:../../Include/Vec128.h ****         int32_t m_I32[4];
  19:../../Include/Vec128.h ****         int64_t m_I64[2];
  20:../../Include/Vec128.h ****         uint8_t m_U8[16];
  21:../../Include/Vec128.h ****         uint16_t m_U16[8];
  22:../../Include/Vec128.h ****         uint32_t m_U32[4];
  23:../../Include/Vec128.h ****         uint64_t m_U64[2];
  24:../../Include/Vec128.h ****         float m_F32[4];
  25:../../Include/Vec128.h ****         double m_F64[2];
  26:../../Include/Vec128.h ****     };
  27:../../Include/Vec128.h **** 
  28:../../Include/Vec128.h **** private:
  29:../../Include/Vec128.h ****     template <typename T> std::string ToStringInt(const T* x, int n, int w)
  30:../../Include/Vec128.h ****     {
  31:../../Include/Vec128.h ****         std::ostringstream oss;
  32:../../Include/Vec128.h **** 
  33:../../Include/Vec128.h ****         for (int i = 0; i < n; i++)
  34:../../Include/Vec128.h ****         {
  35:../../Include/Vec128.h ****             oss << std::setw(w) << (int64_t)x[i];
  36:../../Include/Vec128.h **** 
  37:../../Include/Vec128.h ****             if (i + 1 == n / 2)
  38:../../Include/Vec128.h ****                 oss << "   |";
  39:../../Include/Vec128.h ****         }
  40:../../Include/Vec128.h **** 
  41:../../Include/Vec128.h ****         return oss.str();
  42:../../Include/Vec128.h ****     }
  43:../../Include/Vec128.h **** 
  44:../../Include/Vec128.h ****     template <typename T> std::string ToStringUint(const T* x, int n, int w)
  45:../../Include/Vec128.h ****     {
  46:../../Include/Vec128.h ****         std::ostringstream oss;
  47:../../Include/Vec128.h **** 
  48:../../Include/Vec128.h ****         for (int i = 0; i < n; i++)
 226              		.loc 5 48 18 view .LVU55
 227 0048 14008052 		mov	w20, 0
 228              	.LBE754:
 229              	.LBE753:
 230              	.LBE752:
 231              	.LBE751:
AARCH64 GAS  obj/extInstr.s 			page 44


  29:extInstr.cpp  ****     indx.m_U8[1] = 1*2;indx.m_U8[9]  = 18;
 232              		.loc 4 29 15 view .LVU56
 233 004c 0000C03D 		ldr	q0, [x0, #:lo12:.LC8]
   9:extInstr.cpp  **** 	
 234              		.loc 4 9 11 view .LVU57
 235 0050 F96B04A9 		stp	x25, x26, [sp, 64]
 236              		.loc 4 56 11 view .LVU58
 237 0054 C0420191 		add	x0, x22, 80
   9:extInstr.cpp  **** 	
 238              		.loc 4 9 11 view .LVU59
 239 0058 FB2B00F9 		str	x27, [sp, 80]
 240              		.cfi_offset 25, -448
 241              		.cfi_offset 26, -440
 242              		.cfi_offset 27, -432
 243              	.LBB809:
 244              	.LBB801:
 245              	.LBB793:
 246              	.LBB784:
 247              	.LBB755:
 248              	.LBB756:
 249              	.LBB757:
 250              	.LBB758:
 251              		.file 6 "/usr/include/c++/10/bits/ios_base.h"
   1:/usr/include/c++/10/bits/ios_base.h **** // Iostreams base classes -*- C++ -*-
   2:/usr/include/c++/10/bits/ios_base.h **** 
   3:/usr/include/c++/10/bits/ios_base.h **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:/usr/include/c++/10/bits/ios_base.h **** //
   5:/usr/include/c++/10/bits/ios_base.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/10/bits/ios_base.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/10/bits/ios_base.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/10/bits/ios_base.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/10/bits/ios_base.h **** // any later version.
  10:/usr/include/c++/10/bits/ios_base.h **** 
  11:/usr/include/c++/10/bits/ios_base.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/10/bits/ios_base.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/10/bits/ios_base.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/10/bits/ios_base.h **** // GNU General Public License for more details.
  15:/usr/include/c++/10/bits/ios_base.h **** 
  16:/usr/include/c++/10/bits/ios_base.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/10/bits/ios_base.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/10/bits/ios_base.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/10/bits/ios_base.h **** 
  20:/usr/include/c++/10/bits/ios_base.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/10/bits/ios_base.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/10/bits/ios_base.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/10/bits/ios_base.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/10/bits/ios_base.h **** 
  25:/usr/include/c++/10/bits/ios_base.h **** /** @file bits/ios_base.h
  26:/usr/include/c++/10/bits/ios_base.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/10/bits/ios_base.h ****  *  Do not attempt to use it directly. @headername{ios}
  28:/usr/include/c++/10/bits/ios_base.h ****  */
  29:/usr/include/c++/10/bits/ios_base.h **** 
  30:/usr/include/c++/10/bits/ios_base.h **** //
  31:/usr/include/c++/10/bits/ios_base.h **** // ISO C++ 14882: 27.4  Iostreams base classes
  32:/usr/include/c++/10/bits/ios_base.h **** //
  33:/usr/include/c++/10/bits/ios_base.h **** 
  34:/usr/include/c++/10/bits/ios_base.h **** #ifndef _IOS_BASE_H
AARCH64 GAS  obj/extInstr.s 			page 45


  35:/usr/include/c++/10/bits/ios_base.h **** #define _IOS_BASE_H 1
  36:/usr/include/c++/10/bits/ios_base.h **** 
  37:/usr/include/c++/10/bits/ios_base.h **** #pragma GCC system_header
  38:/usr/include/c++/10/bits/ios_base.h **** 
  39:/usr/include/c++/10/bits/ios_base.h **** #include <ext/atomicity.h>
  40:/usr/include/c++/10/bits/ios_base.h **** #include <bits/localefwd.h>
  41:/usr/include/c++/10/bits/ios_base.h **** #include <bits/locale_classes.h>
  42:/usr/include/c++/10/bits/ios_base.h **** 
  43:/usr/include/c++/10/bits/ios_base.h **** #if __cplusplus < 201103L
  44:/usr/include/c++/10/bits/ios_base.h **** # include <stdexcept>
  45:/usr/include/c++/10/bits/ios_base.h **** #else
  46:/usr/include/c++/10/bits/ios_base.h **** # include <system_error>
  47:/usr/include/c++/10/bits/ios_base.h **** #endif
  48:/usr/include/c++/10/bits/ios_base.h **** 
  49:/usr/include/c++/10/bits/ios_base.h **** namespace std _GLIBCXX_VISIBILITY(default)
  50:/usr/include/c++/10/bits/ios_base.h **** {
  51:/usr/include/c++/10/bits/ios_base.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  52:/usr/include/c++/10/bits/ios_base.h **** 
  53:/usr/include/c++/10/bits/ios_base.h ****   // The following definitions of bitmask types are enums, not ints,
  54:/usr/include/c++/10/bits/ios_base.h ****   // as permitted (but not required) in the standard, in order to provide
  55:/usr/include/c++/10/bits/ios_base.h ****   // better type safety in iostream calls.  A side effect is that in C++98
  56:/usr/include/c++/10/bits/ios_base.h ****   // expressions involving them are not compile-time constants.
  57:/usr/include/c++/10/bits/ios_base.h ****   enum _Ios_Fmtflags 
  58:/usr/include/c++/10/bits/ios_base.h ****     { 
  59:/usr/include/c++/10/bits/ios_base.h ****       _S_boolalpha 	= 1L << 0,
  60:/usr/include/c++/10/bits/ios_base.h ****       _S_dec 		= 1L << 1,
  61:/usr/include/c++/10/bits/ios_base.h ****       _S_fixed 		= 1L << 2,
  62:/usr/include/c++/10/bits/ios_base.h ****       _S_hex 		= 1L << 3,
  63:/usr/include/c++/10/bits/ios_base.h ****       _S_internal 	= 1L << 4,
  64:/usr/include/c++/10/bits/ios_base.h ****       _S_left 		= 1L << 5,
  65:/usr/include/c++/10/bits/ios_base.h ****       _S_oct 		= 1L << 6,
  66:/usr/include/c++/10/bits/ios_base.h ****       _S_right 		= 1L << 7,
  67:/usr/include/c++/10/bits/ios_base.h ****       _S_scientific 	= 1L << 8,
  68:/usr/include/c++/10/bits/ios_base.h ****       _S_showbase 	= 1L << 9,
  69:/usr/include/c++/10/bits/ios_base.h ****       _S_showpoint 	= 1L << 10,
  70:/usr/include/c++/10/bits/ios_base.h ****       _S_showpos 	= 1L << 11,
  71:/usr/include/c++/10/bits/ios_base.h ****       _S_skipws 	= 1L << 12,
  72:/usr/include/c++/10/bits/ios_base.h ****       _S_unitbuf 	= 1L << 13,
  73:/usr/include/c++/10/bits/ios_base.h ****       _S_uppercase 	= 1L << 14,
  74:/usr/include/c++/10/bits/ios_base.h ****       _S_adjustfield 	= _S_left | _S_right | _S_internal,
  75:/usr/include/c++/10/bits/ios_base.h ****       _S_basefield 	= _S_dec | _S_oct | _S_hex,
  76:/usr/include/c++/10/bits/ios_base.h ****       _S_floatfield 	= _S_scientific | _S_fixed,
  77:/usr/include/c++/10/bits/ios_base.h ****       _S_ios_fmtflags_end = 1L << 16,
  78:/usr/include/c++/10/bits/ios_base.h ****       _S_ios_fmtflags_max = __INT_MAX__,
  79:/usr/include/c++/10/bits/ios_base.h ****       _S_ios_fmtflags_min = ~__INT_MAX__
  80:/usr/include/c++/10/bits/ios_base.h ****     };
  81:/usr/include/c++/10/bits/ios_base.h **** 
  82:/usr/include/c++/10/bits/ios_base.h ****   inline _GLIBCXX_CONSTEXPR _Ios_Fmtflags
  83:/usr/include/c++/10/bits/ios_base.h ****   operator&(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
  84:/usr/include/c++/10/bits/ios_base.h ****   { return _Ios_Fmtflags(static_cast<int>(__a) & static_cast<int>(__b)); }
  85:/usr/include/c++/10/bits/ios_base.h **** 
  86:/usr/include/c++/10/bits/ios_base.h ****   inline _GLIBCXX_CONSTEXPR _Ios_Fmtflags
  87:/usr/include/c++/10/bits/ios_base.h ****   operator|(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
  88:/usr/include/c++/10/bits/ios_base.h ****   { return _Ios_Fmtflags(static_cast<int>(__a) | static_cast<int>(__b)); }
  89:/usr/include/c++/10/bits/ios_base.h **** 
  90:/usr/include/c++/10/bits/ios_base.h ****   inline _GLIBCXX_CONSTEXPR _Ios_Fmtflags
  91:/usr/include/c++/10/bits/ios_base.h ****   operator^(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
AARCH64 GAS  obj/extInstr.s 			page 46


  92:/usr/include/c++/10/bits/ios_base.h ****   { return _Ios_Fmtflags(static_cast<int>(__a) ^ static_cast<int>(__b)); }
  93:/usr/include/c++/10/bits/ios_base.h **** 
  94:/usr/include/c++/10/bits/ios_base.h ****   inline _GLIBCXX_CONSTEXPR _Ios_Fmtflags
  95:/usr/include/c++/10/bits/ios_base.h ****   operator~(_Ios_Fmtflags __a)
  96:/usr/include/c++/10/bits/ios_base.h ****   { return _Ios_Fmtflags(~static_cast<int>(__a)); }
  97:/usr/include/c++/10/bits/ios_base.h **** 
  98:/usr/include/c++/10/bits/ios_base.h ****   inline const _Ios_Fmtflags&
  99:/usr/include/c++/10/bits/ios_base.h ****   operator|=(_Ios_Fmtflags& __a, _Ios_Fmtflags __b)
 100:/usr/include/c++/10/bits/ios_base.h ****   { return __a = __a | __b; }
 101:/usr/include/c++/10/bits/ios_base.h **** 
 102:/usr/include/c++/10/bits/ios_base.h ****   inline const _Ios_Fmtflags&
 103:/usr/include/c++/10/bits/ios_base.h ****   operator&=(_Ios_Fmtflags& __a, _Ios_Fmtflags __b)
 104:/usr/include/c++/10/bits/ios_base.h ****   { return __a = __a & __b; }
 105:/usr/include/c++/10/bits/ios_base.h **** 
 106:/usr/include/c++/10/bits/ios_base.h ****   inline const _Ios_Fmtflags&
 107:/usr/include/c++/10/bits/ios_base.h ****   operator^=(_Ios_Fmtflags& __a, _Ios_Fmtflags __b)
 108:/usr/include/c++/10/bits/ios_base.h ****   { return __a = __a ^ __b; }
 109:/usr/include/c++/10/bits/ios_base.h **** 
 110:/usr/include/c++/10/bits/ios_base.h **** 
 111:/usr/include/c++/10/bits/ios_base.h ****   enum _Ios_Openmode 
 112:/usr/include/c++/10/bits/ios_base.h ****     { 
 113:/usr/include/c++/10/bits/ios_base.h ****       _S_app 		= 1L << 0,
 114:/usr/include/c++/10/bits/ios_base.h ****       _S_ate 		= 1L << 1,
 115:/usr/include/c++/10/bits/ios_base.h ****       _S_bin 		= 1L << 2,
 116:/usr/include/c++/10/bits/ios_base.h ****       _S_in 		= 1L << 3,
 117:/usr/include/c++/10/bits/ios_base.h ****       _S_out 		= 1L << 4,
 118:/usr/include/c++/10/bits/ios_base.h ****       _S_trunc 		= 1L << 5,
 119:/usr/include/c++/10/bits/ios_base.h ****       _S_ios_openmode_end = 1L << 16,
 120:/usr/include/c++/10/bits/ios_base.h ****       _S_ios_openmode_max = __INT_MAX__,
 121:/usr/include/c++/10/bits/ios_base.h ****       _S_ios_openmode_min = ~__INT_MAX__
 122:/usr/include/c++/10/bits/ios_base.h ****     };
 123:/usr/include/c++/10/bits/ios_base.h **** 
 124:/usr/include/c++/10/bits/ios_base.h ****   inline _GLIBCXX_CONSTEXPR _Ios_Openmode
 125:/usr/include/c++/10/bits/ios_base.h ****   operator&(_Ios_Openmode __a, _Ios_Openmode __b)
 126:/usr/include/c++/10/bits/ios_base.h ****   { return _Ios_Openmode(static_cast<int>(__a) & static_cast<int>(__b)); }
 127:/usr/include/c++/10/bits/ios_base.h **** 
 128:/usr/include/c++/10/bits/ios_base.h ****   inline _GLIBCXX_CONSTEXPR _Ios_Openmode
 129:/usr/include/c++/10/bits/ios_base.h ****   operator|(_Ios_Openmode __a, _Ios_Openmode __b)
 130:/usr/include/c++/10/bits/ios_base.h ****   { return _Ios_Openmode(static_cast<int>(__a) | static_cast<int>(__b)); }
 131:/usr/include/c++/10/bits/ios_base.h **** 
 132:/usr/include/c++/10/bits/ios_base.h ****   inline _GLIBCXX_CONSTEXPR _Ios_Openmode
 133:/usr/include/c++/10/bits/ios_base.h ****   operator^(_Ios_Openmode __a, _Ios_Openmode __b)
 134:/usr/include/c++/10/bits/ios_base.h ****   { return _Ios_Openmode(static_cast<int>(__a) ^ static_cast<int>(__b)); }
 135:/usr/include/c++/10/bits/ios_base.h **** 
 136:/usr/include/c++/10/bits/ios_base.h ****   inline _GLIBCXX_CONSTEXPR _Ios_Openmode
 137:/usr/include/c++/10/bits/ios_base.h ****   operator~(_Ios_Openmode __a)
 138:/usr/include/c++/10/bits/ios_base.h ****   { return _Ios_Openmode(~static_cast<int>(__a)); }
 139:/usr/include/c++/10/bits/ios_base.h **** 
 140:/usr/include/c++/10/bits/ios_base.h ****   inline const _Ios_Openmode&
 141:/usr/include/c++/10/bits/ios_base.h ****   operator|=(_Ios_Openmode& __a, _Ios_Openmode __b)
 142:/usr/include/c++/10/bits/ios_base.h ****   { return __a = __a | __b; }
 143:/usr/include/c++/10/bits/ios_base.h **** 
 144:/usr/include/c++/10/bits/ios_base.h ****   inline const _Ios_Openmode&
 145:/usr/include/c++/10/bits/ios_base.h ****   operator&=(_Ios_Openmode& __a, _Ios_Openmode __b)
 146:/usr/include/c++/10/bits/ios_base.h ****   { return __a = __a & __b; }
 147:/usr/include/c++/10/bits/ios_base.h **** 
 148:/usr/include/c++/10/bits/ios_base.h ****   inline const _Ios_Openmode&
AARCH64 GAS  obj/extInstr.s 			page 47


 149:/usr/include/c++/10/bits/ios_base.h ****   operator^=(_Ios_Openmode& __a, _Ios_Openmode __b)
 150:/usr/include/c++/10/bits/ios_base.h ****   { return __a = __a ^ __b; }
 151:/usr/include/c++/10/bits/ios_base.h **** 
 152:/usr/include/c++/10/bits/ios_base.h **** 
 153:/usr/include/c++/10/bits/ios_base.h ****   enum _Ios_Iostate
 154:/usr/include/c++/10/bits/ios_base.h ****     { 
 155:/usr/include/c++/10/bits/ios_base.h ****       _S_goodbit 		= 0,
 156:/usr/include/c++/10/bits/ios_base.h ****       _S_badbit 		= 1L << 0,
 157:/usr/include/c++/10/bits/ios_base.h ****       _S_eofbit 		= 1L << 1,
 158:/usr/include/c++/10/bits/ios_base.h ****       _S_failbit		= 1L << 2,
 159:/usr/include/c++/10/bits/ios_base.h ****       _S_ios_iostate_end = 1L << 16,
 160:/usr/include/c++/10/bits/ios_base.h ****       _S_ios_iostate_max = __INT_MAX__,
 161:/usr/include/c++/10/bits/ios_base.h ****       _S_ios_iostate_min = ~__INT_MAX__
 162:/usr/include/c++/10/bits/ios_base.h ****     };
 163:/usr/include/c++/10/bits/ios_base.h **** 
 164:/usr/include/c++/10/bits/ios_base.h ****   inline _GLIBCXX_CONSTEXPR _Ios_Iostate
 165:/usr/include/c++/10/bits/ios_base.h ****   operator&(_Ios_Iostate __a, _Ios_Iostate __b)
 166:/usr/include/c++/10/bits/ios_base.h ****   { return _Ios_Iostate(static_cast<int>(__a) & static_cast<int>(__b)); }
 167:/usr/include/c++/10/bits/ios_base.h **** 
 168:/usr/include/c++/10/bits/ios_base.h ****   inline _GLIBCXX_CONSTEXPR _Ios_Iostate
 169:/usr/include/c++/10/bits/ios_base.h ****   operator|(_Ios_Iostate __a, _Ios_Iostate __b)
 170:/usr/include/c++/10/bits/ios_base.h ****   { return _Ios_Iostate(static_cast<int>(__a) | static_cast<int>(__b)); }
 171:/usr/include/c++/10/bits/ios_base.h **** 
 172:/usr/include/c++/10/bits/ios_base.h ****   inline _GLIBCXX_CONSTEXPR _Ios_Iostate
 173:/usr/include/c++/10/bits/ios_base.h ****   operator^(_Ios_Iostate __a, _Ios_Iostate __b)
 174:/usr/include/c++/10/bits/ios_base.h ****   { return _Ios_Iostate(static_cast<int>(__a) ^ static_cast<int>(__b)); }
 175:/usr/include/c++/10/bits/ios_base.h **** 
 176:/usr/include/c++/10/bits/ios_base.h ****   inline _GLIBCXX_CONSTEXPR _Ios_Iostate
 177:/usr/include/c++/10/bits/ios_base.h ****   operator~(_Ios_Iostate __a)
 178:/usr/include/c++/10/bits/ios_base.h ****   { return _Ios_Iostate(~static_cast<int>(__a)); }
 179:/usr/include/c++/10/bits/ios_base.h **** 
 180:/usr/include/c++/10/bits/ios_base.h ****   inline const _Ios_Iostate&
 181:/usr/include/c++/10/bits/ios_base.h ****   operator|=(_Ios_Iostate& __a, _Ios_Iostate __b)
 182:/usr/include/c++/10/bits/ios_base.h ****   { return __a = __a | __b; }
 183:/usr/include/c++/10/bits/ios_base.h **** 
 184:/usr/include/c++/10/bits/ios_base.h ****   inline const _Ios_Iostate&
 185:/usr/include/c++/10/bits/ios_base.h ****   operator&=(_Ios_Iostate& __a, _Ios_Iostate __b)
 186:/usr/include/c++/10/bits/ios_base.h ****   { return __a = __a & __b; }
 187:/usr/include/c++/10/bits/ios_base.h **** 
 188:/usr/include/c++/10/bits/ios_base.h ****   inline const  _Ios_Iostate&
 189:/usr/include/c++/10/bits/ios_base.h ****   operator^=(_Ios_Iostate& __a, _Ios_Iostate __b)
 190:/usr/include/c++/10/bits/ios_base.h ****   { return __a = __a ^ __b; }
 191:/usr/include/c++/10/bits/ios_base.h **** 
 192:/usr/include/c++/10/bits/ios_base.h **** 
 193:/usr/include/c++/10/bits/ios_base.h ****   enum _Ios_Seekdir 
 194:/usr/include/c++/10/bits/ios_base.h ****     { 
 195:/usr/include/c++/10/bits/ios_base.h ****       _S_beg = 0,
 196:/usr/include/c++/10/bits/ios_base.h ****       _S_cur = _GLIBCXX_STDIO_SEEK_CUR,
 197:/usr/include/c++/10/bits/ios_base.h ****       _S_end = _GLIBCXX_STDIO_SEEK_END,
 198:/usr/include/c++/10/bits/ios_base.h ****       _S_ios_seekdir_end = 1L << 16 
 199:/usr/include/c++/10/bits/ios_base.h ****     };
 200:/usr/include/c++/10/bits/ios_base.h **** 
 201:/usr/include/c++/10/bits/ios_base.h **** #if __cplusplus >= 201103L
 202:/usr/include/c++/10/bits/ios_base.h ****   /// I/O error code
 203:/usr/include/c++/10/bits/ios_base.h ****   enum class io_errc { stream = 1 };
 204:/usr/include/c++/10/bits/ios_base.h **** 
 205:/usr/include/c++/10/bits/ios_base.h ****   template <> struct is_error_code_enum<io_errc> : public true_type { };
AARCH64 GAS  obj/extInstr.s 			page 48


 206:/usr/include/c++/10/bits/ios_base.h **** 
 207:/usr/include/c++/10/bits/ios_base.h ****   const error_category& iostream_category() noexcept;
 208:/usr/include/c++/10/bits/ios_base.h **** 
 209:/usr/include/c++/10/bits/ios_base.h ****   inline error_code
 210:/usr/include/c++/10/bits/ios_base.h ****   make_error_code(io_errc __e) noexcept
 211:/usr/include/c++/10/bits/ios_base.h ****   { return error_code(static_cast<int>(__e), iostream_category()); }
 212:/usr/include/c++/10/bits/ios_base.h **** 
 213:/usr/include/c++/10/bits/ios_base.h ****   inline error_condition
 214:/usr/include/c++/10/bits/ios_base.h ****   make_error_condition(io_errc __e) noexcept
 215:/usr/include/c++/10/bits/ios_base.h ****   { return error_condition(static_cast<int>(__e), iostream_category()); }
 216:/usr/include/c++/10/bits/ios_base.h **** #endif
 217:/usr/include/c++/10/bits/ios_base.h **** 
 218:/usr/include/c++/10/bits/ios_base.h ****   // 27.4.2  Class ios_base
 219:/usr/include/c++/10/bits/ios_base.h ****   /**
 220:/usr/include/c++/10/bits/ios_base.h ****    *  @brief  The base of the I/O class hierarchy.
 221:/usr/include/c++/10/bits/ios_base.h ****    *  @ingroup io
 222:/usr/include/c++/10/bits/ios_base.h ****    *
 223:/usr/include/c++/10/bits/ios_base.h ****    *  This class defines everything that can be defined about I/O that does
 224:/usr/include/c++/10/bits/ios_base.h ****    *  not depend on the type of characters being input or output.  Most
 225:/usr/include/c++/10/bits/ios_base.h ****    *  people will only see @c ios_base when they need to specify the full
 226:/usr/include/c++/10/bits/ios_base.h ****    *  name of the various I/O flags (e.g., the openmodes).
 227:/usr/include/c++/10/bits/ios_base.h ****   */
 228:/usr/include/c++/10/bits/ios_base.h ****   class ios_base
 229:/usr/include/c++/10/bits/ios_base.h ****   {
 230:/usr/include/c++/10/bits/ios_base.h **** #if _GLIBCXX_USE_CXX11_ABI
 231:/usr/include/c++/10/bits/ios_base.h **** #if __cplusplus < 201103L
 232:/usr/include/c++/10/bits/ios_base.h ****     // Type that is layout-compatible with std::system_error
 233:/usr/include/c++/10/bits/ios_base.h ****     struct system_error : std::runtime_error
 234:/usr/include/c++/10/bits/ios_base.h ****     {
 235:/usr/include/c++/10/bits/ios_base.h ****       // Type that is layout-compatible with std::error_code
 236:/usr/include/c++/10/bits/ios_base.h ****       struct error_code
 237:/usr/include/c++/10/bits/ios_base.h ****       {
 238:/usr/include/c++/10/bits/ios_base.h **** 	error_code() { }
 239:/usr/include/c++/10/bits/ios_base.h ****       private:
 240:/usr/include/c++/10/bits/ios_base.h **** 	int		_M_value;
 241:/usr/include/c++/10/bits/ios_base.h **** 	const void*	_M_cat;
 242:/usr/include/c++/10/bits/ios_base.h ****       } _M_code;
 243:/usr/include/c++/10/bits/ios_base.h ****     };
 244:/usr/include/c++/10/bits/ios_base.h **** #endif
 245:/usr/include/c++/10/bits/ios_base.h **** #endif
 246:/usr/include/c++/10/bits/ios_base.h ****   public:
 247:/usr/include/c++/10/bits/ios_base.h **** 
 248:/usr/include/c++/10/bits/ios_base.h ****     /** 
 249:/usr/include/c++/10/bits/ios_base.h ****      *  @brief These are thrown to indicate problems with io.
 250:/usr/include/c++/10/bits/ios_base.h ****      *  @ingroup exceptions
 251:/usr/include/c++/10/bits/ios_base.h ****      *
 252:/usr/include/c++/10/bits/ios_base.h ****      *  27.4.2.1.1  Class ios_base::failure
 253:/usr/include/c++/10/bits/ios_base.h ****      */
 254:/usr/include/c++/10/bits/ios_base.h **** #if _GLIBCXX_USE_CXX11_ABI
 255:/usr/include/c++/10/bits/ios_base.h ****     class _GLIBCXX_ABI_TAG_CXX11 failure : public system_error
 256:/usr/include/c++/10/bits/ios_base.h ****     {
 257:/usr/include/c++/10/bits/ios_base.h ****     public:
 258:/usr/include/c++/10/bits/ios_base.h ****       explicit
 259:/usr/include/c++/10/bits/ios_base.h ****       failure(const string& __str);
 260:/usr/include/c++/10/bits/ios_base.h **** 
 261:/usr/include/c++/10/bits/ios_base.h **** #if __cplusplus >= 201103L
 262:/usr/include/c++/10/bits/ios_base.h ****       explicit
AARCH64 GAS  obj/extInstr.s 			page 49


 263:/usr/include/c++/10/bits/ios_base.h ****       failure(const string&, const error_code&);
 264:/usr/include/c++/10/bits/ios_base.h **** 
 265:/usr/include/c++/10/bits/ios_base.h ****       explicit
 266:/usr/include/c++/10/bits/ios_base.h ****       failure(const char*, const error_code& = io_errc::stream);
 267:/usr/include/c++/10/bits/ios_base.h **** #endif
 268:/usr/include/c++/10/bits/ios_base.h **** 
 269:/usr/include/c++/10/bits/ios_base.h ****       virtual
 270:/usr/include/c++/10/bits/ios_base.h ****       ~failure() throw();
 271:/usr/include/c++/10/bits/ios_base.h **** 
 272:/usr/include/c++/10/bits/ios_base.h ****       virtual const char*
 273:/usr/include/c++/10/bits/ios_base.h ****       what() const throw();
 274:/usr/include/c++/10/bits/ios_base.h ****     };
 275:/usr/include/c++/10/bits/ios_base.h **** #else
 276:/usr/include/c++/10/bits/ios_base.h ****     class failure : public exception
 277:/usr/include/c++/10/bits/ios_base.h ****     {
 278:/usr/include/c++/10/bits/ios_base.h ****     public:
 279:/usr/include/c++/10/bits/ios_base.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 280:/usr/include/c++/10/bits/ios_base.h ****       // 48.  Use of non-existent exception constructor
 281:/usr/include/c++/10/bits/ios_base.h ****       explicit
 282:/usr/include/c++/10/bits/ios_base.h ****       failure(const string& __str) throw();
 283:/usr/include/c++/10/bits/ios_base.h **** 
 284:/usr/include/c++/10/bits/ios_base.h ****       // This declaration is not useless:
 285:/usr/include/c++/10/bits/ios_base.h ****       // http://gcc.gnu.org/onlinedocs/gcc-4.3.2/gcc/Vague-Linkage.html
 286:/usr/include/c++/10/bits/ios_base.h ****       virtual
 287:/usr/include/c++/10/bits/ios_base.h ****       ~failure() throw();
 288:/usr/include/c++/10/bits/ios_base.h **** 
 289:/usr/include/c++/10/bits/ios_base.h ****       virtual const char*
 290:/usr/include/c++/10/bits/ios_base.h ****       what() const throw();
 291:/usr/include/c++/10/bits/ios_base.h **** 
 292:/usr/include/c++/10/bits/ios_base.h **** #if __cplusplus >= 201103L
 293:/usr/include/c++/10/bits/ios_base.h ****       // Define the new members required by C++11,
 294:/usr/include/c++/10/bits/ios_base.h ****       // even though the error_code cannot be stored.
 295:/usr/include/c++/10/bits/ios_base.h **** 
 296:/usr/include/c++/10/bits/ios_base.h ****       explicit
 297:/usr/include/c++/10/bits/ios_base.h ****       failure(const string& __s, const error_code&) noexcept
 298:/usr/include/c++/10/bits/ios_base.h ****       : failure(__s)
 299:/usr/include/c++/10/bits/ios_base.h ****       { }
 300:/usr/include/c++/10/bits/ios_base.h **** 
 301:/usr/include/c++/10/bits/ios_base.h ****       explicit
 302:/usr/include/c++/10/bits/ios_base.h ****       failure(const char* __s, const error_code& = error_code{})
 303:/usr/include/c++/10/bits/ios_base.h ****       : failure(string(__s))
 304:/usr/include/c++/10/bits/ios_base.h ****       { }
 305:/usr/include/c++/10/bits/ios_base.h **** 
 306:/usr/include/c++/10/bits/ios_base.h ****       // Stand-in for system_error::code() but returning by value.
 307:/usr/include/c++/10/bits/ios_base.h ****       error_code code() const noexcept { return error_code{}; }
 308:/usr/include/c++/10/bits/ios_base.h **** #endif
 309:/usr/include/c++/10/bits/ios_base.h **** 
 310:/usr/include/c++/10/bits/ios_base.h ****     private:
 311:/usr/include/c++/10/bits/ios_base.h ****       string _M_msg;
 312:/usr/include/c++/10/bits/ios_base.h ****     };
 313:/usr/include/c++/10/bits/ios_base.h **** #endif
 314:/usr/include/c++/10/bits/ios_base.h **** 
 315:/usr/include/c++/10/bits/ios_base.h ****     // 27.4.2.1.2  Type ios_base::fmtflags
 316:/usr/include/c++/10/bits/ios_base.h ****     /**
 317:/usr/include/c++/10/bits/ios_base.h ****      *  @brief This is a bitmask type.
 318:/usr/include/c++/10/bits/ios_base.h ****      *
 319:/usr/include/c++/10/bits/ios_base.h ****      *  @c @a _Ios_Fmtflags is implementation-defined, but it is valid to
AARCH64 GAS  obj/extInstr.s 			page 50


 320:/usr/include/c++/10/bits/ios_base.h ****      *  perform bitwise operations on these values and expect the Right
 321:/usr/include/c++/10/bits/ios_base.h ****      *  Thing to happen.  Defined objects of type fmtflags are:
 322:/usr/include/c++/10/bits/ios_base.h ****      *  - boolalpha
 323:/usr/include/c++/10/bits/ios_base.h ****      *  - dec
 324:/usr/include/c++/10/bits/ios_base.h ****      *  - fixed
 325:/usr/include/c++/10/bits/ios_base.h ****      *  - hex
 326:/usr/include/c++/10/bits/ios_base.h ****      *  - internal
 327:/usr/include/c++/10/bits/ios_base.h ****      *  - left
 328:/usr/include/c++/10/bits/ios_base.h ****      *  - oct
 329:/usr/include/c++/10/bits/ios_base.h ****      *  - right
 330:/usr/include/c++/10/bits/ios_base.h ****      *  - scientific
 331:/usr/include/c++/10/bits/ios_base.h ****      *  - showbase
 332:/usr/include/c++/10/bits/ios_base.h ****      *  - showpoint
 333:/usr/include/c++/10/bits/ios_base.h ****      *  - showpos
 334:/usr/include/c++/10/bits/ios_base.h ****      *  - skipws
 335:/usr/include/c++/10/bits/ios_base.h ****      *  - unitbuf
 336:/usr/include/c++/10/bits/ios_base.h ****      *  - uppercase
 337:/usr/include/c++/10/bits/ios_base.h ****      *  - adjustfield
 338:/usr/include/c++/10/bits/ios_base.h ****      *  - basefield
 339:/usr/include/c++/10/bits/ios_base.h ****      *  - floatfield
 340:/usr/include/c++/10/bits/ios_base.h ****     */
 341:/usr/include/c++/10/bits/ios_base.h ****     typedef _Ios_Fmtflags fmtflags;
 342:/usr/include/c++/10/bits/ios_base.h **** 
 343:/usr/include/c++/10/bits/ios_base.h ****     /// Insert/extract @c bool in alphabetic rather than numeric format.
 344:/usr/include/c++/10/bits/ios_base.h ****     static const fmtflags boolalpha =   _S_boolalpha;
 345:/usr/include/c++/10/bits/ios_base.h **** 
 346:/usr/include/c++/10/bits/ios_base.h ****     /// Converts integer input or generates integer output in decimal base.
 347:/usr/include/c++/10/bits/ios_base.h ****     static const fmtflags dec =         _S_dec;
 348:/usr/include/c++/10/bits/ios_base.h **** 
 349:/usr/include/c++/10/bits/ios_base.h ****     /// Generate floating-point output in fixed-point notation.
 350:/usr/include/c++/10/bits/ios_base.h ****     static const fmtflags fixed =       _S_fixed;
 351:/usr/include/c++/10/bits/ios_base.h **** 
 352:/usr/include/c++/10/bits/ios_base.h ****     /// Converts integer input or generates integer output in hexadecimal base.
 353:/usr/include/c++/10/bits/ios_base.h ****     static const fmtflags hex =         _S_hex;
 354:/usr/include/c++/10/bits/ios_base.h **** 
 355:/usr/include/c++/10/bits/ios_base.h ****     /// Adds fill characters at a designated internal point in certain
 356:/usr/include/c++/10/bits/ios_base.h ****     /// generated output, or identical to @c right if no such point is
 357:/usr/include/c++/10/bits/ios_base.h ****     /// designated.
 358:/usr/include/c++/10/bits/ios_base.h ****     static const fmtflags internal =    _S_internal;
 359:/usr/include/c++/10/bits/ios_base.h **** 
 360:/usr/include/c++/10/bits/ios_base.h ****     /// Adds fill characters on the right (final positions) of certain
 361:/usr/include/c++/10/bits/ios_base.h ****     /// generated output.  (I.e., the thing you print is flush left.)
 362:/usr/include/c++/10/bits/ios_base.h ****     static const fmtflags left =        _S_left;
 363:/usr/include/c++/10/bits/ios_base.h **** 
 364:/usr/include/c++/10/bits/ios_base.h ****     /// Converts integer input or generates integer output in octal base.
 365:/usr/include/c++/10/bits/ios_base.h ****     static const fmtflags oct =         _S_oct;
 366:/usr/include/c++/10/bits/ios_base.h **** 
 367:/usr/include/c++/10/bits/ios_base.h ****     /// Adds fill characters on the left (initial positions) of certain
 368:/usr/include/c++/10/bits/ios_base.h ****     /// generated output.  (I.e., the thing you print is flush right.)
 369:/usr/include/c++/10/bits/ios_base.h ****     static const fmtflags right =       _S_right;
 370:/usr/include/c++/10/bits/ios_base.h **** 
 371:/usr/include/c++/10/bits/ios_base.h ****     /// Generates floating-point output in scientific notation.
 372:/usr/include/c++/10/bits/ios_base.h ****     static const fmtflags scientific =  _S_scientific;
 373:/usr/include/c++/10/bits/ios_base.h **** 
 374:/usr/include/c++/10/bits/ios_base.h ****     /// Generates a prefix indicating the numeric base of generated integer
 375:/usr/include/c++/10/bits/ios_base.h ****     /// output.
 376:/usr/include/c++/10/bits/ios_base.h ****     static const fmtflags showbase =    _S_showbase;
AARCH64 GAS  obj/extInstr.s 			page 51


 377:/usr/include/c++/10/bits/ios_base.h **** 
 378:/usr/include/c++/10/bits/ios_base.h ****     /// Generates a decimal-point character unconditionally in generated
 379:/usr/include/c++/10/bits/ios_base.h ****     /// floating-point output.
 380:/usr/include/c++/10/bits/ios_base.h ****     static const fmtflags showpoint =   _S_showpoint;
 381:/usr/include/c++/10/bits/ios_base.h **** 
 382:/usr/include/c++/10/bits/ios_base.h ****     /// Generates a + sign in non-negative generated numeric output.
 383:/usr/include/c++/10/bits/ios_base.h ****     static const fmtflags showpos =     _S_showpos;
 384:/usr/include/c++/10/bits/ios_base.h **** 
 385:/usr/include/c++/10/bits/ios_base.h ****     /// Skips leading white space before certain input operations.
 386:/usr/include/c++/10/bits/ios_base.h ****     static const fmtflags skipws =      _S_skipws;
 387:/usr/include/c++/10/bits/ios_base.h **** 
 388:/usr/include/c++/10/bits/ios_base.h ****     /// Flushes output after each output operation.
 389:/usr/include/c++/10/bits/ios_base.h ****     static const fmtflags unitbuf =     _S_unitbuf;
 390:/usr/include/c++/10/bits/ios_base.h **** 
 391:/usr/include/c++/10/bits/ios_base.h ****     /// Replaces certain lowercase letters with their uppercase equivalents
 392:/usr/include/c++/10/bits/ios_base.h ****     /// in generated output.
 393:/usr/include/c++/10/bits/ios_base.h ****     static const fmtflags uppercase =   _S_uppercase;
 394:/usr/include/c++/10/bits/ios_base.h **** 
 395:/usr/include/c++/10/bits/ios_base.h ****     /// A mask of left|right|internal.  Useful for the 2-arg form of @c setf.
 396:/usr/include/c++/10/bits/ios_base.h ****     static const fmtflags adjustfield = _S_adjustfield;
 397:/usr/include/c++/10/bits/ios_base.h **** 
 398:/usr/include/c++/10/bits/ios_base.h ****     /// A mask of dec|oct|hex.  Useful for the 2-arg form of @c setf.
 399:/usr/include/c++/10/bits/ios_base.h ****     static const fmtflags basefield =   _S_basefield;
 400:/usr/include/c++/10/bits/ios_base.h **** 
 401:/usr/include/c++/10/bits/ios_base.h ****     /// A mask of scientific|fixed.  Useful for the 2-arg form of @c setf.
 402:/usr/include/c++/10/bits/ios_base.h ****     static const fmtflags floatfield =  _S_floatfield;
 403:/usr/include/c++/10/bits/ios_base.h **** 
 404:/usr/include/c++/10/bits/ios_base.h ****     // 27.4.2.1.3  Type ios_base::iostate
 405:/usr/include/c++/10/bits/ios_base.h ****     /**
 406:/usr/include/c++/10/bits/ios_base.h ****      *  @brief This is a bitmask type.
 407:/usr/include/c++/10/bits/ios_base.h ****      *
 408:/usr/include/c++/10/bits/ios_base.h ****      *  @c @a _Ios_Iostate is implementation-defined, but it is valid to
 409:/usr/include/c++/10/bits/ios_base.h ****      *  perform bitwise operations on these values and expect the Right
 410:/usr/include/c++/10/bits/ios_base.h ****      *  Thing to happen.  Defined objects of type iostate are:
 411:/usr/include/c++/10/bits/ios_base.h ****      *  - badbit
 412:/usr/include/c++/10/bits/ios_base.h ****      *  - eofbit
 413:/usr/include/c++/10/bits/ios_base.h ****      *  - failbit
 414:/usr/include/c++/10/bits/ios_base.h ****      *  - goodbit
 415:/usr/include/c++/10/bits/ios_base.h ****     */
 416:/usr/include/c++/10/bits/ios_base.h ****     typedef _Ios_Iostate iostate;
 417:/usr/include/c++/10/bits/ios_base.h **** 
 418:/usr/include/c++/10/bits/ios_base.h ****     /// Indicates a loss of integrity in an input or output sequence (such
 419:/usr/include/c++/10/bits/ios_base.h ****     /// as an irrecoverable read error from a file).
 420:/usr/include/c++/10/bits/ios_base.h ****     static const iostate badbit =	_S_badbit;
 421:/usr/include/c++/10/bits/ios_base.h **** 
 422:/usr/include/c++/10/bits/ios_base.h ****     /// Indicates that an input operation reached the end of an input sequence.
 423:/usr/include/c++/10/bits/ios_base.h ****     static const iostate eofbit =	_S_eofbit;
 424:/usr/include/c++/10/bits/ios_base.h **** 
 425:/usr/include/c++/10/bits/ios_base.h ****     /// Indicates that an input operation failed to read the expected
 426:/usr/include/c++/10/bits/ios_base.h ****     /// characters, or that an output operation failed to generate the
 427:/usr/include/c++/10/bits/ios_base.h ****     /// desired characters.
 428:/usr/include/c++/10/bits/ios_base.h ****     static const iostate failbit =	_S_failbit;
 429:/usr/include/c++/10/bits/ios_base.h **** 
 430:/usr/include/c++/10/bits/ios_base.h ****     /// Indicates all is well.
 431:/usr/include/c++/10/bits/ios_base.h ****     static const iostate goodbit =	_S_goodbit;
 432:/usr/include/c++/10/bits/ios_base.h **** 
 433:/usr/include/c++/10/bits/ios_base.h ****     // 27.4.2.1.4  Type ios_base::openmode
AARCH64 GAS  obj/extInstr.s 			page 52


 434:/usr/include/c++/10/bits/ios_base.h ****     /**
 435:/usr/include/c++/10/bits/ios_base.h ****      *  @brief This is a bitmask type.
 436:/usr/include/c++/10/bits/ios_base.h ****      *
 437:/usr/include/c++/10/bits/ios_base.h ****      *  @c @a _Ios_Openmode is implementation-defined, but it is valid to
 438:/usr/include/c++/10/bits/ios_base.h ****      *  perform bitwise operations on these values and expect the Right
 439:/usr/include/c++/10/bits/ios_base.h ****      *  Thing to happen.  Defined objects of type openmode are:
 440:/usr/include/c++/10/bits/ios_base.h ****      *  - app
 441:/usr/include/c++/10/bits/ios_base.h ****      *  - ate
 442:/usr/include/c++/10/bits/ios_base.h ****      *  - binary
 443:/usr/include/c++/10/bits/ios_base.h ****      *  - in
 444:/usr/include/c++/10/bits/ios_base.h ****      *  - out
 445:/usr/include/c++/10/bits/ios_base.h ****      *  - trunc
 446:/usr/include/c++/10/bits/ios_base.h ****     */
 447:/usr/include/c++/10/bits/ios_base.h ****     typedef _Ios_Openmode openmode;
 448:/usr/include/c++/10/bits/ios_base.h **** 
 449:/usr/include/c++/10/bits/ios_base.h ****     /// Seek to end before each write.
 450:/usr/include/c++/10/bits/ios_base.h ****     static const openmode app =		_S_app;
 451:/usr/include/c++/10/bits/ios_base.h **** 
 452:/usr/include/c++/10/bits/ios_base.h ****     /// Open and seek to end immediately after opening.
 453:/usr/include/c++/10/bits/ios_base.h ****     static const openmode ate =		_S_ate;
 454:/usr/include/c++/10/bits/ios_base.h **** 
 455:/usr/include/c++/10/bits/ios_base.h ****     /// Perform input and output in binary mode (as opposed to text mode).
 456:/usr/include/c++/10/bits/ios_base.h ****     /// This is probably not what you think it is; see
 457:/usr/include/c++/10/bits/ios_base.h ****     /// https://gcc.gnu.org/onlinedocs/libstdc++/manual/fstreams.html#std.io.filestreams.binary
 458:/usr/include/c++/10/bits/ios_base.h ****     static const openmode binary =	_S_bin;
 459:/usr/include/c++/10/bits/ios_base.h **** 
 460:/usr/include/c++/10/bits/ios_base.h ****     /// Open for input.  Default for @c ifstream and fstream.
 461:/usr/include/c++/10/bits/ios_base.h ****     static const openmode in =		_S_in;
 462:/usr/include/c++/10/bits/ios_base.h **** 
 463:/usr/include/c++/10/bits/ios_base.h ****     /// Open for output.  Default for @c ofstream and fstream.
 464:/usr/include/c++/10/bits/ios_base.h ****     static const openmode out =		_S_out;
 465:/usr/include/c++/10/bits/ios_base.h **** 
 466:/usr/include/c++/10/bits/ios_base.h ****     /// Truncate an existing stream when opening.  Default for @c ofstream.
 467:/usr/include/c++/10/bits/ios_base.h ****     static const openmode trunc =	_S_trunc;
 468:/usr/include/c++/10/bits/ios_base.h **** 
 469:/usr/include/c++/10/bits/ios_base.h ****     // 27.4.2.1.5  Type ios_base::seekdir
 470:/usr/include/c++/10/bits/ios_base.h ****     /**
 471:/usr/include/c++/10/bits/ios_base.h ****      *  @brief This is an enumerated type.
 472:/usr/include/c++/10/bits/ios_base.h ****      *
 473:/usr/include/c++/10/bits/ios_base.h ****      *  @c @a _Ios_Seekdir is implementation-defined.  Defined values
 474:/usr/include/c++/10/bits/ios_base.h ****      *  of type seekdir are:
 475:/usr/include/c++/10/bits/ios_base.h ****      *  - beg
 476:/usr/include/c++/10/bits/ios_base.h ****      *  - cur, equivalent to @c SEEK_CUR in the C standard library.
 477:/usr/include/c++/10/bits/ios_base.h ****      *  - end, equivalent to @c SEEK_END in the C standard library.
 478:/usr/include/c++/10/bits/ios_base.h ****     */
 479:/usr/include/c++/10/bits/ios_base.h ****     typedef _Ios_Seekdir seekdir;
 480:/usr/include/c++/10/bits/ios_base.h **** 
 481:/usr/include/c++/10/bits/ios_base.h ****     /// Request a seek relative to the beginning of the stream.
 482:/usr/include/c++/10/bits/ios_base.h ****     static const seekdir beg =		_S_beg;
 483:/usr/include/c++/10/bits/ios_base.h **** 
 484:/usr/include/c++/10/bits/ios_base.h ****     /// Request a seek relative to the current position within the sequence.
 485:/usr/include/c++/10/bits/ios_base.h ****     static const seekdir cur =		_S_cur;
 486:/usr/include/c++/10/bits/ios_base.h **** 
 487:/usr/include/c++/10/bits/ios_base.h ****     /// Request a seek relative to the current end of the sequence.
 488:/usr/include/c++/10/bits/ios_base.h ****     static const seekdir end =		_S_end;
 489:/usr/include/c++/10/bits/ios_base.h **** 
 490:/usr/include/c++/10/bits/ios_base.h **** #if __cplusplus <= 201402L
AARCH64 GAS  obj/extInstr.s 			page 53


 491:/usr/include/c++/10/bits/ios_base.h ****     // Annex D.6 (removed in C++17)
 492:/usr/include/c++/10/bits/ios_base.h ****     typedef int io_state
 493:/usr/include/c++/10/bits/ios_base.h ****       _GLIBCXX_DEPRECATED_SUGGEST("std::iostate");
 494:/usr/include/c++/10/bits/ios_base.h ****     typedef int open_mode
 495:/usr/include/c++/10/bits/ios_base.h ****       _GLIBCXX_DEPRECATED_SUGGEST("std::openmode");
 496:/usr/include/c++/10/bits/ios_base.h ****     typedef int seek_dir
 497:/usr/include/c++/10/bits/ios_base.h ****       _GLIBCXX_DEPRECATED_SUGGEST("std::seekdir");
 498:/usr/include/c++/10/bits/ios_base.h **** 
 499:/usr/include/c++/10/bits/ios_base.h ****     typedef std::streampos streampos
 500:/usr/include/c++/10/bits/ios_base.h ****       _GLIBCXX_DEPRECATED_SUGGEST("std::streampos");
 501:/usr/include/c++/10/bits/ios_base.h ****     typedef std::streamoff streamoff
 502:/usr/include/c++/10/bits/ios_base.h ****       _GLIBCXX_DEPRECATED_SUGGEST("std::streamoff");
 503:/usr/include/c++/10/bits/ios_base.h **** #endif
 504:/usr/include/c++/10/bits/ios_base.h **** 
 505:/usr/include/c++/10/bits/ios_base.h ****     // Callbacks;
 506:/usr/include/c++/10/bits/ios_base.h ****     /**
 507:/usr/include/c++/10/bits/ios_base.h ****      *  @brief  The set of events that may be passed to an event callback.
 508:/usr/include/c++/10/bits/ios_base.h ****      *
 509:/usr/include/c++/10/bits/ios_base.h ****      *  erase_event is used during ~ios() and copyfmt().  imbue_event is used
 510:/usr/include/c++/10/bits/ios_base.h ****      *  during imbue().  copyfmt_event is used during copyfmt().
 511:/usr/include/c++/10/bits/ios_base.h ****     */
 512:/usr/include/c++/10/bits/ios_base.h ****     enum event
 513:/usr/include/c++/10/bits/ios_base.h ****     {
 514:/usr/include/c++/10/bits/ios_base.h ****       erase_event,
 515:/usr/include/c++/10/bits/ios_base.h ****       imbue_event,
 516:/usr/include/c++/10/bits/ios_base.h ****       copyfmt_event
 517:/usr/include/c++/10/bits/ios_base.h ****     };
 518:/usr/include/c++/10/bits/ios_base.h **** 
 519:/usr/include/c++/10/bits/ios_base.h ****     /**
 520:/usr/include/c++/10/bits/ios_base.h ****      *  @brief  The type of an event callback function.
 521:/usr/include/c++/10/bits/ios_base.h ****      *  @param  __e  One of the members of the event enum.
 522:/usr/include/c++/10/bits/ios_base.h ****      *  @param  __b  Reference to the ios_base object.
 523:/usr/include/c++/10/bits/ios_base.h ****      *  @param  __i  The integer provided when the callback was registered.
 524:/usr/include/c++/10/bits/ios_base.h ****      *
 525:/usr/include/c++/10/bits/ios_base.h ****      *  Event callbacks are user defined functions that get called during
 526:/usr/include/c++/10/bits/ios_base.h ****      *  several ios_base and basic_ios functions, specifically imbue(),
 527:/usr/include/c++/10/bits/ios_base.h ****      *  copyfmt(), and ~ios().
 528:/usr/include/c++/10/bits/ios_base.h ****     */
 529:/usr/include/c++/10/bits/ios_base.h ****     typedef void (*event_callback) (event __e, ios_base& __b, int __i);
 530:/usr/include/c++/10/bits/ios_base.h **** 
 531:/usr/include/c++/10/bits/ios_base.h ****     /**
 532:/usr/include/c++/10/bits/ios_base.h ****      *  @brief  Add the callback __fn with parameter __index.
 533:/usr/include/c++/10/bits/ios_base.h ****      *  @param  __fn  The function to add.
 534:/usr/include/c++/10/bits/ios_base.h ****      *  @param  __index  The integer to pass to the function when invoked.
 535:/usr/include/c++/10/bits/ios_base.h ****      *
 536:/usr/include/c++/10/bits/ios_base.h ****      *  Registers a function as an event callback with an integer parameter to
 537:/usr/include/c++/10/bits/ios_base.h ****      *  be passed to the function when invoked.  Multiple copies of the
 538:/usr/include/c++/10/bits/ios_base.h ****      *  function are allowed.  If there are multiple callbacks, they are
 539:/usr/include/c++/10/bits/ios_base.h ****      *  invoked in the order they were registered.
 540:/usr/include/c++/10/bits/ios_base.h ****     */
 541:/usr/include/c++/10/bits/ios_base.h ****     void
 542:/usr/include/c++/10/bits/ios_base.h ****     register_callback(event_callback __fn, int __index);
 543:/usr/include/c++/10/bits/ios_base.h **** 
 544:/usr/include/c++/10/bits/ios_base.h ****   protected:
 545:/usr/include/c++/10/bits/ios_base.h ****     streamsize		_M_precision;
 546:/usr/include/c++/10/bits/ios_base.h ****     streamsize		_M_width;
 547:/usr/include/c++/10/bits/ios_base.h ****     fmtflags		_M_flags;
AARCH64 GAS  obj/extInstr.s 			page 54


 548:/usr/include/c++/10/bits/ios_base.h ****     iostate		_M_exception;
 549:/usr/include/c++/10/bits/ios_base.h ****     iostate		_M_streambuf_state;
 550:/usr/include/c++/10/bits/ios_base.h **** 
 551:/usr/include/c++/10/bits/ios_base.h ****     // 27.4.2.6  Members for callbacks
 552:/usr/include/c++/10/bits/ios_base.h ****     // 27.4.2.6  ios_base callbacks
 553:/usr/include/c++/10/bits/ios_base.h ****     struct _Callback_list
 554:/usr/include/c++/10/bits/ios_base.h ****     {
 555:/usr/include/c++/10/bits/ios_base.h ****       // Data Members
 556:/usr/include/c++/10/bits/ios_base.h ****       _Callback_list*		_M_next;
 557:/usr/include/c++/10/bits/ios_base.h ****       ios_base::event_callback	_M_fn;
 558:/usr/include/c++/10/bits/ios_base.h ****       int			_M_index;
 559:/usr/include/c++/10/bits/ios_base.h ****       _Atomic_word		_M_refcount;  // 0 means one reference.
 560:/usr/include/c++/10/bits/ios_base.h **** 
 561:/usr/include/c++/10/bits/ios_base.h ****       _Callback_list(ios_base::event_callback __fn, int __index,
 562:/usr/include/c++/10/bits/ios_base.h **** 		     _Callback_list* __cb)
 563:/usr/include/c++/10/bits/ios_base.h ****       : _M_next(__cb), _M_fn(__fn), _M_index(__index), _M_refcount(0) { }
 564:/usr/include/c++/10/bits/ios_base.h **** 
 565:/usr/include/c++/10/bits/ios_base.h ****       void
 566:/usr/include/c++/10/bits/ios_base.h ****       _M_add_reference() { __gnu_cxx::__atomic_add_dispatch(&_M_refcount, 1); }
 567:/usr/include/c++/10/bits/ios_base.h **** 
 568:/usr/include/c++/10/bits/ios_base.h ****       // 0 => OK to delete.
 569:/usr/include/c++/10/bits/ios_base.h ****       int
 570:/usr/include/c++/10/bits/ios_base.h ****       _M_remove_reference() 
 571:/usr/include/c++/10/bits/ios_base.h ****       {
 572:/usr/include/c++/10/bits/ios_base.h ****         // Be race-detector-friendly.  For more info see bits/c++config.
 573:/usr/include/c++/10/bits/ios_base.h ****         _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&_M_refcount);
 574:/usr/include/c++/10/bits/ios_base.h ****         int __res = __gnu_cxx::__exchange_and_add_dispatch(&_M_refcount, -1);
 575:/usr/include/c++/10/bits/ios_base.h ****         if (__res == 0)
 576:/usr/include/c++/10/bits/ios_base.h ****           {
 577:/usr/include/c++/10/bits/ios_base.h ****             _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&_M_refcount);
 578:/usr/include/c++/10/bits/ios_base.h ****           }
 579:/usr/include/c++/10/bits/ios_base.h ****         return __res;
 580:/usr/include/c++/10/bits/ios_base.h ****       }
 581:/usr/include/c++/10/bits/ios_base.h ****     };
 582:/usr/include/c++/10/bits/ios_base.h **** 
 583:/usr/include/c++/10/bits/ios_base.h ****      _Callback_list*	_M_callbacks;
 584:/usr/include/c++/10/bits/ios_base.h **** 
 585:/usr/include/c++/10/bits/ios_base.h ****     void
 586:/usr/include/c++/10/bits/ios_base.h ****     _M_call_callbacks(event __ev) throw();
 587:/usr/include/c++/10/bits/ios_base.h **** 
 588:/usr/include/c++/10/bits/ios_base.h ****     void
 589:/usr/include/c++/10/bits/ios_base.h ****     _M_dispose_callbacks(void) throw();
 590:/usr/include/c++/10/bits/ios_base.h **** 
 591:/usr/include/c++/10/bits/ios_base.h ****     // 27.4.2.5  Members for iword/pword storage
 592:/usr/include/c++/10/bits/ios_base.h ****     struct _Words
 593:/usr/include/c++/10/bits/ios_base.h ****     {
 594:/usr/include/c++/10/bits/ios_base.h ****       void*	_M_pword;
 595:/usr/include/c++/10/bits/ios_base.h ****       long	_M_iword;
 596:/usr/include/c++/10/bits/ios_base.h ****       _Words() : _M_pword(0), _M_iword(0) { }
 597:/usr/include/c++/10/bits/ios_base.h ****     };
 598:/usr/include/c++/10/bits/ios_base.h **** 
 599:/usr/include/c++/10/bits/ios_base.h ****     // Only for failed iword/pword calls.
 600:/usr/include/c++/10/bits/ios_base.h ****     _Words		_M_word_zero;
 601:/usr/include/c++/10/bits/ios_base.h **** 
 602:/usr/include/c++/10/bits/ios_base.h ****     // Guaranteed storage.
 603:/usr/include/c++/10/bits/ios_base.h ****     // The first 5 iword and pword slots are reserved for internal use.
 604:/usr/include/c++/10/bits/ios_base.h ****     enum { _S_local_word_size = 8 };
AARCH64 GAS  obj/extInstr.s 			page 55


 605:/usr/include/c++/10/bits/ios_base.h ****     _Words		_M_local_word[_S_local_word_size];
 606:/usr/include/c++/10/bits/ios_base.h **** 
 607:/usr/include/c++/10/bits/ios_base.h ****     // Allocated storage.
 608:/usr/include/c++/10/bits/ios_base.h ****     int			_M_word_size;
 609:/usr/include/c++/10/bits/ios_base.h ****     _Words*		_M_word;
 610:/usr/include/c++/10/bits/ios_base.h **** 
 611:/usr/include/c++/10/bits/ios_base.h ****     _Words&
 612:/usr/include/c++/10/bits/ios_base.h ****     _M_grow_words(int __index, bool __iword);
 613:/usr/include/c++/10/bits/ios_base.h **** 
 614:/usr/include/c++/10/bits/ios_base.h ****     // Members for locale and locale caching.
 615:/usr/include/c++/10/bits/ios_base.h ****     locale		_M_ios_locale;
 616:/usr/include/c++/10/bits/ios_base.h **** 
 617:/usr/include/c++/10/bits/ios_base.h ****     void
 618:/usr/include/c++/10/bits/ios_base.h ****     _M_init() throw();
 619:/usr/include/c++/10/bits/ios_base.h **** 
 620:/usr/include/c++/10/bits/ios_base.h ****   public:
 621:/usr/include/c++/10/bits/ios_base.h **** 
 622:/usr/include/c++/10/bits/ios_base.h ****     // 27.4.2.1.6  Class ios_base::Init
 623:/usr/include/c++/10/bits/ios_base.h ****     // Used to initialize standard streams. In theory, g++ could use
 624:/usr/include/c++/10/bits/ios_base.h ****     // -finit-priority to order this stuff correctly without going
 625:/usr/include/c++/10/bits/ios_base.h ****     // through these machinations.
 626:/usr/include/c++/10/bits/ios_base.h ****     class Init
 627:/usr/include/c++/10/bits/ios_base.h ****     {
 628:/usr/include/c++/10/bits/ios_base.h ****       friend class ios_base;
 629:/usr/include/c++/10/bits/ios_base.h ****     public:
 630:/usr/include/c++/10/bits/ios_base.h ****       Init();
 631:/usr/include/c++/10/bits/ios_base.h ****       ~Init();
 632:/usr/include/c++/10/bits/ios_base.h **** 
 633:/usr/include/c++/10/bits/ios_base.h **** #if __cplusplus >= 201103L
 634:/usr/include/c++/10/bits/ios_base.h ****       Init(const Init&) = default;
 635:/usr/include/c++/10/bits/ios_base.h ****       Init& operator=(const Init&) = default;
 636:/usr/include/c++/10/bits/ios_base.h **** #endif
 637:/usr/include/c++/10/bits/ios_base.h **** 
 638:/usr/include/c++/10/bits/ios_base.h ****     private:
 639:/usr/include/c++/10/bits/ios_base.h ****       static _Atomic_word	_S_refcount;
 640:/usr/include/c++/10/bits/ios_base.h ****       static bool		_S_synced_with_stdio;
 641:/usr/include/c++/10/bits/ios_base.h ****     };
 642:/usr/include/c++/10/bits/ios_base.h **** 
 643:/usr/include/c++/10/bits/ios_base.h ****     // [27.4.2.2] fmtflags state functions
 644:/usr/include/c++/10/bits/ios_base.h ****     /**
 645:/usr/include/c++/10/bits/ios_base.h ****      *  @brief  Access to format flags.
 646:/usr/include/c++/10/bits/ios_base.h ****      *  @return  The format control flags for both input and output.
 647:/usr/include/c++/10/bits/ios_base.h ****     */
 648:/usr/include/c++/10/bits/ios_base.h ****     fmtflags
 649:/usr/include/c++/10/bits/ios_base.h ****     flags() const
 650:/usr/include/c++/10/bits/ios_base.h ****     { return _M_flags; }
 651:/usr/include/c++/10/bits/ios_base.h **** 
 652:/usr/include/c++/10/bits/ios_base.h ****     /**
 653:/usr/include/c++/10/bits/ios_base.h ****      *  @brief  Setting new format flags all at once.
 654:/usr/include/c++/10/bits/ios_base.h ****      *  @param  __fmtfl  The new flags to set.
 655:/usr/include/c++/10/bits/ios_base.h ****      *  @return  The previous format control flags.
 656:/usr/include/c++/10/bits/ios_base.h ****      *
 657:/usr/include/c++/10/bits/ios_base.h ****      *  This function overwrites all the format flags with @a __fmtfl.
 658:/usr/include/c++/10/bits/ios_base.h ****     */
 659:/usr/include/c++/10/bits/ios_base.h ****     fmtflags
 660:/usr/include/c++/10/bits/ios_base.h ****     flags(fmtflags __fmtfl)
 661:/usr/include/c++/10/bits/ios_base.h ****     {
AARCH64 GAS  obj/extInstr.s 			page 56


 662:/usr/include/c++/10/bits/ios_base.h ****       fmtflags __old = _M_flags;
 663:/usr/include/c++/10/bits/ios_base.h ****       _M_flags = __fmtfl;
 664:/usr/include/c++/10/bits/ios_base.h ****       return __old;
 665:/usr/include/c++/10/bits/ios_base.h ****     }
 666:/usr/include/c++/10/bits/ios_base.h **** 
 667:/usr/include/c++/10/bits/ios_base.h ****     /**
 668:/usr/include/c++/10/bits/ios_base.h ****      *  @brief  Setting new format flags.
 669:/usr/include/c++/10/bits/ios_base.h ****      *  @param  __fmtfl  Additional flags to set.
 670:/usr/include/c++/10/bits/ios_base.h ****      *  @return  The previous format control flags.
 671:/usr/include/c++/10/bits/ios_base.h ****      *
 672:/usr/include/c++/10/bits/ios_base.h ****      *  This function sets additional flags in format control.  Flags that
 673:/usr/include/c++/10/bits/ios_base.h ****      *  were previously set remain set.
 674:/usr/include/c++/10/bits/ios_base.h ****     */
 675:/usr/include/c++/10/bits/ios_base.h ****     fmtflags
 676:/usr/include/c++/10/bits/ios_base.h ****     setf(fmtflags __fmtfl)
 677:/usr/include/c++/10/bits/ios_base.h ****     {
 678:/usr/include/c++/10/bits/ios_base.h ****       fmtflags __old = _M_flags;
 679:/usr/include/c++/10/bits/ios_base.h ****       _M_flags |= __fmtfl;
 680:/usr/include/c++/10/bits/ios_base.h ****       return __old;
 681:/usr/include/c++/10/bits/ios_base.h ****     }
 682:/usr/include/c++/10/bits/ios_base.h **** 
 683:/usr/include/c++/10/bits/ios_base.h ****     /**
 684:/usr/include/c++/10/bits/ios_base.h ****      *  @brief  Setting new format flags.
 685:/usr/include/c++/10/bits/ios_base.h ****      *  @param  __fmtfl  Additional flags to set.
 686:/usr/include/c++/10/bits/ios_base.h ****      *  @param  __mask  The flags mask for @a fmtfl.
 687:/usr/include/c++/10/bits/ios_base.h ****      *  @return  The previous format control flags.
 688:/usr/include/c++/10/bits/ios_base.h ****      *
 689:/usr/include/c++/10/bits/ios_base.h ****      *  This function clears @a mask in the format flags, then sets
 690:/usr/include/c++/10/bits/ios_base.h ****      *  @a fmtfl @c & @a mask.  An example mask is @c ios_base::adjustfield.
 691:/usr/include/c++/10/bits/ios_base.h ****     */
 692:/usr/include/c++/10/bits/ios_base.h ****     fmtflags
 693:/usr/include/c++/10/bits/ios_base.h ****     setf(fmtflags __fmtfl, fmtflags __mask)
 694:/usr/include/c++/10/bits/ios_base.h ****     {
 695:/usr/include/c++/10/bits/ios_base.h ****       fmtflags __old = _M_flags;
 696:/usr/include/c++/10/bits/ios_base.h ****       _M_flags &= ~__mask;
 697:/usr/include/c++/10/bits/ios_base.h ****       _M_flags |= (__fmtfl & __mask);
 698:/usr/include/c++/10/bits/ios_base.h ****       return __old;
 699:/usr/include/c++/10/bits/ios_base.h ****     }
 700:/usr/include/c++/10/bits/ios_base.h **** 
 701:/usr/include/c++/10/bits/ios_base.h ****     /**
 702:/usr/include/c++/10/bits/ios_base.h ****      *  @brief  Clearing format flags.
 703:/usr/include/c++/10/bits/ios_base.h ****      *  @param  __mask  The flags to unset.
 704:/usr/include/c++/10/bits/ios_base.h ****      *
 705:/usr/include/c++/10/bits/ios_base.h ****      *  This function clears @a __mask in the format flags.
 706:/usr/include/c++/10/bits/ios_base.h ****     */
 707:/usr/include/c++/10/bits/ios_base.h ****     void
 708:/usr/include/c++/10/bits/ios_base.h ****     unsetf(fmtflags __mask)
 709:/usr/include/c++/10/bits/ios_base.h ****     { _M_flags &= ~__mask; }
 710:/usr/include/c++/10/bits/ios_base.h **** 
 711:/usr/include/c++/10/bits/ios_base.h ****     /**
 712:/usr/include/c++/10/bits/ios_base.h ****      *  @brief  Flags access.
 713:/usr/include/c++/10/bits/ios_base.h ****      *  @return  The precision to generate on certain output operations.
 714:/usr/include/c++/10/bits/ios_base.h ****      *
 715:/usr/include/c++/10/bits/ios_base.h ****      *  Be careful if you try to give a definition of @a precision here; see
 716:/usr/include/c++/10/bits/ios_base.h ****      *  DR 189.
 717:/usr/include/c++/10/bits/ios_base.h ****     */
 718:/usr/include/c++/10/bits/ios_base.h ****     streamsize
AARCH64 GAS  obj/extInstr.s 			page 57


 719:/usr/include/c++/10/bits/ios_base.h ****     precision() const
 720:/usr/include/c++/10/bits/ios_base.h ****     { return _M_precision; }
 721:/usr/include/c++/10/bits/ios_base.h **** 
 722:/usr/include/c++/10/bits/ios_base.h ****     /**
 723:/usr/include/c++/10/bits/ios_base.h ****      *  @brief  Changing flags.
 724:/usr/include/c++/10/bits/ios_base.h ****      *  @param  __prec  The new precision value.
 725:/usr/include/c++/10/bits/ios_base.h ****      *  @return  The previous value of precision().
 726:/usr/include/c++/10/bits/ios_base.h ****     */
 727:/usr/include/c++/10/bits/ios_base.h ****     streamsize
 728:/usr/include/c++/10/bits/ios_base.h ****     precision(streamsize __prec)
 729:/usr/include/c++/10/bits/ios_base.h ****     {
 730:/usr/include/c++/10/bits/ios_base.h ****       streamsize __old = _M_precision;
 731:/usr/include/c++/10/bits/ios_base.h ****       _M_precision = __prec;
 732:/usr/include/c++/10/bits/ios_base.h ****       return __old;
 733:/usr/include/c++/10/bits/ios_base.h ****     }
 734:/usr/include/c++/10/bits/ios_base.h **** 
 735:/usr/include/c++/10/bits/ios_base.h ****     /**
 736:/usr/include/c++/10/bits/ios_base.h ****      *  @brief  Flags access.
 737:/usr/include/c++/10/bits/ios_base.h ****      *  @return  The minimum field width to generate on output operations.
 738:/usr/include/c++/10/bits/ios_base.h ****      *
 739:/usr/include/c++/10/bits/ios_base.h ****      *  <em>Minimum field width</em> refers to the number of characters.
 740:/usr/include/c++/10/bits/ios_base.h ****     */
 741:/usr/include/c++/10/bits/ios_base.h ****     streamsize
 742:/usr/include/c++/10/bits/ios_base.h ****     width() const
 743:/usr/include/c++/10/bits/ios_base.h ****     { return _M_width; }
 744:/usr/include/c++/10/bits/ios_base.h **** 
 745:/usr/include/c++/10/bits/ios_base.h ****     /**
 746:/usr/include/c++/10/bits/ios_base.h ****      *  @brief  Changing flags.
 747:/usr/include/c++/10/bits/ios_base.h ****      *  @param  __wide  The new width value.
 748:/usr/include/c++/10/bits/ios_base.h ****      *  @return  The previous value of width().
 749:/usr/include/c++/10/bits/ios_base.h ****     */
 750:/usr/include/c++/10/bits/ios_base.h ****     streamsize
 751:/usr/include/c++/10/bits/ios_base.h ****     width(streamsize __wide)
 752:/usr/include/c++/10/bits/ios_base.h ****     {
 753:/usr/include/c++/10/bits/ios_base.h ****       streamsize __old = _M_width;
 754:/usr/include/c++/10/bits/ios_base.h ****       _M_width = __wide;
 252              		.loc 6 754 16 view .LVU60
 253 005c 180180D2 		mov	x24, 8
 254              	.LBE758:
 255              	.LBE757:
 256              	.LBE756:
 257              	.LBE755:
 258              	.LBE784:
 259              	.LBE793:
 260              	.LBE801:
 261              	.LBE809:
  11:extInstr.cpp  **** 	a.m_U16[1] = 1; //b.m_U16[6] = 1;
 262              		.loc 4 11 13 view .LVU61
 263 0060 A302803D 		str	q3, [x21, #:lo12:.LANCHOR0]
  20:extInstr.cpp  **** 	b.m_U16[6] = 14;
 264              		.loc 4 20 2 is_stmt 1 view .LVU62
  21:extInstr.cpp  **** 	b.m_U16[5] = 13;
 265              		.loc 4 21 2 view .LVU63
  22:extInstr.cpp  **** 	b.m_U16[4] = 12;
 266              		.loc 4 22 2 view .LVU64
  23:extInstr.cpp  **** 	b.m_U16[3] = 11;
 267              		.loc 4 23 2 view .LVU65
AARCH64 GAS  obj/extInstr.s 			page 58


  24:extInstr.cpp  **** 	b.m_U16[2] = 10;
 268              		.loc 4 24 2 view .LVU66
  25:extInstr.cpp  **** 	b.m_U16[1] = 9;
 269              		.loc 4 25 2 view .LVU67
  26:extInstr.cpp  **** 	b.m_U16[0] = 8;
 270              		.loc 4 26 2 view .LVU68
  27:extInstr.cpp  **** 	
 271              		.loc 4 27 2 view .LVU69
 272              	.LBB810:
 273              	.LBB802:
 274              	.LBB794:
  46:../../Include/Vec128.h **** 
 275              		.loc 5 46 28 is_stmt 0 view .LVU70
 276 0064 F3230291 		add	x19, sp, 136
 277              	.LBE794:
 278              	.LBE802:
 279              	.LBE810:
  29:extInstr.cpp  ****     indx.m_U8[1] = 1*2;indx.m_U8[9]  = 18;
 280              		.loc 4 29 15 view .LVU71
 281 0068 C28200AD 		stp	q2, q0, [x22, 16]
  38:extInstr.cpp  ****     a2.m_U8[1] = 1*2;a2.m_U8[9]  = 9*2;
 282              		.loc 4 38 2 is_stmt 1 view .LVU72
  38:extInstr.cpp  ****     a2.m_U8[1] = 1*2;a2.m_U8[9]  = 9*2;
 283              		.loc 4 38 19 view .LVU73
  39:extInstr.cpp  ****     a2.m_U8[2] = 2*2;a2.m_U8[10] = 10*2;
 284              		.loc 4 39 5 view .LVU74
  39:extInstr.cpp  ****     a2.m_U8[2] = 2*2;a2.m_U8[10] = 10*2;
 285              		.loc 4 39 22 view .LVU75
  40:extInstr.cpp  ****     a2.m_U8[3] = 3*2;a2.m_U8[11] = 11*2;
 286              		.loc 4 40 5 view .LVU76
  40:extInstr.cpp  ****     a2.m_U8[3] = 3*2;a2.m_U8[11] = 11*2;
 287              		.loc 4 40 22 view .LVU77
  41:extInstr.cpp  ****     a2.m_U8[4] = 4*2;a2.m_U8[12] = 12*2;
 288              		.loc 4 41 5 view .LVU78
  41:extInstr.cpp  ****     a2.m_U8[4] = 4*2;a2.m_U8[12] = 12*2;
 289              		.loc 4 41 22 view .LVU79
  42:extInstr.cpp  ****     a2.m_U8[5] = 5*2;a2.m_U8[13] = 13*2;
 290              		.loc 4 42 5 view .LVU80
  42:extInstr.cpp  ****     a2.m_U8[5] = 5*2;a2.m_U8[13] = 13*2;
 291              		.loc 4 42 22 view .LVU81
  43:extInstr.cpp  **** 	a2.m_U8[6] = 6*2;a2.m_U8[14] = 14*2;
 292              		.loc 4 43 5 view .LVU82
  43:extInstr.cpp  **** 	a2.m_U8[6] = 6*2;a2.m_U8[14] = 14*2;
 293              		.loc 4 43 22 view .LVU83
  44:extInstr.cpp  **** 	a2.m_U8[7] = 7*2;a2.m_U8[15] = 15*2;
 294              		.loc 4 44 2 view .LVU84
  44:extInstr.cpp  **** 	a2.m_U8[7] = 7*2;a2.m_U8[15] = 15*2;
 295              		.loc 4 44 19 view .LVU85
  45:extInstr.cpp  **** 
 296              		.loc 4 45 2 view .LVU86
  45:extInstr.cpp  **** 
 297              		.loc 4 45 19 view .LVU87
  47:extInstr.cpp  ****     b2.m_U8[1] = 1*3;b2.m_U8[9]  =  9*3;
 298              		.loc 4 47 13 is_stmt 0 view .LVU88
 299 006c C08601AD 		stp	q0, q1, [x22, 48]
 300              		.loc 4 56 2 is_stmt 1 view .LVU89
 301              	.LEHB0:
AARCH64 GAS  obj/extInstr.s 			page 59


 302              		.loc 4 56 11 is_stmt 0 view .LVU90
 303 0070 00000094 		bl	extInstr_
 304              	.LVL14:
  57:extInstr.cpp  **** 	cout<<"EXT instruction result:"<<endl;
 305              		.loc 4 57 2 is_stmt 1 view .LVU91
 306              	.LBB811:
 307              	.LBI748:
 606:/usr/include/c++/10/ostream ****     {
 308              		.loc 1 606 5 view .LVU92
 606:/usr/include/c++/10/ostream ****     {
 309              		.loc 1 606 5 is_stmt 0 view .LVU93
 310              	.LBE811:
 311              		.file 7 "/usr/include/c++/10/bits/char_traits.h"
   1:/usr/include/c++/10/bits/char_traits.h **** // Character Traits for use by standard string and iostream -*- C++ -*-
   2:/usr/include/c++/10/bits/char_traits.h **** 
   3:/usr/include/c++/10/bits/char_traits.h **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:/usr/include/c++/10/bits/char_traits.h **** //
   5:/usr/include/c++/10/bits/char_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/10/bits/char_traits.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/10/bits/char_traits.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/10/bits/char_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/10/bits/char_traits.h **** // any later version.
  10:/usr/include/c++/10/bits/char_traits.h **** 
  11:/usr/include/c++/10/bits/char_traits.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/10/bits/char_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/10/bits/char_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/10/bits/char_traits.h **** // GNU General Public License for more details.
  15:/usr/include/c++/10/bits/char_traits.h **** 
  16:/usr/include/c++/10/bits/char_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/10/bits/char_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/10/bits/char_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/10/bits/char_traits.h **** 
  20:/usr/include/c++/10/bits/char_traits.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/10/bits/char_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/10/bits/char_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/10/bits/char_traits.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/10/bits/char_traits.h **** 
  25:/usr/include/c++/10/bits/char_traits.h **** /** @file bits/char_traits.h
  26:/usr/include/c++/10/bits/char_traits.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/10/bits/char_traits.h ****  *  Do not attempt to use it directly. @headername{string}
  28:/usr/include/c++/10/bits/char_traits.h ****  */
  29:/usr/include/c++/10/bits/char_traits.h **** 
  30:/usr/include/c++/10/bits/char_traits.h **** //
  31:/usr/include/c++/10/bits/char_traits.h **** // ISO C++ 14882: 21  Strings library
  32:/usr/include/c++/10/bits/char_traits.h **** //
  33:/usr/include/c++/10/bits/char_traits.h **** 
  34:/usr/include/c++/10/bits/char_traits.h **** #ifndef _CHAR_TRAITS_H
  35:/usr/include/c++/10/bits/char_traits.h **** #define _CHAR_TRAITS_H 1
  36:/usr/include/c++/10/bits/char_traits.h **** 
  37:/usr/include/c++/10/bits/char_traits.h **** #pragma GCC system_header
  38:/usr/include/c++/10/bits/char_traits.h **** 
  39:/usr/include/c++/10/bits/char_traits.h **** #include <bits/stl_algobase.h>  // std::copy, std::fill_n
  40:/usr/include/c++/10/bits/char_traits.h **** #include <bits/postypes.h>      // For streampos
  41:/usr/include/c++/10/bits/char_traits.h **** #include <cwchar>               // For WEOF, wmemmove, wmemset, etc.
  42:/usr/include/c++/10/bits/char_traits.h **** #if __cplusplus > 201703L
  43:/usr/include/c++/10/bits/char_traits.h **** # include <compare>
  44:/usr/include/c++/10/bits/char_traits.h **** #endif
AARCH64 GAS  obj/extInstr.s 			page 60


  45:/usr/include/c++/10/bits/char_traits.h **** 
  46:/usr/include/c++/10/bits/char_traits.h **** #ifndef _GLIBCXX_ALWAYS_INLINE
  47:/usr/include/c++/10/bits/char_traits.h **** # define _GLIBCXX_ALWAYS_INLINE inline __attribute__((__always_inline__))
  48:/usr/include/c++/10/bits/char_traits.h **** #endif
  49:/usr/include/c++/10/bits/char_traits.h **** 
  50:/usr/include/c++/10/bits/char_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  51:/usr/include/c++/10/bits/char_traits.h **** {
  52:/usr/include/c++/10/bits/char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  53:/usr/include/c++/10/bits/char_traits.h **** 
  54:/usr/include/c++/10/bits/char_traits.h ****   /**
  55:/usr/include/c++/10/bits/char_traits.h ****    *  @brief  Mapping from character type to associated types.
  56:/usr/include/c++/10/bits/char_traits.h ****    *
  57:/usr/include/c++/10/bits/char_traits.h ****    *  @note This is an implementation class for the generic version
  58:/usr/include/c++/10/bits/char_traits.h ****    *  of char_traits.  It defines int_type, off_type, pos_type, and
  59:/usr/include/c++/10/bits/char_traits.h ****    *  state_type.  By default these are unsigned long, streamoff,
  60:/usr/include/c++/10/bits/char_traits.h ****    *  streampos, and mbstate_t.  Users who need a different set of
  61:/usr/include/c++/10/bits/char_traits.h ****    *  types, but who don't need to change the definitions of any function
  62:/usr/include/c++/10/bits/char_traits.h ****    *  defined in char_traits, can specialize __gnu_cxx::_Char_types
  63:/usr/include/c++/10/bits/char_traits.h ****    *  while leaving __gnu_cxx::char_traits alone. */
  64:/usr/include/c++/10/bits/char_traits.h ****   template<typename _CharT>
  65:/usr/include/c++/10/bits/char_traits.h ****     struct _Char_types
  66:/usr/include/c++/10/bits/char_traits.h ****     {
  67:/usr/include/c++/10/bits/char_traits.h ****       typedef unsigned long   int_type;
  68:/usr/include/c++/10/bits/char_traits.h ****       typedef std::streampos  pos_type;
  69:/usr/include/c++/10/bits/char_traits.h ****       typedef std::streamoff  off_type;
  70:/usr/include/c++/10/bits/char_traits.h ****       typedef std::mbstate_t  state_type;
  71:/usr/include/c++/10/bits/char_traits.h ****     };
  72:/usr/include/c++/10/bits/char_traits.h **** 
  73:/usr/include/c++/10/bits/char_traits.h **** 
  74:/usr/include/c++/10/bits/char_traits.h ****   /**
  75:/usr/include/c++/10/bits/char_traits.h ****    *  @brief  Base class used to implement std::char_traits.
  76:/usr/include/c++/10/bits/char_traits.h ****    *
  77:/usr/include/c++/10/bits/char_traits.h ****    *  @note For any given actual character type, this definition is
  78:/usr/include/c++/10/bits/char_traits.h ****    *  probably wrong.  (Most of the member functions are likely to be
  79:/usr/include/c++/10/bits/char_traits.h ****    *  right, but the int_type and state_type typedefs, and the eof()
  80:/usr/include/c++/10/bits/char_traits.h ****    *  member function, are likely to be wrong.)  The reason this class
  81:/usr/include/c++/10/bits/char_traits.h ****    *  exists is so users can specialize it.  Classes in namespace std
  82:/usr/include/c++/10/bits/char_traits.h ****    *  may not be specialized for fundamental types, but classes in
  83:/usr/include/c++/10/bits/char_traits.h ****    *  namespace __gnu_cxx may be.
  84:/usr/include/c++/10/bits/char_traits.h ****    *
  85:/usr/include/c++/10/bits/char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
  86:/usr/include/c++/10/bits/char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
  87:/usr/include/c++/10/bits/char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.  
  88:/usr/include/c++/10/bits/char_traits.h ****    */
  89:/usr/include/c++/10/bits/char_traits.h ****   template<typename _CharT>
  90:/usr/include/c++/10/bits/char_traits.h ****     struct char_traits
  91:/usr/include/c++/10/bits/char_traits.h ****     {
  92:/usr/include/c++/10/bits/char_traits.h ****       typedef _CharT                                    char_type;
  93:/usr/include/c++/10/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::int_type    int_type;
  94:/usr/include/c++/10/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::pos_type    pos_type;
  95:/usr/include/c++/10/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::off_type    off_type;
  96:/usr/include/c++/10/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::state_type  state_type;
  97:/usr/include/c++/10/bits/char_traits.h **** #if __cpp_lib_three_way_comparison
  98:/usr/include/c++/10/bits/char_traits.h ****       using comparison_category = std::strong_ordering;
  99:/usr/include/c++/10/bits/char_traits.h **** #endif
 100:/usr/include/c++/10/bits/char_traits.h **** 
 101:/usr/include/c++/10/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR void
AARCH64 GAS  obj/extInstr.s 			page 61


 102:/usr/include/c++/10/bits/char_traits.h ****       assign(char_type& __c1, const char_type& __c2)
 103:/usr/include/c++/10/bits/char_traits.h ****       { __c1 = __c2; }
 104:/usr/include/c++/10/bits/char_traits.h **** 
 105:/usr/include/c++/10/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 106:/usr/include/c++/10/bits/char_traits.h ****       eq(const char_type& __c1, const char_type& __c2)
 107:/usr/include/c++/10/bits/char_traits.h ****       { return __c1 == __c2; }
 108:/usr/include/c++/10/bits/char_traits.h **** 
 109:/usr/include/c++/10/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 110:/usr/include/c++/10/bits/char_traits.h ****       lt(const char_type& __c1, const char_type& __c2)
 111:/usr/include/c++/10/bits/char_traits.h ****       { return __c1 < __c2; }
 112:/usr/include/c++/10/bits/char_traits.h **** 
 113:/usr/include/c++/10/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR int
 114:/usr/include/c++/10/bits/char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, std::size_t __n);
 115:/usr/include/c++/10/bits/char_traits.h **** 
 116:/usr/include/c++/10/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR std::size_t
 117:/usr/include/c++/10/bits/char_traits.h ****       length(const char_type* __s);
 118:/usr/include/c++/10/bits/char_traits.h **** 
 119:/usr/include/c++/10/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR const char_type*
 120:/usr/include/c++/10/bits/char_traits.h ****       find(const char_type* __s, std::size_t __n, const char_type& __a);
 121:/usr/include/c++/10/bits/char_traits.h **** 
 122:/usr/include/c++/10/bits/char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 123:/usr/include/c++/10/bits/char_traits.h ****       move(char_type* __s1, const char_type* __s2, std::size_t __n);
 124:/usr/include/c++/10/bits/char_traits.h **** 
 125:/usr/include/c++/10/bits/char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 126:/usr/include/c++/10/bits/char_traits.h ****       copy(char_type* __s1, const char_type* __s2, std::size_t __n);
 127:/usr/include/c++/10/bits/char_traits.h **** 
 128:/usr/include/c++/10/bits/char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 129:/usr/include/c++/10/bits/char_traits.h ****       assign(char_type* __s, std::size_t __n, char_type __a);
 130:/usr/include/c++/10/bits/char_traits.h **** 
 131:/usr/include/c++/10/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR char_type
 132:/usr/include/c++/10/bits/char_traits.h ****       to_char_type(const int_type& __c)
 133:/usr/include/c++/10/bits/char_traits.h ****       { return static_cast<char_type>(__c); }
 134:/usr/include/c++/10/bits/char_traits.h **** 
 135:/usr/include/c++/10/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 136:/usr/include/c++/10/bits/char_traits.h ****       to_int_type(const char_type& __c)
 137:/usr/include/c++/10/bits/char_traits.h ****       { return static_cast<int_type>(__c); }
 138:/usr/include/c++/10/bits/char_traits.h **** 
 139:/usr/include/c++/10/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 140:/usr/include/c++/10/bits/char_traits.h ****       eq_int_type(const int_type& __c1, const int_type& __c2)
 141:/usr/include/c++/10/bits/char_traits.h ****       { return __c1 == __c2; }
 142:/usr/include/c++/10/bits/char_traits.h **** 
 143:/usr/include/c++/10/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 144:/usr/include/c++/10/bits/char_traits.h ****       eof()
 145:/usr/include/c++/10/bits/char_traits.h ****       { return static_cast<int_type>(_GLIBCXX_STDIO_EOF); }
 146:/usr/include/c++/10/bits/char_traits.h **** 
 147:/usr/include/c++/10/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 148:/usr/include/c++/10/bits/char_traits.h ****       not_eof(const int_type& __c)
 149:/usr/include/c++/10/bits/char_traits.h ****       { return !eq_int_type(__c, eof()) ? __c : to_int_type(char_type()); }
 150:/usr/include/c++/10/bits/char_traits.h ****     };
 151:/usr/include/c++/10/bits/char_traits.h **** 
 152:/usr/include/c++/10/bits/char_traits.h ****   template<typename _CharT>
 153:/usr/include/c++/10/bits/char_traits.h ****     _GLIBCXX14_CONSTEXPR int
 154:/usr/include/c++/10/bits/char_traits.h ****     char_traits<_CharT>::
 155:/usr/include/c++/10/bits/char_traits.h ****     compare(const char_type* __s1, const char_type* __s2, std::size_t __n)
 156:/usr/include/c++/10/bits/char_traits.h ****     {
 157:/usr/include/c++/10/bits/char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 158:/usr/include/c++/10/bits/char_traits.h **** 	if (lt(__s1[__i], __s2[__i]))
AARCH64 GAS  obj/extInstr.s 			page 62


 159:/usr/include/c++/10/bits/char_traits.h **** 	  return -1;
 160:/usr/include/c++/10/bits/char_traits.h **** 	else if (lt(__s2[__i], __s1[__i]))
 161:/usr/include/c++/10/bits/char_traits.h **** 	  return 1;
 162:/usr/include/c++/10/bits/char_traits.h ****       return 0;
 163:/usr/include/c++/10/bits/char_traits.h ****     }
 164:/usr/include/c++/10/bits/char_traits.h **** 
 165:/usr/include/c++/10/bits/char_traits.h ****   template<typename _CharT>
 166:/usr/include/c++/10/bits/char_traits.h ****     _GLIBCXX14_CONSTEXPR std::size_t
 167:/usr/include/c++/10/bits/char_traits.h ****     char_traits<_CharT>::
 168:/usr/include/c++/10/bits/char_traits.h ****     length(const char_type* __p)
 169:/usr/include/c++/10/bits/char_traits.h ****     {
 170:/usr/include/c++/10/bits/char_traits.h ****       std::size_t __i = 0;
 171:/usr/include/c++/10/bits/char_traits.h ****       while (!eq(__p[__i], char_type()))
 172:/usr/include/c++/10/bits/char_traits.h ****         ++__i;
 173:/usr/include/c++/10/bits/char_traits.h ****       return __i;
 174:/usr/include/c++/10/bits/char_traits.h ****     }
 175:/usr/include/c++/10/bits/char_traits.h **** 
 176:/usr/include/c++/10/bits/char_traits.h ****   template<typename _CharT>
 177:/usr/include/c++/10/bits/char_traits.h ****     _GLIBCXX14_CONSTEXPR const typename char_traits<_CharT>::char_type*
 178:/usr/include/c++/10/bits/char_traits.h ****     char_traits<_CharT>::
 179:/usr/include/c++/10/bits/char_traits.h ****     find(const char_type* __s, std::size_t __n, const char_type& __a)
 180:/usr/include/c++/10/bits/char_traits.h ****     {
 181:/usr/include/c++/10/bits/char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 182:/usr/include/c++/10/bits/char_traits.h ****         if (eq(__s[__i], __a))
 183:/usr/include/c++/10/bits/char_traits.h ****           return __s + __i;
 184:/usr/include/c++/10/bits/char_traits.h ****       return 0;
 185:/usr/include/c++/10/bits/char_traits.h ****     }
 186:/usr/include/c++/10/bits/char_traits.h **** 
 187:/usr/include/c++/10/bits/char_traits.h ****   template<typename _CharT>
 188:/usr/include/c++/10/bits/char_traits.h ****     _GLIBCXX20_CONSTEXPR
 189:/usr/include/c++/10/bits/char_traits.h ****     typename char_traits<_CharT>::char_type*
 190:/usr/include/c++/10/bits/char_traits.h ****     char_traits<_CharT>::
 191:/usr/include/c++/10/bits/char_traits.h ****     move(char_type* __s1, const char_type* __s2, std::size_t __n)
 192:/usr/include/c++/10/bits/char_traits.h ****     {
 193:/usr/include/c++/10/bits/char_traits.h ****       if (__n == 0)
 194:/usr/include/c++/10/bits/char_traits.h **** 	return __s1;
 195:/usr/include/c++/10/bits/char_traits.h **** #ifdef __cpp_lib_is_constant_evaluated
 196:/usr/include/c++/10/bits/char_traits.h ****       if (std::is_constant_evaluated())
 197:/usr/include/c++/10/bits/char_traits.h **** 	{
 198:/usr/include/c++/10/bits/char_traits.h **** 	  if (__s1 > __s2 && __s1 < __s2 + __n)
 199:/usr/include/c++/10/bits/char_traits.h **** 	    std::copy_backward(__s2, __s2 + __n, __s1);
 200:/usr/include/c++/10/bits/char_traits.h **** 	  else
 201:/usr/include/c++/10/bits/char_traits.h **** 	    std::copy(__s2, __s2 + __n, __s1);
 202:/usr/include/c++/10/bits/char_traits.h **** 	  return __s1;
 203:/usr/include/c++/10/bits/char_traits.h **** 	}
 204:/usr/include/c++/10/bits/char_traits.h **** #endif
 205:/usr/include/c++/10/bits/char_traits.h ****       return static_cast<_CharT*>(__builtin_memmove(__s1, __s2,
 206:/usr/include/c++/10/bits/char_traits.h **** 						    __n * sizeof(char_type)));
 207:/usr/include/c++/10/bits/char_traits.h ****     }
 208:/usr/include/c++/10/bits/char_traits.h **** 
 209:/usr/include/c++/10/bits/char_traits.h ****   template<typename _CharT>
 210:/usr/include/c++/10/bits/char_traits.h ****     _GLIBCXX20_CONSTEXPR
 211:/usr/include/c++/10/bits/char_traits.h ****     typename char_traits<_CharT>::char_type*
 212:/usr/include/c++/10/bits/char_traits.h ****     char_traits<_CharT>::
 213:/usr/include/c++/10/bits/char_traits.h ****     copy(char_type* __s1, const char_type* __s2, std::size_t __n)
 214:/usr/include/c++/10/bits/char_traits.h ****     {
 215:/usr/include/c++/10/bits/char_traits.h ****       // NB: Inline std::copy so no recursive dependencies.
AARCH64 GAS  obj/extInstr.s 			page 63


 216:/usr/include/c++/10/bits/char_traits.h ****       std::copy(__s2, __s2 + __n, __s1);
 217:/usr/include/c++/10/bits/char_traits.h ****       return __s1;
 218:/usr/include/c++/10/bits/char_traits.h ****     }
 219:/usr/include/c++/10/bits/char_traits.h **** 
 220:/usr/include/c++/10/bits/char_traits.h ****   template<typename _CharT>
 221:/usr/include/c++/10/bits/char_traits.h ****     _GLIBCXX20_CONSTEXPR
 222:/usr/include/c++/10/bits/char_traits.h ****     typename char_traits<_CharT>::char_type*
 223:/usr/include/c++/10/bits/char_traits.h ****     char_traits<_CharT>::
 224:/usr/include/c++/10/bits/char_traits.h ****     assign(char_type* __s, std::size_t __n, char_type __a)
 225:/usr/include/c++/10/bits/char_traits.h ****     {
 226:/usr/include/c++/10/bits/char_traits.h ****       // NB: Inline std::fill_n so no recursive dependencies.
 227:/usr/include/c++/10/bits/char_traits.h ****       std::fill_n(__s, __n, __a);
 228:/usr/include/c++/10/bits/char_traits.h ****       return __s;
 229:/usr/include/c++/10/bits/char_traits.h ****     }
 230:/usr/include/c++/10/bits/char_traits.h **** 
 231:/usr/include/c++/10/bits/char_traits.h **** _GLIBCXX_END_NAMESPACE_VERSION
 232:/usr/include/c++/10/bits/char_traits.h **** } // namespace
 233:/usr/include/c++/10/bits/char_traits.h **** 
 234:/usr/include/c++/10/bits/char_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
 235:/usr/include/c++/10/bits/char_traits.h **** {
 236:/usr/include/c++/10/bits/char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 237:/usr/include/c++/10/bits/char_traits.h **** 
 238:/usr/include/c++/10/bits/char_traits.h **** #if __cplusplus >= 201703L
 239:/usr/include/c++/10/bits/char_traits.h **** 
 240:/usr/include/c++/10/bits/char_traits.h **** #if __cplusplus == 201703L
 241:/usr/include/c++/10/bits/char_traits.h **** // Unofficial macro indicating P0426R1 support
 242:/usr/include/c++/10/bits/char_traits.h **** # define __cpp_lib_constexpr_char_traits 201611L
 243:/usr/include/c++/10/bits/char_traits.h **** #else
 244:/usr/include/c++/10/bits/char_traits.h **** // Also support P1032R1 in C++20
 245:/usr/include/c++/10/bits/char_traits.h **** # define __cpp_lib_constexpr_char_traits 201811L
 246:/usr/include/c++/10/bits/char_traits.h **** #endif
 247:/usr/include/c++/10/bits/char_traits.h **** 
 248:/usr/include/c++/10/bits/char_traits.h ****   /**
 249:/usr/include/c++/10/bits/char_traits.h ****    *  @brief Determine whether the characters of a NULL-terminated
 250:/usr/include/c++/10/bits/char_traits.h ****    *  string are known at compile time.
 251:/usr/include/c++/10/bits/char_traits.h ****    *  @param  __s  The string.
 252:/usr/include/c++/10/bits/char_traits.h ****    *
 253:/usr/include/c++/10/bits/char_traits.h ****    *  Assumes that _CharT is a built-in character type.
 254:/usr/include/c++/10/bits/char_traits.h ****    */
 255:/usr/include/c++/10/bits/char_traits.h ****   template<typename _CharT>
 256:/usr/include/c++/10/bits/char_traits.h ****     static _GLIBCXX_ALWAYS_INLINE constexpr bool
 257:/usr/include/c++/10/bits/char_traits.h ****     __constant_string_p(const _CharT* __s)
 258:/usr/include/c++/10/bits/char_traits.h ****     {
 259:/usr/include/c++/10/bits/char_traits.h **** #ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED
 260:/usr/include/c++/10/bits/char_traits.h ****       (void) __s;
 261:/usr/include/c++/10/bits/char_traits.h ****       // In constexpr contexts all strings should be constant.
 262:/usr/include/c++/10/bits/char_traits.h ****       return __builtin_is_constant_evaluated();
 263:/usr/include/c++/10/bits/char_traits.h **** #else
 264:/usr/include/c++/10/bits/char_traits.h ****       while (__builtin_constant_p(*__s) && *__s)
 265:/usr/include/c++/10/bits/char_traits.h **** 	__s++;
 266:/usr/include/c++/10/bits/char_traits.h ****       return __builtin_constant_p(*__s);
 267:/usr/include/c++/10/bits/char_traits.h **** #endif
 268:/usr/include/c++/10/bits/char_traits.h ****     }
 269:/usr/include/c++/10/bits/char_traits.h **** 
 270:/usr/include/c++/10/bits/char_traits.h ****   /**
 271:/usr/include/c++/10/bits/char_traits.h ****    *  @brief Determine whether the characters of a character array are
 272:/usr/include/c++/10/bits/char_traits.h ****    *  known at compile time.
AARCH64 GAS  obj/extInstr.s 			page 64


 273:/usr/include/c++/10/bits/char_traits.h ****    *  @param  __a  The character array.
 274:/usr/include/c++/10/bits/char_traits.h ****    *  @param  __n  Number of characters.
 275:/usr/include/c++/10/bits/char_traits.h ****    *
 276:/usr/include/c++/10/bits/char_traits.h ****    *  Assumes that _CharT is a built-in character type.
 277:/usr/include/c++/10/bits/char_traits.h ****    */
 278:/usr/include/c++/10/bits/char_traits.h ****   template<typename _CharT>
 279:/usr/include/c++/10/bits/char_traits.h ****     static _GLIBCXX_ALWAYS_INLINE constexpr bool
 280:/usr/include/c++/10/bits/char_traits.h ****     __constant_char_array_p(const _CharT* __a, size_t __n)
 281:/usr/include/c++/10/bits/char_traits.h ****     {
 282:/usr/include/c++/10/bits/char_traits.h **** #ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED
 283:/usr/include/c++/10/bits/char_traits.h ****       (void) __a;
 284:/usr/include/c++/10/bits/char_traits.h ****       (void) __n;
 285:/usr/include/c++/10/bits/char_traits.h ****       // In constexpr contexts all character arrays should be constant.
 286:/usr/include/c++/10/bits/char_traits.h ****       return __builtin_is_constant_evaluated();
 287:/usr/include/c++/10/bits/char_traits.h **** #else
 288:/usr/include/c++/10/bits/char_traits.h ****       size_t __i = 0;
 289:/usr/include/c++/10/bits/char_traits.h ****       while (__i < __n && __builtin_constant_p(__a[__i]))
 290:/usr/include/c++/10/bits/char_traits.h **** 	__i++;
 291:/usr/include/c++/10/bits/char_traits.h ****       return __i == __n;
 292:/usr/include/c++/10/bits/char_traits.h **** #endif
 293:/usr/include/c++/10/bits/char_traits.h ****     }
 294:/usr/include/c++/10/bits/char_traits.h **** #endif
 295:/usr/include/c++/10/bits/char_traits.h **** 
 296:/usr/include/c++/10/bits/char_traits.h ****   // 21.1
 297:/usr/include/c++/10/bits/char_traits.h ****   /**
 298:/usr/include/c++/10/bits/char_traits.h ****    *  @brief  Basis for explicit traits specializations.
 299:/usr/include/c++/10/bits/char_traits.h ****    *
 300:/usr/include/c++/10/bits/char_traits.h ****    *  @note  For any given actual character type, this definition is
 301:/usr/include/c++/10/bits/char_traits.h ****    *  probably wrong.  Since this is just a thin wrapper around
 302:/usr/include/c++/10/bits/char_traits.h ****    *  __gnu_cxx::char_traits, it is possible to achieve a more
 303:/usr/include/c++/10/bits/char_traits.h ****    *  appropriate definition by specializing __gnu_cxx::char_traits.
 304:/usr/include/c++/10/bits/char_traits.h ****    *
 305:/usr/include/c++/10/bits/char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
 306:/usr/include/c++/10/bits/char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
 307:/usr/include/c++/10/bits/char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.
 308:/usr/include/c++/10/bits/char_traits.h ****   */
 309:/usr/include/c++/10/bits/char_traits.h ****   template<class _CharT>
 310:/usr/include/c++/10/bits/char_traits.h ****     struct char_traits : public __gnu_cxx::char_traits<_CharT>
 311:/usr/include/c++/10/bits/char_traits.h ****     { };
 312:/usr/include/c++/10/bits/char_traits.h **** 
 313:/usr/include/c++/10/bits/char_traits.h **** 
 314:/usr/include/c++/10/bits/char_traits.h ****   /// 21.1.3.1  char_traits specializations
 315:/usr/include/c++/10/bits/char_traits.h ****   template<>
 316:/usr/include/c++/10/bits/char_traits.h ****     struct char_traits<char>
 317:/usr/include/c++/10/bits/char_traits.h ****     {
 318:/usr/include/c++/10/bits/char_traits.h ****       typedef char              char_type;
 319:/usr/include/c++/10/bits/char_traits.h ****       typedef int               int_type;
 320:/usr/include/c++/10/bits/char_traits.h ****       typedef streampos         pos_type;
 321:/usr/include/c++/10/bits/char_traits.h ****       typedef streamoff         off_type;
 322:/usr/include/c++/10/bits/char_traits.h ****       typedef mbstate_t         state_type;
 323:/usr/include/c++/10/bits/char_traits.h **** #if __cpp_lib_three_way_comparison
 324:/usr/include/c++/10/bits/char_traits.h ****       using comparison_category = strong_ordering;
 325:/usr/include/c++/10/bits/char_traits.h **** #endif
 326:/usr/include/c++/10/bits/char_traits.h **** 
 327:/usr/include/c++/10/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR void
 328:/usr/include/c++/10/bits/char_traits.h ****       assign(char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 329:/usr/include/c++/10/bits/char_traits.h ****       { __c1 = __c2; }
AARCH64 GAS  obj/extInstr.s 			page 65


 330:/usr/include/c++/10/bits/char_traits.h **** 
 331:/usr/include/c++/10/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 332:/usr/include/c++/10/bits/char_traits.h ****       eq(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 333:/usr/include/c++/10/bits/char_traits.h ****       { return __c1 == __c2; }
 334:/usr/include/c++/10/bits/char_traits.h **** 
 335:/usr/include/c++/10/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 336:/usr/include/c++/10/bits/char_traits.h ****       lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 337:/usr/include/c++/10/bits/char_traits.h ****       {
 338:/usr/include/c++/10/bits/char_traits.h **** 	// LWG 467.
 339:/usr/include/c++/10/bits/char_traits.h **** 	return (static_cast<unsigned char>(__c1)
 340:/usr/include/c++/10/bits/char_traits.h **** 		< static_cast<unsigned char>(__c2));
 341:/usr/include/c++/10/bits/char_traits.h ****       }
 342:/usr/include/c++/10/bits/char_traits.h **** 
 343:/usr/include/c++/10/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR int
 344:/usr/include/c++/10/bits/char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, size_t __n)
 345:/usr/include/c++/10/bits/char_traits.h ****       {
 346:/usr/include/c++/10/bits/char_traits.h **** 	if (__n == 0)
 347:/usr/include/c++/10/bits/char_traits.h **** 	  return 0;
 348:/usr/include/c++/10/bits/char_traits.h **** #if __cplusplus >= 201703L
 349:/usr/include/c++/10/bits/char_traits.h **** 	if (__builtin_constant_p(__n)
 350:/usr/include/c++/10/bits/char_traits.h **** 	    && __constant_char_array_p(__s1, __n)
 351:/usr/include/c++/10/bits/char_traits.h **** 	    && __constant_char_array_p(__s2, __n))
 352:/usr/include/c++/10/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::compare(__s1, __s2, __n);
 353:/usr/include/c++/10/bits/char_traits.h **** #endif
 354:/usr/include/c++/10/bits/char_traits.h **** 	return __builtin_memcmp(__s1, __s2, __n);
 355:/usr/include/c++/10/bits/char_traits.h ****       }
 356:/usr/include/c++/10/bits/char_traits.h **** 
 357:/usr/include/c++/10/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR size_t
 358:/usr/include/c++/10/bits/char_traits.h ****       length(const char_type* __s)
 359:/usr/include/c++/10/bits/char_traits.h ****       {
 360:/usr/include/c++/10/bits/char_traits.h **** #if __cplusplus >= 201703L
 361:/usr/include/c++/10/bits/char_traits.h **** 	if (__constant_string_p(__s))
 362:/usr/include/c++/10/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 363:/usr/include/c++/10/bits/char_traits.h **** #endif
 364:/usr/include/c++/10/bits/char_traits.h **** 	return __builtin_strlen(__s);
 312              		.loc 7 364 2 is_stmt 1 view .LVU94
 313              	.LBB812:
 314              	.LBB750:
 611:/usr/include/c++/10/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 315              		.loc 1 611 18 is_stmt 0 view .LVU95
 316 0074 01000090 		adrp	x1, .LC0
 317 0078 F90240F9 		ldr	x25, [x23, #:got_lo12:_ZSt4cout]
 318 007c 21000091 		add	x1, x1, :lo12:.LC0
 319 0080 E20280D2 		mov	x2, 23
 320 0084 E00319AA 		mov	x0, x25
 321 0088 00000094 		bl	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 322              	.LVL15:
 611:/usr/include/c++/10/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 323              		.loc 1 611 18 view .LVU96
 324              	.LBE750:
 325              	.LBE812:
 326              	.LBB813:
 327              	.LBI813:
 108:/usr/include/c++/10/ostream ****       {
 328              		.loc 1 108 7 is_stmt 1 view .LVU97
 329              	.LBB814:
 113:/usr/include/c++/10/ostream ****       }
AARCH64 GAS  obj/extInstr.s 			page 66


 330              		.loc 1 113 13 is_stmt 0 view .LVU98
 331 008c E00319AA 		mov	x0, x25
 332 0090 00000094 		bl	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0
 333              	.LVL16:
 113:/usr/include/c++/10/ostream ****       }
 334              		.loc 1 113 13 view .LVU99
 335              	.LBE814:
 336              	.LBE813:
  58:extInstr.cpp  **** 	cout<<"x[0]: "<<x.ToStringU16()<<endl;
 337              		.loc 4 58 2 is_stmt 1 view .LVU100
 338              	.LBB815:
 339              	.LBI815:
 606:/usr/include/c++/10/ostream ****     {
 340              		.loc 1 606 5 view .LVU101
 606:/usr/include/c++/10/ostream ****     {
 341              		.loc 1 606 5 is_stmt 0 view .LVU102
 342              	.LBE815:
 343              		.loc 7 364 2 is_stmt 1 view .LVU103
 344              	.LBB819:
 345              	.LBB816:
 611:/usr/include/c++/10/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 346              		.loc 1 611 18 is_stmt 0 view .LVU104
 347 0094 E00319AA 		mov	x0, x25
 348 0098 01000090 		adrp	x1, .LC1
 349              	.LBE816:
 350              	.LBE819:
 351              	.LBB820:
 352              	.LBB803:
 353              	.LBB795:
 354              	.LBB785:
 355              	.LBB768:
 356              	.LBB769:
 357 009c 19000090 		adrp	x25, .LC2
 358              	.LBE769:
 359              	.LBE768:
 360              	.LBE785:
 361              	.LBE795:
 362              	.LBE803:
 363              	.LBE820:
 364              	.LBB821:
 365              	.LBB817:
 366 00a0 21000091 		add	x1, x1, :lo12:.LC1
 367              	.LBE817:
 368              	.LBE821:
 369              	.LBB822:
 370              	.LBB804:
 371              	.LBB796:
 372              	.LBB786:
 373              	.LBB772:
 374              	.LBB770:
 375 00a4 39030091 		add	x25, x25, :lo12:.LC2
 376              	.LBE770:
 377              	.LBE772:
 378              	.LBE786:
 379              	.LBE796:
 380              	.LBE804:
 381              	.LBE822:
AARCH64 GAS  obj/extInstr.s 			page 67


 382              	.LBB823:
 383              	.LBB818:
 384 00a8 C20080D2 		mov	x2, 6
 385 00ac 00000094 		bl	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 386              	.LVL17:
 611:/usr/include/c++/10/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 387              		.loc 1 611 18 view .LVU105
 388              	.LBE818:
 389              	.LBE823:
 390              	.LBB824:
 391              	.LBI751:
  49:../../Include/Vec128.h ****         {
  50:../../Include/Vec128.h ****             oss << std::setw(w) << (uint64_t)x[i];
  51:../../Include/Vec128.h **** 
  52:../../Include/Vec128.h ****             if (i + 1 == n / 2)
  53:../../Include/Vec128.h ****                 oss << "   |";
  54:../../Include/Vec128.h ****         }
  55:../../Include/Vec128.h **** 
  56:../../Include/Vec128.h ****         return oss.str();
  57:../../Include/Vec128.h ****     }
  58:../../Include/Vec128.h **** 
  59:../../Include/Vec128.h ****     template <typename T> std::string ToStringHex(const T* x, int n, int w)
  60:../../Include/Vec128.h ****     {
  61:../../Include/Vec128.h ****         std::ostringstream oss;
  62:../../Include/Vec128.h **** 
  63:../../Include/Vec128.h ****         for (int i = 0; i < n; i++)
  64:../../Include/Vec128.h ****         {
  65:../../Include/Vec128.h ****             const int w_temp = 16;
  66:../../Include/Vec128.h ****             std::ostringstream oss_temp;
  67:../../Include/Vec128.h **** 
  68:../../Include/Vec128.h ****             oss_temp << std::uppercase << std::hex << std::setfill('0');
  69:../../Include/Vec128.h ****             oss_temp << std::setw(w_temp) << (uint64_t)x[i];
  70:../../Include/Vec128.h ****             std::string s1 = oss_temp.str();
  71:../../Include/Vec128.h ****             std::string s2 = s1.substr(w_temp - sizeof(T) * 2);
  72:../../Include/Vec128.h **** 
  73:../../Include/Vec128.h ****             oss << std::setw(w) << s2;
  74:../../Include/Vec128.h **** 
  75:../../Include/Vec128.h ****             if (i + 1 == n / 2)
  76:../../Include/Vec128.h ****                 oss << "   |";
  77:../../Include/Vec128.h ****         }
  78:../../Include/Vec128.h **** 
  79:../../Include/Vec128.h ****         return oss.str();
  80:../../Include/Vec128.h ****     }
  81:../../Include/Vec128.h **** 
  82:../../Include/Vec128.h ****     template <typename T> std::string ToStringFP(const T* x, int n, int w, int p)
  83:../../Include/Vec128.h ****     {
  84:../../Include/Vec128.h ****         std::ostringstream oss;
  85:../../Include/Vec128.h **** 
  86:../../Include/Vec128.h ****         oss << std::fixed << std::setprecision(p);
  87:../../Include/Vec128.h **** 
  88:../../Include/Vec128.h ****         for (int i = 0; i < n; i++)
  89:../../Include/Vec128.h ****         {
  90:../../Include/Vec128.h ****             oss << std::setw(w) << x[i];
  91:../../Include/Vec128.h **** 
  92:../../Include/Vec128.h ****             if (i + 1 == n / 2)
  93:../../Include/Vec128.h ****                 oss << "   |";
  94:../../Include/Vec128.h ****         }
AARCH64 GAS  obj/extInstr.s 			page 68


  95:../../Include/Vec128.h **** 
  96:../../Include/Vec128.h ****         return oss.str();
  97:../../Include/Vec128.h ****     }
  98:../../Include/Vec128.h **** 
  99:../../Include/Vec128.h **** public:
 100:../../Include/Vec128.h **** 
 101:../../Include/Vec128.h ****     //
 102:../../Include/Vec128.h ****     // Signed integer
 103:../../Include/Vec128.h ****     //
 104:../../Include/Vec128.h ****       
 105:../../Include/Vec128.h ****     std::string ToStringI8(void)
 106:../../Include/Vec128.h ****     {
 107:../../Include/Vec128.h ****         return ToStringInt(m_I8, sizeof(m_I8) / sizeof(int8_t), 4);
 108:../../Include/Vec128.h ****     }
 109:../../Include/Vec128.h **** 
 110:../../Include/Vec128.h ****     std::string ToStringI16(void)
 111:../../Include/Vec128.h ****     {
 112:../../Include/Vec128.h ****         return ToStringInt(m_I16, sizeof(m_I16) / sizeof(int16_t), 8);
 113:../../Include/Vec128.h ****     }
 114:../../Include/Vec128.h **** 
 115:../../Include/Vec128.h ****     std::string ToStringI32(void)
 116:../../Include/Vec128.h ****     {
 117:../../Include/Vec128.h ****         return ToStringInt(m_I32, sizeof(m_I32) / sizeof(int32_t), 16);
 118:../../Include/Vec128.h ****     }
 119:../../Include/Vec128.h **** 
 120:../../Include/Vec128.h ****     std::string ToStringI64(void)
 121:../../Include/Vec128.h ****     {
 122:../../Include/Vec128.h ****         return ToStringInt(m_I64, sizeof(m_I64) / sizeof(int64_t), 32);
 123:../../Include/Vec128.h ****     }
 124:../../Include/Vec128.h **** 
 125:../../Include/Vec128.h ****     //
 126:../../Include/Vec128.h ****     // Unsigned integer
 127:../../Include/Vec128.h ****     //
 128:../../Include/Vec128.h **** 
 129:../../Include/Vec128.h ****     std::string ToStringU8(void)
 130:../../Include/Vec128.h ****     {
 131:../../Include/Vec128.h ****         return ToStringUint(m_U8, sizeof(m_U8) / sizeof(uint8_t), 4);
 132:../../Include/Vec128.h ****     }
 133:../../Include/Vec128.h **** 
 134:../../Include/Vec128.h ****     std::string ToStringU16(void)
 392              		.loc 5 134 17 is_stmt 1 view .LVU106
 393              	.LBE824:
 135:../../Include/Vec128.h ****     {
 136:../../Include/Vec128.h ****         return ToStringUint(m_U16, sizeof(m_U16) / sizeof(uint16_t), 8);
 394              		.loc 5 136 9 view .LVU107
 395              	.LBB825:
 396              	.LBB805:
 397              	.LBI752:
  44:../../Include/Vec128.h ****     {
 398              		.loc 5 44 39 view .LVU108
 399              	.LBB797:
  46:../../Include/Vec128.h **** 
 400              		.loc 5 46 28 is_stmt 0 view .LVU109
 401 00b0 E00313AA 		mov	x0, x19
 402 00b4 00000094 		bl	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEC1Ev
 403              	.LVL18:
 404              	.LEHE0:
AARCH64 GAS  obj/extInstr.s 			page 69


 405              	.LBB787:
  48:../../Include/Vec128.h ****         {
 406              		.loc 5 48 27 is_stmt 1 view .LVU110
 407              		.p2align 3,,7
 408              	.L9:
  48:../../Include/Vec128.h ****         {
 409              		.loc 5 48 27 is_stmt 0 view .LVU111
 410              	.LBE787:
 411              	.LBE797:
 412              	.LBE805:
 413              	.LBE825:
 414              		.file 8 "/usr/include/c++/10/iomanip"
   1:/usr/include/c++/10/iomanip **** // Standard stream manipulators -*- C++ -*-
   2:/usr/include/c++/10/iomanip **** 
   3:/usr/include/c++/10/iomanip **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:/usr/include/c++/10/iomanip **** //
   5:/usr/include/c++/10/iomanip **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/10/iomanip **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/10/iomanip **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/10/iomanip **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/10/iomanip **** // any later version.
  10:/usr/include/c++/10/iomanip **** 
  11:/usr/include/c++/10/iomanip **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/10/iomanip **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/10/iomanip **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/10/iomanip **** // GNU General Public License for more details.
  15:/usr/include/c++/10/iomanip **** 
  16:/usr/include/c++/10/iomanip **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/10/iomanip **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/10/iomanip **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/10/iomanip **** 
  20:/usr/include/c++/10/iomanip **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/10/iomanip **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/10/iomanip **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/10/iomanip **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/10/iomanip **** 
  25:/usr/include/c++/10/iomanip **** /** @file include/iomanip
  26:/usr/include/c++/10/iomanip ****  *  This is a Standard C++ Library header.
  27:/usr/include/c++/10/iomanip ****  */
  28:/usr/include/c++/10/iomanip **** 
  29:/usr/include/c++/10/iomanip **** //
  30:/usr/include/c++/10/iomanip **** // ISO C++ 14882: 27.6.3  Standard manipulators
  31:/usr/include/c++/10/iomanip **** //
  32:/usr/include/c++/10/iomanip **** 
  33:/usr/include/c++/10/iomanip **** #ifndef _GLIBCXX_IOMANIP
  34:/usr/include/c++/10/iomanip **** #define _GLIBCXX_IOMANIP 1
  35:/usr/include/c++/10/iomanip **** 
  36:/usr/include/c++/10/iomanip **** #pragma GCC system_header
  37:/usr/include/c++/10/iomanip **** 
  38:/usr/include/c++/10/iomanip **** #include <bits/c++config.h>
  39:/usr/include/c++/10/iomanip **** #include <iosfwd>
  40:/usr/include/c++/10/iomanip **** #include <bits/ios_base.h>
  41:/usr/include/c++/10/iomanip **** 
  42:/usr/include/c++/10/iomanip **** #if __cplusplus >= 201103L
  43:/usr/include/c++/10/iomanip **** #include <locale>
  44:/usr/include/c++/10/iomanip **** #if __cplusplus > 201103L
  45:/usr/include/c++/10/iomanip **** #include <bits/quoted_string.h>
AARCH64 GAS  obj/extInstr.s 			page 70


  46:/usr/include/c++/10/iomanip **** #endif
  47:/usr/include/c++/10/iomanip **** #endif
  48:/usr/include/c++/10/iomanip **** 
  49:/usr/include/c++/10/iomanip **** namespace std _GLIBCXX_VISIBILITY(default)
  50:/usr/include/c++/10/iomanip **** {
  51:/usr/include/c++/10/iomanip **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  52:/usr/include/c++/10/iomanip **** 
  53:/usr/include/c++/10/iomanip ****   // [27.6.3] standard manipulators
  54:/usr/include/c++/10/iomanip ****   // Also see DR 183.
  55:/usr/include/c++/10/iomanip **** 
  56:/usr/include/c++/10/iomanip ****   struct _Resetiosflags { ios_base::fmtflags _M_mask; };
  57:/usr/include/c++/10/iomanip **** 
  58:/usr/include/c++/10/iomanip ****   /**
  59:/usr/include/c++/10/iomanip ****    *  @brief  Manipulator for @c setf.
  60:/usr/include/c++/10/iomanip ****    *  @param  __mask  A format flags mask.
  61:/usr/include/c++/10/iomanip ****    *
  62:/usr/include/c++/10/iomanip ****    *  Sent to a stream object, this manipulator resets the specified flags,
  63:/usr/include/c++/10/iomanip ****    *  via @e stream.setf(0,__mask).
  64:/usr/include/c++/10/iomanip ****   */
  65:/usr/include/c++/10/iomanip ****   inline _Resetiosflags
  66:/usr/include/c++/10/iomanip ****   resetiosflags(ios_base::fmtflags __mask)
  67:/usr/include/c++/10/iomanip ****   { return { __mask }; }
  68:/usr/include/c++/10/iomanip **** 
  69:/usr/include/c++/10/iomanip ****   template<typename _CharT, typename _Traits>
  70:/usr/include/c++/10/iomanip ****     inline basic_istream<_CharT, _Traits>&
  71:/usr/include/c++/10/iomanip ****     operator>>(basic_istream<_CharT, _Traits>& __is, _Resetiosflags __f)
  72:/usr/include/c++/10/iomanip ****     {
  73:/usr/include/c++/10/iomanip ****       __is.setf(ios_base::fmtflags(0), __f._M_mask);
  74:/usr/include/c++/10/iomanip ****       return __is;
  75:/usr/include/c++/10/iomanip ****     }
  76:/usr/include/c++/10/iomanip **** 
  77:/usr/include/c++/10/iomanip ****   template<typename _CharT, typename _Traits>
  78:/usr/include/c++/10/iomanip ****     inline basic_ostream<_CharT, _Traits>&
  79:/usr/include/c++/10/iomanip ****     operator<<(basic_ostream<_CharT, _Traits>& __os, _Resetiosflags __f)
  80:/usr/include/c++/10/iomanip ****     {
  81:/usr/include/c++/10/iomanip ****       __os.setf(ios_base::fmtflags(0), __f._M_mask);
  82:/usr/include/c++/10/iomanip ****       return __os;
  83:/usr/include/c++/10/iomanip ****     }
  84:/usr/include/c++/10/iomanip **** 
  85:/usr/include/c++/10/iomanip **** 
  86:/usr/include/c++/10/iomanip ****   struct _Setiosflags { ios_base::fmtflags _M_mask; };
  87:/usr/include/c++/10/iomanip **** 
  88:/usr/include/c++/10/iomanip ****   /**
  89:/usr/include/c++/10/iomanip ****    *  @brief  Manipulator for @c setf.
  90:/usr/include/c++/10/iomanip ****    *  @param  __mask  A format flags mask.
  91:/usr/include/c++/10/iomanip ****    *
  92:/usr/include/c++/10/iomanip ****    *  Sent to a stream object, this manipulator sets the format flags
  93:/usr/include/c++/10/iomanip ****    *  to @a __mask.
  94:/usr/include/c++/10/iomanip ****   */
  95:/usr/include/c++/10/iomanip ****   inline _Setiosflags
  96:/usr/include/c++/10/iomanip ****   setiosflags(ios_base::fmtflags __mask)
  97:/usr/include/c++/10/iomanip ****   { return { __mask }; }
  98:/usr/include/c++/10/iomanip **** 
  99:/usr/include/c++/10/iomanip ****   template<typename _CharT, typename _Traits>
 100:/usr/include/c++/10/iomanip ****     inline basic_istream<_CharT, _Traits>&
 101:/usr/include/c++/10/iomanip ****     operator>>(basic_istream<_CharT, _Traits>& __is, _Setiosflags __f)
 102:/usr/include/c++/10/iomanip ****     {
AARCH64 GAS  obj/extInstr.s 			page 71


 103:/usr/include/c++/10/iomanip ****       __is.setf(__f._M_mask);
 104:/usr/include/c++/10/iomanip ****       return __is;
 105:/usr/include/c++/10/iomanip ****     }
 106:/usr/include/c++/10/iomanip **** 
 107:/usr/include/c++/10/iomanip ****   template<typename _CharT, typename _Traits>
 108:/usr/include/c++/10/iomanip ****     inline basic_ostream<_CharT, _Traits>&
 109:/usr/include/c++/10/iomanip ****     operator<<(basic_ostream<_CharT, _Traits>& __os, _Setiosflags __f)
 110:/usr/include/c++/10/iomanip ****     {
 111:/usr/include/c++/10/iomanip ****       __os.setf(__f._M_mask);
 112:/usr/include/c++/10/iomanip ****       return __os;
 113:/usr/include/c++/10/iomanip ****     }
 114:/usr/include/c++/10/iomanip **** 
 115:/usr/include/c++/10/iomanip **** 
 116:/usr/include/c++/10/iomanip ****   struct _Setbase { int _M_base; };
 117:/usr/include/c++/10/iomanip **** 
 118:/usr/include/c++/10/iomanip ****   /**
 119:/usr/include/c++/10/iomanip ****    *  @brief  Manipulator for @c setf.
 120:/usr/include/c++/10/iomanip ****    *  @param  __base  A numeric base.
 121:/usr/include/c++/10/iomanip ****    *
 122:/usr/include/c++/10/iomanip ****    *  Sent to a stream object, this manipulator changes the
 123:/usr/include/c++/10/iomanip ****    *  @c ios_base::basefield flags to @c oct, @c dec, or @c hex when @a base
 124:/usr/include/c++/10/iomanip ****    *  is 8, 10, or 16, accordingly, and to 0 if @a __base is any other value.
 125:/usr/include/c++/10/iomanip ****   */
 126:/usr/include/c++/10/iomanip ****   inline _Setbase
 127:/usr/include/c++/10/iomanip ****   setbase(int __base)
 128:/usr/include/c++/10/iomanip ****   { return { __base }; }
 129:/usr/include/c++/10/iomanip **** 
 130:/usr/include/c++/10/iomanip ****   template<typename _CharT, typename _Traits>
 131:/usr/include/c++/10/iomanip ****     inline basic_istream<_CharT, _Traits>&
 132:/usr/include/c++/10/iomanip ****     operator>>(basic_istream<_CharT, _Traits>& __is, _Setbase __f)
 133:/usr/include/c++/10/iomanip ****     {
 134:/usr/include/c++/10/iomanip ****       __is.setf(__f._M_base ==  8 ? ios_base::oct :
 135:/usr/include/c++/10/iomanip **** 		__f._M_base == 10 ? ios_base::dec :
 136:/usr/include/c++/10/iomanip **** 		__f._M_base == 16 ? ios_base::hex :
 137:/usr/include/c++/10/iomanip **** 		ios_base::fmtflags(0), ios_base::basefield);
 138:/usr/include/c++/10/iomanip ****       return __is;
 139:/usr/include/c++/10/iomanip ****     }
 140:/usr/include/c++/10/iomanip **** 
 141:/usr/include/c++/10/iomanip ****   template<typename _CharT, typename _Traits>
 142:/usr/include/c++/10/iomanip ****     inline basic_ostream<_CharT, _Traits>&
 143:/usr/include/c++/10/iomanip ****     operator<<(basic_ostream<_CharT, _Traits>& __os, _Setbase __f)
 144:/usr/include/c++/10/iomanip ****     {
 145:/usr/include/c++/10/iomanip ****       __os.setf(__f._M_base ==  8 ? ios_base::oct :
 146:/usr/include/c++/10/iomanip **** 		__f._M_base == 10 ? ios_base::dec :
 147:/usr/include/c++/10/iomanip **** 		__f._M_base == 16 ? ios_base::hex :
 148:/usr/include/c++/10/iomanip **** 		ios_base::fmtflags(0), ios_base::basefield);
 149:/usr/include/c++/10/iomanip ****       return __os;
 150:/usr/include/c++/10/iomanip ****     }
 151:/usr/include/c++/10/iomanip **** 
 152:/usr/include/c++/10/iomanip **** 
 153:/usr/include/c++/10/iomanip ****   template<typename _CharT>
 154:/usr/include/c++/10/iomanip ****     struct _Setfill { _CharT _M_c; };
 155:/usr/include/c++/10/iomanip **** 
 156:/usr/include/c++/10/iomanip ****   /**
 157:/usr/include/c++/10/iomanip ****    *  @brief  Manipulator for @c fill.
 158:/usr/include/c++/10/iomanip ****    *  @param  __c  The new fill character.
 159:/usr/include/c++/10/iomanip ****    *
AARCH64 GAS  obj/extInstr.s 			page 72


 160:/usr/include/c++/10/iomanip ****    *  Sent to a stream object, this manipulator calls @c fill(__c) for that
 161:/usr/include/c++/10/iomanip ****    *  object.
 162:/usr/include/c++/10/iomanip ****   */
 163:/usr/include/c++/10/iomanip ****   template<typename _CharT>
 164:/usr/include/c++/10/iomanip ****     inline _Setfill<_CharT>
 165:/usr/include/c++/10/iomanip ****     setfill(_CharT __c)
 166:/usr/include/c++/10/iomanip ****     { return { __c }; }
 167:/usr/include/c++/10/iomanip **** 
 168:/usr/include/c++/10/iomanip ****   template<typename _CharT, typename _Traits>
 169:/usr/include/c++/10/iomanip ****     inline basic_istream<_CharT, _Traits>&
 170:/usr/include/c++/10/iomanip ****     operator>>(basic_istream<_CharT, _Traits>& __is, _Setfill<_CharT> __f)
 171:/usr/include/c++/10/iomanip ****     {
 172:/usr/include/c++/10/iomanip ****       __is.fill(__f._M_c);
 173:/usr/include/c++/10/iomanip ****       return __is;
 174:/usr/include/c++/10/iomanip ****     }
 175:/usr/include/c++/10/iomanip **** 
 176:/usr/include/c++/10/iomanip ****   template<typename _CharT, typename _Traits>
 177:/usr/include/c++/10/iomanip ****     inline basic_ostream<_CharT, _Traits>&
 178:/usr/include/c++/10/iomanip ****     operator<<(basic_ostream<_CharT, _Traits>& __os, _Setfill<_CharT> __f)
 179:/usr/include/c++/10/iomanip ****     {
 180:/usr/include/c++/10/iomanip ****       __os.fill(__f._M_c);
 181:/usr/include/c++/10/iomanip ****       return __os;
 182:/usr/include/c++/10/iomanip ****     }
 183:/usr/include/c++/10/iomanip **** 
 184:/usr/include/c++/10/iomanip **** 
 185:/usr/include/c++/10/iomanip ****   struct _Setprecision { int _M_n; };
 186:/usr/include/c++/10/iomanip **** 
 187:/usr/include/c++/10/iomanip ****   /**
 188:/usr/include/c++/10/iomanip ****    *  @brief  Manipulator for @c precision.
 189:/usr/include/c++/10/iomanip ****    *  @param  __n  The new precision.
 190:/usr/include/c++/10/iomanip ****    *
 191:/usr/include/c++/10/iomanip ****    *  Sent to a stream object, this manipulator calls @c precision(__n) for
 192:/usr/include/c++/10/iomanip ****    *  that object.
 193:/usr/include/c++/10/iomanip ****   */
 194:/usr/include/c++/10/iomanip ****   inline _Setprecision
 195:/usr/include/c++/10/iomanip ****   setprecision(int __n)
 196:/usr/include/c++/10/iomanip ****   { return { __n }; }
 197:/usr/include/c++/10/iomanip **** 
 198:/usr/include/c++/10/iomanip ****   template<typename _CharT, typename _Traits>
 199:/usr/include/c++/10/iomanip ****     inline basic_istream<_CharT, _Traits>&
 200:/usr/include/c++/10/iomanip ****     operator>>(basic_istream<_CharT, _Traits>& __is, _Setprecision __f)
 201:/usr/include/c++/10/iomanip ****     {
 202:/usr/include/c++/10/iomanip ****       __is.precision(__f._M_n);
 203:/usr/include/c++/10/iomanip ****       return __is;
 204:/usr/include/c++/10/iomanip ****     }
 205:/usr/include/c++/10/iomanip **** 
 206:/usr/include/c++/10/iomanip ****   template<typename _CharT, typename _Traits>
 207:/usr/include/c++/10/iomanip ****     inline basic_ostream<_CharT, _Traits>&
 208:/usr/include/c++/10/iomanip ****     operator<<(basic_ostream<_CharT, _Traits>& __os, _Setprecision __f)
 209:/usr/include/c++/10/iomanip ****     {
 210:/usr/include/c++/10/iomanip ****       __os.precision(__f._M_n);
 211:/usr/include/c++/10/iomanip ****       return __os;
 212:/usr/include/c++/10/iomanip ****     }
 213:/usr/include/c++/10/iomanip **** 
 214:/usr/include/c++/10/iomanip **** 
 215:/usr/include/c++/10/iomanip ****   struct _Setw { int _M_n; };
 216:/usr/include/c++/10/iomanip **** 
AARCH64 GAS  obj/extInstr.s 			page 73


 217:/usr/include/c++/10/iomanip ****   /**
 218:/usr/include/c++/10/iomanip ****    *  @brief  Manipulator for @c width.
 219:/usr/include/c++/10/iomanip ****    *  @param  __n  The new width.
 220:/usr/include/c++/10/iomanip ****    *
 221:/usr/include/c++/10/iomanip ****    *  Sent to a stream object, this manipulator calls @c width(__n) for
 222:/usr/include/c++/10/iomanip ****    *  that object.
 223:/usr/include/c++/10/iomanip ****   */
 224:/usr/include/c++/10/iomanip ****   inline _Setw
 225:/usr/include/c++/10/iomanip ****   setw(int __n)
 226:/usr/include/c++/10/iomanip ****   { return { __n }; }
 415              		.loc 8 226 5 is_stmt 1 view .LVU112
 416              	.LBB826:
 417              	.LBB806:
 418              	.LBB798:
 419              	.LBB788:
 420              	.LBB773:
 421              	.LBI755:
 227:/usr/include/c++/10/iomanip **** 
 228:/usr/include/c++/10/iomanip ****   template<typename _CharT, typename _Traits>
 229:/usr/include/c++/10/iomanip ****     inline basic_istream<_CharT, _Traits>&
 230:/usr/include/c++/10/iomanip ****     operator>>(basic_istream<_CharT, _Traits>& __is, _Setw __f)
 231:/usr/include/c++/10/iomanip ****     {
 232:/usr/include/c++/10/iomanip ****       __is.width(__f._M_n);
 233:/usr/include/c++/10/iomanip ****       return __is;
 234:/usr/include/c++/10/iomanip ****     }
 235:/usr/include/c++/10/iomanip **** 
 236:/usr/include/c++/10/iomanip ****   template<typename _CharT, typename _Traits>
 237:/usr/include/c++/10/iomanip ****     inline basic_ostream<_CharT, _Traits>&
 238:/usr/include/c++/10/iomanip ****     operator<<(basic_ostream<_CharT, _Traits>& __os, _Setw __f)
 422              		.loc 8 238 5 view .LVU113
 423              	.LBB765:
 424              	.LBB762:
 425              	.LBI757:
 751:/usr/include/c++/10/bits/ios_base.h ****     {
 426              		.loc 6 751 5 view .LVU114
 427              	.LBB759:
 753:/usr/include/c++/10/bits/ios_base.h ****       _M_width = __wide;
 428              		.loc 6 753 7 view .LVU115
 429              		.loc 6 754 7 view .LVU116
 430              	.LBE759:
 431              	.LBE762:
 239:/usr/include/c++/10/iomanip ****     {
 240:/usr/include/c++/10/iomanip ****       __os.width(__f._M_n);
 432              		.loc 8 240 17 is_stmt 0 view .LVU117
 433 00b8 E24740F9 		ldr	x2, [sp, 136]
 434              	.LBE765:
 435              	.LBE773:
  50:../../Include/Vec128.h **** 
 436              		.loc 5 50 47 view .LVU118
 437 00bc C1C6348B 		add	x1, x22, x20, sxtw 1
 438              	.LBB774:
 439              	.LBB775:
 171:/usr/include/c++/10/ostream **** 
 440              		.loc 1 171 25 view .LVU119
 441 00c0 E00313AA 		mov	x0, x19
 442              	.LBE775:
 443              	.LBE774:
AARCH64 GAS  obj/extInstr.s 			page 74


 444              	.LBB778:
 445              	.LBB766:
 446              	.LBB763:
 447              	.LBB760:
 448              		.loc 6 754 16 view .LVU120
 449 00c4 42805EF8 		ldr	x2, [x2, -24]
 450              	.LBE760:
 451              	.LBE763:
 452              	.LBE766:
 453              	.LBE778:
 454              	.LBB779:
 455              	.LBB776:
 171:/usr/include/c++/10/ostream **** 
 456              		.loc 1 171 25 view .LVU121
 457 00c8 21A04079 		ldrh	w1, [x1, 80]
 458              	.LBE776:
 459              	.LBE779:
 460              	.LBB780:
 461              	.LBB767:
 462              	.LBB764:
 463              	.LBB761:
 464              		.loc 6 754 16 view .LVU122
 465 00cc 6202028B 		add	x2, x19, x2
 466 00d0 580800F9 		str	x24, [x2, 16]
 467              	.LVL19:
 755:/usr/include/c++/10/bits/ios_base.h ****       return __old;
 468              		.loc 6 755 7 is_stmt 1 view .LVU123
 469              		.loc 6 755 7 is_stmt 0 view .LVU124
 470              	.LBE761:
 471              	.LBE764:
 472              	.LBE767:
 473              	.LBE780:
 474              	.LBB781:
 475              	.LBI774:
 170:/usr/include/c++/10/ostream ****       { return _M_insert(__n); }
 476              		.loc 1 170 7 is_stmt 1 view .LVU125
 477              	.LEHB1:
 478              	.LBB777:
 171:/usr/include/c++/10/ostream **** 
 479              		.loc 1 171 25 is_stmt 0 view .LVU126
 480 00d4 00000094 		bl	_ZNSo9_M_insertImEERSoT_
 481              	.LVL20:
 171:/usr/include/c++/10/ostream **** 
 482              		.loc 1 171 25 view .LVU127
 483              	.LBE777:
 484              	.LBE781:
  52:../../Include/Vec128.h ****                 oss << "   |";
 485              		.loc 5 52 19 view .LVU128
 486 00d8 94060011 		add	w20, w20, 1
 487              	.LVL21:
  52:../../Include/Vec128.h ****                 oss << "   |";
 488              		.loc 5 52 13 view .LVU129
 489 00dc 9F120071 		cmp	w20, 4
 490 00e0 000B0054 		beq	.L38
 491              	.LVL22:
  48:../../Include/Vec128.h ****         {
 492              		.loc 5 48 27 is_stmt 1 view .LVU130
AARCH64 GAS  obj/extInstr.s 			page 75


 493 00e4 9F220071 		cmp	w20, 8
 494 00e8 81FEFF54 		bne	.L9
 495              	.LVL23:
  48:../../Include/Vec128.h ****         {
 496              		.loc 5 48 27 is_stmt 0 view .LVU131
 497              	.LBE788:
 498              	.LBB789:
 499              	.LBI789:
 500              		.file 9 "/usr/include/c++/10/sstream"
   1:/usr/include/c++/10/sstream **** // String based streams -*- C++ -*-
   2:/usr/include/c++/10/sstream **** 
   3:/usr/include/c++/10/sstream **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:/usr/include/c++/10/sstream **** //
   5:/usr/include/c++/10/sstream **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/10/sstream **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/10/sstream **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/10/sstream **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/10/sstream **** // any later version.
  10:/usr/include/c++/10/sstream **** 
  11:/usr/include/c++/10/sstream **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/10/sstream **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/10/sstream **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/10/sstream **** // GNU General Public License for more details.
  15:/usr/include/c++/10/sstream **** 
  16:/usr/include/c++/10/sstream **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/10/sstream **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/10/sstream **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/10/sstream **** 
  20:/usr/include/c++/10/sstream **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/10/sstream **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/10/sstream **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/10/sstream **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/10/sstream **** 
  25:/usr/include/c++/10/sstream **** /** @file include/sstream
  26:/usr/include/c++/10/sstream ****  *  This is a Standard C++ Library header.
  27:/usr/include/c++/10/sstream ****  */
  28:/usr/include/c++/10/sstream **** 
  29:/usr/include/c++/10/sstream **** //
  30:/usr/include/c++/10/sstream **** // ISO C++ 14882: 27.7  String-based streams
  31:/usr/include/c++/10/sstream **** //
  32:/usr/include/c++/10/sstream **** 
  33:/usr/include/c++/10/sstream **** #ifndef _GLIBCXX_SSTREAM
  34:/usr/include/c++/10/sstream **** #define _GLIBCXX_SSTREAM 1
  35:/usr/include/c++/10/sstream **** 
  36:/usr/include/c++/10/sstream **** #pragma GCC system_header
  37:/usr/include/c++/10/sstream **** 
  38:/usr/include/c++/10/sstream **** #include <istream>
  39:/usr/include/c++/10/sstream **** #include <ostream>
  40:/usr/include/c++/10/sstream **** 
  41:/usr/include/c++/10/sstream **** namespace std _GLIBCXX_VISIBILITY(default)
  42:/usr/include/c++/10/sstream **** {
  43:/usr/include/c++/10/sstream **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:/usr/include/c++/10/sstream **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
  45:/usr/include/c++/10/sstream **** 
  46:/usr/include/c++/10/sstream ****   // [27.7.1] template class basic_stringbuf
  47:/usr/include/c++/10/sstream ****   /**
  48:/usr/include/c++/10/sstream ****    *  @brief  The actual work of input and output (for std::string).
AARCH64 GAS  obj/extInstr.s 			page 76


  49:/usr/include/c++/10/sstream ****    *  @ingroup io
  50:/usr/include/c++/10/sstream ****    *
  51:/usr/include/c++/10/sstream ****    *  @tparam _CharT  Type of character stream.
  52:/usr/include/c++/10/sstream ****    *  @tparam _Traits  Traits for character type, defaults to
  53:/usr/include/c++/10/sstream ****    *                   char_traits<_CharT>.
  54:/usr/include/c++/10/sstream ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
  55:/usr/include/c++/10/sstream ****    *
  56:/usr/include/c++/10/sstream ****    *  This class associates either or both of its input and output sequences
  57:/usr/include/c++/10/sstream ****    *  with a sequence of characters, which can be initialized from, or made
  58:/usr/include/c++/10/sstream ****    *  available as, a @c std::basic_string.  (Paraphrased from [27.7.1]/1.)
  59:/usr/include/c++/10/sstream ****    *
  60:/usr/include/c++/10/sstream ****    *  For this class, open modes (of type @c ios_base::openmode) have
  61:/usr/include/c++/10/sstream ****    *  @c in set if the input sequence can be read, and @c out set if the
  62:/usr/include/c++/10/sstream ****    *  output sequence can be written.
  63:/usr/include/c++/10/sstream ****   */
  64:/usr/include/c++/10/sstream ****   template<typename _CharT, typename _Traits, typename _Alloc>
  65:/usr/include/c++/10/sstream ****     class basic_stringbuf : public basic_streambuf<_CharT, _Traits>
  66:/usr/include/c++/10/sstream ****     {
  67:/usr/include/c++/10/sstream ****       struct __xfer_bufptrs;
  68:/usr/include/c++/10/sstream ****     public:
  69:/usr/include/c++/10/sstream ****       // Types:
  70:/usr/include/c++/10/sstream ****       typedef _CharT 					char_type;
  71:/usr/include/c++/10/sstream ****       typedef _Traits 					traits_type;
  72:/usr/include/c++/10/sstream ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  73:/usr/include/c++/10/sstream ****       // 251. basic_stringbuf missing allocator_type
  74:/usr/include/c++/10/sstream ****       typedef _Alloc				       	allocator_type;
  75:/usr/include/c++/10/sstream ****       typedef typename traits_type::int_type 		int_type;
  76:/usr/include/c++/10/sstream ****       typedef typename traits_type::pos_type 		pos_type;
  77:/usr/include/c++/10/sstream ****       typedef typename traits_type::off_type 		off_type;
  78:/usr/include/c++/10/sstream **** 
  79:/usr/include/c++/10/sstream ****       typedef basic_streambuf<char_type, traits_type>  	__streambuf_type;
  80:/usr/include/c++/10/sstream ****       typedef basic_string<char_type, _Traits, _Alloc> 	__string_type;
  81:/usr/include/c++/10/sstream ****       typedef typename __string_type::size_type		__size_type;
  82:/usr/include/c++/10/sstream **** 
  83:/usr/include/c++/10/sstream ****     protected:
  84:/usr/include/c++/10/sstream ****       /// Place to stash in || out || in | out settings for current stringbuf.
  85:/usr/include/c++/10/sstream ****       ios_base::openmode 	_M_mode;
  86:/usr/include/c++/10/sstream **** 
  87:/usr/include/c++/10/sstream ****       // Data Members:
  88:/usr/include/c++/10/sstream ****       __string_type 		_M_string;
  89:/usr/include/c++/10/sstream **** 
  90:/usr/include/c++/10/sstream ****     public:
  91:/usr/include/c++/10/sstream ****       // Constructors:
  92:/usr/include/c++/10/sstream **** 
  93:/usr/include/c++/10/sstream ****       /**
  94:/usr/include/c++/10/sstream ****        *  @brief  Starts with an empty string buffer.
  95:/usr/include/c++/10/sstream ****        *
  96:/usr/include/c++/10/sstream ****        *  The default constructor initializes the parent class using its
  97:/usr/include/c++/10/sstream ****        *  own default ctor.
  98:/usr/include/c++/10/sstream ****       */
  99:/usr/include/c++/10/sstream ****       basic_stringbuf()
 100:/usr/include/c++/10/sstream ****       : __streambuf_type(), _M_mode(ios_base::in | ios_base::out), _M_string()
 101:/usr/include/c++/10/sstream ****       { }
 102:/usr/include/c++/10/sstream **** 
 103:/usr/include/c++/10/sstream ****       /**
 104:/usr/include/c++/10/sstream ****        *  @brief  Starts with an empty string buffer.
 105:/usr/include/c++/10/sstream ****        *  @param  __mode  Whether the buffer can read, or write, or both.
AARCH64 GAS  obj/extInstr.s 			page 77


 106:/usr/include/c++/10/sstream ****        *
 107:/usr/include/c++/10/sstream ****        *  The default constructor initializes the parent class using its
 108:/usr/include/c++/10/sstream ****        *  own default ctor.
 109:/usr/include/c++/10/sstream ****       */
 110:/usr/include/c++/10/sstream ****       explicit
 111:/usr/include/c++/10/sstream ****       basic_stringbuf(ios_base::openmode __mode)
 112:/usr/include/c++/10/sstream ****       : __streambuf_type(), _M_mode(__mode), _M_string()
 113:/usr/include/c++/10/sstream ****       { }
 114:/usr/include/c++/10/sstream **** 
 115:/usr/include/c++/10/sstream ****       /**
 116:/usr/include/c++/10/sstream ****        *  @brief  Starts with an existing string buffer.
 117:/usr/include/c++/10/sstream ****        *  @param  __str  A string to copy as a starting buffer.
 118:/usr/include/c++/10/sstream ****        *  @param  __mode  Whether the buffer can read, or write, or both.
 119:/usr/include/c++/10/sstream ****        *
 120:/usr/include/c++/10/sstream ****        *  This constructor initializes the parent class using its
 121:/usr/include/c++/10/sstream ****        *  own default ctor.
 122:/usr/include/c++/10/sstream ****       */
 123:/usr/include/c++/10/sstream ****       explicit
 124:/usr/include/c++/10/sstream ****       basic_stringbuf(const __string_type& __str,
 125:/usr/include/c++/10/sstream **** 		      ios_base::openmode __mode = ios_base::in | ios_base::out)
 126:/usr/include/c++/10/sstream ****       : __streambuf_type(), _M_mode(),
 127:/usr/include/c++/10/sstream **** 	_M_string(__str.data(), __str.size(), __str.get_allocator())
 128:/usr/include/c++/10/sstream ****       { _M_stringbuf_init(__mode); }
 129:/usr/include/c++/10/sstream **** 
 130:/usr/include/c++/10/sstream **** #if __cplusplus >= 201103L
 131:/usr/include/c++/10/sstream ****       basic_stringbuf(const basic_stringbuf&) = delete;
 132:/usr/include/c++/10/sstream **** 
 133:/usr/include/c++/10/sstream ****       basic_stringbuf(basic_stringbuf&& __rhs)
 134:/usr/include/c++/10/sstream ****       : basic_stringbuf(std::move(__rhs), __xfer_bufptrs(__rhs, this))
 135:/usr/include/c++/10/sstream ****       { __rhs._M_sync(const_cast<char_type*>(__rhs._M_string.data()), 0, 0); }
 136:/usr/include/c++/10/sstream **** 
 137:/usr/include/c++/10/sstream ****       // 27.8.2.2 Assign and swap:
 138:/usr/include/c++/10/sstream **** 
 139:/usr/include/c++/10/sstream ****       basic_stringbuf&
 140:/usr/include/c++/10/sstream ****       operator=(const basic_stringbuf&) = delete;
 141:/usr/include/c++/10/sstream **** 
 142:/usr/include/c++/10/sstream ****       basic_stringbuf&
 143:/usr/include/c++/10/sstream ****       operator=(basic_stringbuf&& __rhs)
 144:/usr/include/c++/10/sstream ****       {
 145:/usr/include/c++/10/sstream **** 	__xfer_bufptrs __st{__rhs, this};
 146:/usr/include/c++/10/sstream **** 	const __streambuf_type& __base = __rhs;
 147:/usr/include/c++/10/sstream **** 	__streambuf_type::operator=(__base);
 148:/usr/include/c++/10/sstream **** 	this->pubimbue(__rhs.getloc());
 149:/usr/include/c++/10/sstream **** 	_M_mode = __rhs._M_mode;
 150:/usr/include/c++/10/sstream **** 	_M_string = std::move(__rhs._M_string);
 151:/usr/include/c++/10/sstream **** 	__rhs._M_sync(const_cast<char_type*>(__rhs._M_string.data()), 0, 0);
 152:/usr/include/c++/10/sstream **** 	return *this;
 153:/usr/include/c++/10/sstream ****       }
 154:/usr/include/c++/10/sstream **** 
 155:/usr/include/c++/10/sstream ****       void
 156:/usr/include/c++/10/sstream ****       swap(basic_stringbuf& __rhs)
 157:/usr/include/c++/10/sstream ****       {
 158:/usr/include/c++/10/sstream **** 	__xfer_bufptrs __l_st{*this, std::__addressof(__rhs)};
 159:/usr/include/c++/10/sstream **** 	__xfer_bufptrs __r_st{__rhs, this};
 160:/usr/include/c++/10/sstream **** 	__streambuf_type& __base = __rhs;
 161:/usr/include/c++/10/sstream **** 	__streambuf_type::swap(__base);
 162:/usr/include/c++/10/sstream **** 	__rhs.pubimbue(this->pubimbue(__rhs.getloc()));
AARCH64 GAS  obj/extInstr.s 			page 78


 163:/usr/include/c++/10/sstream **** 	std::swap(_M_mode, __rhs._M_mode);
 164:/usr/include/c++/10/sstream **** 	std::swap(_M_string, __rhs._M_string);
 165:/usr/include/c++/10/sstream ****       }
 166:/usr/include/c++/10/sstream **** #endif
 167:/usr/include/c++/10/sstream **** 
 168:/usr/include/c++/10/sstream ****       // Get and set:
 169:/usr/include/c++/10/sstream ****       /**
 170:/usr/include/c++/10/sstream ****        *  @brief  Copying out the string buffer.
 171:/usr/include/c++/10/sstream ****        *  @return  A copy of one of the underlying sequences.
 172:/usr/include/c++/10/sstream ****        *
 173:/usr/include/c++/10/sstream ****        *  <em>If the buffer is only created in input mode, the underlying
 174:/usr/include/c++/10/sstream ****        *  character sequence is equal to the input sequence; otherwise, it
 175:/usr/include/c++/10/sstream ****        *  is equal to the output sequence.</em> [27.7.1.2]/1
 176:/usr/include/c++/10/sstream ****       */
 177:/usr/include/c++/10/sstream ****       __string_type
 178:/usr/include/c++/10/sstream ****       str() const
 179:/usr/include/c++/10/sstream ****       {
 180:/usr/include/c++/10/sstream **** 	__string_type __ret(_M_string.get_allocator());
 181:/usr/include/c++/10/sstream **** 	if (this->pptr())
 182:/usr/include/c++/10/sstream **** 	  {
 183:/usr/include/c++/10/sstream **** 	    // The current egptr() may not be the actual string end.
 184:/usr/include/c++/10/sstream **** 	    if (this->pptr() > this->egptr())
 185:/usr/include/c++/10/sstream **** 	      __ret.assign(this->pbase(), this->pptr());
 186:/usr/include/c++/10/sstream **** 	    else
 187:/usr/include/c++/10/sstream **** 	      __ret.assign(this->pbase(), this->egptr());
 188:/usr/include/c++/10/sstream **** 	  }
 189:/usr/include/c++/10/sstream **** 	else
 190:/usr/include/c++/10/sstream **** 	  __ret = _M_string;
 191:/usr/include/c++/10/sstream **** 	return __ret;
 192:/usr/include/c++/10/sstream ****       }
 193:/usr/include/c++/10/sstream **** 
 194:/usr/include/c++/10/sstream ****       /**
 195:/usr/include/c++/10/sstream ****        *  @brief  Setting a new buffer.
 196:/usr/include/c++/10/sstream ****        *  @param  __s  The string to use as a new sequence.
 197:/usr/include/c++/10/sstream ****        *
 198:/usr/include/c++/10/sstream ****        *  Deallocates any previous stored sequence, then copies @a s to
 199:/usr/include/c++/10/sstream ****        *  use as a new one.
 200:/usr/include/c++/10/sstream ****       */
 201:/usr/include/c++/10/sstream ****       void
 202:/usr/include/c++/10/sstream ****       str(const __string_type& __s)
 203:/usr/include/c++/10/sstream ****       {
 204:/usr/include/c++/10/sstream **** 	// Cannot use _M_string = __s, since v3 strings are COW
 205:/usr/include/c++/10/sstream **** 	// (not always true now but assign() always works).
 206:/usr/include/c++/10/sstream **** 	_M_string.assign(__s.data(), __s.size());
 207:/usr/include/c++/10/sstream **** 	_M_stringbuf_init(_M_mode);
 208:/usr/include/c++/10/sstream ****       }
 209:/usr/include/c++/10/sstream **** 
 210:/usr/include/c++/10/sstream ****     protected:
 211:/usr/include/c++/10/sstream ****       // Common initialization code goes here.
 212:/usr/include/c++/10/sstream ****       void
 213:/usr/include/c++/10/sstream ****       _M_stringbuf_init(ios_base::openmode __mode)
 214:/usr/include/c++/10/sstream ****       {
 215:/usr/include/c++/10/sstream **** 	_M_mode = __mode;
 216:/usr/include/c++/10/sstream **** 	__size_type __len = 0;
 217:/usr/include/c++/10/sstream **** 	if (_M_mode & (ios_base::ate | ios_base::app))
 218:/usr/include/c++/10/sstream **** 	  __len = _M_string.size();
 219:/usr/include/c++/10/sstream **** 	_M_sync(const_cast<char_type*>(_M_string.data()), 0, __len);
AARCH64 GAS  obj/extInstr.s 			page 79


 220:/usr/include/c++/10/sstream ****       }
 221:/usr/include/c++/10/sstream **** 
 222:/usr/include/c++/10/sstream ****       virtual streamsize
 223:/usr/include/c++/10/sstream ****       showmanyc()
 224:/usr/include/c++/10/sstream ****       {
 225:/usr/include/c++/10/sstream **** 	streamsize __ret = -1;
 226:/usr/include/c++/10/sstream **** 	if (_M_mode & ios_base::in)
 227:/usr/include/c++/10/sstream **** 	  {
 228:/usr/include/c++/10/sstream **** 	    _M_update_egptr();
 229:/usr/include/c++/10/sstream **** 	    __ret = this->egptr() - this->gptr();
 230:/usr/include/c++/10/sstream **** 	  }
 231:/usr/include/c++/10/sstream **** 	return __ret;
 232:/usr/include/c++/10/sstream ****       }
 233:/usr/include/c++/10/sstream **** 
 234:/usr/include/c++/10/sstream ****       virtual int_type
 235:/usr/include/c++/10/sstream ****       underflow();
 236:/usr/include/c++/10/sstream **** 
 237:/usr/include/c++/10/sstream ****       virtual int_type
 238:/usr/include/c++/10/sstream ****       pbackfail(int_type __c = traits_type::eof());
 239:/usr/include/c++/10/sstream **** 
 240:/usr/include/c++/10/sstream ****       virtual int_type
 241:/usr/include/c++/10/sstream ****       overflow(int_type __c = traits_type::eof());
 242:/usr/include/c++/10/sstream **** 
 243:/usr/include/c++/10/sstream ****       /**
 244:/usr/include/c++/10/sstream ****        *  @brief  Manipulates the buffer.
 245:/usr/include/c++/10/sstream ****        *  @param  __s  Pointer to a buffer area.
 246:/usr/include/c++/10/sstream ****        *  @param  __n  Size of @a __s.
 247:/usr/include/c++/10/sstream ****        *  @return  @c this
 248:/usr/include/c++/10/sstream ****        *
 249:/usr/include/c++/10/sstream ****        *  If no buffer has already been created, and both @a __s and @a __n are
 250:/usr/include/c++/10/sstream ****        *  non-zero, then @c __s is used as a buffer; see
 251:/usr/include/c++/10/sstream ****        *  https://gcc.gnu.org/onlinedocs/libstdc++/manual/streambufs.html#io.streambuf.buffering
 252:/usr/include/c++/10/sstream ****        *  for more.
 253:/usr/include/c++/10/sstream ****       */
 254:/usr/include/c++/10/sstream ****       virtual __streambuf_type*
 255:/usr/include/c++/10/sstream ****       setbuf(char_type* __s, streamsize __n)
 256:/usr/include/c++/10/sstream ****       {
 257:/usr/include/c++/10/sstream **** 	if (__s && __n >= 0)
 258:/usr/include/c++/10/sstream **** 	  {
 259:/usr/include/c++/10/sstream **** 	    // This is implementation-defined behavior, and assumes
 260:/usr/include/c++/10/sstream **** 	    // that an external char_type array of length __n exists
 261:/usr/include/c++/10/sstream **** 	    // and has been pre-allocated. If this is not the case,
 262:/usr/include/c++/10/sstream **** 	    // things will quickly blow up.
 263:/usr/include/c++/10/sstream **** 
 264:/usr/include/c++/10/sstream **** 	    // Step 1: Destroy the current internal array.
 265:/usr/include/c++/10/sstream **** 	    _M_string.clear();
 266:/usr/include/c++/10/sstream **** 
 267:/usr/include/c++/10/sstream **** 	    // Step 2: Use the external array.
 268:/usr/include/c++/10/sstream **** 	    _M_sync(__s, __n, 0);
 269:/usr/include/c++/10/sstream **** 	  }
 270:/usr/include/c++/10/sstream **** 	return this;
 271:/usr/include/c++/10/sstream ****       }
 272:/usr/include/c++/10/sstream **** 
 273:/usr/include/c++/10/sstream ****       virtual pos_type
 274:/usr/include/c++/10/sstream ****       seekoff(off_type __off, ios_base::seekdir __way,
 275:/usr/include/c++/10/sstream **** 	      ios_base::openmode __mode = ios_base::in | ios_base::out);
 276:/usr/include/c++/10/sstream **** 
AARCH64 GAS  obj/extInstr.s 			page 80


 277:/usr/include/c++/10/sstream ****       virtual pos_type
 278:/usr/include/c++/10/sstream ****       seekpos(pos_type __sp,
 279:/usr/include/c++/10/sstream **** 	      ios_base::openmode __mode = ios_base::in | ios_base::out);
 280:/usr/include/c++/10/sstream **** 
 281:/usr/include/c++/10/sstream ****       // Internal function for correctly updating the internal buffer
 282:/usr/include/c++/10/sstream ****       // for a particular _M_string, due to initialization or re-sizing
 283:/usr/include/c++/10/sstream ****       // of an existing _M_string.
 284:/usr/include/c++/10/sstream ****       void
 285:/usr/include/c++/10/sstream ****       _M_sync(char_type* __base, __size_type __i, __size_type __o);
 286:/usr/include/c++/10/sstream **** 
 287:/usr/include/c++/10/sstream ****       // Internal function for correctly updating egptr() to the actual
 288:/usr/include/c++/10/sstream ****       // string end.
 289:/usr/include/c++/10/sstream ****       void
 290:/usr/include/c++/10/sstream ****       _M_update_egptr()
 291:/usr/include/c++/10/sstream ****       {
 292:/usr/include/c++/10/sstream **** 	const bool __testin = _M_mode & ios_base::in;
 293:/usr/include/c++/10/sstream **** 	if (this->pptr() && this->pptr() > this->egptr())
 294:/usr/include/c++/10/sstream **** 	  {
 295:/usr/include/c++/10/sstream **** 	    if (__testin)
 296:/usr/include/c++/10/sstream **** 	      this->setg(this->eback(), this->gptr(), this->pptr());
 297:/usr/include/c++/10/sstream **** 	    else
 298:/usr/include/c++/10/sstream **** 	      this->setg(this->pptr(), this->pptr(), this->pptr());
 299:/usr/include/c++/10/sstream **** 	  }
 300:/usr/include/c++/10/sstream ****       }
 301:/usr/include/c++/10/sstream **** 
 302:/usr/include/c++/10/sstream ****       // Works around the issue with pbump, part of the protected
 303:/usr/include/c++/10/sstream ****       // interface of basic_streambuf, taking just an int.
 304:/usr/include/c++/10/sstream ****       void
 305:/usr/include/c++/10/sstream ****       _M_pbump(char_type* __pbeg, char_type* __pend, off_type __off);
 306:/usr/include/c++/10/sstream **** 
 307:/usr/include/c++/10/sstream ****     private:
 308:/usr/include/c++/10/sstream **** #if __cplusplus >= 201103L
 309:/usr/include/c++/10/sstream **** #if _GLIBCXX_USE_CXX11_ABI
 310:/usr/include/c++/10/sstream ****       // This type captures the state of the gptr / pptr pointers as offsets
 311:/usr/include/c++/10/sstream ****       // so they can be restored in another object after moving the string.
 312:/usr/include/c++/10/sstream ****       struct __xfer_bufptrs
 313:/usr/include/c++/10/sstream ****       {
 314:/usr/include/c++/10/sstream **** 	__xfer_bufptrs(const basic_stringbuf& __from, basic_stringbuf* __to)
 315:/usr/include/c++/10/sstream **** 	: _M_to{__to}, _M_goff{-1, -1, -1}, _M_poff{-1, -1, -1}
 316:/usr/include/c++/10/sstream **** 	{
 317:/usr/include/c++/10/sstream **** 	  const _CharT* const __str = __from._M_string.data();
 318:/usr/include/c++/10/sstream **** 	  const _CharT* __end = nullptr;
 319:/usr/include/c++/10/sstream **** 	  if (__from.eback())
 320:/usr/include/c++/10/sstream **** 	    {
 321:/usr/include/c++/10/sstream **** 	      _M_goff[0] = __from.eback() - __str;
 322:/usr/include/c++/10/sstream **** 	      _M_goff[1] = __from.gptr() - __str;
 323:/usr/include/c++/10/sstream **** 	      _M_goff[2] = __from.egptr() - __str;
 324:/usr/include/c++/10/sstream **** 	      __end = __from.egptr();
 325:/usr/include/c++/10/sstream **** 	    }
 326:/usr/include/c++/10/sstream **** 	  if (__from.pbase())
 327:/usr/include/c++/10/sstream **** 	    {
 328:/usr/include/c++/10/sstream **** 	      _M_poff[0] = __from.pbase() - __str;
 329:/usr/include/c++/10/sstream **** 	      _M_poff[1] = __from.pptr() - __from.pbase();
 330:/usr/include/c++/10/sstream **** 	      _M_poff[2] = __from.epptr() - __str;
 331:/usr/include/c++/10/sstream **** 	      if (__from.pptr() > __end)
 332:/usr/include/c++/10/sstream **** 		__end = __from.pptr();
 333:/usr/include/c++/10/sstream **** 	    }
AARCH64 GAS  obj/extInstr.s 			page 81


 334:/usr/include/c++/10/sstream **** 
 335:/usr/include/c++/10/sstream **** 	  // Set _M_string length to the greater of the get and put areas.
 336:/usr/include/c++/10/sstream **** 	  if (__end)
 337:/usr/include/c++/10/sstream **** 	    {
 338:/usr/include/c++/10/sstream **** 	      // The const_cast avoids changing this constructor's signature,
 339:/usr/include/c++/10/sstream **** 	      // because it is exported from the dynamic library.
 340:/usr/include/c++/10/sstream **** 	      auto& __mut_from = const_cast<basic_stringbuf&>(__from);
 341:/usr/include/c++/10/sstream **** 	      __mut_from._M_string._M_length(__end - __str);
 342:/usr/include/c++/10/sstream **** 	    }
 343:/usr/include/c++/10/sstream **** 	}
 344:/usr/include/c++/10/sstream **** 
 345:/usr/include/c++/10/sstream **** 	~__xfer_bufptrs()
 346:/usr/include/c++/10/sstream **** 	{
 347:/usr/include/c++/10/sstream **** 	  char_type* __str = const_cast<char_type*>(_M_to->_M_string.data());
 348:/usr/include/c++/10/sstream **** 	  if (_M_goff[0] != -1)
 349:/usr/include/c++/10/sstream **** 	    _M_to->setg(__str+_M_goff[0], __str+_M_goff[1], __str+_M_goff[2]);
 350:/usr/include/c++/10/sstream **** 	  if (_M_poff[0] != -1)
 351:/usr/include/c++/10/sstream **** 	    _M_to->_M_pbump(__str+_M_poff[0], __str+_M_poff[2], _M_poff[1]);
 352:/usr/include/c++/10/sstream **** 	}
 353:/usr/include/c++/10/sstream **** 
 354:/usr/include/c++/10/sstream **** 	basic_stringbuf* _M_to;
 355:/usr/include/c++/10/sstream **** 	off_type _M_goff[3];
 356:/usr/include/c++/10/sstream **** 	off_type _M_poff[3];
 357:/usr/include/c++/10/sstream ****       };
 358:/usr/include/c++/10/sstream **** #else
 359:/usr/include/c++/10/sstream ****       // This type does nothing when using Copy-On-Write strings.
 360:/usr/include/c++/10/sstream ****       struct __xfer_bufptrs
 361:/usr/include/c++/10/sstream ****       {
 362:/usr/include/c++/10/sstream **** 	__xfer_bufptrs(const basic_stringbuf&, basic_stringbuf*) { }
 363:/usr/include/c++/10/sstream ****       };
 364:/usr/include/c++/10/sstream **** #endif
 365:/usr/include/c++/10/sstream **** 
 366:/usr/include/c++/10/sstream ****       // The move constructor initializes an __xfer_bufptrs temporary then
 367:/usr/include/c++/10/sstream ****       // delegates to this constructor to performs moves during its lifetime.
 368:/usr/include/c++/10/sstream ****       basic_stringbuf(basic_stringbuf&& __rhs, __xfer_bufptrs&&)
 369:/usr/include/c++/10/sstream ****       : __streambuf_type(static_cast<const __streambuf_type&>(__rhs)),
 370:/usr/include/c++/10/sstream ****       _M_mode(__rhs._M_mode), _M_string(std::move(__rhs._M_string))
 371:/usr/include/c++/10/sstream ****       { }
 372:/usr/include/c++/10/sstream **** #endif
 373:/usr/include/c++/10/sstream ****     };
 374:/usr/include/c++/10/sstream **** 
 375:/usr/include/c++/10/sstream **** 
 376:/usr/include/c++/10/sstream ****   // [27.7.2] Template class basic_istringstream
 377:/usr/include/c++/10/sstream ****   /**
 378:/usr/include/c++/10/sstream ****    *  @brief  Controlling input for std::string.
 379:/usr/include/c++/10/sstream ****    *  @ingroup io
 380:/usr/include/c++/10/sstream ****    *
 381:/usr/include/c++/10/sstream ****    *  @tparam _CharT  Type of character stream.
 382:/usr/include/c++/10/sstream ****    *  @tparam _Traits  Traits for character type, defaults to
 383:/usr/include/c++/10/sstream ****    *                   char_traits<_CharT>.
 384:/usr/include/c++/10/sstream ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
 385:/usr/include/c++/10/sstream ****    *
 386:/usr/include/c++/10/sstream ****    *  This class supports reading from objects of type std::basic_string,
 387:/usr/include/c++/10/sstream ****    *  using the inherited functions from std::basic_istream.  To control
 388:/usr/include/c++/10/sstream ****    *  the associated sequence, an instance of std::basic_stringbuf is used,
 389:/usr/include/c++/10/sstream ****    *  which this page refers to as @c sb.
 390:/usr/include/c++/10/sstream ****   */
AARCH64 GAS  obj/extInstr.s 			page 82


 391:/usr/include/c++/10/sstream ****   template<typename _CharT, typename _Traits, typename _Alloc>
 392:/usr/include/c++/10/sstream ****     class basic_istringstream : public basic_istream<_CharT, _Traits>
 393:/usr/include/c++/10/sstream ****     {
 394:/usr/include/c++/10/sstream ****     public:
 395:/usr/include/c++/10/sstream ****       // Types:
 396:/usr/include/c++/10/sstream ****       typedef _CharT 					char_type;
 397:/usr/include/c++/10/sstream ****       typedef _Traits 					traits_type;
 398:/usr/include/c++/10/sstream ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 399:/usr/include/c++/10/sstream ****       // 251. basic_stringbuf missing allocator_type
 400:/usr/include/c++/10/sstream ****       typedef _Alloc				       	allocator_type;
 401:/usr/include/c++/10/sstream ****       typedef typename traits_type::int_type 		int_type;
 402:/usr/include/c++/10/sstream ****       typedef typename traits_type::pos_type 		pos_type;
 403:/usr/include/c++/10/sstream ****       typedef typename traits_type::off_type 		off_type;
 404:/usr/include/c++/10/sstream **** 
 405:/usr/include/c++/10/sstream ****       // Non-standard types:
 406:/usr/include/c++/10/sstream ****       typedef basic_string<_CharT, _Traits, _Alloc> 	__string_type;
 407:/usr/include/c++/10/sstream ****       typedef basic_stringbuf<_CharT, _Traits, _Alloc> 	__stringbuf_type;
 408:/usr/include/c++/10/sstream ****       typedef basic_istream<char_type, traits_type>	__istream_type;
 409:/usr/include/c++/10/sstream **** 
 410:/usr/include/c++/10/sstream ****     private:
 411:/usr/include/c++/10/sstream ****       __stringbuf_type	_M_stringbuf;
 412:/usr/include/c++/10/sstream **** 
 413:/usr/include/c++/10/sstream ****     public:
 414:/usr/include/c++/10/sstream ****       // Constructors:
 415:/usr/include/c++/10/sstream **** 
 416:/usr/include/c++/10/sstream ****       /**
 417:/usr/include/c++/10/sstream ****        *  @brief  Default constructor starts with an empty string buffer.
 418:/usr/include/c++/10/sstream ****        *
 419:/usr/include/c++/10/sstream ****        *  Initializes @c sb using @c in, and passes @c &sb to the base
 420:/usr/include/c++/10/sstream ****        *  class initializer.  Does not allocate any buffer.
 421:/usr/include/c++/10/sstream ****        *
 422:/usr/include/c++/10/sstream ****        *  That's a lie.  We initialize the base class with NULL, because the
 423:/usr/include/c++/10/sstream ****        *  string class does its own memory management.
 424:/usr/include/c++/10/sstream ****       */
 425:/usr/include/c++/10/sstream ****       basic_istringstream()
 426:/usr/include/c++/10/sstream ****       : __istream_type(), _M_stringbuf(ios_base::in)
 427:/usr/include/c++/10/sstream ****       { this->init(&_M_stringbuf); }
 428:/usr/include/c++/10/sstream **** 
 429:/usr/include/c++/10/sstream ****       /**
 430:/usr/include/c++/10/sstream ****        *  @brief  Starts with an empty string buffer.
 431:/usr/include/c++/10/sstream ****        *  @param  __mode  Whether the buffer can read, or write, or both.
 432:/usr/include/c++/10/sstream ****        *
 433:/usr/include/c++/10/sstream ****        *  @c ios_base::in is automatically included in @a __mode.
 434:/usr/include/c++/10/sstream ****        *
 435:/usr/include/c++/10/sstream ****        *  Initializes @c sb using @c __mode|in, and passes @c &sb to the base
 436:/usr/include/c++/10/sstream ****        *  class initializer.  Does not allocate any buffer.
 437:/usr/include/c++/10/sstream ****        *
 438:/usr/include/c++/10/sstream ****        *  That's a lie.  We initialize the base class with NULL, because the
 439:/usr/include/c++/10/sstream ****        *  string class does its own memory management.
 440:/usr/include/c++/10/sstream ****       */
 441:/usr/include/c++/10/sstream ****       explicit
 442:/usr/include/c++/10/sstream ****       basic_istringstream(ios_base::openmode __mode)
 443:/usr/include/c++/10/sstream ****       : __istream_type(), _M_stringbuf(__mode | ios_base::in)
 444:/usr/include/c++/10/sstream ****       { this->init(&_M_stringbuf); }
 445:/usr/include/c++/10/sstream **** 
 446:/usr/include/c++/10/sstream ****       /**
 447:/usr/include/c++/10/sstream ****        *  @brief  Starts with an existing string buffer.
AARCH64 GAS  obj/extInstr.s 			page 83


 448:/usr/include/c++/10/sstream ****        *  @param  __str  A string to copy as a starting buffer.
 449:/usr/include/c++/10/sstream ****        *  @param  __mode  Whether the buffer can read, or write, or both.
 450:/usr/include/c++/10/sstream ****        *
 451:/usr/include/c++/10/sstream ****        *  @c ios_base::in is automatically included in @a mode.
 452:/usr/include/c++/10/sstream ****        *
 453:/usr/include/c++/10/sstream ****        *  Initializes @c sb using @a str and @c mode|in, and passes @c &sb
 454:/usr/include/c++/10/sstream ****        *  to the base class initializer.
 455:/usr/include/c++/10/sstream ****        *
 456:/usr/include/c++/10/sstream ****        *  That's a lie.  We initialize the base class with NULL, because the
 457:/usr/include/c++/10/sstream ****        *  string class does its own memory management.
 458:/usr/include/c++/10/sstream ****       */
 459:/usr/include/c++/10/sstream ****       explicit
 460:/usr/include/c++/10/sstream ****       basic_istringstream(const __string_type& __str,
 461:/usr/include/c++/10/sstream **** 			  ios_base::openmode __mode = ios_base::in)
 462:/usr/include/c++/10/sstream ****       : __istream_type(), _M_stringbuf(__str, __mode | ios_base::in)
 463:/usr/include/c++/10/sstream ****       { this->init(&_M_stringbuf); }
 464:/usr/include/c++/10/sstream **** 
 465:/usr/include/c++/10/sstream ****       /**
 466:/usr/include/c++/10/sstream ****        *  @brief  The destructor does nothing.
 467:/usr/include/c++/10/sstream ****        *
 468:/usr/include/c++/10/sstream ****        *  The buffer is deallocated by the stringbuf object, not the
 469:/usr/include/c++/10/sstream ****        *  formatting stream.
 470:/usr/include/c++/10/sstream ****       */
 471:/usr/include/c++/10/sstream ****       ~basic_istringstream()
 472:/usr/include/c++/10/sstream ****       { }
 473:/usr/include/c++/10/sstream **** 
 474:/usr/include/c++/10/sstream **** #if __cplusplus >= 201103L
 475:/usr/include/c++/10/sstream ****       basic_istringstream(const basic_istringstream&) = delete;
 476:/usr/include/c++/10/sstream **** 
 477:/usr/include/c++/10/sstream ****       basic_istringstream(basic_istringstream&& __rhs)
 478:/usr/include/c++/10/sstream ****       : __istream_type(std::move(__rhs)),
 479:/usr/include/c++/10/sstream ****       _M_stringbuf(std::move(__rhs._M_stringbuf))
 480:/usr/include/c++/10/sstream ****       { __istream_type::set_rdbuf(&_M_stringbuf); }
 481:/usr/include/c++/10/sstream **** 
 482:/usr/include/c++/10/sstream ****       // 27.8.3.2 Assign and swap:
 483:/usr/include/c++/10/sstream **** 
 484:/usr/include/c++/10/sstream ****       basic_istringstream&
 485:/usr/include/c++/10/sstream ****       operator=(const basic_istringstream&) = delete;
 486:/usr/include/c++/10/sstream **** 
 487:/usr/include/c++/10/sstream ****       basic_istringstream&
 488:/usr/include/c++/10/sstream ****       operator=(basic_istringstream&& __rhs)
 489:/usr/include/c++/10/sstream ****       {
 490:/usr/include/c++/10/sstream **** 	__istream_type::operator=(std::move(__rhs));
 491:/usr/include/c++/10/sstream **** 	_M_stringbuf = std::move(__rhs._M_stringbuf);
 492:/usr/include/c++/10/sstream **** 	return *this;
 493:/usr/include/c++/10/sstream ****       }
 494:/usr/include/c++/10/sstream **** 
 495:/usr/include/c++/10/sstream ****       void
 496:/usr/include/c++/10/sstream ****       swap(basic_istringstream& __rhs)
 497:/usr/include/c++/10/sstream ****       {
 498:/usr/include/c++/10/sstream **** 	__istream_type::swap(__rhs);
 499:/usr/include/c++/10/sstream **** 	_M_stringbuf.swap(__rhs._M_stringbuf);
 500:/usr/include/c++/10/sstream ****       }
 501:/usr/include/c++/10/sstream **** #endif
 502:/usr/include/c++/10/sstream **** 
 503:/usr/include/c++/10/sstream ****       // Members:
 504:/usr/include/c++/10/sstream ****       /**
AARCH64 GAS  obj/extInstr.s 			page 84


 505:/usr/include/c++/10/sstream ****        *  @brief  Accessing the underlying buffer.
 506:/usr/include/c++/10/sstream ****        *  @return  The current basic_stringbuf buffer.
 507:/usr/include/c++/10/sstream ****        *
 508:/usr/include/c++/10/sstream ****        *  This hides both signatures of std::basic_ios::rdbuf().
 509:/usr/include/c++/10/sstream ****       */
 510:/usr/include/c++/10/sstream ****       __stringbuf_type*
 511:/usr/include/c++/10/sstream ****       rdbuf() const
 512:/usr/include/c++/10/sstream ****       { return const_cast<__stringbuf_type*>(&_M_stringbuf); }
 513:/usr/include/c++/10/sstream **** 
 514:/usr/include/c++/10/sstream ****       /**
 515:/usr/include/c++/10/sstream ****        *  @brief  Copying out the string buffer.
 516:/usr/include/c++/10/sstream ****        *  @return  @c rdbuf()->str()
 517:/usr/include/c++/10/sstream ****       */
 518:/usr/include/c++/10/sstream ****       __string_type
 519:/usr/include/c++/10/sstream ****       str() const
 520:/usr/include/c++/10/sstream ****       { return _M_stringbuf.str(); }
 521:/usr/include/c++/10/sstream **** 
 522:/usr/include/c++/10/sstream ****       /**
 523:/usr/include/c++/10/sstream ****        *  @brief  Setting a new buffer.
 524:/usr/include/c++/10/sstream ****        *  @param  __s  The string to use as a new sequence.
 525:/usr/include/c++/10/sstream ****        *
 526:/usr/include/c++/10/sstream ****        *  Calls @c rdbuf()->str(s).
 527:/usr/include/c++/10/sstream ****       */
 528:/usr/include/c++/10/sstream ****       void
 529:/usr/include/c++/10/sstream ****       str(const __string_type& __s)
 530:/usr/include/c++/10/sstream ****       { _M_stringbuf.str(__s); }
 531:/usr/include/c++/10/sstream ****     };
 532:/usr/include/c++/10/sstream **** 
 533:/usr/include/c++/10/sstream **** 
 534:/usr/include/c++/10/sstream ****   // [27.7.3] Template class basic_ostringstream
 535:/usr/include/c++/10/sstream ****   /**
 536:/usr/include/c++/10/sstream ****    *  @brief  Controlling output for std::string.
 537:/usr/include/c++/10/sstream ****    *  @ingroup io
 538:/usr/include/c++/10/sstream ****    *
 539:/usr/include/c++/10/sstream ****    *  @tparam _CharT  Type of character stream.
 540:/usr/include/c++/10/sstream ****    *  @tparam _Traits  Traits for character type, defaults to
 541:/usr/include/c++/10/sstream ****    *                   char_traits<_CharT>.
 542:/usr/include/c++/10/sstream ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
 543:/usr/include/c++/10/sstream ****    *
 544:/usr/include/c++/10/sstream ****    *  This class supports writing to objects of type std::basic_string,
 545:/usr/include/c++/10/sstream ****    *  using the inherited functions from std::basic_ostream.  To control
 546:/usr/include/c++/10/sstream ****    *  the associated sequence, an instance of std::basic_stringbuf is used,
 547:/usr/include/c++/10/sstream ****    *  which this page refers to as @c sb.
 548:/usr/include/c++/10/sstream ****   */
 549:/usr/include/c++/10/sstream ****   template <typename _CharT, typename _Traits, typename _Alloc>
 550:/usr/include/c++/10/sstream ****     class basic_ostringstream : public basic_ostream<_CharT, _Traits>
 551:/usr/include/c++/10/sstream ****     {
 552:/usr/include/c++/10/sstream ****     public:
 553:/usr/include/c++/10/sstream ****       // Types:
 554:/usr/include/c++/10/sstream ****       typedef _CharT 					char_type;
 555:/usr/include/c++/10/sstream ****       typedef _Traits 					traits_type;
 556:/usr/include/c++/10/sstream ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 557:/usr/include/c++/10/sstream ****       // 251. basic_stringbuf missing allocator_type
 558:/usr/include/c++/10/sstream ****       typedef _Alloc				       	allocator_type;
 559:/usr/include/c++/10/sstream ****       typedef typename traits_type::int_type 		int_type;
 560:/usr/include/c++/10/sstream ****       typedef typename traits_type::pos_type 		pos_type;
 561:/usr/include/c++/10/sstream ****       typedef typename traits_type::off_type 		off_type;
AARCH64 GAS  obj/extInstr.s 			page 85


 562:/usr/include/c++/10/sstream **** 
 563:/usr/include/c++/10/sstream ****       // Non-standard types:
 564:/usr/include/c++/10/sstream ****       typedef basic_string<_CharT, _Traits, _Alloc> 	__string_type;
 565:/usr/include/c++/10/sstream ****       typedef basic_stringbuf<_CharT, _Traits, _Alloc> 	__stringbuf_type;
 566:/usr/include/c++/10/sstream ****       typedef basic_ostream<char_type, traits_type>	__ostream_type;
 567:/usr/include/c++/10/sstream **** 
 568:/usr/include/c++/10/sstream ****     private:
 569:/usr/include/c++/10/sstream ****       __stringbuf_type	_M_stringbuf;
 570:/usr/include/c++/10/sstream **** 
 571:/usr/include/c++/10/sstream ****     public:
 572:/usr/include/c++/10/sstream ****       // Constructors/destructor:
 573:/usr/include/c++/10/sstream **** 
 574:/usr/include/c++/10/sstream ****       /**
 575:/usr/include/c++/10/sstream ****        *  @brief  Default constructor starts with an empty string buffer.
 576:/usr/include/c++/10/sstream ****        *
 577:/usr/include/c++/10/sstream ****        *  Initializes @c sb using @c mode|out, and passes @c &sb to the base
 578:/usr/include/c++/10/sstream ****        *  class initializer.  Does not allocate any buffer.
 579:/usr/include/c++/10/sstream ****        *
 580:/usr/include/c++/10/sstream ****        *  That's a lie.  We initialize the base class with NULL, because the
 581:/usr/include/c++/10/sstream ****        *  string class does its own memory management.
 582:/usr/include/c++/10/sstream ****       */
 583:/usr/include/c++/10/sstream ****       basic_ostringstream()
 584:/usr/include/c++/10/sstream ****       : __ostream_type(), _M_stringbuf(ios_base::out)
 585:/usr/include/c++/10/sstream ****       { this->init(&_M_stringbuf); }
 586:/usr/include/c++/10/sstream **** 
 587:/usr/include/c++/10/sstream ****       /**
 588:/usr/include/c++/10/sstream ****        *  @brief  Starts with an empty string buffer.
 589:/usr/include/c++/10/sstream ****        *  @param  __mode  Whether the buffer can read, or write, or both.
 590:/usr/include/c++/10/sstream ****        *
 591:/usr/include/c++/10/sstream ****        *  @c ios_base::out is automatically included in @a mode.
 592:/usr/include/c++/10/sstream ****        *
 593:/usr/include/c++/10/sstream ****        *  Initializes @c sb using @c mode|out, and passes @c &sb to the base
 594:/usr/include/c++/10/sstream ****        *  class initializer.  Does not allocate any buffer.
 595:/usr/include/c++/10/sstream ****        *
 596:/usr/include/c++/10/sstream ****        *  That's a lie.  We initialize the base class with NULL, because the
 597:/usr/include/c++/10/sstream ****        *  string class does its own memory management.
 598:/usr/include/c++/10/sstream ****       */
 599:/usr/include/c++/10/sstream ****       explicit
 600:/usr/include/c++/10/sstream ****       basic_ostringstream(ios_base::openmode __mode)
 601:/usr/include/c++/10/sstream ****       : __ostream_type(), _M_stringbuf(__mode | ios_base::out)
 602:/usr/include/c++/10/sstream ****       { this->init(&_M_stringbuf); }
 603:/usr/include/c++/10/sstream **** 
 604:/usr/include/c++/10/sstream ****       /**
 605:/usr/include/c++/10/sstream ****        *  @brief  Starts with an existing string buffer.
 606:/usr/include/c++/10/sstream ****        *  @param  __str  A string to copy as a starting buffer.
 607:/usr/include/c++/10/sstream ****        *  @param  __mode  Whether the buffer can read, or write, or both.
 608:/usr/include/c++/10/sstream ****        *
 609:/usr/include/c++/10/sstream ****        *  @c ios_base::out is automatically included in @a mode.
 610:/usr/include/c++/10/sstream ****        *
 611:/usr/include/c++/10/sstream ****        *  Initializes @c sb using @a str and @c mode|out, and passes @c &sb
 612:/usr/include/c++/10/sstream ****        *  to the base class initializer.
 613:/usr/include/c++/10/sstream ****        *
 614:/usr/include/c++/10/sstream ****        *  That's a lie.  We initialize the base class with NULL, because the
 615:/usr/include/c++/10/sstream ****        *  string class does its own memory management.
 616:/usr/include/c++/10/sstream ****       */
 617:/usr/include/c++/10/sstream ****       explicit
 618:/usr/include/c++/10/sstream ****       basic_ostringstream(const __string_type& __str,
AARCH64 GAS  obj/extInstr.s 			page 86


 619:/usr/include/c++/10/sstream **** 			  ios_base::openmode __mode = ios_base::out)
 620:/usr/include/c++/10/sstream ****       : __ostream_type(), _M_stringbuf(__str, __mode | ios_base::out)
 621:/usr/include/c++/10/sstream ****       { this->init(&_M_stringbuf); }
 622:/usr/include/c++/10/sstream **** 
 623:/usr/include/c++/10/sstream ****       /**
 624:/usr/include/c++/10/sstream ****        *  @brief  The destructor does nothing.
 625:/usr/include/c++/10/sstream ****        *
 626:/usr/include/c++/10/sstream ****        *  The buffer is deallocated by the stringbuf object, not the
 627:/usr/include/c++/10/sstream ****        *  formatting stream.
 628:/usr/include/c++/10/sstream ****       */
 629:/usr/include/c++/10/sstream ****       ~basic_ostringstream()
 630:/usr/include/c++/10/sstream ****       { }
 631:/usr/include/c++/10/sstream **** 
 632:/usr/include/c++/10/sstream **** #if __cplusplus >= 201103L
 633:/usr/include/c++/10/sstream ****       basic_ostringstream(const basic_ostringstream&) = delete;
 634:/usr/include/c++/10/sstream **** 
 635:/usr/include/c++/10/sstream ****       basic_ostringstream(basic_ostringstream&& __rhs)
 636:/usr/include/c++/10/sstream ****       : __ostream_type(std::move(__rhs)),
 637:/usr/include/c++/10/sstream ****       _M_stringbuf(std::move(__rhs._M_stringbuf))
 638:/usr/include/c++/10/sstream ****       { __ostream_type::set_rdbuf(&_M_stringbuf); }
 639:/usr/include/c++/10/sstream **** 
 640:/usr/include/c++/10/sstream ****       // 27.8.3.2 Assign and swap:
 641:/usr/include/c++/10/sstream **** 
 642:/usr/include/c++/10/sstream ****       basic_ostringstream&
 643:/usr/include/c++/10/sstream ****       operator=(const basic_ostringstream&) = delete;
 644:/usr/include/c++/10/sstream **** 
 645:/usr/include/c++/10/sstream ****       basic_ostringstream&
 646:/usr/include/c++/10/sstream ****       operator=(basic_ostringstream&& __rhs)
 647:/usr/include/c++/10/sstream ****       {
 648:/usr/include/c++/10/sstream **** 	__ostream_type::operator=(std::move(__rhs));
 649:/usr/include/c++/10/sstream **** 	_M_stringbuf = std::move(__rhs._M_stringbuf);
 650:/usr/include/c++/10/sstream **** 	return *this;
 651:/usr/include/c++/10/sstream ****       }
 652:/usr/include/c++/10/sstream **** 
 653:/usr/include/c++/10/sstream ****       void
 654:/usr/include/c++/10/sstream ****       swap(basic_ostringstream& __rhs)
 655:/usr/include/c++/10/sstream ****       {
 656:/usr/include/c++/10/sstream **** 	__ostream_type::swap(__rhs);
 657:/usr/include/c++/10/sstream **** 	_M_stringbuf.swap(__rhs._M_stringbuf);
 658:/usr/include/c++/10/sstream ****       }
 659:/usr/include/c++/10/sstream **** #endif
 660:/usr/include/c++/10/sstream **** 
 661:/usr/include/c++/10/sstream ****       // Members:
 662:/usr/include/c++/10/sstream ****       /**
 663:/usr/include/c++/10/sstream ****        *  @brief  Accessing the underlying buffer.
 664:/usr/include/c++/10/sstream ****        *  @return  The current basic_stringbuf buffer.
 665:/usr/include/c++/10/sstream ****        *
 666:/usr/include/c++/10/sstream ****        *  This hides both signatures of std::basic_ios::rdbuf().
 667:/usr/include/c++/10/sstream ****       */
 668:/usr/include/c++/10/sstream ****       __stringbuf_type*
 669:/usr/include/c++/10/sstream ****       rdbuf() const
 670:/usr/include/c++/10/sstream ****       { return const_cast<__stringbuf_type*>(&_M_stringbuf); }
 671:/usr/include/c++/10/sstream **** 
 672:/usr/include/c++/10/sstream ****       /**
 673:/usr/include/c++/10/sstream ****        *  @brief  Copying out the string buffer.
 674:/usr/include/c++/10/sstream ****        *  @return  @c rdbuf()->str()
 675:/usr/include/c++/10/sstream ****       */
AARCH64 GAS  obj/extInstr.s 			page 87


 676:/usr/include/c++/10/sstream ****       __string_type
 677:/usr/include/c++/10/sstream ****       str() const
 501              		.loc 9 677 7 is_stmt 1 view .LVU132
 502              	.LBB790:
 678:/usr/include/c++/10/sstream ****       { return _M_stringbuf.str(); }
 503              		.loc 9 678 33 is_stmt 0 view .LVU133
 504 00ec FA430291 		add	x26, sp, 144
 505 00f0 FBA30191 		add	x27, sp, 104
 506 00f4 E0031AAA 		mov	x0, x26
 507 00f8 E8031BAA 		mov	x8, x27
 508 00fc 00000094 		bl	_ZNKSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE3strEv
 509              	.LVL24:
 510              	.LEHE1:
 511              		.loc 9 678 33 view .LVU134
 512              	.LBE790:
 513              	.LBE789:
  46:../../Include/Vec128.h **** 
 514              		.loc 5 46 28 view .LVU135
 515 0100 E00313AA 		mov	x0, x19
 516 0104 00000094 		bl	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev
 517              	.LVL25:
  46:../../Include/Vec128.h **** 
 518              		.loc 5 46 28 view .LVU136
 519              	.LBE798:
 520              	.LBE806:
 521              	.LBE826:
 522              	.LBB827:
 523              	.LBI827:
 524              		.file 10 "/usr/include/c++/10/bits/basic_string.h"
   1:/usr/include/c++/10/bits/basic_string.h **** // Components for manipulating sequences of characters -*- C++ -*-
   2:/usr/include/c++/10/bits/basic_string.h **** 
   3:/usr/include/c++/10/bits/basic_string.h **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:/usr/include/c++/10/bits/basic_string.h **** //
   5:/usr/include/c++/10/bits/basic_string.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/10/bits/basic_string.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/10/bits/basic_string.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/10/bits/basic_string.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/10/bits/basic_string.h **** // any later version.
  10:/usr/include/c++/10/bits/basic_string.h **** 
  11:/usr/include/c++/10/bits/basic_string.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/10/bits/basic_string.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/10/bits/basic_string.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/10/bits/basic_string.h **** // GNU General Public License for more details.
  15:/usr/include/c++/10/bits/basic_string.h **** 
  16:/usr/include/c++/10/bits/basic_string.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/10/bits/basic_string.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/10/bits/basic_string.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/10/bits/basic_string.h **** 
  20:/usr/include/c++/10/bits/basic_string.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/10/bits/basic_string.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/10/bits/basic_string.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/10/bits/basic_string.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/10/bits/basic_string.h **** 
  25:/usr/include/c++/10/bits/basic_string.h **** /** @file bits/basic_string.h
  26:/usr/include/c++/10/bits/basic_string.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/10/bits/basic_string.h ****  *  Do not attempt to use it directly. @headername{string}
  28:/usr/include/c++/10/bits/basic_string.h ****  */
AARCH64 GAS  obj/extInstr.s 			page 88


  29:/usr/include/c++/10/bits/basic_string.h **** 
  30:/usr/include/c++/10/bits/basic_string.h **** //
  31:/usr/include/c++/10/bits/basic_string.h **** // ISO C++ 14882: 21 Strings library
  32:/usr/include/c++/10/bits/basic_string.h **** //
  33:/usr/include/c++/10/bits/basic_string.h **** 
  34:/usr/include/c++/10/bits/basic_string.h **** #ifndef _BASIC_STRING_H
  35:/usr/include/c++/10/bits/basic_string.h **** #define _BASIC_STRING_H 1
  36:/usr/include/c++/10/bits/basic_string.h **** 
  37:/usr/include/c++/10/bits/basic_string.h **** #pragma GCC system_header
  38:/usr/include/c++/10/bits/basic_string.h **** 
  39:/usr/include/c++/10/bits/basic_string.h **** #include <ext/atomicity.h>
  40:/usr/include/c++/10/bits/basic_string.h **** #include <ext/alloc_traits.h>
  41:/usr/include/c++/10/bits/basic_string.h **** #include <debug/debug.h>
  42:/usr/include/c++/10/bits/basic_string.h **** 
  43:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201103L
  44:/usr/include/c++/10/bits/basic_string.h **** #include <initializer_list>
  45:/usr/include/c++/10/bits/basic_string.h **** #endif
  46:/usr/include/c++/10/bits/basic_string.h **** 
  47:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201703L
  48:/usr/include/c++/10/bits/basic_string.h **** # include <string_view>
  49:/usr/include/c++/10/bits/basic_string.h **** #endif
  50:/usr/include/c++/10/bits/basic_string.h **** 
  51:/usr/include/c++/10/bits/basic_string.h **** 
  52:/usr/include/c++/10/bits/basic_string.h **** namespace std _GLIBCXX_VISIBILITY(default)
  53:/usr/include/c++/10/bits/basic_string.h **** {
  54:/usr/include/c++/10/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  55:/usr/include/c++/10/bits/basic_string.h **** 
  56:/usr/include/c++/10/bits/basic_string.h **** #if _GLIBCXX_USE_CXX11_ABI
  57:/usr/include/c++/10/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
  58:/usr/include/c++/10/bits/basic_string.h ****   /**
  59:/usr/include/c++/10/bits/basic_string.h ****    *  @class basic_string basic_string.h <string>
  60:/usr/include/c++/10/bits/basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
  61:/usr/include/c++/10/bits/basic_string.h ****    *
  62:/usr/include/c++/10/bits/basic_string.h ****    *  @ingroup strings
  63:/usr/include/c++/10/bits/basic_string.h ****    *  @ingroup sequences
  64:/usr/include/c++/10/bits/basic_string.h ****    *
  65:/usr/include/c++/10/bits/basic_string.h ****    *  @tparam _CharT  Type of character
  66:/usr/include/c++/10/bits/basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
  67:/usr/include/c++/10/bits/basic_string.h ****    *                   char_traits<_CharT>.
  68:/usr/include/c++/10/bits/basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
  69:/usr/include/c++/10/bits/basic_string.h ****    *
  70:/usr/include/c++/10/bits/basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  71:/usr/include/c++/10/bits/basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
  72:/usr/include/c++/10/bits/basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
  73:/usr/include/c++/10/bits/basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
  74:/usr/include/c++/10/bits/basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
  75:/usr/include/c++/10/bits/basic_string.h ****    */
  76:/usr/include/c++/10/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
  77:/usr/include/c++/10/bits/basic_string.h ****     class basic_string
  78:/usr/include/c++/10/bits/basic_string.h ****     {
  79:/usr/include/c++/10/bits/basic_string.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  80:/usr/include/c++/10/bits/basic_string.h **** 	rebind<_CharT>::other _Char_alloc_type;
  81:/usr/include/c++/10/bits/basic_string.h ****       typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;
  82:/usr/include/c++/10/bits/basic_string.h **** 
  83:/usr/include/c++/10/bits/basic_string.h ****       // Types:
  84:/usr/include/c++/10/bits/basic_string.h ****     public:
  85:/usr/include/c++/10/bits/basic_string.h ****       typedef _Traits					traits_type;
AARCH64 GAS  obj/extInstr.s 			page 89


  86:/usr/include/c++/10/bits/basic_string.h ****       typedef typename _Traits::char_type		value_type;
  87:/usr/include/c++/10/bits/basic_string.h ****       typedef _Char_alloc_type				allocator_type;
  88:/usr/include/c++/10/bits/basic_string.h ****       typedef typename _Alloc_traits::size_type		size_type;
  89:/usr/include/c++/10/bits/basic_string.h ****       typedef typename _Alloc_traits::difference_type	difference_type;
  90:/usr/include/c++/10/bits/basic_string.h ****       typedef typename _Alloc_traits::reference		reference;
  91:/usr/include/c++/10/bits/basic_string.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
  92:/usr/include/c++/10/bits/basic_string.h ****       typedef typename _Alloc_traits::pointer		pointer;
  93:/usr/include/c++/10/bits/basic_string.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
  94:/usr/include/c++/10/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
  95:/usr/include/c++/10/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
  96:/usr/include/c++/10/bits/basic_string.h **** 							const_iterator;
  97:/usr/include/c++/10/bits/basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
  98:/usr/include/c++/10/bits/basic_string.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
  99:/usr/include/c++/10/bits/basic_string.h **** 
 100:/usr/include/c++/10/bits/basic_string.h ****       ///  Value returned by various member functions when they fail.
 101:/usr/include/c++/10/bits/basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
 102:/usr/include/c++/10/bits/basic_string.h **** 
 103:/usr/include/c++/10/bits/basic_string.h ****     protected:
 104:/usr/include/c++/10/bits/basic_string.h ****       // type used for positions in insert, erase etc.
 105:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus < 201103L
 106:/usr/include/c++/10/bits/basic_string.h ****       typedef iterator __const_iterator;
 107:/usr/include/c++/10/bits/basic_string.h **** #else
 108:/usr/include/c++/10/bits/basic_string.h ****       typedef const_iterator __const_iterator;
 109:/usr/include/c++/10/bits/basic_string.h **** #endif
 110:/usr/include/c++/10/bits/basic_string.h **** 
 111:/usr/include/c++/10/bits/basic_string.h ****     private:
 112:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201703L
 113:/usr/include/c++/10/bits/basic_string.h ****       // A helper type for avoiding boiler-plate.
 114:/usr/include/c++/10/bits/basic_string.h ****       typedef basic_string_view<_CharT, _Traits> __sv_type;
 115:/usr/include/c++/10/bits/basic_string.h **** 
 116:/usr/include/c++/10/bits/basic_string.h ****       template<typename _Tp, typename _Res>
 117:/usr/include/c++/10/bits/basic_string.h **** 	using _If_sv = enable_if_t<
 118:/usr/include/c++/10/bits/basic_string.h **** 	  __and_<is_convertible<const _Tp&, __sv_type>,
 119:/usr/include/c++/10/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp*, const basic_string*>>,
 120:/usr/include/c++/10/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp&, const _CharT*>>>::value,
 121:/usr/include/c++/10/bits/basic_string.h **** 	  _Res>;
 122:/usr/include/c++/10/bits/basic_string.h **** 
 123:/usr/include/c++/10/bits/basic_string.h ****       // Allows an implicit conversion to __sv_type.
 124:/usr/include/c++/10/bits/basic_string.h ****       static __sv_type
 125:/usr/include/c++/10/bits/basic_string.h ****       _S_to_string_view(__sv_type __svt) noexcept
 126:/usr/include/c++/10/bits/basic_string.h ****       { return __svt; }
 127:/usr/include/c++/10/bits/basic_string.h **** 
 128:/usr/include/c++/10/bits/basic_string.h ****       // Wraps a string_view by explicit conversion and thus
 129:/usr/include/c++/10/bits/basic_string.h ****       // allows to add an internal constructor that does not
 130:/usr/include/c++/10/bits/basic_string.h ****       // participate in overload resolution when a string_view
 131:/usr/include/c++/10/bits/basic_string.h ****       // is provided.
 132:/usr/include/c++/10/bits/basic_string.h ****       struct __sv_wrapper
 133:/usr/include/c++/10/bits/basic_string.h ****       {
 134:/usr/include/c++/10/bits/basic_string.h **** 	explicit __sv_wrapper(__sv_type __sv) noexcept : _M_sv(__sv) { }
 135:/usr/include/c++/10/bits/basic_string.h **** 	__sv_type _M_sv;
 136:/usr/include/c++/10/bits/basic_string.h ****       };
 137:/usr/include/c++/10/bits/basic_string.h **** 
 138:/usr/include/c++/10/bits/basic_string.h ****       /**
 139:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Only internally used: Construct string from a string view
 140:/usr/include/c++/10/bits/basic_string.h ****        *          wrapper.
 141:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __svw  string view wrapper.
 142:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __a  Allocator to use.
AARCH64 GAS  obj/extInstr.s 			page 90


 143:/usr/include/c++/10/bits/basic_string.h ****        */
 144:/usr/include/c++/10/bits/basic_string.h ****       explicit
 145:/usr/include/c++/10/bits/basic_string.h ****       basic_string(__sv_wrapper __svw, const _Alloc& __a)
 146:/usr/include/c++/10/bits/basic_string.h ****       : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
 147:/usr/include/c++/10/bits/basic_string.h **** #endif
 148:/usr/include/c++/10/bits/basic_string.h **** 
 149:/usr/include/c++/10/bits/basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
 150:/usr/include/c++/10/bits/basic_string.h ****       struct _Alloc_hider : allocator_type // TODO check __is_final
 151:/usr/include/c++/10/bits/basic_string.h ****       {
 152:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus < 201103L
 153:/usr/include/c++/10/bits/basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a = _Alloc())
 154:/usr/include/c++/10/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 155:/usr/include/c++/10/bits/basic_string.h **** #else
 156:/usr/include/c++/10/bits/basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a)
 157:/usr/include/c++/10/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 158:/usr/include/c++/10/bits/basic_string.h **** 
 159:/usr/include/c++/10/bits/basic_string.h **** 	_Alloc_hider(pointer __dat, _Alloc&& __a = _Alloc())
 160:/usr/include/c++/10/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 161:/usr/include/c++/10/bits/basic_string.h **** #endif
 162:/usr/include/c++/10/bits/basic_string.h **** 
 163:/usr/include/c++/10/bits/basic_string.h **** 	pointer _M_p; // The actual data.
 164:/usr/include/c++/10/bits/basic_string.h ****       };
 165:/usr/include/c++/10/bits/basic_string.h **** 
 166:/usr/include/c++/10/bits/basic_string.h ****       _Alloc_hider	_M_dataplus;
 167:/usr/include/c++/10/bits/basic_string.h ****       size_type		_M_string_length;
 168:/usr/include/c++/10/bits/basic_string.h **** 
 169:/usr/include/c++/10/bits/basic_string.h ****       enum { _S_local_capacity = 15 / sizeof(_CharT) };
 170:/usr/include/c++/10/bits/basic_string.h **** 
 171:/usr/include/c++/10/bits/basic_string.h ****       union
 172:/usr/include/c++/10/bits/basic_string.h ****       {
 173:/usr/include/c++/10/bits/basic_string.h **** 	_CharT           _M_local_buf[_S_local_capacity + 1];
 174:/usr/include/c++/10/bits/basic_string.h **** 	size_type        _M_allocated_capacity;
 175:/usr/include/c++/10/bits/basic_string.h ****       };
 176:/usr/include/c++/10/bits/basic_string.h **** 
 177:/usr/include/c++/10/bits/basic_string.h ****       void
 178:/usr/include/c++/10/bits/basic_string.h ****       _M_data(pointer __p)
 179:/usr/include/c++/10/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 180:/usr/include/c++/10/bits/basic_string.h **** 
 181:/usr/include/c++/10/bits/basic_string.h ****       void
 182:/usr/include/c++/10/bits/basic_string.h ****       _M_length(size_type __length)
 183:/usr/include/c++/10/bits/basic_string.h ****       { _M_string_length = __length; }
 184:/usr/include/c++/10/bits/basic_string.h **** 
 185:/usr/include/c++/10/bits/basic_string.h ****       pointer
 186:/usr/include/c++/10/bits/basic_string.h ****       _M_data() const
 187:/usr/include/c++/10/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 188:/usr/include/c++/10/bits/basic_string.h **** 
 189:/usr/include/c++/10/bits/basic_string.h ****       pointer
 190:/usr/include/c++/10/bits/basic_string.h ****       _M_local_data()
 191:/usr/include/c++/10/bits/basic_string.h ****       {
 192:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201103L
 193:/usr/include/c++/10/bits/basic_string.h **** 	return std::pointer_traits<pointer>::pointer_to(*_M_local_buf);
 194:/usr/include/c++/10/bits/basic_string.h **** #else
 195:/usr/include/c++/10/bits/basic_string.h **** 	return pointer(_M_local_buf);
 196:/usr/include/c++/10/bits/basic_string.h **** #endif
 197:/usr/include/c++/10/bits/basic_string.h ****       }
 198:/usr/include/c++/10/bits/basic_string.h **** 
 199:/usr/include/c++/10/bits/basic_string.h ****       const_pointer
AARCH64 GAS  obj/extInstr.s 			page 91


 200:/usr/include/c++/10/bits/basic_string.h ****       _M_local_data() const
 201:/usr/include/c++/10/bits/basic_string.h ****       {
 202:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201103L
 203:/usr/include/c++/10/bits/basic_string.h **** 	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
 204:/usr/include/c++/10/bits/basic_string.h **** #else
 205:/usr/include/c++/10/bits/basic_string.h **** 	return const_pointer(_M_local_buf);
 206:/usr/include/c++/10/bits/basic_string.h **** #endif
 207:/usr/include/c++/10/bits/basic_string.h ****       }
 208:/usr/include/c++/10/bits/basic_string.h **** 
 209:/usr/include/c++/10/bits/basic_string.h ****       void
 210:/usr/include/c++/10/bits/basic_string.h ****       _M_capacity(size_type __capacity)
 211:/usr/include/c++/10/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 212:/usr/include/c++/10/bits/basic_string.h **** 
 213:/usr/include/c++/10/bits/basic_string.h ****       void
 214:/usr/include/c++/10/bits/basic_string.h ****       _M_set_length(size_type __n)
 215:/usr/include/c++/10/bits/basic_string.h ****       {
 216:/usr/include/c++/10/bits/basic_string.h **** 	_M_length(__n);
 217:/usr/include/c++/10/bits/basic_string.h **** 	traits_type::assign(_M_data()[__n], _CharT());
 218:/usr/include/c++/10/bits/basic_string.h ****       }
 219:/usr/include/c++/10/bits/basic_string.h **** 
 220:/usr/include/c++/10/bits/basic_string.h ****       bool
 221:/usr/include/c++/10/bits/basic_string.h ****       _M_is_local() const
 222:/usr/include/c++/10/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 223:/usr/include/c++/10/bits/basic_string.h **** 
 224:/usr/include/c++/10/bits/basic_string.h ****       // Create & Destroy
 225:/usr/include/c++/10/bits/basic_string.h ****       pointer
 226:/usr/include/c++/10/bits/basic_string.h ****       _M_create(size_type&, size_type);
 227:/usr/include/c++/10/bits/basic_string.h **** 
 228:/usr/include/c++/10/bits/basic_string.h ****       void
 229:/usr/include/c++/10/bits/basic_string.h ****       _M_dispose()
 230:/usr/include/c++/10/bits/basic_string.h ****       {
 231:/usr/include/c++/10/bits/basic_string.h **** 	if (!_M_is_local())
 232:/usr/include/c++/10/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 233:/usr/include/c++/10/bits/basic_string.h ****       }
 234:/usr/include/c++/10/bits/basic_string.h **** 
 235:/usr/include/c++/10/bits/basic_string.h ****       void
 236:/usr/include/c++/10/bits/basic_string.h ****       _M_destroy(size_type __size) throw()
 237:/usr/include/c++/10/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 238:/usr/include/c++/10/bits/basic_string.h **** 
 239:/usr/include/c++/10/bits/basic_string.h ****       // _M_construct_aux is used to implement the 21.3.1 para 15 which
 240:/usr/include/c++/10/bits/basic_string.h ****       // requires special behaviour if _InIterator is an integral type
 241:/usr/include/c++/10/bits/basic_string.h ****       template<typename _InIterator>
 242:/usr/include/c++/10/bits/basic_string.h ****         void
 243:/usr/include/c++/10/bits/basic_string.h ****         _M_construct_aux(_InIterator __beg, _InIterator __end,
 244:/usr/include/c++/10/bits/basic_string.h **** 			 std::__false_type)
 245:/usr/include/c++/10/bits/basic_string.h **** 	{
 246:/usr/include/c++/10/bits/basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
 247:/usr/include/c++/10/bits/basic_string.h ****           _M_construct(__beg, __end, _Tag());
 248:/usr/include/c++/10/bits/basic_string.h **** 	}
 249:/usr/include/c++/10/bits/basic_string.h **** 
 250:/usr/include/c++/10/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 251:/usr/include/c++/10/bits/basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
 252:/usr/include/c++/10/bits/basic_string.h ****       template<typename _Integer>
 253:/usr/include/c++/10/bits/basic_string.h ****         void
 254:/usr/include/c++/10/bits/basic_string.h ****         _M_construct_aux(_Integer __beg, _Integer __end, std::__true_type)
 255:/usr/include/c++/10/bits/basic_string.h **** 	{ _M_construct_aux_2(static_cast<size_type>(__beg), __end); }
 256:/usr/include/c++/10/bits/basic_string.h **** 
AARCH64 GAS  obj/extInstr.s 			page 92


 257:/usr/include/c++/10/bits/basic_string.h ****       void
 258:/usr/include/c++/10/bits/basic_string.h ****       _M_construct_aux_2(size_type __req, _CharT __c)
 259:/usr/include/c++/10/bits/basic_string.h ****       { _M_construct(__req, __c); }
 260:/usr/include/c++/10/bits/basic_string.h **** 
 261:/usr/include/c++/10/bits/basic_string.h ****       template<typename _InIterator>
 262:/usr/include/c++/10/bits/basic_string.h ****         void
 263:/usr/include/c++/10/bits/basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end)
 264:/usr/include/c++/10/bits/basic_string.h **** 	{
 265:/usr/include/c++/10/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
 266:/usr/include/c++/10/bits/basic_string.h **** 	  _M_construct_aux(__beg, __end, _Integral());
 267:/usr/include/c++/10/bits/basic_string.h ****         }
 268:/usr/include/c++/10/bits/basic_string.h **** 
 269:/usr/include/c++/10/bits/basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
 270:/usr/include/c++/10/bits/basic_string.h ****       template<typename _InIterator>
 271:/usr/include/c++/10/bits/basic_string.h ****         void
 272:/usr/include/c++/10/bits/basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end,
 273:/usr/include/c++/10/bits/basic_string.h **** 		     std::input_iterator_tag);
 274:/usr/include/c++/10/bits/basic_string.h **** 
 275:/usr/include/c++/10/bits/basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
 276:/usr/include/c++/10/bits/basic_string.h ****       // string::iterator, _CharT*, etc.
 277:/usr/include/c++/10/bits/basic_string.h ****       template<typename _FwdIterator>
 278:/usr/include/c++/10/bits/basic_string.h ****         void
 279:/usr/include/c++/10/bits/basic_string.h ****         _M_construct(_FwdIterator __beg, _FwdIterator __end,
 280:/usr/include/c++/10/bits/basic_string.h **** 		     std::forward_iterator_tag);
 281:/usr/include/c++/10/bits/basic_string.h **** 
 282:/usr/include/c++/10/bits/basic_string.h ****       void
 283:/usr/include/c++/10/bits/basic_string.h ****       _M_construct(size_type __req, _CharT __c);
 284:/usr/include/c++/10/bits/basic_string.h **** 
 285:/usr/include/c++/10/bits/basic_string.h ****       allocator_type&
 286:/usr/include/c++/10/bits/basic_string.h ****       _M_get_allocator()
 287:/usr/include/c++/10/bits/basic_string.h ****       { return _M_dataplus; }
 288:/usr/include/c++/10/bits/basic_string.h **** 
 289:/usr/include/c++/10/bits/basic_string.h ****       const allocator_type&
 290:/usr/include/c++/10/bits/basic_string.h ****       _M_get_allocator() const
 291:/usr/include/c++/10/bits/basic_string.h ****       { return _M_dataplus; }
 292:/usr/include/c++/10/bits/basic_string.h **** 
 293:/usr/include/c++/10/bits/basic_string.h ****     private:
 294:/usr/include/c++/10/bits/basic_string.h **** 
 295:/usr/include/c++/10/bits/basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
 296:/usr/include/c++/10/bits/basic_string.h ****       // The explicit instantiations in misc-inst.cc require this due to
 297:/usr/include/c++/10/bits/basic_string.h ****       // https://gcc.gnu.org/bugzilla/show_bug.cgi?id=64063
 298:/usr/include/c++/10/bits/basic_string.h ****       template<typename _Tp, bool _Requires =
 299:/usr/include/c++/10/bits/basic_string.h **** 	       !__are_same<_Tp, _CharT*>::__value
 300:/usr/include/c++/10/bits/basic_string.h **** 	       && !__are_same<_Tp, const _CharT*>::__value
 301:/usr/include/c++/10/bits/basic_string.h **** 	       && !__are_same<_Tp, iterator>::__value
 302:/usr/include/c++/10/bits/basic_string.h **** 	       && !__are_same<_Tp, const_iterator>::__value>
 303:/usr/include/c++/10/bits/basic_string.h **** 	struct __enable_if_not_native_iterator
 304:/usr/include/c++/10/bits/basic_string.h **** 	{ typedef basic_string& __type; };
 305:/usr/include/c++/10/bits/basic_string.h ****       template<typename _Tp>
 306:/usr/include/c++/10/bits/basic_string.h **** 	struct __enable_if_not_native_iterator<_Tp, false> { };
 307:/usr/include/c++/10/bits/basic_string.h **** #endif
 308:/usr/include/c++/10/bits/basic_string.h **** 
 309:/usr/include/c++/10/bits/basic_string.h ****       size_type
 310:/usr/include/c++/10/bits/basic_string.h ****       _M_check(size_type __pos, const char* __s) const
 311:/usr/include/c++/10/bits/basic_string.h ****       {
 312:/usr/include/c++/10/bits/basic_string.h **** 	if (__pos > this->size())
 313:/usr/include/c++/10/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
AARCH64 GAS  obj/extInstr.s 			page 93


 314:/usr/include/c++/10/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 315:/usr/include/c++/10/bits/basic_string.h **** 				   __s, __pos, this->size());
 316:/usr/include/c++/10/bits/basic_string.h **** 	return __pos;
 317:/usr/include/c++/10/bits/basic_string.h ****       }
 318:/usr/include/c++/10/bits/basic_string.h **** 
 319:/usr/include/c++/10/bits/basic_string.h ****       void
 320:/usr/include/c++/10/bits/basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
 321:/usr/include/c++/10/bits/basic_string.h ****       {
 322:/usr/include/c++/10/bits/basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
 323:/usr/include/c++/10/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 324:/usr/include/c++/10/bits/basic_string.h ****       }
 325:/usr/include/c++/10/bits/basic_string.h **** 
 326:/usr/include/c++/10/bits/basic_string.h **** 
 327:/usr/include/c++/10/bits/basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
 328:/usr/include/c++/10/bits/basic_string.h ****       size_type
 329:/usr/include/c++/10/bits/basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
 330:/usr/include/c++/10/bits/basic_string.h ****       {
 331:/usr/include/c++/10/bits/basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
 332:/usr/include/c++/10/bits/basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
 333:/usr/include/c++/10/bits/basic_string.h ****       }
 334:/usr/include/c++/10/bits/basic_string.h **** 
 335:/usr/include/c++/10/bits/basic_string.h ****       // True if _Rep and source do not overlap.
 336:/usr/include/c++/10/bits/basic_string.h ****       bool
 337:/usr/include/c++/10/bits/basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
 338:/usr/include/c++/10/bits/basic_string.h ****       {
 339:/usr/include/c++/10/bits/basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
 340:/usr/include/c++/10/bits/basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
 341:/usr/include/c++/10/bits/basic_string.h ****       }
 342:/usr/include/c++/10/bits/basic_string.h **** 
 343:/usr/include/c++/10/bits/basic_string.h ****       // When __n = 1 way faster than the general multichar
 344:/usr/include/c++/10/bits/basic_string.h ****       // traits_type::copy/move/assign.
 345:/usr/include/c++/10/bits/basic_string.h ****       static void
 346:/usr/include/c++/10/bits/basic_string.h ****       _S_copy(_CharT* __d, const _CharT* __s, size_type __n)
 347:/usr/include/c++/10/bits/basic_string.h ****       {
 348:/usr/include/c++/10/bits/basic_string.h **** 	if (__n == 1)
 349:/usr/include/c++/10/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 350:/usr/include/c++/10/bits/basic_string.h **** 	else
 351:/usr/include/c++/10/bits/basic_string.h **** 	  traits_type::copy(__d, __s, __n);
 352:/usr/include/c++/10/bits/basic_string.h ****       }
 353:/usr/include/c++/10/bits/basic_string.h **** 
 354:/usr/include/c++/10/bits/basic_string.h ****       static void
 355:/usr/include/c++/10/bits/basic_string.h ****       _S_move(_CharT* __d, const _CharT* __s, size_type __n)
 356:/usr/include/c++/10/bits/basic_string.h ****       {
 357:/usr/include/c++/10/bits/basic_string.h **** 	if (__n == 1)
 358:/usr/include/c++/10/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 359:/usr/include/c++/10/bits/basic_string.h **** 	else
 360:/usr/include/c++/10/bits/basic_string.h **** 	  traits_type::move(__d, __s, __n);
 361:/usr/include/c++/10/bits/basic_string.h ****       }
 362:/usr/include/c++/10/bits/basic_string.h **** 
 363:/usr/include/c++/10/bits/basic_string.h ****       static void
 364:/usr/include/c++/10/bits/basic_string.h ****       _S_assign(_CharT* __d, size_type __n, _CharT __c)
 365:/usr/include/c++/10/bits/basic_string.h ****       {
 366:/usr/include/c++/10/bits/basic_string.h **** 	if (__n == 1)
 367:/usr/include/c++/10/bits/basic_string.h **** 	  traits_type::assign(*__d, __c);
 368:/usr/include/c++/10/bits/basic_string.h **** 	else
 369:/usr/include/c++/10/bits/basic_string.h **** 	  traits_type::assign(__d, __n, __c);
 370:/usr/include/c++/10/bits/basic_string.h ****       }
AARCH64 GAS  obj/extInstr.s 			page 94


 371:/usr/include/c++/10/bits/basic_string.h **** 
 372:/usr/include/c++/10/bits/basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
 373:/usr/include/c++/10/bits/basic_string.h ****       // to optimize for the common case of pointers as iterators.
 374:/usr/include/c++/10/bits/basic_string.h ****       template<class _Iterator>
 375:/usr/include/c++/10/bits/basic_string.h ****         static void
 376:/usr/include/c++/10/bits/basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
 377:/usr/include/c++/10/bits/basic_string.h ****         {
 378:/usr/include/c++/10/bits/basic_string.h **** 	  for (; __k1 != __k2; ++__k1, (void)++__p)
 379:/usr/include/c++/10/bits/basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
 380:/usr/include/c++/10/bits/basic_string.h **** 	}
 381:/usr/include/c++/10/bits/basic_string.h **** 
 382:/usr/include/c++/10/bits/basic_string.h ****       static void
 383:/usr/include/c++/10/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
 384:/usr/include/c++/10/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 385:/usr/include/c++/10/bits/basic_string.h **** 
 386:/usr/include/c++/10/bits/basic_string.h ****       static void
 387:/usr/include/c++/10/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
 388:/usr/include/c++/10/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 389:/usr/include/c++/10/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 390:/usr/include/c++/10/bits/basic_string.h **** 
 391:/usr/include/c++/10/bits/basic_string.h ****       static void
 392:/usr/include/c++/10/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
 393:/usr/include/c++/10/bits/basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 394:/usr/include/c++/10/bits/basic_string.h **** 
 395:/usr/include/c++/10/bits/basic_string.h ****       static void
 396:/usr/include/c++/10/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
 397:/usr/include/c++/10/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 398:/usr/include/c++/10/bits/basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 399:/usr/include/c++/10/bits/basic_string.h **** 
 400:/usr/include/c++/10/bits/basic_string.h ****       static int
 401:/usr/include/c++/10/bits/basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
 402:/usr/include/c++/10/bits/basic_string.h ****       {
 403:/usr/include/c++/10/bits/basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
 404:/usr/include/c++/10/bits/basic_string.h **** 
 405:/usr/include/c++/10/bits/basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
 406:/usr/include/c++/10/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
 407:/usr/include/c++/10/bits/basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
 408:/usr/include/c++/10/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
 409:/usr/include/c++/10/bits/basic_string.h **** 	else
 410:/usr/include/c++/10/bits/basic_string.h **** 	  return int(__d);
 411:/usr/include/c++/10/bits/basic_string.h ****       }
 412:/usr/include/c++/10/bits/basic_string.h **** 
 413:/usr/include/c++/10/bits/basic_string.h ****       void
 414:/usr/include/c++/10/bits/basic_string.h ****       _M_assign(const basic_string&);
 415:/usr/include/c++/10/bits/basic_string.h **** 
 416:/usr/include/c++/10/bits/basic_string.h ****       void
 417:/usr/include/c++/10/bits/basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, const _CharT* __s,
 418:/usr/include/c++/10/bits/basic_string.h **** 		size_type __len2);
 419:/usr/include/c++/10/bits/basic_string.h **** 
 420:/usr/include/c++/10/bits/basic_string.h ****       void
 421:/usr/include/c++/10/bits/basic_string.h ****       _M_erase(size_type __pos, size_type __n);
 422:/usr/include/c++/10/bits/basic_string.h **** 
 423:/usr/include/c++/10/bits/basic_string.h ****     public:
 424:/usr/include/c++/10/bits/basic_string.h ****       // Construct/copy/destroy:
 425:/usr/include/c++/10/bits/basic_string.h ****       // NB: We overload ctors in some cases instead of using default
 426:/usr/include/c++/10/bits/basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
 427:/usr/include/c++/10/bits/basic_string.h **** 
AARCH64 GAS  obj/extInstr.s 			page 95


 428:/usr/include/c++/10/bits/basic_string.h ****       /**
 429:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Default constructor creates an empty string.
 430:/usr/include/c++/10/bits/basic_string.h ****        */
 431:/usr/include/c++/10/bits/basic_string.h ****       basic_string()
 432:/usr/include/c++/10/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 433:/usr/include/c++/10/bits/basic_string.h ****       : _M_dataplus(_M_local_data())
 434:/usr/include/c++/10/bits/basic_string.h ****       { _M_set_length(0); }
 435:/usr/include/c++/10/bits/basic_string.h **** 
 436:/usr/include/c++/10/bits/basic_string.h ****       /**
 437:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
 438:/usr/include/c++/10/bits/basic_string.h ****        */
 439:/usr/include/c++/10/bits/basic_string.h ****       explicit
 440:/usr/include/c++/10/bits/basic_string.h ****       basic_string(const _Alloc& __a) _GLIBCXX_NOEXCEPT
 441:/usr/include/c++/10/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 442:/usr/include/c++/10/bits/basic_string.h ****       { _M_set_length(0); }
 443:/usr/include/c++/10/bits/basic_string.h **** 
 444:/usr/include/c++/10/bits/basic_string.h ****       /**
 445:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Construct string with copy of value of @a __str.
 446:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __str  Source string.
 447:/usr/include/c++/10/bits/basic_string.h ****        */
 448:/usr/include/c++/10/bits/basic_string.h ****       basic_string(const basic_string& __str)
 449:/usr/include/c++/10/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 450:/usr/include/c++/10/bits/basic_string.h **** 		    _Alloc_traits::_S_select_on_copy(__str._M_get_allocator()))
 451:/usr/include/c++/10/bits/basic_string.h ****       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
 452:/usr/include/c++/10/bits/basic_string.h **** 
 453:/usr/include/c++/10/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 454:/usr/include/c++/10/bits/basic_string.h ****       // 2583. no way to supply an allocator for basic_string(str, pos)
 455:/usr/include/c++/10/bits/basic_string.h ****       /**
 456:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 457:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __str  Source string.
 458:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 459:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 460:/usr/include/c++/10/bits/basic_string.h ****        */
 461:/usr/include/c++/10/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 462:/usr/include/c++/10/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc())
 463:/usr/include/c++/10/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 464:/usr/include/c++/10/bits/basic_string.h ****       {
 465:/usr/include/c++/10/bits/basic_string.h **** 	const _CharT* __start = __str._M_data()
 466:/usr/include/c++/10/bits/basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 467:/usr/include/c++/10/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, npos));
 468:/usr/include/c++/10/bits/basic_string.h ****       }
 469:/usr/include/c++/10/bits/basic_string.h **** 
 470:/usr/include/c++/10/bits/basic_string.h ****       /**
 471:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 472:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __str  Source string.
 473:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 474:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 475:/usr/include/c++/10/bits/basic_string.h ****        */
 476:/usr/include/c++/10/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 477:/usr/include/c++/10/bits/basic_string.h **** 		   size_type __n)
 478:/usr/include/c++/10/bits/basic_string.h ****       : _M_dataplus(_M_local_data())
 479:/usr/include/c++/10/bits/basic_string.h ****       {
 480:/usr/include/c++/10/bits/basic_string.h **** 	const _CharT* __start = __str._M_data()
 481:/usr/include/c++/10/bits/basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 482:/usr/include/c++/10/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 483:/usr/include/c++/10/bits/basic_string.h ****       }
 484:/usr/include/c++/10/bits/basic_string.h **** 
AARCH64 GAS  obj/extInstr.s 			page 96


 485:/usr/include/c++/10/bits/basic_string.h ****       /**
 486:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 487:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __str  Source string.
 488:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 489:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 490:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 491:/usr/include/c++/10/bits/basic_string.h ****        */
 492:/usr/include/c++/10/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 493:/usr/include/c++/10/bits/basic_string.h **** 		   size_type __n, const _Alloc& __a)
 494:/usr/include/c++/10/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 495:/usr/include/c++/10/bits/basic_string.h ****       {
 496:/usr/include/c++/10/bits/basic_string.h **** 	const _CharT* __start
 497:/usr/include/c++/10/bits/basic_string.h **** 	  = __str._M_data() + __str._M_check(__pos, "string::string");
 498:/usr/include/c++/10/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 499:/usr/include/c++/10/bits/basic_string.h ****       }
 500:/usr/include/c++/10/bits/basic_string.h **** 
 501:/usr/include/c++/10/bits/basic_string.h ****       /**
 502:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Construct string initialized by a character %array.
 503:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __s  Source character %array.
 504:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 505:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 506:/usr/include/c++/10/bits/basic_string.h ****        *
 507:/usr/include/c++/10/bits/basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
 508:/usr/include/c++/10/bits/basic_string.h ****        *  has no special meaning.
 509:/usr/include/c++/10/bits/basic_string.h ****        */
 510:/usr/include/c++/10/bits/basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
 511:/usr/include/c++/10/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc())
 512:/usr/include/c++/10/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 513:/usr/include/c++/10/bits/basic_string.h ****       { _M_construct(__s, __s + __n); }
 514:/usr/include/c++/10/bits/basic_string.h **** 
 515:/usr/include/c++/10/bits/basic_string.h ****       /**
 516:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Construct string as copy of a C string.
 517:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __s  Source C string.
 518:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 519:/usr/include/c++/10/bits/basic_string.h ****        */
 520:/usr/include/c++/10/bits/basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
 521:/usr/include/c++/10/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 522:/usr/include/c++/10/bits/basic_string.h ****       // 3076. basic_string CTAD ambiguity
 523:/usr/include/c++/10/bits/basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
 524:/usr/include/c++/10/bits/basic_string.h **** #endif
 525:/usr/include/c++/10/bits/basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
 526:/usr/include/c++/10/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 527:/usr/include/c++/10/bits/basic_string.h ****       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
 528:/usr/include/c++/10/bits/basic_string.h **** 
 529:/usr/include/c++/10/bits/basic_string.h ****       /**
 530:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Construct string as multiple characters.
 531:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __n  Number of characters.
 532:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __c  Character to use.
 533:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 534:/usr/include/c++/10/bits/basic_string.h ****        */
 535:/usr/include/c++/10/bits/basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
 536:/usr/include/c++/10/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 537:/usr/include/c++/10/bits/basic_string.h ****       // 3076. basic_string CTAD ambiguity
 538:/usr/include/c++/10/bits/basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
 539:/usr/include/c++/10/bits/basic_string.h **** #endif
 540:/usr/include/c++/10/bits/basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc())
 541:/usr/include/c++/10/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
AARCH64 GAS  obj/extInstr.s 			page 97


 542:/usr/include/c++/10/bits/basic_string.h ****       { _M_construct(__n, __c); }
 543:/usr/include/c++/10/bits/basic_string.h **** 
 544:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201103L
 545:/usr/include/c++/10/bits/basic_string.h ****       /**
 546:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Move construct string.
 547:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __str  Source string.
 548:/usr/include/c++/10/bits/basic_string.h ****        *
 549:/usr/include/c++/10/bits/basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
 550:/usr/include/c++/10/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
 551:/usr/include/c++/10/bits/basic_string.h ****        **/
 552:/usr/include/c++/10/bits/basic_string.h ****       basic_string(basic_string&& __str) noexcept
 553:/usr/include/c++/10/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 554:/usr/include/c++/10/bits/basic_string.h ****       {
 555:/usr/include/c++/10/bits/basic_string.h **** 	if (__str._M_is_local())
 556:/usr/include/c++/10/bits/basic_string.h **** 	  {
 557:/usr/include/c++/10/bits/basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 558:/usr/include/c++/10/bits/basic_string.h **** 			      _S_local_capacity + 1);
 559:/usr/include/c++/10/bits/basic_string.h **** 	  }
 560:/usr/include/c++/10/bits/basic_string.h **** 	else
 561:/usr/include/c++/10/bits/basic_string.h **** 	  {
 562:/usr/include/c++/10/bits/basic_string.h **** 	    _M_data(__str._M_data());
 563:/usr/include/c++/10/bits/basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 564:/usr/include/c++/10/bits/basic_string.h **** 	  }
 565:/usr/include/c++/10/bits/basic_string.h **** 
 566:/usr/include/c++/10/bits/basic_string.h **** 	// Must use _M_length() here not _M_set_length() because
 567:/usr/include/c++/10/bits/basic_string.h **** 	// basic_stringbuf relies on writing into unallocated capacity so
 568:/usr/include/c++/10/bits/basic_string.h **** 	// we mess up the contents if we put a '\0' in the string.
 569:/usr/include/c++/10/bits/basic_string.h **** 	_M_length(__str.length());
 570:/usr/include/c++/10/bits/basic_string.h **** 	__str._M_data(__str._M_local_data());
 571:/usr/include/c++/10/bits/basic_string.h **** 	__str._M_set_length(0);
 572:/usr/include/c++/10/bits/basic_string.h ****       }
 573:/usr/include/c++/10/bits/basic_string.h **** 
 574:/usr/include/c++/10/bits/basic_string.h ****       /**
 575:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Construct string from an initializer %list.
 576:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __l  std::initializer_list of characters.
 577:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 578:/usr/include/c++/10/bits/basic_string.h ****        */
 579:/usr/include/c++/10/bits/basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc())
 580:/usr/include/c++/10/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 581:/usr/include/c++/10/bits/basic_string.h ****       { _M_construct(__l.begin(), __l.end()); }
 582:/usr/include/c++/10/bits/basic_string.h **** 
 583:/usr/include/c++/10/bits/basic_string.h ****       basic_string(const basic_string& __str, const _Alloc& __a)
 584:/usr/include/c++/10/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 585:/usr/include/c++/10/bits/basic_string.h ****       { _M_construct(__str.begin(), __str.end()); }
 586:/usr/include/c++/10/bits/basic_string.h **** 
 587:/usr/include/c++/10/bits/basic_string.h ****       basic_string(basic_string&& __str, const _Alloc& __a)
 588:/usr/include/c++/10/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_always_equal())
 589:/usr/include/c++/10/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 590:/usr/include/c++/10/bits/basic_string.h ****       {
 591:/usr/include/c++/10/bits/basic_string.h **** 	if (__str._M_is_local())
 592:/usr/include/c++/10/bits/basic_string.h **** 	  {
 593:/usr/include/c++/10/bits/basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 594:/usr/include/c++/10/bits/basic_string.h **** 			      _S_local_capacity + 1);
 595:/usr/include/c++/10/bits/basic_string.h **** 	    _M_length(__str.length());
 596:/usr/include/c++/10/bits/basic_string.h **** 	    __str._M_set_length(0);
 597:/usr/include/c++/10/bits/basic_string.h **** 	  }
 598:/usr/include/c++/10/bits/basic_string.h **** 	else if (_Alloc_traits::_S_always_equal()
AARCH64 GAS  obj/extInstr.s 			page 98


 599:/usr/include/c++/10/bits/basic_string.h **** 	    || __str.get_allocator() == __a)
 600:/usr/include/c++/10/bits/basic_string.h **** 	  {
 601:/usr/include/c++/10/bits/basic_string.h **** 	    _M_data(__str._M_data());
 602:/usr/include/c++/10/bits/basic_string.h **** 	    _M_length(__str.length());
 603:/usr/include/c++/10/bits/basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 604:/usr/include/c++/10/bits/basic_string.h **** 	    __str._M_data(__str._M_local_buf);
 605:/usr/include/c++/10/bits/basic_string.h **** 	    __str._M_set_length(0);
 606:/usr/include/c++/10/bits/basic_string.h **** 	  }
 607:/usr/include/c++/10/bits/basic_string.h **** 	else
 608:/usr/include/c++/10/bits/basic_string.h **** 	  _M_construct(__str.begin(), __str.end());
 609:/usr/include/c++/10/bits/basic_string.h ****       }
 610:/usr/include/c++/10/bits/basic_string.h **** 
 611:/usr/include/c++/10/bits/basic_string.h **** #endif // C++11
 612:/usr/include/c++/10/bits/basic_string.h **** 
 613:/usr/include/c++/10/bits/basic_string.h ****       /**
 614:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Construct string as copy of a range.
 615:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __beg  Start of range.
 616:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __end  End of range.
 617:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 618:/usr/include/c++/10/bits/basic_string.h ****        */
 619:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201103L
 620:/usr/include/c++/10/bits/basic_string.h ****       template<typename _InputIterator,
 621:/usr/include/c++/10/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 622:/usr/include/c++/10/bits/basic_string.h **** #else
 623:/usr/include/c++/10/bits/basic_string.h ****       template<typename _InputIterator>
 624:/usr/include/c++/10/bits/basic_string.h **** #endif
 625:/usr/include/c++/10/bits/basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
 626:/usr/include/c++/10/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
 627:/usr/include/c++/10/bits/basic_string.h **** 	: _M_dataplus(_M_local_data(), __a)
 628:/usr/include/c++/10/bits/basic_string.h **** 	{ _M_construct(__beg, __end); }
 629:/usr/include/c++/10/bits/basic_string.h **** 
 630:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201703L
 631:/usr/include/c++/10/bits/basic_string.h ****       /**
 632:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Construct string from a substring of a string_view.
 633:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __t   Source object convertible to string view.
 634:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __pos The index of the first character to copy from __t.
 635:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __n   The number of characters to copy from __t.
 636:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __a   Allocator to use.
 637:/usr/include/c++/10/bits/basic_string.h ****        */
 638:/usr/include/c++/10/bits/basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
 639:/usr/include/c++/10/bits/basic_string.h **** 	basic_string(const _Tp& __t, size_type __pos, size_type __n,
 640:/usr/include/c++/10/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
 641:/usr/include/c++/10/bits/basic_string.h **** 	: basic_string(_S_to_string_view(__t).substr(__pos, __n), __a) { }
 642:/usr/include/c++/10/bits/basic_string.h **** 
 643:/usr/include/c++/10/bits/basic_string.h ****       /**
 644:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Construct string from a string_view.
 645:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __t  Source object convertible to string view.
 646:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 647:/usr/include/c++/10/bits/basic_string.h ****        */
 648:/usr/include/c++/10/bits/basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
 649:/usr/include/c++/10/bits/basic_string.h **** 	explicit
 650:/usr/include/c++/10/bits/basic_string.h **** 	basic_string(const _Tp& __t, const _Alloc& __a = _Alloc())
 651:/usr/include/c++/10/bits/basic_string.h **** 	: basic_string(__sv_wrapper(_S_to_string_view(__t)), __a) { }
 652:/usr/include/c++/10/bits/basic_string.h **** #endif // C++17
 653:/usr/include/c++/10/bits/basic_string.h **** 
 654:/usr/include/c++/10/bits/basic_string.h ****       /**
 655:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Destroy the string instance.
AARCH64 GAS  obj/extInstr.s 			page 99


 656:/usr/include/c++/10/bits/basic_string.h ****        */
 657:/usr/include/c++/10/bits/basic_string.h ****       ~basic_string()
 658:/usr/include/c++/10/bits/basic_string.h ****       { _M_dispose(); }
 659:/usr/include/c++/10/bits/basic_string.h **** 
 660:/usr/include/c++/10/bits/basic_string.h ****       /**
 661:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Assign the value of @a str to this string.
 662:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __str  Source string.
 663:/usr/include/c++/10/bits/basic_string.h ****        */
 664:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
 665:/usr/include/c++/10/bits/basic_string.h ****       operator=(const basic_string& __str)
 666:/usr/include/c++/10/bits/basic_string.h ****       {
 667:/usr/include/c++/10/bits/basic_string.h **** 	return this->assign(__str);
 668:/usr/include/c++/10/bits/basic_string.h ****       }
 669:/usr/include/c++/10/bits/basic_string.h **** 
 670:/usr/include/c++/10/bits/basic_string.h ****       /**
 671:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Copy contents of @a s into this string.
 672:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __s  Source null-terminated string.
 673:/usr/include/c++/10/bits/basic_string.h ****        */
 674:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
 675:/usr/include/c++/10/bits/basic_string.h ****       operator=(const _CharT* __s)
 676:/usr/include/c++/10/bits/basic_string.h ****       { return this->assign(__s); }
 677:/usr/include/c++/10/bits/basic_string.h **** 
 678:/usr/include/c++/10/bits/basic_string.h ****       /**
 679:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Set value to string of length 1.
 680:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __c  Source character.
 681:/usr/include/c++/10/bits/basic_string.h ****        *
 682:/usr/include/c++/10/bits/basic_string.h ****        *  Assigning to a character makes this string length 1 and
 683:/usr/include/c++/10/bits/basic_string.h ****        *  (*this)[0] == @a c.
 684:/usr/include/c++/10/bits/basic_string.h ****        */
 685:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
 686:/usr/include/c++/10/bits/basic_string.h ****       operator=(_CharT __c)
 687:/usr/include/c++/10/bits/basic_string.h ****       {
 688:/usr/include/c++/10/bits/basic_string.h **** 	this->assign(1, __c);
 689:/usr/include/c++/10/bits/basic_string.h **** 	return *this;
 690:/usr/include/c++/10/bits/basic_string.h ****       }
 691:/usr/include/c++/10/bits/basic_string.h **** 
 692:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201103L
 693:/usr/include/c++/10/bits/basic_string.h ****       /**
 694:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
 695:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __str  Source string.
 696:/usr/include/c++/10/bits/basic_string.h ****        *
 697:/usr/include/c++/10/bits/basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
 698:/usr/include/c++/10/bits/basic_string.h ****        *  @a str is a valid, but unspecified string.
 699:/usr/include/c++/10/bits/basic_string.h ****        **/
 700:/usr/include/c++/10/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 701:/usr/include/c++/10/bits/basic_string.h ****       // 2063. Contradictory requirements for string move assignment
 702:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
 703:/usr/include/c++/10/bits/basic_string.h ****       operator=(basic_string&& __str)
 704:/usr/include/c++/10/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
 705:/usr/include/c++/10/bits/basic_string.h ****       {
 706:/usr/include/c++/10/bits/basic_string.h **** 	if (!_M_is_local() && _Alloc_traits::_S_propagate_on_move_assign()
 707:/usr/include/c++/10/bits/basic_string.h **** 	    && !_Alloc_traits::_S_always_equal()
 708:/usr/include/c++/10/bits/basic_string.h **** 	    && _M_get_allocator() != __str._M_get_allocator())
 709:/usr/include/c++/10/bits/basic_string.h **** 	  {
 710:/usr/include/c++/10/bits/basic_string.h **** 	    // Destroy existing storage before replacing allocator.
 711:/usr/include/c++/10/bits/basic_string.h **** 	    _M_destroy(_M_allocated_capacity);
 712:/usr/include/c++/10/bits/basic_string.h **** 	    _M_data(_M_local_data());
AARCH64 GAS  obj/extInstr.s 			page 100


 713:/usr/include/c++/10/bits/basic_string.h **** 	    _M_set_length(0);
 714:/usr/include/c++/10/bits/basic_string.h **** 	  }
 715:/usr/include/c++/10/bits/basic_string.h **** 	// Replace allocator if POCMA is true.
 716:/usr/include/c++/10/bits/basic_string.h **** 	std::__alloc_on_move(_M_get_allocator(), __str._M_get_allocator());
 717:/usr/include/c++/10/bits/basic_string.h **** 
 718:/usr/include/c++/10/bits/basic_string.h **** 	if (__str._M_is_local())
 719:/usr/include/c++/10/bits/basic_string.h **** 	  {
 720:/usr/include/c++/10/bits/basic_string.h **** 	    // We've always got room for a short string, just copy it.
 721:/usr/include/c++/10/bits/basic_string.h **** 	    if (__str.size())
 722:/usr/include/c++/10/bits/basic_string.h **** 	      this->_S_copy(_M_data(), __str._M_data(), __str.size());
 723:/usr/include/c++/10/bits/basic_string.h **** 	    _M_set_length(__str.size());
 724:/usr/include/c++/10/bits/basic_string.h **** 	  }
 725:/usr/include/c++/10/bits/basic_string.h **** 	else if (_Alloc_traits::_S_propagate_on_move_assign()
 726:/usr/include/c++/10/bits/basic_string.h **** 	    || _Alloc_traits::_S_always_equal()
 727:/usr/include/c++/10/bits/basic_string.h **** 	    || _M_get_allocator() == __str._M_get_allocator())
 728:/usr/include/c++/10/bits/basic_string.h **** 	  {
 729:/usr/include/c++/10/bits/basic_string.h **** 	    // Just move the allocated pointer, our allocator can free it.
 730:/usr/include/c++/10/bits/basic_string.h **** 	    pointer __data = nullptr;
 731:/usr/include/c++/10/bits/basic_string.h **** 	    size_type __capacity;
 732:/usr/include/c++/10/bits/basic_string.h **** 	    if (!_M_is_local())
 733:/usr/include/c++/10/bits/basic_string.h **** 	      {
 734:/usr/include/c++/10/bits/basic_string.h **** 		if (_Alloc_traits::_S_always_equal())
 735:/usr/include/c++/10/bits/basic_string.h **** 		  {
 736:/usr/include/c++/10/bits/basic_string.h **** 		    // __str can reuse our existing storage.
 737:/usr/include/c++/10/bits/basic_string.h **** 		    __data = _M_data();
 738:/usr/include/c++/10/bits/basic_string.h **** 		    __capacity = _M_allocated_capacity;
 739:/usr/include/c++/10/bits/basic_string.h **** 		  }
 740:/usr/include/c++/10/bits/basic_string.h **** 		else // __str can't use it, so free it.
 741:/usr/include/c++/10/bits/basic_string.h **** 		  _M_destroy(_M_allocated_capacity);
 742:/usr/include/c++/10/bits/basic_string.h **** 	      }
 743:/usr/include/c++/10/bits/basic_string.h **** 
 744:/usr/include/c++/10/bits/basic_string.h **** 	    _M_data(__str._M_data());
 745:/usr/include/c++/10/bits/basic_string.h **** 	    _M_length(__str.length());
 746:/usr/include/c++/10/bits/basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 747:/usr/include/c++/10/bits/basic_string.h **** 	    if (__data)
 748:/usr/include/c++/10/bits/basic_string.h **** 	      {
 749:/usr/include/c++/10/bits/basic_string.h **** 		__str._M_data(__data);
 750:/usr/include/c++/10/bits/basic_string.h **** 		__str._M_capacity(__capacity);
 751:/usr/include/c++/10/bits/basic_string.h **** 	      }
 752:/usr/include/c++/10/bits/basic_string.h **** 	    else
 753:/usr/include/c++/10/bits/basic_string.h **** 	      __str._M_data(__str._M_local_buf);
 754:/usr/include/c++/10/bits/basic_string.h **** 	  }
 755:/usr/include/c++/10/bits/basic_string.h **** 	else // Need to do a deep copy
 756:/usr/include/c++/10/bits/basic_string.h **** 	  assign(__str);
 757:/usr/include/c++/10/bits/basic_string.h **** 	__str.clear();
 758:/usr/include/c++/10/bits/basic_string.h **** 	return *this;
 759:/usr/include/c++/10/bits/basic_string.h ****       }
 760:/usr/include/c++/10/bits/basic_string.h **** 
 761:/usr/include/c++/10/bits/basic_string.h ****       /**
 762:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
 763:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __l  std::initializer_list.
 764:/usr/include/c++/10/bits/basic_string.h ****        */
 765:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
 766:/usr/include/c++/10/bits/basic_string.h ****       operator=(initializer_list<_CharT> __l)
 767:/usr/include/c++/10/bits/basic_string.h ****       {
 768:/usr/include/c++/10/bits/basic_string.h **** 	this->assign(__l.begin(), __l.size());
 769:/usr/include/c++/10/bits/basic_string.h **** 	return *this;
AARCH64 GAS  obj/extInstr.s 			page 101


 770:/usr/include/c++/10/bits/basic_string.h ****       }
 771:/usr/include/c++/10/bits/basic_string.h **** #endif // C++11
 772:/usr/include/c++/10/bits/basic_string.h **** 
 773:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201703L
 774:/usr/include/c++/10/bits/basic_string.h ****       /**
 775:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Set value to string constructed from a string_view.
 776:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __svt  An object convertible to string_view.
 777:/usr/include/c++/10/bits/basic_string.h ****        */
 778:/usr/include/c++/10/bits/basic_string.h ****      template<typename _Tp>
 779:/usr/include/c++/10/bits/basic_string.h ****        _If_sv<_Tp, basic_string&>
 780:/usr/include/c++/10/bits/basic_string.h ****        operator=(const _Tp& __svt)
 781:/usr/include/c++/10/bits/basic_string.h ****        { return this->assign(__svt); }
 782:/usr/include/c++/10/bits/basic_string.h **** 
 783:/usr/include/c++/10/bits/basic_string.h ****       /**
 784:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Convert to a string_view.
 785:/usr/include/c++/10/bits/basic_string.h ****        *  @return A string_view.
 786:/usr/include/c++/10/bits/basic_string.h ****        */
 787:/usr/include/c++/10/bits/basic_string.h ****       operator __sv_type() const noexcept
 788:/usr/include/c++/10/bits/basic_string.h ****       { return __sv_type(data(), size()); }
 789:/usr/include/c++/10/bits/basic_string.h **** #endif // C++17
 790:/usr/include/c++/10/bits/basic_string.h **** 
 791:/usr/include/c++/10/bits/basic_string.h ****       // Iterators:
 792:/usr/include/c++/10/bits/basic_string.h ****       /**
 793:/usr/include/c++/10/bits/basic_string.h ****        *  Returns a read/write iterator that points to the first character in
 794:/usr/include/c++/10/bits/basic_string.h ****        *  the %string.
 795:/usr/include/c++/10/bits/basic_string.h ****        */
 796:/usr/include/c++/10/bits/basic_string.h ****       iterator
 797:/usr/include/c++/10/bits/basic_string.h ****       begin() _GLIBCXX_NOEXCEPT
 798:/usr/include/c++/10/bits/basic_string.h ****       { return iterator(_M_data()); }
 799:/usr/include/c++/10/bits/basic_string.h **** 
 800:/usr/include/c++/10/bits/basic_string.h ****       /**
 801:/usr/include/c++/10/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 802:/usr/include/c++/10/bits/basic_string.h ****        *  character in the %string.
 803:/usr/include/c++/10/bits/basic_string.h ****        */
 804:/usr/include/c++/10/bits/basic_string.h ****       const_iterator
 805:/usr/include/c++/10/bits/basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
 806:/usr/include/c++/10/bits/basic_string.h ****       { return const_iterator(_M_data()); }
 807:/usr/include/c++/10/bits/basic_string.h **** 
 808:/usr/include/c++/10/bits/basic_string.h ****       /**
 809:/usr/include/c++/10/bits/basic_string.h ****        *  Returns a read/write iterator that points one past the last
 810:/usr/include/c++/10/bits/basic_string.h ****        *  character in the %string.
 811:/usr/include/c++/10/bits/basic_string.h ****        */
 812:/usr/include/c++/10/bits/basic_string.h ****       iterator
 813:/usr/include/c++/10/bits/basic_string.h ****       end() _GLIBCXX_NOEXCEPT
 814:/usr/include/c++/10/bits/basic_string.h ****       { return iterator(_M_data() + this->size()); }
 815:/usr/include/c++/10/bits/basic_string.h **** 
 816:/usr/include/c++/10/bits/basic_string.h ****       /**
 817:/usr/include/c++/10/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 818:/usr/include/c++/10/bits/basic_string.h ****        *  last character in the %string.
 819:/usr/include/c++/10/bits/basic_string.h ****        */
 820:/usr/include/c++/10/bits/basic_string.h ****       const_iterator
 821:/usr/include/c++/10/bits/basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
 822:/usr/include/c++/10/bits/basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
 823:/usr/include/c++/10/bits/basic_string.h **** 
 824:/usr/include/c++/10/bits/basic_string.h ****       /**
 825:/usr/include/c++/10/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
 826:/usr/include/c++/10/bits/basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
AARCH64 GAS  obj/extInstr.s 			page 102


 827:/usr/include/c++/10/bits/basic_string.h ****        *  order.
 828:/usr/include/c++/10/bits/basic_string.h ****        */
 829:/usr/include/c++/10/bits/basic_string.h ****       reverse_iterator
 830:/usr/include/c++/10/bits/basic_string.h ****       rbegin() _GLIBCXX_NOEXCEPT
 831:/usr/include/c++/10/bits/basic_string.h ****       { return reverse_iterator(this->end()); }
 832:/usr/include/c++/10/bits/basic_string.h **** 
 833:/usr/include/c++/10/bits/basic_string.h ****       /**
 834:/usr/include/c++/10/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 835:/usr/include/c++/10/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 836:/usr/include/c++/10/bits/basic_string.h ****        *  reverse element order.
 837:/usr/include/c++/10/bits/basic_string.h ****        */
 838:/usr/include/c++/10/bits/basic_string.h ****       const_reverse_iterator
 839:/usr/include/c++/10/bits/basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 840:/usr/include/c++/10/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
 841:/usr/include/c++/10/bits/basic_string.h **** 
 842:/usr/include/c++/10/bits/basic_string.h ****       /**
 843:/usr/include/c++/10/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
 844:/usr/include/c++/10/bits/basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
 845:/usr/include/c++/10/bits/basic_string.h ****        *  element order.
 846:/usr/include/c++/10/bits/basic_string.h ****        */
 847:/usr/include/c++/10/bits/basic_string.h ****       reverse_iterator
 848:/usr/include/c++/10/bits/basic_string.h ****       rend() _GLIBCXX_NOEXCEPT
 849:/usr/include/c++/10/bits/basic_string.h ****       { return reverse_iterator(this->begin()); }
 850:/usr/include/c++/10/bits/basic_string.h **** 
 851:/usr/include/c++/10/bits/basic_string.h ****       /**
 852:/usr/include/c++/10/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 853:/usr/include/c++/10/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
 854:/usr/include/c++/10/bits/basic_string.h ****        *  is done in reverse element order.
 855:/usr/include/c++/10/bits/basic_string.h ****        */
 856:/usr/include/c++/10/bits/basic_string.h ****       const_reverse_iterator
 857:/usr/include/c++/10/bits/basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
 858:/usr/include/c++/10/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 859:/usr/include/c++/10/bits/basic_string.h **** 
 860:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201103L
 861:/usr/include/c++/10/bits/basic_string.h ****       /**
 862:/usr/include/c++/10/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 863:/usr/include/c++/10/bits/basic_string.h ****        *  character in the %string.
 864:/usr/include/c++/10/bits/basic_string.h ****        */
 865:/usr/include/c++/10/bits/basic_string.h ****       const_iterator
 866:/usr/include/c++/10/bits/basic_string.h ****       cbegin() const noexcept
 867:/usr/include/c++/10/bits/basic_string.h ****       { return const_iterator(this->_M_data()); }
 868:/usr/include/c++/10/bits/basic_string.h **** 
 869:/usr/include/c++/10/bits/basic_string.h ****       /**
 870:/usr/include/c++/10/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 871:/usr/include/c++/10/bits/basic_string.h ****        *  last character in the %string.
 872:/usr/include/c++/10/bits/basic_string.h ****        */
 873:/usr/include/c++/10/bits/basic_string.h ****       const_iterator
 874:/usr/include/c++/10/bits/basic_string.h ****       cend() const noexcept
 875:/usr/include/c++/10/bits/basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
 876:/usr/include/c++/10/bits/basic_string.h **** 
 877:/usr/include/c++/10/bits/basic_string.h ****       /**
 878:/usr/include/c++/10/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 879:/usr/include/c++/10/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 880:/usr/include/c++/10/bits/basic_string.h ****        *  reverse element order.
 881:/usr/include/c++/10/bits/basic_string.h ****        */
 882:/usr/include/c++/10/bits/basic_string.h ****       const_reverse_iterator
 883:/usr/include/c++/10/bits/basic_string.h ****       crbegin() const noexcept
AARCH64 GAS  obj/extInstr.s 			page 103


 884:/usr/include/c++/10/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
 885:/usr/include/c++/10/bits/basic_string.h **** 
 886:/usr/include/c++/10/bits/basic_string.h ****       /**
 887:/usr/include/c++/10/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 888:/usr/include/c++/10/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
 889:/usr/include/c++/10/bits/basic_string.h ****        *  is done in reverse element order.
 890:/usr/include/c++/10/bits/basic_string.h ****        */
 891:/usr/include/c++/10/bits/basic_string.h ****       const_reverse_iterator
 892:/usr/include/c++/10/bits/basic_string.h ****       crend() const noexcept
 893:/usr/include/c++/10/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 894:/usr/include/c++/10/bits/basic_string.h **** #endif
 895:/usr/include/c++/10/bits/basic_string.h **** 
 896:/usr/include/c++/10/bits/basic_string.h ****     public:
 897:/usr/include/c++/10/bits/basic_string.h ****       // Capacity:
 898:/usr/include/c++/10/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
 899:/usr/include/c++/10/bits/basic_string.h ****       ///  null-termination.
 900:/usr/include/c++/10/bits/basic_string.h ****       size_type
 901:/usr/include/c++/10/bits/basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
 902:/usr/include/c++/10/bits/basic_string.h ****       { return _M_string_length; }
 903:/usr/include/c++/10/bits/basic_string.h **** 
 904:/usr/include/c++/10/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
 905:/usr/include/c++/10/bits/basic_string.h ****       ///  null-termination.
 906:/usr/include/c++/10/bits/basic_string.h ****       size_type
 907:/usr/include/c++/10/bits/basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
 908:/usr/include/c++/10/bits/basic_string.h ****       { return _M_string_length; }
 909:/usr/include/c++/10/bits/basic_string.h **** 
 910:/usr/include/c++/10/bits/basic_string.h ****       ///  Returns the size() of the largest possible %string.
 911:/usr/include/c++/10/bits/basic_string.h ****       size_type
 912:/usr/include/c++/10/bits/basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
 913:/usr/include/c++/10/bits/basic_string.h ****       { return (_Alloc_traits::max_size(_M_get_allocator()) - 1) / 2; }
 914:/usr/include/c++/10/bits/basic_string.h **** 
 915:/usr/include/c++/10/bits/basic_string.h ****       /**
 916:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 917:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 918:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __c  Character to fill any new elements.
 919:/usr/include/c++/10/bits/basic_string.h ****        *
 920:/usr/include/c++/10/bits/basic_string.h ****        *  This function will %resize the %string to the specified
 921:/usr/include/c++/10/bits/basic_string.h ****        *  number of characters.  If the number is smaller than the
 922:/usr/include/c++/10/bits/basic_string.h ****        *  %string's current size the %string is truncated, otherwise
 923:/usr/include/c++/10/bits/basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
 924:/usr/include/c++/10/bits/basic_string.h ****        */
 925:/usr/include/c++/10/bits/basic_string.h ****       void
 926:/usr/include/c++/10/bits/basic_string.h ****       resize(size_type __n, _CharT __c);
 927:/usr/include/c++/10/bits/basic_string.h **** 
 928:/usr/include/c++/10/bits/basic_string.h ****       /**
 929:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 930:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 931:/usr/include/c++/10/bits/basic_string.h ****        *
 932:/usr/include/c++/10/bits/basic_string.h ****        *  This function will resize the %string to the specified length.  If
 933:/usr/include/c++/10/bits/basic_string.h ****        *  the new size is smaller than the %string's current size the %string
 934:/usr/include/c++/10/bits/basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
 935:/usr/include/c++/10/bits/basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
 936:/usr/include/c++/10/bits/basic_string.h ****        *  setting them to 0.
 937:/usr/include/c++/10/bits/basic_string.h ****        */
 938:/usr/include/c++/10/bits/basic_string.h ****       void
 939:/usr/include/c++/10/bits/basic_string.h ****       resize(size_type __n)
 940:/usr/include/c++/10/bits/basic_string.h ****       { this->resize(__n, _CharT()); }
AARCH64 GAS  obj/extInstr.s 			page 104


 941:/usr/include/c++/10/bits/basic_string.h **** 
 942:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201103L
 943:/usr/include/c++/10/bits/basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
 944:/usr/include/c++/10/bits/basic_string.h ****       void
 945:/usr/include/c++/10/bits/basic_string.h ****       shrink_to_fit() noexcept
 946:/usr/include/c++/10/bits/basic_string.h ****       {
 947:/usr/include/c++/10/bits/basic_string.h **** #if __cpp_exceptions
 948:/usr/include/c++/10/bits/basic_string.h **** 	if (capacity() > size())
 949:/usr/include/c++/10/bits/basic_string.h **** 	  {
 950:/usr/include/c++/10/bits/basic_string.h **** 	    try
 951:/usr/include/c++/10/bits/basic_string.h **** 	      { reserve(0); }
 952:/usr/include/c++/10/bits/basic_string.h **** 	    catch(...)
 953:/usr/include/c++/10/bits/basic_string.h **** 	      { }
 954:/usr/include/c++/10/bits/basic_string.h **** 	  }
 955:/usr/include/c++/10/bits/basic_string.h **** #endif
 956:/usr/include/c++/10/bits/basic_string.h ****       }
 957:/usr/include/c++/10/bits/basic_string.h **** #endif
 958:/usr/include/c++/10/bits/basic_string.h **** 
 959:/usr/include/c++/10/bits/basic_string.h ****       /**
 960:/usr/include/c++/10/bits/basic_string.h ****        *  Returns the total number of characters that the %string can hold
 961:/usr/include/c++/10/bits/basic_string.h ****        *  before needing to allocate more memory.
 962:/usr/include/c++/10/bits/basic_string.h ****        */
 963:/usr/include/c++/10/bits/basic_string.h ****       size_type
 964:/usr/include/c++/10/bits/basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
 965:/usr/include/c++/10/bits/basic_string.h ****       {
 966:/usr/include/c++/10/bits/basic_string.h **** 	return _M_is_local() ? size_type(_S_local_capacity)
 967:/usr/include/c++/10/bits/basic_string.h **** 	                     : _M_allocated_capacity;
 968:/usr/include/c++/10/bits/basic_string.h ****       }
 969:/usr/include/c++/10/bits/basic_string.h **** 
 970:/usr/include/c++/10/bits/basic_string.h ****       /**
 971:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
 972:/usr/include/c++/10/bits/basic_string.h ****        *          characters.
 973:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __res_arg  Number of characters required.
 974:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
 975:/usr/include/c++/10/bits/basic_string.h ****        *
 976:/usr/include/c++/10/bits/basic_string.h ****        *  This function attempts to reserve enough memory for the
 977:/usr/include/c++/10/bits/basic_string.h ****        *  %string to hold the specified number of characters.  If the
 978:/usr/include/c++/10/bits/basic_string.h ****        *  number requested is more than max_size(), length_error is
 979:/usr/include/c++/10/bits/basic_string.h ****        *  thrown.
 980:/usr/include/c++/10/bits/basic_string.h ****        *
 981:/usr/include/c++/10/bits/basic_string.h ****        *  The advantage of this function is that if optimal code is a
 982:/usr/include/c++/10/bits/basic_string.h ****        *  necessity and the user can determine the string length that will be
 983:/usr/include/c++/10/bits/basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
 984:/usr/include/c++/10/bits/basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
 985:/usr/include/c++/10/bits/basic_string.h ****        *  data.
 986:/usr/include/c++/10/bits/basic_string.h ****        */
 987:/usr/include/c++/10/bits/basic_string.h ****       void
 988:/usr/include/c++/10/bits/basic_string.h ****       reserve(size_type __res_arg = 0);
 989:/usr/include/c++/10/bits/basic_string.h **** 
 990:/usr/include/c++/10/bits/basic_string.h ****       /**
 991:/usr/include/c++/10/bits/basic_string.h ****        *  Erases the string, making it empty.
 992:/usr/include/c++/10/bits/basic_string.h ****        */
 993:/usr/include/c++/10/bits/basic_string.h ****       void
 994:/usr/include/c++/10/bits/basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
 995:/usr/include/c++/10/bits/basic_string.h ****       { _M_set_length(0); }
 996:/usr/include/c++/10/bits/basic_string.h **** 
 997:/usr/include/c++/10/bits/basic_string.h ****       /**
AARCH64 GAS  obj/extInstr.s 			page 105


 998:/usr/include/c++/10/bits/basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
 999:/usr/include/c++/10/bits/basic_string.h ****        *  <code>*this == ""</code>.
1000:/usr/include/c++/10/bits/basic_string.h ****        */
1001:/usr/include/c++/10/bits/basic_string.h ****       _GLIBCXX_NODISCARD bool
1002:/usr/include/c++/10/bits/basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
1003:/usr/include/c++/10/bits/basic_string.h ****       { return this->size() == 0; }
1004:/usr/include/c++/10/bits/basic_string.h **** 
1005:/usr/include/c++/10/bits/basic_string.h ****       // Element access:
1006:/usr/include/c++/10/bits/basic_string.h ****       /**
1007:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
1008:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
1009:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Read-only (constant) reference to the character.
1010:/usr/include/c++/10/bits/basic_string.h ****        *
1011:/usr/include/c++/10/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
1012:/usr/include/c++/10/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
1013:/usr/include/c++/10/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
1014:/usr/include/c++/10/bits/basic_string.h ****        *  see at().)
1015:/usr/include/c++/10/bits/basic_string.h ****        */
1016:/usr/include/c++/10/bits/basic_string.h ****       const_reference
1017:/usr/include/c++/10/bits/basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
1018:/usr/include/c++/10/bits/basic_string.h ****       {
1019:/usr/include/c++/10/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
1020:/usr/include/c++/10/bits/basic_string.h **** 	return _M_data()[__pos];
1021:/usr/include/c++/10/bits/basic_string.h ****       }
1022:/usr/include/c++/10/bits/basic_string.h **** 
1023:/usr/include/c++/10/bits/basic_string.h ****       /**
1024:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
1025:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
1026:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Read/write reference to the character.
1027:/usr/include/c++/10/bits/basic_string.h ****        *
1028:/usr/include/c++/10/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
1029:/usr/include/c++/10/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
1030:/usr/include/c++/10/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
1031:/usr/include/c++/10/bits/basic_string.h ****        *  see at().)
1032:/usr/include/c++/10/bits/basic_string.h ****        */
1033:/usr/include/c++/10/bits/basic_string.h ****       reference
1034:/usr/include/c++/10/bits/basic_string.h ****       operator[](size_type __pos)
1035:/usr/include/c++/10/bits/basic_string.h ****       {
1036:/usr/include/c++/10/bits/basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
1037:/usr/include/c++/10/bits/basic_string.h **** 	// and in C++11 mode.
1038:/usr/include/c++/10/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
1039:/usr/include/c++/10/bits/basic_string.h ****         // In pedantic mode be strict in C++98 mode.
1040:/usr/include/c++/10/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
1041:/usr/include/c++/10/bits/basic_string.h **** 	return _M_data()[__pos];
1042:/usr/include/c++/10/bits/basic_string.h ****       }
1043:/usr/include/c++/10/bits/basic_string.h **** 
1044:/usr/include/c++/10/bits/basic_string.h ****       /**
1045:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
1046:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n The index of the character to access.
1047:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Read-only (const) reference to the character.
1048:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
1049:/usr/include/c++/10/bits/basic_string.h ****        *
1050:/usr/include/c++/10/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
1051:/usr/include/c++/10/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
1052:/usr/include/c++/10/bits/basic_string.h ****        *  throws out_of_range if the check fails.
1053:/usr/include/c++/10/bits/basic_string.h ****        */
1054:/usr/include/c++/10/bits/basic_string.h ****       const_reference
AARCH64 GAS  obj/extInstr.s 			page 106


1055:/usr/include/c++/10/bits/basic_string.h ****       at(size_type __n) const
1056:/usr/include/c++/10/bits/basic_string.h ****       {
1057:/usr/include/c++/10/bits/basic_string.h **** 	if (__n >= this->size())
1058:/usr/include/c++/10/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
1059:/usr/include/c++/10/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
1060:/usr/include/c++/10/bits/basic_string.h **** 				       "(which is %zu)"),
1061:/usr/include/c++/10/bits/basic_string.h **** 				   __n, this->size());
1062:/usr/include/c++/10/bits/basic_string.h **** 	return _M_data()[__n];
1063:/usr/include/c++/10/bits/basic_string.h ****       }
1064:/usr/include/c++/10/bits/basic_string.h **** 
1065:/usr/include/c++/10/bits/basic_string.h ****       /**
1066:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
1067:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n The index of the character to access.
1068:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Read/write reference to the character.
1069:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
1070:/usr/include/c++/10/bits/basic_string.h ****        *
1071:/usr/include/c++/10/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
1072:/usr/include/c++/10/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
1073:/usr/include/c++/10/bits/basic_string.h ****        *  throws out_of_range if the check fails.
1074:/usr/include/c++/10/bits/basic_string.h ****        */
1075:/usr/include/c++/10/bits/basic_string.h ****       reference
1076:/usr/include/c++/10/bits/basic_string.h ****       at(size_type __n)
1077:/usr/include/c++/10/bits/basic_string.h ****       {
1078:/usr/include/c++/10/bits/basic_string.h **** 	if (__n >= size())
1079:/usr/include/c++/10/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
1080:/usr/include/c++/10/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
1081:/usr/include/c++/10/bits/basic_string.h **** 				       "(which is %zu)"),
1082:/usr/include/c++/10/bits/basic_string.h **** 				   __n, this->size());
1083:/usr/include/c++/10/bits/basic_string.h **** 	return _M_data()[__n];
1084:/usr/include/c++/10/bits/basic_string.h ****       }
1085:/usr/include/c++/10/bits/basic_string.h **** 
1086:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201103L
1087:/usr/include/c++/10/bits/basic_string.h ****       /**
1088:/usr/include/c++/10/bits/basic_string.h ****        *  Returns a read/write reference to the data at the first
1089:/usr/include/c++/10/bits/basic_string.h ****        *  element of the %string.
1090:/usr/include/c++/10/bits/basic_string.h ****        */
1091:/usr/include/c++/10/bits/basic_string.h ****       reference
1092:/usr/include/c++/10/bits/basic_string.h ****       front() noexcept
1093:/usr/include/c++/10/bits/basic_string.h ****       {
1094:/usr/include/c++/10/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1095:/usr/include/c++/10/bits/basic_string.h **** 	return operator[](0);
1096:/usr/include/c++/10/bits/basic_string.h ****       }
1097:/usr/include/c++/10/bits/basic_string.h **** 
1098:/usr/include/c++/10/bits/basic_string.h ****       /**
1099:/usr/include/c++/10/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
1100:/usr/include/c++/10/bits/basic_string.h ****        *  element of the %string.
1101:/usr/include/c++/10/bits/basic_string.h ****        */
1102:/usr/include/c++/10/bits/basic_string.h ****       const_reference
1103:/usr/include/c++/10/bits/basic_string.h ****       front() const noexcept
1104:/usr/include/c++/10/bits/basic_string.h ****       {
1105:/usr/include/c++/10/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1106:/usr/include/c++/10/bits/basic_string.h **** 	return operator[](0);
1107:/usr/include/c++/10/bits/basic_string.h ****       }
1108:/usr/include/c++/10/bits/basic_string.h **** 
1109:/usr/include/c++/10/bits/basic_string.h ****       /**
1110:/usr/include/c++/10/bits/basic_string.h ****        *  Returns a read/write reference to the data at the last
1111:/usr/include/c++/10/bits/basic_string.h ****        *  element of the %string.
AARCH64 GAS  obj/extInstr.s 			page 107


1112:/usr/include/c++/10/bits/basic_string.h ****        */
1113:/usr/include/c++/10/bits/basic_string.h ****       reference
1114:/usr/include/c++/10/bits/basic_string.h ****       back() noexcept
1115:/usr/include/c++/10/bits/basic_string.h ****       {
1116:/usr/include/c++/10/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1117:/usr/include/c++/10/bits/basic_string.h **** 	return operator[](this->size() - 1);
1118:/usr/include/c++/10/bits/basic_string.h ****       }
1119:/usr/include/c++/10/bits/basic_string.h **** 
1120:/usr/include/c++/10/bits/basic_string.h ****       /**
1121:/usr/include/c++/10/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
1122:/usr/include/c++/10/bits/basic_string.h ****        *  last element of the %string.
1123:/usr/include/c++/10/bits/basic_string.h ****        */
1124:/usr/include/c++/10/bits/basic_string.h ****       const_reference
1125:/usr/include/c++/10/bits/basic_string.h ****       back() const noexcept
1126:/usr/include/c++/10/bits/basic_string.h ****       {
1127:/usr/include/c++/10/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1128:/usr/include/c++/10/bits/basic_string.h **** 	return operator[](this->size() - 1);
1129:/usr/include/c++/10/bits/basic_string.h ****       }
1130:/usr/include/c++/10/bits/basic_string.h **** #endif
1131:/usr/include/c++/10/bits/basic_string.h **** 
1132:/usr/include/c++/10/bits/basic_string.h ****       // Modifiers:
1133:/usr/include/c++/10/bits/basic_string.h ****       /**
1134:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Append a string to this string.
1135:/usr/include/c++/10/bits/basic_string.h ****        *  @param __str  The string to append.
1136:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
1137:/usr/include/c++/10/bits/basic_string.h ****        */
1138:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
1139:/usr/include/c++/10/bits/basic_string.h ****       operator+=(const basic_string& __str)
1140:/usr/include/c++/10/bits/basic_string.h ****       { return this->append(__str); }
1141:/usr/include/c++/10/bits/basic_string.h **** 
1142:/usr/include/c++/10/bits/basic_string.h ****       /**
1143:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Append a C string.
1144:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  The C string to append.
1145:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
1146:/usr/include/c++/10/bits/basic_string.h ****        */
1147:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
1148:/usr/include/c++/10/bits/basic_string.h ****       operator+=(const _CharT* __s)
1149:/usr/include/c++/10/bits/basic_string.h ****       { return this->append(__s); }
1150:/usr/include/c++/10/bits/basic_string.h **** 
1151:/usr/include/c++/10/bits/basic_string.h ****       /**
1152:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Append a character.
1153:/usr/include/c++/10/bits/basic_string.h ****        *  @param __c  The character to append.
1154:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
1155:/usr/include/c++/10/bits/basic_string.h ****        */
1156:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
1157:/usr/include/c++/10/bits/basic_string.h ****       operator+=(_CharT __c)
1158:/usr/include/c++/10/bits/basic_string.h ****       {
1159:/usr/include/c++/10/bits/basic_string.h **** 	this->push_back(__c);
1160:/usr/include/c++/10/bits/basic_string.h **** 	return *this;
1161:/usr/include/c++/10/bits/basic_string.h ****       }
1162:/usr/include/c++/10/bits/basic_string.h **** 
1163:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201103L
1164:/usr/include/c++/10/bits/basic_string.h ****       /**
1165:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
1166:/usr/include/c++/10/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
1167:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
1168:/usr/include/c++/10/bits/basic_string.h ****        */
AARCH64 GAS  obj/extInstr.s 			page 108


1169:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
1170:/usr/include/c++/10/bits/basic_string.h ****       operator+=(initializer_list<_CharT> __l)
1171:/usr/include/c++/10/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1172:/usr/include/c++/10/bits/basic_string.h **** #endif // C++11
1173:/usr/include/c++/10/bits/basic_string.h **** 
1174:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201703L
1175:/usr/include/c++/10/bits/basic_string.h ****       /**
1176:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Append a string_view.
1177:/usr/include/c++/10/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended.
1178:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
1179:/usr/include/c++/10/bits/basic_string.h ****        */
1180:/usr/include/c++/10/bits/basic_string.h ****       template<typename _Tp>
1181:/usr/include/c++/10/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1182:/usr/include/c++/10/bits/basic_string.h **** 	operator+=(const _Tp& __svt)
1183:/usr/include/c++/10/bits/basic_string.h **** 	{ return this->append(__svt); }
1184:/usr/include/c++/10/bits/basic_string.h **** #endif // C++17
1185:/usr/include/c++/10/bits/basic_string.h **** 
1186:/usr/include/c++/10/bits/basic_string.h ****       /**
1187:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Append a string to this string.
1188:/usr/include/c++/10/bits/basic_string.h ****        *  @param __str  The string to append.
1189:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
1190:/usr/include/c++/10/bits/basic_string.h ****        */
1191:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
1192:/usr/include/c++/10/bits/basic_string.h ****       append(const basic_string& __str)
1193:/usr/include/c++/10/bits/basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
1194:/usr/include/c++/10/bits/basic_string.h **** 
1195:/usr/include/c++/10/bits/basic_string.h ****       /**
1196:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Append a substring.
1197:/usr/include/c++/10/bits/basic_string.h ****        *  @param __str  The string to append.
1198:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of the first character of str to append.
1199:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1200:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
1201:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
1202:/usr/include/c++/10/bits/basic_string.h ****        *
1203:/usr/include/c++/10/bits/basic_string.h ****        *  This function appends @a __n characters from @a __str
1204:/usr/include/c++/10/bits/basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
1205:/usr/include/c++/10/bits/basic_string.h ****        *  than the number of available characters in @a __str, the
1206:/usr/include/c++/10/bits/basic_string.h ****        *  remainder of @a __str is appended.
1207:/usr/include/c++/10/bits/basic_string.h ****        */
1208:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
1209:/usr/include/c++/10/bits/basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n = npos)
1210:/usr/include/c++/10/bits/basic_string.h ****       { return _M_append(__str._M_data()
1211:/usr/include/c++/10/bits/basic_string.h **** 			 + __str._M_check(__pos, "basic_string::append"),
1212:/usr/include/c++/10/bits/basic_string.h **** 			 __str._M_limit(__pos, __n)); }
1213:/usr/include/c++/10/bits/basic_string.h **** 
1214:/usr/include/c++/10/bits/basic_string.h ****       /**
1215:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Append a C substring.
1216:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  The C string to append.
1217:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1218:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
1219:/usr/include/c++/10/bits/basic_string.h ****        */
1220:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
1221:/usr/include/c++/10/bits/basic_string.h ****       append(const _CharT* __s, size_type __n)
1222:/usr/include/c++/10/bits/basic_string.h ****       {
1223:/usr/include/c++/10/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1224:/usr/include/c++/10/bits/basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1225:/usr/include/c++/10/bits/basic_string.h **** 	return _M_append(__s, __n);
AARCH64 GAS  obj/extInstr.s 			page 109


1226:/usr/include/c++/10/bits/basic_string.h ****       }
1227:/usr/include/c++/10/bits/basic_string.h **** 
1228:/usr/include/c++/10/bits/basic_string.h ****       /**
1229:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Append a C string.
1230:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  The C string to append.
1231:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
1232:/usr/include/c++/10/bits/basic_string.h ****        */
1233:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
1234:/usr/include/c++/10/bits/basic_string.h ****       append(const _CharT* __s)
1235:/usr/include/c++/10/bits/basic_string.h ****       {
1236:/usr/include/c++/10/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1237:/usr/include/c++/10/bits/basic_string.h **** 	const size_type __n = traits_type::length(__s);
1238:/usr/include/c++/10/bits/basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1239:/usr/include/c++/10/bits/basic_string.h **** 	return _M_append(__s, __n);
1240:/usr/include/c++/10/bits/basic_string.h ****       }
1241:/usr/include/c++/10/bits/basic_string.h **** 
1242:/usr/include/c++/10/bits/basic_string.h ****       /**
1243:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Append multiple characters.
1244:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1245:/usr/include/c++/10/bits/basic_string.h ****        *  @param __c  The character to use.
1246:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
1247:/usr/include/c++/10/bits/basic_string.h ****        *
1248:/usr/include/c++/10/bits/basic_string.h ****        *  Appends __n copies of __c to this string.
1249:/usr/include/c++/10/bits/basic_string.h ****        */
1250:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
1251:/usr/include/c++/10/bits/basic_string.h ****       append(size_type __n, _CharT __c)
1252:/usr/include/c++/10/bits/basic_string.h ****       { return _M_replace_aux(this->size(), size_type(0), __n, __c); }
1253:/usr/include/c++/10/bits/basic_string.h **** 
1254:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201103L
1255:/usr/include/c++/10/bits/basic_string.h ****       /**
1256:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
1257:/usr/include/c++/10/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to append.
1258:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
1259:/usr/include/c++/10/bits/basic_string.h ****        */
1260:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
1261:/usr/include/c++/10/bits/basic_string.h ****       append(initializer_list<_CharT> __l)
1262:/usr/include/c++/10/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1263:/usr/include/c++/10/bits/basic_string.h **** #endif // C++11
1264:/usr/include/c++/10/bits/basic_string.h **** 
1265:/usr/include/c++/10/bits/basic_string.h ****       /**
1266:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Append a range of characters.
1267:/usr/include/c++/10/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1268:/usr/include/c++/10/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1269:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
1270:/usr/include/c++/10/bits/basic_string.h ****        *
1271:/usr/include/c++/10/bits/basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
1272:/usr/include/c++/10/bits/basic_string.h ****        */
1273:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201103L
1274:/usr/include/c++/10/bits/basic_string.h ****       template<class _InputIterator,
1275:/usr/include/c++/10/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1276:/usr/include/c++/10/bits/basic_string.h **** #else
1277:/usr/include/c++/10/bits/basic_string.h ****       template<class _InputIterator>
1278:/usr/include/c++/10/bits/basic_string.h **** #endif
1279:/usr/include/c++/10/bits/basic_string.h ****         basic_string&
1280:/usr/include/c++/10/bits/basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
1281:/usr/include/c++/10/bits/basic_string.h ****         { return this->replace(end(), end(), __first, __last); }
1282:/usr/include/c++/10/bits/basic_string.h **** 
AARCH64 GAS  obj/extInstr.s 			page 110


1283:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201703L
1284:/usr/include/c++/10/bits/basic_string.h ****       /**
1285:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Append a string_view.
1286:/usr/include/c++/10/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended.
1287:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
1288:/usr/include/c++/10/bits/basic_string.h ****        */
1289:/usr/include/c++/10/bits/basic_string.h ****       template<typename _Tp>
1290:/usr/include/c++/10/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
1291:/usr/include/c++/10/bits/basic_string.h ****         append(const _Tp& __svt)
1292:/usr/include/c++/10/bits/basic_string.h ****         {
1293:/usr/include/c++/10/bits/basic_string.h ****           __sv_type __sv = __svt;
1294:/usr/include/c++/10/bits/basic_string.h ****           return this->append(__sv.data(), __sv.size());
1295:/usr/include/c++/10/bits/basic_string.h ****         }
1296:/usr/include/c++/10/bits/basic_string.h **** 
1297:/usr/include/c++/10/bits/basic_string.h ****       /**
1298:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Append a range of characters from a string_view.
1299:/usr/include/c++/10/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended from.
1300:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos The position in the string_view to append from.
1301:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n   The number of characters to append from the string_view.
1302:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
1303:/usr/include/c++/10/bits/basic_string.h ****        */
1304:/usr/include/c++/10/bits/basic_string.h ****       template<typename _Tp>
1305:/usr/include/c++/10/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
1306:/usr/include/c++/10/bits/basic_string.h **** 	append(const _Tp& __svt, size_type __pos, size_type __n = npos)
1307:/usr/include/c++/10/bits/basic_string.h **** 	{
1308:/usr/include/c++/10/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1309:/usr/include/c++/10/bits/basic_string.h **** 	  return _M_append(__sv.data()
1310:/usr/include/c++/10/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::append"),
1311:/usr/include/c++/10/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
1312:/usr/include/c++/10/bits/basic_string.h **** 	}
1313:/usr/include/c++/10/bits/basic_string.h **** #endif // C++17
1314:/usr/include/c++/10/bits/basic_string.h **** 
1315:/usr/include/c++/10/bits/basic_string.h ****       /**
1316:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Append a single character.
1317:/usr/include/c++/10/bits/basic_string.h ****        *  @param __c  Character to append.
1318:/usr/include/c++/10/bits/basic_string.h ****        */
1319:/usr/include/c++/10/bits/basic_string.h ****       void
1320:/usr/include/c++/10/bits/basic_string.h ****       push_back(_CharT __c)
1321:/usr/include/c++/10/bits/basic_string.h ****       {
1322:/usr/include/c++/10/bits/basic_string.h **** 	const size_type __size = this->size();
1323:/usr/include/c++/10/bits/basic_string.h **** 	if (__size + 1 > this->capacity())
1324:/usr/include/c++/10/bits/basic_string.h **** 	  this->_M_mutate(__size, size_type(0), 0, size_type(1));
1325:/usr/include/c++/10/bits/basic_string.h **** 	traits_type::assign(this->_M_data()[__size], __c);
1326:/usr/include/c++/10/bits/basic_string.h **** 	this->_M_set_length(__size + 1);
1327:/usr/include/c++/10/bits/basic_string.h ****       }
1328:/usr/include/c++/10/bits/basic_string.h **** 
1329:/usr/include/c++/10/bits/basic_string.h ****       /**
1330:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
1331:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __str  Source string to use.
1332:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
1333:/usr/include/c++/10/bits/basic_string.h ****        */
1334:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
1335:/usr/include/c++/10/bits/basic_string.h ****       assign(const basic_string& __str)
1336:/usr/include/c++/10/bits/basic_string.h ****       {
1337:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201103L
1338:/usr/include/c++/10/bits/basic_string.h **** 	if (_Alloc_traits::_S_propagate_on_copy_assign())
1339:/usr/include/c++/10/bits/basic_string.h **** 	  {
AARCH64 GAS  obj/extInstr.s 			page 111


1340:/usr/include/c++/10/bits/basic_string.h **** 	    if (!_Alloc_traits::_S_always_equal() && !_M_is_local()
1341:/usr/include/c++/10/bits/basic_string.h **** 		&& _M_get_allocator() != __str._M_get_allocator())
1342:/usr/include/c++/10/bits/basic_string.h **** 	      {
1343:/usr/include/c++/10/bits/basic_string.h **** 		// Propagating allocator cannot free existing storage so must
1344:/usr/include/c++/10/bits/basic_string.h **** 		// deallocate it before replacing current allocator.
1345:/usr/include/c++/10/bits/basic_string.h **** 		if (__str.size() <= _S_local_capacity)
1346:/usr/include/c++/10/bits/basic_string.h **** 		  {
1347:/usr/include/c++/10/bits/basic_string.h **** 		    _M_destroy(_M_allocated_capacity);
1348:/usr/include/c++/10/bits/basic_string.h **** 		    _M_data(_M_local_data());
1349:/usr/include/c++/10/bits/basic_string.h **** 		    _M_set_length(0);
1350:/usr/include/c++/10/bits/basic_string.h **** 		  }
1351:/usr/include/c++/10/bits/basic_string.h **** 		else
1352:/usr/include/c++/10/bits/basic_string.h **** 		  {
1353:/usr/include/c++/10/bits/basic_string.h **** 		    const auto __len = __str.size();
1354:/usr/include/c++/10/bits/basic_string.h **** 		    auto __alloc = __str._M_get_allocator();
1355:/usr/include/c++/10/bits/basic_string.h **** 		    // If this allocation throws there are no effects:
1356:/usr/include/c++/10/bits/basic_string.h **** 		    auto __ptr = _Alloc_traits::allocate(__alloc, __len + 1);
1357:/usr/include/c++/10/bits/basic_string.h **** 		    _M_destroy(_M_allocated_capacity);
1358:/usr/include/c++/10/bits/basic_string.h **** 		    _M_data(__ptr);
1359:/usr/include/c++/10/bits/basic_string.h **** 		    _M_capacity(__len);
1360:/usr/include/c++/10/bits/basic_string.h **** 		    _M_set_length(__len);
1361:/usr/include/c++/10/bits/basic_string.h **** 		  }
1362:/usr/include/c++/10/bits/basic_string.h **** 	      }
1363:/usr/include/c++/10/bits/basic_string.h **** 	    std::__alloc_on_copy(_M_get_allocator(), __str._M_get_allocator());
1364:/usr/include/c++/10/bits/basic_string.h **** 	  }
1365:/usr/include/c++/10/bits/basic_string.h **** #endif
1366:/usr/include/c++/10/bits/basic_string.h **** 	this->_M_assign(__str);
1367:/usr/include/c++/10/bits/basic_string.h **** 	return *this;
1368:/usr/include/c++/10/bits/basic_string.h ****       }
1369:/usr/include/c++/10/bits/basic_string.h **** 
1370:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201103L
1371:/usr/include/c++/10/bits/basic_string.h ****       /**
1372:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
1373:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __str  Source string to use.
1374:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
1375:/usr/include/c++/10/bits/basic_string.h ****        *
1376:/usr/include/c++/10/bits/basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
1377:/usr/include/c++/10/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
1378:/usr/include/c++/10/bits/basic_string.h ****        */
1379:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
1380:/usr/include/c++/10/bits/basic_string.h ****       assign(basic_string&& __str)
1381:/usr/include/c++/10/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
1382:/usr/include/c++/10/bits/basic_string.h ****       {
1383:/usr/include/c++/10/bits/basic_string.h **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
1384:/usr/include/c++/10/bits/basic_string.h **** 	// 2063. Contradictory requirements for string move assignment
1385:/usr/include/c++/10/bits/basic_string.h **** 	return *this = std::move(__str);
1386:/usr/include/c++/10/bits/basic_string.h ****       }
1387:/usr/include/c++/10/bits/basic_string.h **** #endif // C++11
1388:/usr/include/c++/10/bits/basic_string.h **** 
1389:/usr/include/c++/10/bits/basic_string.h ****       /**
1390:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Set value to a substring of a string.
1391:/usr/include/c++/10/bits/basic_string.h ****        *  @param __str  The string to use.
1392:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of the first character of str.
1393:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  Number of characters to use.
1394:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
1395:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
1396:/usr/include/c++/10/bits/basic_string.h ****        *
AARCH64 GAS  obj/extInstr.s 			page 112


1397:/usr/include/c++/10/bits/basic_string.h ****        *  This function sets this string to the substring of @a __str
1398:/usr/include/c++/10/bits/basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
1399:/usr/include/c++/10/bits/basic_string.h ****        *  is larger than the number of available characters in @a
1400:/usr/include/c++/10/bits/basic_string.h ****        *  __str, the remainder of @a __str is used.
1401:/usr/include/c++/10/bits/basic_string.h ****        */
1402:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
1403:/usr/include/c++/10/bits/basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n = npos)
1404:/usr/include/c++/10/bits/basic_string.h ****       { return _M_replace(size_type(0), this->size(), __str._M_data()
1405:/usr/include/c++/10/bits/basic_string.h **** 			  + __str._M_check(__pos, "basic_string::assign"),
1406:/usr/include/c++/10/bits/basic_string.h **** 			  __str._M_limit(__pos, __n)); }
1407:/usr/include/c++/10/bits/basic_string.h **** 
1408:/usr/include/c++/10/bits/basic_string.h ****       /**
1409:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Set value to a C substring.
1410:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  The C string to use.
1411:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  Number of characters to use.
1412:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
1413:/usr/include/c++/10/bits/basic_string.h ****        *
1414:/usr/include/c++/10/bits/basic_string.h ****        *  This function sets the value of this string to the first @a __n
1415:/usr/include/c++/10/bits/basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
1416:/usr/include/c++/10/bits/basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
1417:/usr/include/c++/10/bits/basic_string.h ****        */
1418:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
1419:/usr/include/c++/10/bits/basic_string.h ****       assign(const _CharT* __s, size_type __n)
1420:/usr/include/c++/10/bits/basic_string.h ****       {
1421:/usr/include/c++/10/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1422:/usr/include/c++/10/bits/basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s, __n);
1423:/usr/include/c++/10/bits/basic_string.h ****       }
1424:/usr/include/c++/10/bits/basic_string.h **** 
1425:/usr/include/c++/10/bits/basic_string.h ****       /**
1426:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Set value to contents of a C string.
1427:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  The C string to use.
1428:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
1429:/usr/include/c++/10/bits/basic_string.h ****        *
1430:/usr/include/c++/10/bits/basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
1431:/usr/include/c++/10/bits/basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
1432:/usr/include/c++/10/bits/basic_string.h ****        *  function returns.
1433:/usr/include/c++/10/bits/basic_string.h ****        */
1434:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
1435:/usr/include/c++/10/bits/basic_string.h ****       assign(const _CharT* __s)
1436:/usr/include/c++/10/bits/basic_string.h ****       {
1437:/usr/include/c++/10/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1438:/usr/include/c++/10/bits/basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s,
1439:/usr/include/c++/10/bits/basic_string.h **** 			  traits_type::length(__s));
1440:/usr/include/c++/10/bits/basic_string.h ****       }
1441:/usr/include/c++/10/bits/basic_string.h **** 
1442:/usr/include/c++/10/bits/basic_string.h ****       /**
1443:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Set value to multiple characters.
1444:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  Length of the resulting string.
1445:/usr/include/c++/10/bits/basic_string.h ****        *  @param __c  The character to use.
1446:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
1447:/usr/include/c++/10/bits/basic_string.h ****        *
1448:/usr/include/c++/10/bits/basic_string.h ****        *  This function sets the value of this string to @a __n copies of
1449:/usr/include/c++/10/bits/basic_string.h ****        *  character @a __c.
1450:/usr/include/c++/10/bits/basic_string.h ****        */
1451:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
1452:/usr/include/c++/10/bits/basic_string.h ****       assign(size_type __n, _CharT __c)
1453:/usr/include/c++/10/bits/basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
AARCH64 GAS  obj/extInstr.s 			page 113


1454:/usr/include/c++/10/bits/basic_string.h **** 
1455:/usr/include/c++/10/bits/basic_string.h ****       /**
1456:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Set value to a range of characters.
1457:/usr/include/c++/10/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1458:/usr/include/c++/10/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1459:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
1460:/usr/include/c++/10/bits/basic_string.h ****        *
1461:/usr/include/c++/10/bits/basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
1462:/usr/include/c++/10/bits/basic_string.h ****       */
1463:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201103L
1464:/usr/include/c++/10/bits/basic_string.h ****       template<class _InputIterator,
1465:/usr/include/c++/10/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1466:/usr/include/c++/10/bits/basic_string.h **** #else
1467:/usr/include/c++/10/bits/basic_string.h ****       template<class _InputIterator>
1468:/usr/include/c++/10/bits/basic_string.h **** #endif
1469:/usr/include/c++/10/bits/basic_string.h ****         basic_string&
1470:/usr/include/c++/10/bits/basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
1471:/usr/include/c++/10/bits/basic_string.h ****         { return this->replace(begin(), end(), __first, __last); }
1472:/usr/include/c++/10/bits/basic_string.h **** 
1473:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201103L
1474:/usr/include/c++/10/bits/basic_string.h ****       /**
1475:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
1476:/usr/include/c++/10/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
1477:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
1478:/usr/include/c++/10/bits/basic_string.h ****        */
1479:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
1480:/usr/include/c++/10/bits/basic_string.h ****       assign(initializer_list<_CharT> __l)
1481:/usr/include/c++/10/bits/basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
1482:/usr/include/c++/10/bits/basic_string.h **** #endif // C++11
1483:/usr/include/c++/10/bits/basic_string.h **** 
1484:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201703L
1485:/usr/include/c++/10/bits/basic_string.h ****       /**
1486:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Set value from a string_view.
1487:/usr/include/c++/10/bits/basic_string.h ****        *  @param __svt  The source object convertible to string_view.
1488:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
1489:/usr/include/c++/10/bits/basic_string.h ****        */
1490:/usr/include/c++/10/bits/basic_string.h ****       template<typename _Tp>
1491:/usr/include/c++/10/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1492:/usr/include/c++/10/bits/basic_string.h **** 	assign(const _Tp& __svt)
1493:/usr/include/c++/10/bits/basic_string.h **** 	{
1494:/usr/include/c++/10/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1495:/usr/include/c++/10/bits/basic_string.h **** 	  return this->assign(__sv.data(), __sv.size());
1496:/usr/include/c++/10/bits/basic_string.h **** 	}
1497:/usr/include/c++/10/bits/basic_string.h **** 
1498:/usr/include/c++/10/bits/basic_string.h ****       /**
1499:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Set value from a range of characters in a string_view.
1500:/usr/include/c++/10/bits/basic_string.h ****        *  @param __svt  The source object convertible to string_view.
1501:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  The position in the string_view to assign from.
1502:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  The number of characters to assign.
1503:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
1504:/usr/include/c++/10/bits/basic_string.h ****        */
1505:/usr/include/c++/10/bits/basic_string.h ****       template<typename _Tp>
1506:/usr/include/c++/10/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1507:/usr/include/c++/10/bits/basic_string.h **** 	assign(const _Tp& __svt, size_type __pos, size_type __n = npos)
1508:/usr/include/c++/10/bits/basic_string.h **** 	{
1509:/usr/include/c++/10/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1510:/usr/include/c++/10/bits/basic_string.h **** 	  return _M_replace(size_type(0), this->size(),
AARCH64 GAS  obj/extInstr.s 			page 114


1511:/usr/include/c++/10/bits/basic_string.h **** 	      __sv.data()
1512:/usr/include/c++/10/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::assign"),
1513:/usr/include/c++/10/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
1514:/usr/include/c++/10/bits/basic_string.h **** 	}
1515:/usr/include/c++/10/bits/basic_string.h **** #endif // C++17
1516:/usr/include/c++/10/bits/basic_string.h **** 
1517:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201103L
1518:/usr/include/c++/10/bits/basic_string.h ****       /**
1519:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1520:/usr/include/c++/10/bits/basic_string.h ****        *  @param __p  Const_iterator referencing location in string to
1521:/usr/include/c++/10/bits/basic_string.h ****        *              insert at.
1522:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1523:/usr/include/c++/10/bits/basic_string.h ****        *  @param __c  The character to insert.
1524:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Iterator referencing the first inserted char.
1525:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1526:/usr/include/c++/10/bits/basic_string.h ****        *
1527:/usr/include/c++/10/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1528:/usr/include/c++/10/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1529:/usr/include/c++/10/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1530:/usr/include/c++/10/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1531:/usr/include/c++/10/bits/basic_string.h ****        *  change if an error is thrown.
1532:/usr/include/c++/10/bits/basic_string.h ****       */
1533:/usr/include/c++/10/bits/basic_string.h ****       iterator
1534:/usr/include/c++/10/bits/basic_string.h ****       insert(const_iterator __p, size_type __n, _CharT __c)
1535:/usr/include/c++/10/bits/basic_string.h ****       {
1536:/usr/include/c++/10/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1537:/usr/include/c++/10/bits/basic_string.h **** 	const size_type __pos = __p - begin();
1538:/usr/include/c++/10/bits/basic_string.h **** 	this->replace(__p, __p, __n, __c);
1539:/usr/include/c++/10/bits/basic_string.h **** 	return iterator(this->_M_data() + __pos);
1540:/usr/include/c++/10/bits/basic_string.h ****       }
1541:/usr/include/c++/10/bits/basic_string.h **** #else
1542:/usr/include/c++/10/bits/basic_string.h ****       /**
1543:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1544:/usr/include/c++/10/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1545:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1546:/usr/include/c++/10/bits/basic_string.h ****        *  @param __c  The character to insert.
1547:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1548:/usr/include/c++/10/bits/basic_string.h ****        *
1549:/usr/include/c++/10/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1550:/usr/include/c++/10/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1551:/usr/include/c++/10/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1552:/usr/include/c++/10/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1553:/usr/include/c++/10/bits/basic_string.h ****        *  change if an error is thrown.
1554:/usr/include/c++/10/bits/basic_string.h ****       */
1555:/usr/include/c++/10/bits/basic_string.h ****       void
1556:/usr/include/c++/10/bits/basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
1557:/usr/include/c++/10/bits/basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
1558:/usr/include/c++/10/bits/basic_string.h **** #endif
1559:/usr/include/c++/10/bits/basic_string.h **** 
1560:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201103L
1561:/usr/include/c++/10/bits/basic_string.h ****       /**
1562:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Insert a range of characters.
1563:/usr/include/c++/10/bits/basic_string.h ****        *  @param __p  Const_iterator referencing location in string to
1564:/usr/include/c++/10/bits/basic_string.h ****        *              insert at.
1565:/usr/include/c++/10/bits/basic_string.h ****        *  @param __beg  Start of range.
1566:/usr/include/c++/10/bits/basic_string.h ****        *  @param __end  End of range.
1567:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Iterator referencing the first inserted char.
AARCH64 GAS  obj/extInstr.s 			page 115


1568:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1569:/usr/include/c++/10/bits/basic_string.h ****        *
1570:/usr/include/c++/10/bits/basic_string.h ****        *  Inserts characters in range [beg,end).  If adding characters
1571:/usr/include/c++/10/bits/basic_string.h ****        *  causes the length to exceed max_size(), length_error is
1572:/usr/include/c++/10/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1573:/usr/include/c++/10/bits/basic_string.h ****        *  is thrown.
1574:/usr/include/c++/10/bits/basic_string.h ****       */
1575:/usr/include/c++/10/bits/basic_string.h ****       template<class _InputIterator,
1576:/usr/include/c++/10/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1577:/usr/include/c++/10/bits/basic_string.h **** 	iterator
1578:/usr/include/c++/10/bits/basic_string.h ****         insert(const_iterator __p, _InputIterator __beg, _InputIterator __end)
1579:/usr/include/c++/10/bits/basic_string.h ****         {
1580:/usr/include/c++/10/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1581:/usr/include/c++/10/bits/basic_string.h **** 	  const size_type __pos = __p - begin();
1582:/usr/include/c++/10/bits/basic_string.h **** 	  this->replace(__p, __p, __beg, __end);
1583:/usr/include/c++/10/bits/basic_string.h **** 	  return iterator(this->_M_data() + __pos);
1584:/usr/include/c++/10/bits/basic_string.h **** 	}
1585:/usr/include/c++/10/bits/basic_string.h **** #else
1586:/usr/include/c++/10/bits/basic_string.h ****       /**
1587:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Insert a range of characters.
1588:/usr/include/c++/10/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1589:/usr/include/c++/10/bits/basic_string.h ****        *  @param __beg  Start of range.
1590:/usr/include/c++/10/bits/basic_string.h ****        *  @param __end  End of range.
1591:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1592:/usr/include/c++/10/bits/basic_string.h ****        *
1593:/usr/include/c++/10/bits/basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
1594:/usr/include/c++/10/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1595:/usr/include/c++/10/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1596:/usr/include/c++/10/bits/basic_string.h ****        *  change if an error is thrown.
1597:/usr/include/c++/10/bits/basic_string.h ****       */
1598:/usr/include/c++/10/bits/basic_string.h ****       template<class _InputIterator>
1599:/usr/include/c++/10/bits/basic_string.h ****         void
1600:/usr/include/c++/10/bits/basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
1601:/usr/include/c++/10/bits/basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
1602:/usr/include/c++/10/bits/basic_string.h **** #endif
1603:/usr/include/c++/10/bits/basic_string.h **** 
1604:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201103L
1605:/usr/include/c++/10/bits/basic_string.h ****       /**
1606:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Insert an initializer_list of characters.
1607:/usr/include/c++/10/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1608:/usr/include/c++/10/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
1609:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1610:/usr/include/c++/10/bits/basic_string.h ****        */
1611:/usr/include/c++/10/bits/basic_string.h ****       iterator
1612:/usr/include/c++/10/bits/basic_string.h ****       insert(const_iterator __p, initializer_list<_CharT> __l)
1613:/usr/include/c++/10/bits/basic_string.h ****       { return this->insert(__p, __l.begin(), __l.end()); }
1614:/usr/include/c++/10/bits/basic_string.h **** 
1615:/usr/include/c++/10/bits/basic_string.h **** #ifdef _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
1616:/usr/include/c++/10/bits/basic_string.h ****       // See PR libstdc++/83328
1617:/usr/include/c++/10/bits/basic_string.h ****       void
1618:/usr/include/c++/10/bits/basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
1619:/usr/include/c++/10/bits/basic_string.h ****       {
1620:/usr/include/c++/10/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1621:/usr/include/c++/10/bits/basic_string.h **** 	this->insert(__p - begin(), __l.begin(), __l.size());
1622:/usr/include/c++/10/bits/basic_string.h ****       }
1623:/usr/include/c++/10/bits/basic_string.h **** #endif
1624:/usr/include/c++/10/bits/basic_string.h **** #endif // C++11
AARCH64 GAS  obj/extInstr.s 			page 116


1625:/usr/include/c++/10/bits/basic_string.h **** 
1626:/usr/include/c++/10/bits/basic_string.h ****       /**
1627:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Insert value of a string.
1628:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos1 Position in string to insert at.
1629:/usr/include/c++/10/bits/basic_string.h ****        *  @param __str  The string to insert.
1630:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
1631:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1632:/usr/include/c++/10/bits/basic_string.h ****        *
1633:/usr/include/c++/10/bits/basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
1634:/usr/include/c++/10/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1635:/usr/include/c++/10/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1636:/usr/include/c++/10/bits/basic_string.h ****        *  change if an error is thrown.
1637:/usr/include/c++/10/bits/basic_string.h ****       */
1638:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
1639:/usr/include/c++/10/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
1640:/usr/include/c++/10/bits/basic_string.h ****       { return this->replace(__pos1, size_type(0),
1641:/usr/include/c++/10/bits/basic_string.h **** 			     __str._M_data(), __str.size()); }
1642:/usr/include/c++/10/bits/basic_string.h **** 
1643:/usr/include/c++/10/bits/basic_string.h ****       /**
1644:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Insert a substring.
1645:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos1  Position in string to insert at.
1646:/usr/include/c++/10/bits/basic_string.h ****        *  @param __str   The string to insert.
1647:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
1648:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
1649:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
1650:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1651:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
1652:/usr/include/c++/10/bits/basic_string.h ****        *  @a __pos2 > @a str.size().
1653:/usr/include/c++/10/bits/basic_string.h ****        *
1654:/usr/include/c++/10/bits/basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
1655:/usr/include/c++/10/bits/basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
1656:/usr/include/c++/10/bits/basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
1657:/usr/include/c++/10/bits/basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
1658:/usr/include/c++/10/bits/basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
1659:/usr/include/c++/10/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
1660:/usr/include/c++/10/bits/basic_string.h ****       */
1661:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
1662:/usr/include/c++/10/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
1663:/usr/include/c++/10/bits/basic_string.h **** 	     size_type __pos2, size_type __n = npos)
1664:/usr/include/c++/10/bits/basic_string.h ****       { return this->replace(__pos1, size_type(0), __str._M_data()
1665:/usr/include/c++/10/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::insert"),
1666:/usr/include/c++/10/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n)); }
1667:/usr/include/c++/10/bits/basic_string.h **** 
1668:/usr/include/c++/10/bits/basic_string.h ****       /**
1669:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Insert a C substring.
1670:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Position in string to insert at.
1671:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  The C string to insert.
1672:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  The number of characters to insert.
1673:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
1674:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1675:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1676:/usr/include/c++/10/bits/basic_string.h ****        *  string.
1677:/usr/include/c++/10/bits/basic_string.h ****        *
1678:/usr/include/c++/10/bits/basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
1679:/usr/include/c++/10/bits/basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
1680:/usr/include/c++/10/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
1681:/usr/include/c++/10/bits/basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
AARCH64 GAS  obj/extInstr.s 			page 117


1682:/usr/include/c++/10/bits/basic_string.h ****        *  doesn't change if an error is thrown.
1683:/usr/include/c++/10/bits/basic_string.h ****       */
1684:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
1685:/usr/include/c++/10/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n)
1686:/usr/include/c++/10/bits/basic_string.h ****       { return this->replace(__pos, size_type(0), __s, __n); }
1687:/usr/include/c++/10/bits/basic_string.h **** 
1688:/usr/include/c++/10/bits/basic_string.h ****       /**
1689:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Insert a C string.
1690:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Position in string to insert at.
1691:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  The C string to insert.
1692:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
1693:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1694:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1695:/usr/include/c++/10/bits/basic_string.h ****        *  string.
1696:/usr/include/c++/10/bits/basic_string.h ****        *
1697:/usr/include/c++/10/bits/basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
1698:/usr/include/c++/10/bits/basic_string.h ****        *  adding characters causes the length to exceed max_size(),
1699:/usr/include/c++/10/bits/basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
1700:/usr/include/c++/10/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
1701:/usr/include/c++/10/bits/basic_string.h ****        *  thrown.
1702:/usr/include/c++/10/bits/basic_string.h ****       */
1703:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
1704:/usr/include/c++/10/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s)
1705:/usr/include/c++/10/bits/basic_string.h ****       {
1706:/usr/include/c++/10/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1707:/usr/include/c++/10/bits/basic_string.h **** 	return this->replace(__pos, size_type(0), __s,
1708:/usr/include/c++/10/bits/basic_string.h **** 			     traits_type::length(__s));
1709:/usr/include/c++/10/bits/basic_string.h ****       }
1710:/usr/include/c++/10/bits/basic_string.h **** 
1711:/usr/include/c++/10/bits/basic_string.h ****       /**
1712:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1713:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index in string to insert at.
1714:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1715:/usr/include/c++/10/bits/basic_string.h ****        *  @param __c  The character to insert.
1716:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
1717:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1718:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1719:/usr/include/c++/10/bits/basic_string.h ****        *  string.
1720:/usr/include/c++/10/bits/basic_string.h ****        *
1721:/usr/include/c++/10/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
1722:/usr/include/c++/10/bits/basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
1723:/usr/include/c++/10/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
1724:/usr/include/c++/10/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1725:/usr/include/c++/10/bits/basic_string.h ****        *  change if an error is thrown.
1726:/usr/include/c++/10/bits/basic_string.h ****       */
1727:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
1728:/usr/include/c++/10/bits/basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
1729:/usr/include/c++/10/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
1730:/usr/include/c++/10/bits/basic_string.h **** 			      size_type(0), __n, __c); }
1731:/usr/include/c++/10/bits/basic_string.h **** 
1732:/usr/include/c++/10/bits/basic_string.h ****       /**
1733:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Insert one character.
1734:/usr/include/c++/10/bits/basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
1735:/usr/include/c++/10/bits/basic_string.h ****        *  @param __c  The character to insert.
1736:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Iterator referencing newly inserted char.
1737:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1738:/usr/include/c++/10/bits/basic_string.h ****        *
AARCH64 GAS  obj/extInstr.s 			page 118


1739:/usr/include/c++/10/bits/basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
1740:/usr/include/c++/10/bits/basic_string.h ****        *  If adding character causes the length to exceed max_size(),
1741:/usr/include/c++/10/bits/basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
1742:/usr/include/c++/10/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1743:/usr/include/c++/10/bits/basic_string.h ****        *  change if an error is thrown.
1744:/usr/include/c++/10/bits/basic_string.h ****       */
1745:/usr/include/c++/10/bits/basic_string.h ****       iterator
1746:/usr/include/c++/10/bits/basic_string.h ****       insert(__const_iterator __p, _CharT __c)
1747:/usr/include/c++/10/bits/basic_string.h ****       {
1748:/usr/include/c++/10/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1749:/usr/include/c++/10/bits/basic_string.h **** 	const size_type __pos = __p - begin();
1750:/usr/include/c++/10/bits/basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
1751:/usr/include/c++/10/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
1752:/usr/include/c++/10/bits/basic_string.h ****       }
1753:/usr/include/c++/10/bits/basic_string.h **** 
1754:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201703L
1755:/usr/include/c++/10/bits/basic_string.h ****       /**
1756:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Insert a string_view.
1757:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Position in string to insert at.
1758:/usr/include/c++/10/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
1759:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
1760:/usr/include/c++/10/bits/basic_string.h ****       */
1761:/usr/include/c++/10/bits/basic_string.h ****       template<typename _Tp>
1762:/usr/include/c++/10/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1763:/usr/include/c++/10/bits/basic_string.h **** 	insert(size_type __pos, const _Tp& __svt)
1764:/usr/include/c++/10/bits/basic_string.h **** 	{
1765:/usr/include/c++/10/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1766:/usr/include/c++/10/bits/basic_string.h **** 	  return this->insert(__pos, __sv.data(), __sv.size());
1767:/usr/include/c++/10/bits/basic_string.h **** 	}
1768:/usr/include/c++/10/bits/basic_string.h **** 
1769:/usr/include/c++/10/bits/basic_string.h ****       /**
1770:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Insert a string_view.
1771:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos1  Position in string to insert at.
1772:/usr/include/c++/10/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
1773:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
1774:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n    The number of characters to insert.
1775:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
1776:/usr/include/c++/10/bits/basic_string.h ****       */
1777:/usr/include/c++/10/bits/basic_string.h ****       template<typename _Tp>
1778:/usr/include/c++/10/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1779:/usr/include/c++/10/bits/basic_string.h **** 	insert(size_type __pos1, const _Tp& __svt,
1780:/usr/include/c++/10/bits/basic_string.h **** 	       size_type __pos2, size_type __n = npos)
1781:/usr/include/c++/10/bits/basic_string.h **** 	{
1782:/usr/include/c++/10/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1783:/usr/include/c++/10/bits/basic_string.h **** 	  return this->replace(__pos1, size_type(0),
1784:/usr/include/c++/10/bits/basic_string.h **** 	      __sv.data()
1785:/usr/include/c++/10/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::insert"),
1786:/usr/include/c++/10/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n));
1787:/usr/include/c++/10/bits/basic_string.h **** 	}
1788:/usr/include/c++/10/bits/basic_string.h **** #endif // C++17
1789:/usr/include/c++/10/bits/basic_string.h **** 
1790:/usr/include/c++/10/bits/basic_string.h ****       /**
1791:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Remove characters.
1792:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
1793:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
1794:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
1795:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
AARCH64 GAS  obj/extInstr.s 			page 119


1796:/usr/include/c++/10/bits/basic_string.h ****        *  string.
1797:/usr/include/c++/10/bits/basic_string.h ****        *
1798:/usr/include/c++/10/bits/basic_string.h ****        *  Removes @a __n characters from this string starting at @a
1799:/usr/include/c++/10/bits/basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
1800:/usr/include/c++/10/bits/basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
1801:/usr/include/c++/10/bits/basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
1802:/usr/include/c++/10/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1803:/usr/include/c++/10/bits/basic_string.h ****        *  change if an error is thrown.
1804:/usr/include/c++/10/bits/basic_string.h ****       */
1805:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
1806:/usr/include/c++/10/bits/basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
1807:/usr/include/c++/10/bits/basic_string.h ****       {
1808:/usr/include/c++/10/bits/basic_string.h **** 	_M_check(__pos, "basic_string::erase");
1809:/usr/include/c++/10/bits/basic_string.h **** 	if (__n == npos)
1810:/usr/include/c++/10/bits/basic_string.h **** 	  this->_M_set_length(__pos);
1811:/usr/include/c++/10/bits/basic_string.h **** 	else if (__n != 0)
1812:/usr/include/c++/10/bits/basic_string.h **** 	  this->_M_erase(__pos, _M_limit(__pos, __n));
1813:/usr/include/c++/10/bits/basic_string.h **** 	return *this;
1814:/usr/include/c++/10/bits/basic_string.h ****       }
1815:/usr/include/c++/10/bits/basic_string.h **** 
1816:/usr/include/c++/10/bits/basic_string.h ****       /**
1817:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Remove one character.
1818:/usr/include/c++/10/bits/basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
1819:/usr/include/c++/10/bits/basic_string.h ****        *  @return  iterator referencing same location after removal.
1820:/usr/include/c++/10/bits/basic_string.h ****        *
1821:/usr/include/c++/10/bits/basic_string.h ****        *  Removes the character at @a __position from this string. The value
1822:/usr/include/c++/10/bits/basic_string.h ****        *  of the string doesn't change if an error is thrown.
1823:/usr/include/c++/10/bits/basic_string.h ****       */
1824:/usr/include/c++/10/bits/basic_string.h ****       iterator
1825:/usr/include/c++/10/bits/basic_string.h ****       erase(__const_iterator __position)
1826:/usr/include/c++/10/bits/basic_string.h ****       {
1827:/usr/include/c++/10/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= begin()
1828:/usr/include/c++/10/bits/basic_string.h **** 				 && __position < end());
1829:/usr/include/c++/10/bits/basic_string.h **** 	const size_type __pos = __position - begin();
1830:/usr/include/c++/10/bits/basic_string.h **** 	this->_M_erase(__pos, size_type(1));
1831:/usr/include/c++/10/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
1832:/usr/include/c++/10/bits/basic_string.h ****       }
1833:/usr/include/c++/10/bits/basic_string.h **** 
1834:/usr/include/c++/10/bits/basic_string.h ****       /**
1835:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Remove a range of characters.
1836:/usr/include/c++/10/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
1837:/usr/include/c++/10/bits/basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
1838:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Iterator referencing location of first after removal.
1839:/usr/include/c++/10/bits/basic_string.h ****        *
1840:/usr/include/c++/10/bits/basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
1841:/usr/include/c++/10/bits/basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
1842:/usr/include/c++/10/bits/basic_string.h ****       */
1843:/usr/include/c++/10/bits/basic_string.h ****       iterator
1844:/usr/include/c++/10/bits/basic_string.h ****       erase(__const_iterator __first, __const_iterator __last)
1845:/usr/include/c++/10/bits/basic_string.h ****       {
1846:/usr/include/c++/10/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__first >= begin() && __first <= __last
1847:/usr/include/c++/10/bits/basic_string.h **** 				 && __last <= end());
1848:/usr/include/c++/10/bits/basic_string.h ****         const size_type __pos = __first - begin();
1849:/usr/include/c++/10/bits/basic_string.h **** 	if (__last == end())
1850:/usr/include/c++/10/bits/basic_string.h **** 	  this->_M_set_length(__pos);
1851:/usr/include/c++/10/bits/basic_string.h **** 	else
1852:/usr/include/c++/10/bits/basic_string.h **** 	  this->_M_erase(__pos, __last - __first);
AARCH64 GAS  obj/extInstr.s 			page 120


1853:/usr/include/c++/10/bits/basic_string.h **** 	return iterator(this->_M_data() + __pos);
1854:/usr/include/c++/10/bits/basic_string.h ****       }
1855:/usr/include/c++/10/bits/basic_string.h **** 
1856:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201103L
1857:/usr/include/c++/10/bits/basic_string.h ****       /**
1858:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Remove the last character.
1859:/usr/include/c++/10/bits/basic_string.h ****        *
1860:/usr/include/c++/10/bits/basic_string.h ****        *  The string must be non-empty.
1861:/usr/include/c++/10/bits/basic_string.h ****        */
1862:/usr/include/c++/10/bits/basic_string.h ****       void
1863:/usr/include/c++/10/bits/basic_string.h ****       pop_back() noexcept
1864:/usr/include/c++/10/bits/basic_string.h ****       {
1865:/usr/include/c++/10/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1866:/usr/include/c++/10/bits/basic_string.h **** 	_M_erase(size() - 1, 1);
1867:/usr/include/c++/10/bits/basic_string.h ****       }
1868:/usr/include/c++/10/bits/basic_string.h **** #endif // C++11
1869:/usr/include/c++/10/bits/basic_string.h **** 
1870:/usr/include/c++/10/bits/basic_string.h ****       /**
1871:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
1872:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1873:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  Number of characters to be replaced.
1874:/usr/include/c++/10/bits/basic_string.h ****        *  @param __str  String to insert.
1875:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
1876:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1877:/usr/include/c++/10/bits/basic_string.h ****        *  string.
1878:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1879:/usr/include/c++/10/bits/basic_string.h ****        *
1880:/usr/include/c++/10/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
1881:/usr/include/c++/10/bits/basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
1882:/usr/include/c++/10/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1883:/usr/include/c++/10/bits/basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
1884:/usr/include/c++/10/bits/basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
1885:/usr/include/c++/10/bits/basic_string.h ****        *  error is thrown.
1886:/usr/include/c++/10/bits/basic_string.h ****       */
1887:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
1888:/usr/include/c++/10/bits/basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
1889:/usr/include/c++/10/bits/basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
1890:/usr/include/c++/10/bits/basic_string.h **** 
1891:/usr/include/c++/10/bits/basic_string.h ****       /**
1892:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
1893:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos1  Index of first character to replace.
1894:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1895:/usr/include/c++/10/bits/basic_string.h ****        *  @param __str  String to insert.
1896:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos2  Index of first character of str to use.
1897:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n2  Number of characters from str to use.
1898:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
1899:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
1900:/usr/include/c++/10/bits/basic_string.h ****        *  __str.size().
1901:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1902:/usr/include/c++/10/bits/basic_string.h ****        *
1903:/usr/include/c++/10/bits/basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
1904:/usr/include/c++/10/bits/basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
1905:/usr/include/c++/10/bits/basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
1906:/usr/include/c++/10/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
1907:/usr/include/c++/10/bits/basic_string.h ****        *  string doesn't change if an error is thrown.
1908:/usr/include/c++/10/bits/basic_string.h ****       */
1909:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
AARCH64 GAS  obj/extInstr.s 			page 121


1910:/usr/include/c++/10/bits/basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
1911:/usr/include/c++/10/bits/basic_string.h **** 	      size_type __pos2, size_type __n2 = npos)
1912:/usr/include/c++/10/bits/basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
1913:/usr/include/c++/10/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
1914:/usr/include/c++/10/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
1915:/usr/include/c++/10/bits/basic_string.h **** 
1916:/usr/include/c++/10/bits/basic_string.h ****       /**
1917:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Replace characters with value of a C substring.
1918:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1919:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1920:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  C string to insert.
1921:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
1922:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
1923:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
1924:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1925:/usr/include/c++/10/bits/basic_string.h ****        *
1926:/usr/include/c++/10/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1927:/usr/include/c++/10/bits/basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
1928:/usr/include/c++/10/bits/basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
1929:/usr/include/c++/10/bits/basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
1930:/usr/include/c++/10/bits/basic_string.h ****        *  the length of result exceeds max_size(), length_error is
1931:/usr/include/c++/10/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1932:/usr/include/c++/10/bits/basic_string.h ****        *  is thrown.
1933:/usr/include/c++/10/bits/basic_string.h ****       */
1934:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
1935:/usr/include/c++/10/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
1936:/usr/include/c++/10/bits/basic_string.h **** 	      size_type __n2)
1937:/usr/include/c++/10/bits/basic_string.h ****       {
1938:/usr/include/c++/10/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n2);
1939:/usr/include/c++/10/bits/basic_string.h **** 	return _M_replace(_M_check(__pos, "basic_string::replace"),
1940:/usr/include/c++/10/bits/basic_string.h **** 			  _M_limit(__pos, __n1), __s, __n2);
1941:/usr/include/c++/10/bits/basic_string.h ****       }
1942:/usr/include/c++/10/bits/basic_string.h **** 
1943:/usr/include/c++/10/bits/basic_string.h ****       /**
1944:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Replace characters with value of a C string.
1945:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1946:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1947:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  C string to insert.
1948:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
1949:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
1950:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1951:/usr/include/c++/10/bits/basic_string.h ****        *
1952:/usr/include/c++/10/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1953:/usr/include/c++/10/bits/basic_string.h ****        *  from this string.  In place, the characters of @a __s are
1954:/usr/include/c++/10/bits/basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
1955:/usr/include/c++/10/bits/basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
1956:/usr/include/c++/10/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1957:/usr/include/c++/10/bits/basic_string.h ****        *  change if an error is thrown.
1958:/usr/include/c++/10/bits/basic_string.h ****       */
1959:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
1960:/usr/include/c++/10/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
1961:/usr/include/c++/10/bits/basic_string.h ****       {
1962:/usr/include/c++/10/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1963:/usr/include/c++/10/bits/basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
1964:/usr/include/c++/10/bits/basic_string.h ****       }
1965:/usr/include/c++/10/bits/basic_string.h **** 
1966:/usr/include/c++/10/bits/basic_string.h ****       /**
AARCH64 GAS  obj/extInstr.s 			page 122


1967:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Replace characters with multiple characters.
1968:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1969:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1970:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n2  Number of characters to insert.
1971:/usr/include/c++/10/bits/basic_string.h ****        *  @param __c  Character to insert.
1972:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
1973:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
1974:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1975:/usr/include/c++/10/bits/basic_string.h ****        *
1976:/usr/include/c++/10/bits/basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
1977:/usr/include/c++/10/bits/basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
1978:/usr/include/c++/10/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1979:/usr/include/c++/10/bits/basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
1980:/usr/include/c++/10/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1981:/usr/include/c++/10/bits/basic_string.h ****        *  is thrown.
1982:/usr/include/c++/10/bits/basic_string.h ****       */
1983:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
1984:/usr/include/c++/10/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
1985:/usr/include/c++/10/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
1986:/usr/include/c++/10/bits/basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
1987:/usr/include/c++/10/bits/basic_string.h **** 
1988:/usr/include/c++/10/bits/basic_string.h ****       /**
1989:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Replace range of characters with string.
1990:/usr/include/c++/10/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1991:/usr/include/c++/10/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1992:/usr/include/c++/10/bits/basic_string.h ****        *  @param __str  String value to insert.
1993:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
1994:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1995:/usr/include/c++/10/bits/basic_string.h ****        *
1996:/usr/include/c++/10/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1997:/usr/include/c++/10/bits/basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
1998:/usr/include/c++/10/bits/basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
1999:/usr/include/c++/10/bits/basic_string.h ****        *  the string doesn't change if an error is thrown.
2000:/usr/include/c++/10/bits/basic_string.h ****       */
2001:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
2002:/usr/include/c++/10/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2003:/usr/include/c++/10/bits/basic_string.h **** 	      const basic_string& __str)
2004:/usr/include/c++/10/bits/basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
2005:/usr/include/c++/10/bits/basic_string.h **** 
2006:/usr/include/c++/10/bits/basic_string.h ****       /**
2007:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Replace range of characters with C substring.
2008:/usr/include/c++/10/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2009:/usr/include/c++/10/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2010:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  C string value to insert.
2011:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  Number of characters from s to insert.
2012:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
2013:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2014:/usr/include/c++/10/bits/basic_string.h ****        *
2015:/usr/include/c++/10/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2016:/usr/include/c++/10/bits/basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
2017:/usr/include/c++/10/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2018:/usr/include/c++/10/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
2019:/usr/include/c++/10/bits/basic_string.h ****        *  thrown.
2020:/usr/include/c++/10/bits/basic_string.h ****       */
2021:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
2022:/usr/include/c++/10/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2023:/usr/include/c++/10/bits/basic_string.h **** 	      const _CharT* __s, size_type __n)
AARCH64 GAS  obj/extInstr.s 			page 123


2024:/usr/include/c++/10/bits/basic_string.h ****       {
2025:/usr/include/c++/10/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2026:/usr/include/c++/10/bits/basic_string.h **** 				 && __i2 <= end());
2027:/usr/include/c++/10/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1, __s, __n);
2028:/usr/include/c++/10/bits/basic_string.h ****       }
2029:/usr/include/c++/10/bits/basic_string.h **** 
2030:/usr/include/c++/10/bits/basic_string.h ****       /**
2031:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Replace range of characters with C string.
2032:/usr/include/c++/10/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2033:/usr/include/c++/10/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2034:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  C string value to insert.
2035:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
2036:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2037:/usr/include/c++/10/bits/basic_string.h ****        *
2038:/usr/include/c++/10/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2039:/usr/include/c++/10/bits/basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
2040:/usr/include/c++/10/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
2041:/usr/include/c++/10/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
2042:/usr/include/c++/10/bits/basic_string.h ****       */
2043:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
2044:/usr/include/c++/10/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2, const _CharT* __s)
2045:/usr/include/c++/10/bits/basic_string.h ****       {
2046:/usr/include/c++/10/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2047:/usr/include/c++/10/bits/basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
2048:/usr/include/c++/10/bits/basic_string.h ****       }
2049:/usr/include/c++/10/bits/basic_string.h **** 
2050:/usr/include/c++/10/bits/basic_string.h ****       /**
2051:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Replace range of characters with multiple characters
2052:/usr/include/c++/10/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2053:/usr/include/c++/10/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2054:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
2055:/usr/include/c++/10/bits/basic_string.h ****        *  @param __c  Character to insert.
2056:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
2057:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2058:/usr/include/c++/10/bits/basic_string.h ****        *
2059:/usr/include/c++/10/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2060:/usr/include/c++/10/bits/basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
2061:/usr/include/c++/10/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
2062:/usr/include/c++/10/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
2063:/usr/include/c++/10/bits/basic_string.h ****       */
2064:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
2065:/usr/include/c++/10/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2, size_type __n,
2066:/usr/include/c++/10/bits/basic_string.h **** 	      _CharT __c)
2067:/usr/include/c++/10/bits/basic_string.h ****       {
2068:/usr/include/c++/10/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2069:/usr/include/c++/10/bits/basic_string.h **** 				 && __i2 <= end());
2070:/usr/include/c++/10/bits/basic_string.h **** 	return _M_replace_aux(__i1 - begin(), __i2 - __i1, __n, __c);
2071:/usr/include/c++/10/bits/basic_string.h ****       }
2072:/usr/include/c++/10/bits/basic_string.h **** 
2073:/usr/include/c++/10/bits/basic_string.h ****       /**
2074:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Replace range of characters with range.
2075:/usr/include/c++/10/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2076:/usr/include/c++/10/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2077:/usr/include/c++/10/bits/basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
2078:/usr/include/c++/10/bits/basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
2079:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
2080:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
AARCH64 GAS  obj/extInstr.s 			page 124


2081:/usr/include/c++/10/bits/basic_string.h ****        *
2082:/usr/include/c++/10/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2083:/usr/include/c++/10/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
2084:/usr/include/c++/10/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2085:/usr/include/c++/10/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
2086:/usr/include/c++/10/bits/basic_string.h ****        *  thrown.
2087:/usr/include/c++/10/bits/basic_string.h ****       */
2088:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201103L
2089:/usr/include/c++/10/bits/basic_string.h ****       template<class _InputIterator,
2090:/usr/include/c++/10/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
2091:/usr/include/c++/10/bits/basic_string.h ****         basic_string&
2092:/usr/include/c++/10/bits/basic_string.h ****         replace(const_iterator __i1, const_iterator __i2,
2093:/usr/include/c++/10/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
2094:/usr/include/c++/10/bits/basic_string.h ****         {
2095:/usr/include/c++/10/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2096:/usr/include/c++/10/bits/basic_string.h **** 				   && __i2 <= end());
2097:/usr/include/c++/10/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
2098:/usr/include/c++/10/bits/basic_string.h **** 	  return this->_M_replace_dispatch(__i1, __i2, __k1, __k2,
2099:/usr/include/c++/10/bits/basic_string.h **** 					   std::__false_type());
2100:/usr/include/c++/10/bits/basic_string.h **** 	}
2101:/usr/include/c++/10/bits/basic_string.h **** #else
2102:/usr/include/c++/10/bits/basic_string.h ****       template<class _InputIterator>
2103:/usr/include/c++/10/bits/basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
2104:/usr/include/c++/10/bits/basic_string.h ****         typename __enable_if_not_native_iterator<_InputIterator>::__type
2105:/usr/include/c++/10/bits/basic_string.h **** #else
2106:/usr/include/c++/10/bits/basic_string.h ****         basic_string&
2107:/usr/include/c++/10/bits/basic_string.h **** #endif
2108:/usr/include/c++/10/bits/basic_string.h ****         replace(iterator __i1, iterator __i2,
2109:/usr/include/c++/10/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
2110:/usr/include/c++/10/bits/basic_string.h ****         {
2111:/usr/include/c++/10/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2112:/usr/include/c++/10/bits/basic_string.h **** 				   && __i2 <= end());
2113:/usr/include/c++/10/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
2114:/usr/include/c++/10/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
2115:/usr/include/c++/10/bits/basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
2116:/usr/include/c++/10/bits/basic_string.h **** 	}
2117:/usr/include/c++/10/bits/basic_string.h **** #endif
2118:/usr/include/c++/10/bits/basic_string.h **** 
2119:/usr/include/c++/10/bits/basic_string.h ****       // Specializations for the common case of pointer and iterator:
2120:/usr/include/c++/10/bits/basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
2121:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
2122:/usr/include/c++/10/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2123:/usr/include/c++/10/bits/basic_string.h **** 	      _CharT* __k1, _CharT* __k2)
2124:/usr/include/c++/10/bits/basic_string.h ****       {
2125:/usr/include/c++/10/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2126:/usr/include/c++/10/bits/basic_string.h **** 				 && __i2 <= end());
2127:/usr/include/c++/10/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2128:/usr/include/c++/10/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2129:/usr/include/c++/10/bits/basic_string.h **** 			     __k1, __k2 - __k1);
2130:/usr/include/c++/10/bits/basic_string.h ****       }
2131:/usr/include/c++/10/bits/basic_string.h **** 
2132:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
2133:/usr/include/c++/10/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2134:/usr/include/c++/10/bits/basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
2135:/usr/include/c++/10/bits/basic_string.h ****       {
2136:/usr/include/c++/10/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2137:/usr/include/c++/10/bits/basic_string.h **** 				 && __i2 <= end());
AARCH64 GAS  obj/extInstr.s 			page 125


2138:/usr/include/c++/10/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2139:/usr/include/c++/10/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2140:/usr/include/c++/10/bits/basic_string.h **** 			     __k1, __k2 - __k1);
2141:/usr/include/c++/10/bits/basic_string.h ****       }
2142:/usr/include/c++/10/bits/basic_string.h **** 
2143:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
2144:/usr/include/c++/10/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2145:/usr/include/c++/10/bits/basic_string.h **** 	      iterator __k1, iterator __k2)
2146:/usr/include/c++/10/bits/basic_string.h ****       {
2147:/usr/include/c++/10/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2148:/usr/include/c++/10/bits/basic_string.h **** 				 && __i2 <= end());
2149:/usr/include/c++/10/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2150:/usr/include/c++/10/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2151:/usr/include/c++/10/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
2152:/usr/include/c++/10/bits/basic_string.h ****       }
2153:/usr/include/c++/10/bits/basic_string.h **** 
2154:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
2155:/usr/include/c++/10/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2156:/usr/include/c++/10/bits/basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
2157:/usr/include/c++/10/bits/basic_string.h ****       {
2158:/usr/include/c++/10/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2159:/usr/include/c++/10/bits/basic_string.h **** 				 && __i2 <= end());
2160:/usr/include/c++/10/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2161:/usr/include/c++/10/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2162:/usr/include/c++/10/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
2163:/usr/include/c++/10/bits/basic_string.h ****       }
2164:/usr/include/c++/10/bits/basic_string.h **** 
2165:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201103L
2166:/usr/include/c++/10/bits/basic_string.h ****       /**
2167:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
2168:/usr/include/c++/10/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2169:/usr/include/c++/10/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2170:/usr/include/c++/10/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
2171:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
2172:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2173:/usr/include/c++/10/bits/basic_string.h ****        *
2174:/usr/include/c++/10/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2175:/usr/include/c++/10/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
2176:/usr/include/c++/10/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2177:/usr/include/c++/10/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
2178:/usr/include/c++/10/bits/basic_string.h ****        *  thrown.
2179:/usr/include/c++/10/bits/basic_string.h ****       */
2180:/usr/include/c++/10/bits/basic_string.h ****       basic_string& replace(const_iterator __i1, const_iterator __i2,
2181:/usr/include/c++/10/bits/basic_string.h **** 			    initializer_list<_CharT> __l)
2182:/usr/include/c++/10/bits/basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.size()); }
2183:/usr/include/c++/10/bits/basic_string.h **** #endif // C++11
2184:/usr/include/c++/10/bits/basic_string.h **** 
2185:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201703L
2186:/usr/include/c++/10/bits/basic_string.h ****       /**
2187:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
2188:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  The position to replace at.
2189:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n    The number of characters to replace.
2190:/usr/include/c++/10/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
2191:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
2192:/usr/include/c++/10/bits/basic_string.h ****       */
2193:/usr/include/c++/10/bits/basic_string.h ****       template<typename _Tp>
2194:/usr/include/c++/10/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
AARCH64 GAS  obj/extInstr.s 			page 126


2195:/usr/include/c++/10/bits/basic_string.h **** 	replace(size_type __pos, size_type __n, const _Tp& __svt)
2196:/usr/include/c++/10/bits/basic_string.h **** 	{
2197:/usr/include/c++/10/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2198:/usr/include/c++/10/bits/basic_string.h **** 	  return this->replace(__pos, __n, __sv.data(), __sv.size());
2199:/usr/include/c++/10/bits/basic_string.h **** 	}
2200:/usr/include/c++/10/bits/basic_string.h **** 
2201:/usr/include/c++/10/bits/basic_string.h ****       /**
2202:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
2203:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos1  The position to replace at.
2204:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n1    The number of characters to replace.
2205:/usr/include/c++/10/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
2206:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos2  The position in the string_view to insert from.
2207:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n2    The number of characters to insert.
2208:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
2209:/usr/include/c++/10/bits/basic_string.h ****       */
2210:/usr/include/c++/10/bits/basic_string.h ****       template<typename _Tp>
2211:/usr/include/c++/10/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
2212:/usr/include/c++/10/bits/basic_string.h **** 	replace(size_type __pos1, size_type __n1, const _Tp& __svt,
2213:/usr/include/c++/10/bits/basic_string.h **** 		size_type __pos2, size_type __n2 = npos)
2214:/usr/include/c++/10/bits/basic_string.h **** 	{
2215:/usr/include/c++/10/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2216:/usr/include/c++/10/bits/basic_string.h **** 	  return this->replace(__pos1, __n1,
2217:/usr/include/c++/10/bits/basic_string.h **** 	      __sv.data()
2218:/usr/include/c++/10/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::replace"),
2219:/usr/include/c++/10/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n2));
2220:/usr/include/c++/10/bits/basic_string.h **** 	}
2221:/usr/include/c++/10/bits/basic_string.h **** 
2222:/usr/include/c++/10/bits/basic_string.h ****       /**
2223:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
2224:/usr/include/c++/10/bits/basic_string.h ****        *  @param __i1    An iterator referencing the start position
2225:/usr/include/c++/10/bits/basic_string.h ****           to replace at.
2226:/usr/include/c++/10/bits/basic_string.h ****        *  @param __i2    An iterator referencing the end position
2227:/usr/include/c++/10/bits/basic_string.h ****           for the replace.
2228:/usr/include/c++/10/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
2229:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
2230:/usr/include/c++/10/bits/basic_string.h ****       */
2231:/usr/include/c++/10/bits/basic_string.h ****       template<typename _Tp>
2232:/usr/include/c++/10/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
2233:/usr/include/c++/10/bits/basic_string.h **** 	replace(const_iterator __i1, const_iterator __i2, const _Tp& __svt)
2234:/usr/include/c++/10/bits/basic_string.h **** 	{
2235:/usr/include/c++/10/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2236:/usr/include/c++/10/bits/basic_string.h **** 	  return this->replace(__i1 - begin(), __i2 - __i1, __sv);
2237:/usr/include/c++/10/bits/basic_string.h **** 	}
2238:/usr/include/c++/10/bits/basic_string.h **** #endif // C++17
2239:/usr/include/c++/10/bits/basic_string.h **** 
2240:/usr/include/c++/10/bits/basic_string.h ****     private:
2241:/usr/include/c++/10/bits/basic_string.h ****       template<class _Integer>
2242:/usr/include/c++/10/bits/basic_string.h **** 	basic_string&
2243:/usr/include/c++/10/bits/basic_string.h **** 	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,
2244:/usr/include/c++/10/bits/basic_string.h **** 			    _Integer __n, _Integer __val, __true_type)
2245:/usr/include/c++/10/bits/basic_string.h ****         { return _M_replace_aux(__i1 - begin(), __i2 - __i1, __n, __val); }
2246:/usr/include/c++/10/bits/basic_string.h **** 
2247:/usr/include/c++/10/bits/basic_string.h ****       template<class _InputIterator>
2248:/usr/include/c++/10/bits/basic_string.h **** 	basic_string&
2249:/usr/include/c++/10/bits/basic_string.h **** 	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,
2250:/usr/include/c++/10/bits/basic_string.h **** 			    _InputIterator __k1, _InputIterator __k2,
2251:/usr/include/c++/10/bits/basic_string.h **** 			    __false_type);
AARCH64 GAS  obj/extInstr.s 			page 127


2252:/usr/include/c++/10/bits/basic_string.h **** 
2253:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
2254:/usr/include/c++/10/bits/basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
2255:/usr/include/c++/10/bits/basic_string.h **** 		     _CharT __c);
2256:/usr/include/c++/10/bits/basic_string.h **** 
2257:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
2258:/usr/include/c++/10/bits/basic_string.h ****       _M_replace(size_type __pos, size_type __len1, const _CharT* __s,
2259:/usr/include/c++/10/bits/basic_string.h **** 		 const size_type __len2);
2260:/usr/include/c++/10/bits/basic_string.h **** 
2261:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
2262:/usr/include/c++/10/bits/basic_string.h ****       _M_append(const _CharT* __s, size_type __n);
2263:/usr/include/c++/10/bits/basic_string.h **** 
2264:/usr/include/c++/10/bits/basic_string.h ****     public:
2265:/usr/include/c++/10/bits/basic_string.h **** 
2266:/usr/include/c++/10/bits/basic_string.h ****       /**
2267:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Copy substring into C string.
2268:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  C string to copy value into.
2269:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  Number of characters to copy.
2270:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of first character to copy.
2271:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Number of characters actually copied
2272:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
2273:/usr/include/c++/10/bits/basic_string.h ****        *
2274:/usr/include/c++/10/bits/basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
2275:/usr/include/c++/10/bits/basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
2276:/usr/include/c++/10/bits/basic_string.h ****        *  out_of_range is thrown.
2277:/usr/include/c++/10/bits/basic_string.h ****       */
2278:/usr/include/c++/10/bits/basic_string.h ****       size_type
2279:/usr/include/c++/10/bits/basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
2280:/usr/include/c++/10/bits/basic_string.h **** 
2281:/usr/include/c++/10/bits/basic_string.h ****       /**
2282:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Swap contents with another string.
2283:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  String to swap with.
2284:/usr/include/c++/10/bits/basic_string.h ****        *
2285:/usr/include/c++/10/bits/basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
2286:/usr/include/c++/10/bits/basic_string.h ****        *  time.
2287:/usr/include/c++/10/bits/basic_string.h ****       */
2288:/usr/include/c++/10/bits/basic_string.h ****       void
2289:/usr/include/c++/10/bits/basic_string.h ****       swap(basic_string& __s) _GLIBCXX_NOEXCEPT;
2290:/usr/include/c++/10/bits/basic_string.h **** 
2291:/usr/include/c++/10/bits/basic_string.h ****       // String operations:
2292:/usr/include/c++/10/bits/basic_string.h ****       /**
2293:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
2294:/usr/include/c++/10/bits/basic_string.h ****        *
2295:/usr/include/c++/10/bits/basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
2296:/usr/include/c++/10/bits/basic_string.h ****        *  happen.
2297:/usr/include/c++/10/bits/basic_string.h ****       */
2298:/usr/include/c++/10/bits/basic_string.h ****       const _CharT*
2299:/usr/include/c++/10/bits/basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
2300:/usr/include/c++/10/bits/basic_string.h ****       { return _M_data(); }
2301:/usr/include/c++/10/bits/basic_string.h **** 
2302:/usr/include/c++/10/bits/basic_string.h ****       /**
2303:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Return const pointer to contents.
2304:/usr/include/c++/10/bits/basic_string.h ****        *
2305:/usr/include/c++/10/bits/basic_string.h ****        *  This is a pointer to internal data.  It is undefined to modify
2306:/usr/include/c++/10/bits/basic_string.h ****        *  the contents through the returned pointer. To get a pointer that
2307:/usr/include/c++/10/bits/basic_string.h ****        *  allows modifying the contents use @c &str[0] instead,
2308:/usr/include/c++/10/bits/basic_string.h ****        *  (or in C++17 the non-const @c str.data() overload).
AARCH64 GAS  obj/extInstr.s 			page 128


2309:/usr/include/c++/10/bits/basic_string.h ****       */
2310:/usr/include/c++/10/bits/basic_string.h ****       const _CharT*
2311:/usr/include/c++/10/bits/basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
2312:/usr/include/c++/10/bits/basic_string.h ****       { return _M_data(); }
2313:/usr/include/c++/10/bits/basic_string.h **** 
2314:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201703L
2315:/usr/include/c++/10/bits/basic_string.h ****       /**
2316:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Return non-const pointer to contents.
2317:/usr/include/c++/10/bits/basic_string.h ****        *
2318:/usr/include/c++/10/bits/basic_string.h ****        *  This is a pointer to the character sequence held by the string.
2319:/usr/include/c++/10/bits/basic_string.h ****        *  Modifying the characters in the sequence is allowed.
2320:/usr/include/c++/10/bits/basic_string.h ****       */
2321:/usr/include/c++/10/bits/basic_string.h ****       _CharT*
2322:/usr/include/c++/10/bits/basic_string.h ****       data() noexcept
2323:/usr/include/c++/10/bits/basic_string.h ****       { return _M_data(); }
2324:/usr/include/c++/10/bits/basic_string.h **** #endif
2325:/usr/include/c++/10/bits/basic_string.h **** 
2326:/usr/include/c++/10/bits/basic_string.h ****       /**
2327:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
2328:/usr/include/c++/10/bits/basic_string.h ****       */
2329:/usr/include/c++/10/bits/basic_string.h ****       allocator_type
2330:/usr/include/c++/10/bits/basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
2331:/usr/include/c++/10/bits/basic_string.h ****       { return _M_get_allocator(); }
2332:/usr/include/c++/10/bits/basic_string.h **** 
2333:/usr/include/c++/10/bits/basic_string.h ****       /**
2334:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find position of a C substring.
2335:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  C string to locate.
2336:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
2337:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
2338:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2339:/usr/include/c++/10/bits/basic_string.h ****        *
2340:/usr/include/c++/10/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
2341:/usr/include/c++/10/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
2342:/usr/include/c++/10/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
2343:/usr/include/c++/10/bits/basic_string.h ****        *  npos.
2344:/usr/include/c++/10/bits/basic_string.h ****       */
2345:/usr/include/c++/10/bits/basic_string.h ****       size_type
2346:/usr/include/c++/10/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const
2347:/usr/include/c++/10/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2348:/usr/include/c++/10/bits/basic_string.h **** 
2349:/usr/include/c++/10/bits/basic_string.h ****       /**
2350:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find position of a string.
2351:/usr/include/c++/10/bits/basic_string.h ****        *  @param __str  String to locate.
2352:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2353:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2354:/usr/include/c++/10/bits/basic_string.h ****        *
2355:/usr/include/c++/10/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
2356:/usr/include/c++/10/bits/basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
2357:/usr/include/c++/10/bits/basic_string.h ****        *  found, returns npos.
2358:/usr/include/c++/10/bits/basic_string.h ****       */
2359:/usr/include/c++/10/bits/basic_string.h ****       size_type
2360:/usr/include/c++/10/bits/basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
2361:/usr/include/c++/10/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2362:/usr/include/c++/10/bits/basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
2363:/usr/include/c++/10/bits/basic_string.h **** 
2364:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201703L
2365:/usr/include/c++/10/bits/basic_string.h ****       /**
AARCH64 GAS  obj/extInstr.s 			page 129


2366:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find position of a string_view.
2367:/usr/include/c++/10/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
2368:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2369:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2370:/usr/include/c++/10/bits/basic_string.h ****       */
2371:/usr/include/c++/10/bits/basic_string.h ****       template<typename _Tp>
2372:/usr/include/c++/10/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2373:/usr/include/c++/10/bits/basic_string.h **** 	find(const _Tp& __svt, size_type __pos = 0) const
2374:/usr/include/c++/10/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2375:/usr/include/c++/10/bits/basic_string.h **** 	{
2376:/usr/include/c++/10/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2377:/usr/include/c++/10/bits/basic_string.h **** 	  return this->find(__sv.data(), __pos, __sv.size());
2378:/usr/include/c++/10/bits/basic_string.h **** 	}
2379:/usr/include/c++/10/bits/basic_string.h **** #endif // C++17
2380:/usr/include/c++/10/bits/basic_string.h **** 
2381:/usr/include/c++/10/bits/basic_string.h ****       /**
2382:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find position of a C string.
2383:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  C string to locate.
2384:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2385:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2386:/usr/include/c++/10/bits/basic_string.h ****        *
2387:/usr/include/c++/10/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
2388:/usr/include/c++/10/bits/basic_string.h ****        *  __s within this string.  If found, returns the index where
2389:/usr/include/c++/10/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
2390:/usr/include/c++/10/bits/basic_string.h ****       */
2391:/usr/include/c++/10/bits/basic_string.h ****       size_type
2392:/usr/include/c++/10/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
2393:/usr/include/c++/10/bits/basic_string.h ****       {
2394:/usr/include/c++/10/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2395:/usr/include/c++/10/bits/basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
2396:/usr/include/c++/10/bits/basic_string.h ****       }
2397:/usr/include/c++/10/bits/basic_string.h **** 
2398:/usr/include/c++/10/bits/basic_string.h ****       /**
2399:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find position of a character.
2400:/usr/include/c++/10/bits/basic_string.h ****        *  @param __c  Character to locate.
2401:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2402:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of first occurrence.
2403:/usr/include/c++/10/bits/basic_string.h ****        *
2404:/usr/include/c++/10/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
2405:/usr/include/c++/10/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2406:/usr/include/c++/10/bits/basic_string.h ****        *  found.  If not found, returns npos.
2407:/usr/include/c++/10/bits/basic_string.h ****       */
2408:/usr/include/c++/10/bits/basic_string.h ****       size_type
2409:/usr/include/c++/10/bits/basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
2410:/usr/include/c++/10/bits/basic_string.h **** 
2411:/usr/include/c++/10/bits/basic_string.h ****       /**
2412:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find last position of a string.
2413:/usr/include/c++/10/bits/basic_string.h ****        *  @param __str  String to locate.
2414:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2415:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
2416:/usr/include/c++/10/bits/basic_string.h ****        *
2417:/usr/include/c++/10/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
2418:/usr/include/c++/10/bits/basic_string.h ****        *  __str within this string.  If found, returns the index where
2419:/usr/include/c++/10/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
2420:/usr/include/c++/10/bits/basic_string.h ****       */
2421:/usr/include/c++/10/bits/basic_string.h ****       size_type
2422:/usr/include/c++/10/bits/basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
AARCH64 GAS  obj/extInstr.s 			page 130


2423:/usr/include/c++/10/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2424:/usr/include/c++/10/bits/basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
2425:/usr/include/c++/10/bits/basic_string.h **** 
2426:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201703L
2427:/usr/include/c++/10/bits/basic_string.h ****       /**
2428:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find last position of a string_view.
2429:/usr/include/c++/10/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
2430:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2431:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
2432:/usr/include/c++/10/bits/basic_string.h ****       */
2433:/usr/include/c++/10/bits/basic_string.h ****       template<typename _Tp>
2434:/usr/include/c++/10/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2435:/usr/include/c++/10/bits/basic_string.h **** 	rfind(const _Tp& __svt, size_type __pos = npos) const
2436:/usr/include/c++/10/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2437:/usr/include/c++/10/bits/basic_string.h **** 	{
2438:/usr/include/c++/10/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2439:/usr/include/c++/10/bits/basic_string.h **** 	  return this->rfind(__sv.data(), __pos, __sv.size());
2440:/usr/include/c++/10/bits/basic_string.h **** 	}
2441:/usr/include/c++/10/bits/basic_string.h **** #endif // C++17
2442:/usr/include/c++/10/bits/basic_string.h **** 
2443:/usr/include/c++/10/bits/basic_string.h ****       /**
2444:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find last position of a C substring.
2445:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  C string to locate.
2446:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2447:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2448:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
2449:/usr/include/c++/10/bits/basic_string.h ****        *
2450:/usr/include/c++/10/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
2451:/usr/include/c++/10/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
2452:/usr/include/c++/10/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
2453:/usr/include/c++/10/bits/basic_string.h ****        *  npos.
2454:/usr/include/c++/10/bits/basic_string.h ****       */
2455:/usr/include/c++/10/bits/basic_string.h ****       size_type
2456:/usr/include/c++/10/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const
2457:/usr/include/c++/10/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2458:/usr/include/c++/10/bits/basic_string.h **** 
2459:/usr/include/c++/10/bits/basic_string.h ****       /**
2460:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find last position of a C string.
2461:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  C string to locate.
2462:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
2463:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of start of  last occurrence.
2464:/usr/include/c++/10/bits/basic_string.h ****        *
2465:/usr/include/c++/10/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
2466:/usr/include/c++/10/bits/basic_string.h ****        *  @a __s within this string.  If found, returns the index
2467:/usr/include/c++/10/bits/basic_string.h ****        *  where it begins.  If not found, returns npos.
2468:/usr/include/c++/10/bits/basic_string.h ****       */
2469:/usr/include/c++/10/bits/basic_string.h ****       size_type
2470:/usr/include/c++/10/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const
2471:/usr/include/c++/10/bits/basic_string.h ****       {
2472:/usr/include/c++/10/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2473:/usr/include/c++/10/bits/basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
2474:/usr/include/c++/10/bits/basic_string.h ****       }
2475:/usr/include/c++/10/bits/basic_string.h **** 
2476:/usr/include/c++/10/bits/basic_string.h ****       /**
2477:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find last position of a character.
2478:/usr/include/c++/10/bits/basic_string.h ****        *  @param __c  Character to locate.
2479:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
AARCH64 GAS  obj/extInstr.s 			page 131


2480:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of last occurrence.
2481:/usr/include/c++/10/bits/basic_string.h ****        *
2482:/usr/include/c++/10/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2483:/usr/include/c++/10/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2484:/usr/include/c++/10/bits/basic_string.h ****        *  found.  If not found, returns npos.
2485:/usr/include/c++/10/bits/basic_string.h ****       */
2486:/usr/include/c++/10/bits/basic_string.h ****       size_type
2487:/usr/include/c++/10/bits/basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
2488:/usr/include/c++/10/bits/basic_string.h **** 
2489:/usr/include/c++/10/bits/basic_string.h ****       /**
2490:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find position of a character of string.
2491:/usr/include/c++/10/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
2492:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2493:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of first occurrence.
2494:/usr/include/c++/10/bits/basic_string.h ****        *
2495:/usr/include/c++/10/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2496:/usr/include/c++/10/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
2497:/usr/include/c++/10/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2498:/usr/include/c++/10/bits/basic_string.h ****        *  npos.
2499:/usr/include/c++/10/bits/basic_string.h ****       */
2500:/usr/include/c++/10/bits/basic_string.h ****       size_type
2501:/usr/include/c++/10/bits/basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
2502:/usr/include/c++/10/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2503:/usr/include/c++/10/bits/basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
2504:/usr/include/c++/10/bits/basic_string.h **** 
2505:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201703L
2506:/usr/include/c++/10/bits/basic_string.h ****       /**
2507:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find position of a character of a string_view.
2508:/usr/include/c++/10/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2509:/usr/include/c++/10/bits/basic_string.h ****        *                characters to locate.
2510:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2511:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of first occurrence.
2512:/usr/include/c++/10/bits/basic_string.h ****       */
2513:/usr/include/c++/10/bits/basic_string.h ****       template<typename _Tp>
2514:/usr/include/c++/10/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2515:/usr/include/c++/10/bits/basic_string.h **** 	find_first_of(const _Tp& __svt, size_type __pos = 0) const
2516:/usr/include/c++/10/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2517:/usr/include/c++/10/bits/basic_string.h **** 	{
2518:/usr/include/c++/10/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2519:/usr/include/c++/10/bits/basic_string.h **** 	  return this->find_first_of(__sv.data(), __pos, __sv.size());
2520:/usr/include/c++/10/bits/basic_string.h **** 	}
2521:/usr/include/c++/10/bits/basic_string.h **** #endif // C++17
2522:/usr/include/c++/10/bits/basic_string.h **** 
2523:/usr/include/c++/10/bits/basic_string.h ****       /**
2524:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find position of a character of C substring.
2525:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
2526:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
2527:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2528:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of first occurrence.
2529:/usr/include/c++/10/bits/basic_string.h ****        *
2530:/usr/include/c++/10/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2531:/usr/include/c++/10/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2532:/usr/include/c++/10/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
2533:/usr/include/c++/10/bits/basic_string.h ****        *  returns npos.
2534:/usr/include/c++/10/bits/basic_string.h ****       */
2535:/usr/include/c++/10/bits/basic_string.h ****       size_type
2536:/usr/include/c++/10/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const
AARCH64 GAS  obj/extInstr.s 			page 132


2537:/usr/include/c++/10/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2538:/usr/include/c++/10/bits/basic_string.h **** 
2539:/usr/include/c++/10/bits/basic_string.h ****       /**
2540:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find position of a character of C string.
2541:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
2542:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2543:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of first occurrence.
2544:/usr/include/c++/10/bits/basic_string.h ****        *
2545:/usr/include/c++/10/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2546:/usr/include/c++/10/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2547:/usr/include/c++/10/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2548:/usr/include/c++/10/bits/basic_string.h ****       */
2549:/usr/include/c++/10/bits/basic_string.h ****       size_type
2550:/usr/include/c++/10/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
2551:/usr/include/c++/10/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2552:/usr/include/c++/10/bits/basic_string.h ****       {
2553:/usr/include/c++/10/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2554:/usr/include/c++/10/bits/basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
2555:/usr/include/c++/10/bits/basic_string.h ****       }
2556:/usr/include/c++/10/bits/basic_string.h **** 
2557:/usr/include/c++/10/bits/basic_string.h ****       /**
2558:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find position of a character.
2559:/usr/include/c++/10/bits/basic_string.h ****        *  @param __c  Character to locate.
2560:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2561:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of first occurrence.
2562:/usr/include/c++/10/bits/basic_string.h ****        *
2563:/usr/include/c++/10/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the character
2564:/usr/include/c++/10/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index
2565:/usr/include/c++/10/bits/basic_string.h ****        *  where it was found.  If not found, returns npos.
2566:/usr/include/c++/10/bits/basic_string.h ****        *
2567:/usr/include/c++/10/bits/basic_string.h ****        *  Note: equivalent to find(__c, __pos).
2568:/usr/include/c++/10/bits/basic_string.h ****       */
2569:/usr/include/c++/10/bits/basic_string.h ****       size_type
2570:/usr/include/c++/10/bits/basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
2571:/usr/include/c++/10/bits/basic_string.h ****       { return this->find(__c, __pos); }
2572:/usr/include/c++/10/bits/basic_string.h **** 
2573:/usr/include/c++/10/bits/basic_string.h ****       /**
2574:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
2575:/usr/include/c++/10/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
2576:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2577:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of last occurrence.
2578:/usr/include/c++/10/bits/basic_string.h ****        *
2579:/usr/include/c++/10/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2580:/usr/include/c++/10/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
2581:/usr/include/c++/10/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2582:/usr/include/c++/10/bits/basic_string.h ****        *  npos.
2583:/usr/include/c++/10/bits/basic_string.h ****       */
2584:/usr/include/c++/10/bits/basic_string.h ****       size_type
2585:/usr/include/c++/10/bits/basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
2586:/usr/include/c++/10/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2587:/usr/include/c++/10/bits/basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
2588:/usr/include/c++/10/bits/basic_string.h **** 
2589:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201703L
2590:/usr/include/c++/10/bits/basic_string.h ****       /**
2591:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
2592:/usr/include/c++/10/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2593:/usr/include/c++/10/bits/basic_string.h ****        *                characters to locate.
AARCH64 GAS  obj/extInstr.s 			page 133


2594:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2595:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of last occurrence.
2596:/usr/include/c++/10/bits/basic_string.h ****       */
2597:/usr/include/c++/10/bits/basic_string.h ****       template<typename _Tp>
2598:/usr/include/c++/10/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2599:/usr/include/c++/10/bits/basic_string.h **** 	find_last_of(const _Tp& __svt, size_type __pos = npos) const
2600:/usr/include/c++/10/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2601:/usr/include/c++/10/bits/basic_string.h **** 	{
2602:/usr/include/c++/10/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2603:/usr/include/c++/10/bits/basic_string.h **** 	  return this->find_last_of(__sv.data(), __pos, __sv.size());
2604:/usr/include/c++/10/bits/basic_string.h **** 	}
2605:/usr/include/c++/10/bits/basic_string.h **** #endif // C++17
2606:/usr/include/c++/10/bits/basic_string.h **** 
2607:/usr/include/c++/10/bits/basic_string.h ****       /**
2608:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find last position of a character of C substring.
2609:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
2610:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2611:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2612:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of last occurrence.
2613:/usr/include/c++/10/bits/basic_string.h ****        *
2614:/usr/include/c++/10/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2615:/usr/include/c++/10/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2616:/usr/include/c++/10/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
2617:/usr/include/c++/10/bits/basic_string.h ****        *  returns npos.
2618:/usr/include/c++/10/bits/basic_string.h ****       */
2619:/usr/include/c++/10/bits/basic_string.h ****       size_type
2620:/usr/include/c++/10/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const
2621:/usr/include/c++/10/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2622:/usr/include/c++/10/bits/basic_string.h **** 
2623:/usr/include/c++/10/bits/basic_string.h ****       /**
2624:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find last position of a character of C string.
2625:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
2626:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2627:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of last occurrence.
2628:/usr/include/c++/10/bits/basic_string.h ****        *
2629:/usr/include/c++/10/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2630:/usr/include/c++/10/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2631:/usr/include/c++/10/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2632:/usr/include/c++/10/bits/basic_string.h ****       */
2633:/usr/include/c++/10/bits/basic_string.h ****       size_type
2634:/usr/include/c++/10/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
2635:/usr/include/c++/10/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2636:/usr/include/c++/10/bits/basic_string.h ****       {
2637:/usr/include/c++/10/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2638:/usr/include/c++/10/bits/basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
2639:/usr/include/c++/10/bits/basic_string.h ****       }
2640:/usr/include/c++/10/bits/basic_string.h **** 
2641:/usr/include/c++/10/bits/basic_string.h ****       /**
2642:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find last position of a character.
2643:/usr/include/c++/10/bits/basic_string.h ****        *  @param __c  Character to locate.
2644:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2645:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of last occurrence.
2646:/usr/include/c++/10/bits/basic_string.h ****        *
2647:/usr/include/c++/10/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2648:/usr/include/c++/10/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2649:/usr/include/c++/10/bits/basic_string.h ****        *  found.  If not found, returns npos.
2650:/usr/include/c++/10/bits/basic_string.h ****        *
AARCH64 GAS  obj/extInstr.s 			page 134


2651:/usr/include/c++/10/bits/basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
2652:/usr/include/c++/10/bits/basic_string.h ****       */
2653:/usr/include/c++/10/bits/basic_string.h ****       size_type
2654:/usr/include/c++/10/bits/basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
2655:/usr/include/c++/10/bits/basic_string.h ****       { return this->rfind(__c, __pos); }
2656:/usr/include/c++/10/bits/basic_string.h **** 
2657:/usr/include/c++/10/bits/basic_string.h ****       /**
2658:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find position of a character not in string.
2659:/usr/include/c++/10/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
2660:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2661:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of first occurrence.
2662:/usr/include/c++/10/bits/basic_string.h ****        *
2663:/usr/include/c++/10/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
2664:/usr/include/c++/10/bits/basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
2665:/usr/include/c++/10/bits/basic_string.h ****        *  was found.  If not found, returns npos.
2666:/usr/include/c++/10/bits/basic_string.h ****       */
2667:/usr/include/c++/10/bits/basic_string.h ****       size_type
2668:/usr/include/c++/10/bits/basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
2669:/usr/include/c++/10/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2670:/usr/include/c++/10/bits/basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
2671:/usr/include/c++/10/bits/basic_string.h **** 
2672:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201703L
2673:/usr/include/c++/10/bits/basic_string.h ****       /**
2674:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find position of a character not in a string_view.
2675:/usr/include/c++/10/bits/basic_string.h ****        *  @param __svt  A object convertible to string_view containing
2676:/usr/include/c++/10/bits/basic_string.h ****        *                characters to avoid.
2677:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2678:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of first occurrence.
2679:/usr/include/c++/10/bits/basic_string.h ****        */
2680:/usr/include/c++/10/bits/basic_string.h ****       template<typename _Tp>
2681:/usr/include/c++/10/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2682:/usr/include/c++/10/bits/basic_string.h **** 	find_first_not_of(const _Tp& __svt, size_type __pos = 0) const
2683:/usr/include/c++/10/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2684:/usr/include/c++/10/bits/basic_string.h **** 	{
2685:/usr/include/c++/10/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2686:/usr/include/c++/10/bits/basic_string.h **** 	  return this->find_first_not_of(__sv.data(), __pos, __sv.size());
2687:/usr/include/c++/10/bits/basic_string.h **** 	}
2688:/usr/include/c++/10/bits/basic_string.h **** #endif // C++17
2689:/usr/include/c++/10/bits/basic_string.h **** 
2690:/usr/include/c++/10/bits/basic_string.h ****       /**
2691:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find position of a character not in C substring.
2692:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2693:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
2694:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  Number of characters from __s to consider.
2695:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of first occurrence.
2696:/usr/include/c++/10/bits/basic_string.h ****        *
2697:/usr/include/c++/10/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2698:/usr/include/c++/10/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within
2699:/usr/include/c++/10/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2700:/usr/include/c++/10/bits/basic_string.h ****        *  found.  If not found, returns npos.
2701:/usr/include/c++/10/bits/basic_string.h ****       */
2702:/usr/include/c++/10/bits/basic_string.h ****       size_type
2703:/usr/include/c++/10/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
2704:/usr/include/c++/10/bits/basic_string.h **** 			size_type __n) const _GLIBCXX_NOEXCEPT;
2705:/usr/include/c++/10/bits/basic_string.h **** 
2706:/usr/include/c++/10/bits/basic_string.h ****       /**
2707:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find position of a character not in C string.
AARCH64 GAS  obj/extInstr.s 			page 135


2708:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2709:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2710:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of first occurrence.
2711:/usr/include/c++/10/bits/basic_string.h ****        *
2712:/usr/include/c++/10/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2713:/usr/include/c++/10/bits/basic_string.h ****        *  contained in @a __s within this string.  If found, returns
2714:/usr/include/c++/10/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2715:/usr/include/c++/10/bits/basic_string.h ****       */
2716:/usr/include/c++/10/bits/basic_string.h ****       size_type
2717:/usr/include/c++/10/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
2718:/usr/include/c++/10/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2719:/usr/include/c++/10/bits/basic_string.h ****       {
2720:/usr/include/c++/10/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2721:/usr/include/c++/10/bits/basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
2722:/usr/include/c++/10/bits/basic_string.h ****       }
2723:/usr/include/c++/10/bits/basic_string.h **** 
2724:/usr/include/c++/10/bits/basic_string.h ****       /**
2725:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find position of a different character.
2726:/usr/include/c++/10/bits/basic_string.h ****        *  @param __c  Character to avoid.
2727:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2728:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of first occurrence.
2729:/usr/include/c++/10/bits/basic_string.h ****        *
2730:/usr/include/c++/10/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character
2731:/usr/include/c++/10/bits/basic_string.h ****        *  other than @a __c within this string.  If found, returns the
2732:/usr/include/c++/10/bits/basic_string.h ****        *  index where it was found.  If not found, returns npos.
2733:/usr/include/c++/10/bits/basic_string.h ****       */
2734:/usr/include/c++/10/bits/basic_string.h ****       size_type
2735:/usr/include/c++/10/bits/basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
2736:/usr/include/c++/10/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2737:/usr/include/c++/10/bits/basic_string.h **** 
2738:/usr/include/c++/10/bits/basic_string.h ****       /**
2739:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find last position of a character not in string.
2740:/usr/include/c++/10/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
2741:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2742:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of last occurrence.
2743:/usr/include/c++/10/bits/basic_string.h ****        *
2744:/usr/include/c++/10/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2745:/usr/include/c++/10/bits/basic_string.h ****        *  not contained in @a __str within this string.  If found,
2746:/usr/include/c++/10/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2747:/usr/include/c++/10/bits/basic_string.h ****        *  npos.
2748:/usr/include/c++/10/bits/basic_string.h ****       */
2749:/usr/include/c++/10/bits/basic_string.h ****       size_type
2750:/usr/include/c++/10/bits/basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
2751:/usr/include/c++/10/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2752:/usr/include/c++/10/bits/basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
2753:/usr/include/c++/10/bits/basic_string.h **** 
2754:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201703L
2755:/usr/include/c++/10/bits/basic_string.h ****       /**
2756:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find last position of a character not in a string_view.
2757:/usr/include/c++/10/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2758:/usr/include/c++/10/bits/basic_string.h ****        *                characters to avoid.
2759:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2760:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of last occurrence.
2761:/usr/include/c++/10/bits/basic_string.h ****        */
2762:/usr/include/c++/10/bits/basic_string.h ****       template<typename _Tp>
2763:/usr/include/c++/10/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2764:/usr/include/c++/10/bits/basic_string.h **** 	find_last_not_of(const _Tp& __svt, size_type __pos = npos) const
AARCH64 GAS  obj/extInstr.s 			page 136


2765:/usr/include/c++/10/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2766:/usr/include/c++/10/bits/basic_string.h **** 	{
2767:/usr/include/c++/10/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2768:/usr/include/c++/10/bits/basic_string.h **** 	  return this->find_last_not_of(__sv.data(), __pos, __sv.size());
2769:/usr/include/c++/10/bits/basic_string.h **** 	}
2770:/usr/include/c++/10/bits/basic_string.h **** #endif // C++17
2771:/usr/include/c++/10/bits/basic_string.h **** 
2772:/usr/include/c++/10/bits/basic_string.h ****       /**
2773:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find last position of a character not in C substring.
2774:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2775:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2776:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  Number of characters from s to consider.
2777:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of last occurrence.
2778:/usr/include/c++/10/bits/basic_string.h ****        *
2779:/usr/include/c++/10/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
2780:/usr/include/c++/10/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
2781:/usr/include/c++/10/bits/basic_string.h ****        *  If found, returns the index where it was found.  If not found,
2782:/usr/include/c++/10/bits/basic_string.h ****        *  returns npos.
2783:/usr/include/c++/10/bits/basic_string.h ****       */
2784:/usr/include/c++/10/bits/basic_string.h ****       size_type
2785:/usr/include/c++/10/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
2786:/usr/include/c++/10/bits/basic_string.h **** 		       size_type __n) const _GLIBCXX_NOEXCEPT;
2787:/usr/include/c++/10/bits/basic_string.h ****       /**
2788:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find last position of a character not in C string.
2789:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2790:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2791:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of last occurrence.
2792:/usr/include/c++/10/bits/basic_string.h ****        *
2793:/usr/include/c++/10/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2794:/usr/include/c++/10/bits/basic_string.h ****        *  not contained in @a __s within this string.  If found,
2795:/usr/include/c++/10/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2796:/usr/include/c++/10/bits/basic_string.h ****        *  npos.
2797:/usr/include/c++/10/bits/basic_string.h ****       */
2798:/usr/include/c++/10/bits/basic_string.h ****       size_type
2799:/usr/include/c++/10/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
2800:/usr/include/c++/10/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2801:/usr/include/c++/10/bits/basic_string.h ****       {
2802:/usr/include/c++/10/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2803:/usr/include/c++/10/bits/basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
2804:/usr/include/c++/10/bits/basic_string.h ****       }
2805:/usr/include/c++/10/bits/basic_string.h **** 
2806:/usr/include/c++/10/bits/basic_string.h ****       /**
2807:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find last position of a different character.
2808:/usr/include/c++/10/bits/basic_string.h ****        *  @param __c  Character to avoid.
2809:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2810:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of last occurrence.
2811:/usr/include/c++/10/bits/basic_string.h ****        *
2812:/usr/include/c++/10/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
2813:/usr/include/c++/10/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
2814:/usr/include/c++/10/bits/basic_string.h ****        *  found.  If not found, returns npos.
2815:/usr/include/c++/10/bits/basic_string.h ****       */
2816:/usr/include/c++/10/bits/basic_string.h ****       size_type
2817:/usr/include/c++/10/bits/basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
2818:/usr/include/c++/10/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2819:/usr/include/c++/10/bits/basic_string.h **** 
2820:/usr/include/c++/10/bits/basic_string.h ****       /**
2821:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Get a substring.
AARCH64 GAS  obj/extInstr.s 			page 137


2822:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of first character (default 0).
2823:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
2824:/usr/include/c++/10/bits/basic_string.h ****        *  @return  The new string.
2825:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
2826:/usr/include/c++/10/bits/basic_string.h ****        *
2827:/usr/include/c++/10/bits/basic_string.h ****        *  Construct and return a new string using the @a __n
2828:/usr/include/c++/10/bits/basic_string.h ****        *  characters starting at @a __pos.  If the string is too
2829:/usr/include/c++/10/bits/basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
2830:/usr/include/c++/10/bits/basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
2831:/usr/include/c++/10/bits/basic_string.h ****       */
2832:/usr/include/c++/10/bits/basic_string.h ****       basic_string
2833:/usr/include/c++/10/bits/basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
2834:/usr/include/c++/10/bits/basic_string.h ****       { return basic_string(*this,
2835:/usr/include/c++/10/bits/basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
2836:/usr/include/c++/10/bits/basic_string.h **** 
2837:/usr/include/c++/10/bits/basic_string.h ****       /**
2838:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Compare to a string.
2839:/usr/include/c++/10/bits/basic_string.h ****        *  @param __str  String to compare against.
2840:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2841:/usr/include/c++/10/bits/basic_string.h ****        *
2842:/usr/include/c++/10/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
2843:/usr/include/c++/10/bits/basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
2844:/usr/include/c++/10/bits/basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
2845:/usr/include/c++/10/bits/basic_string.h ****        *  length rlen of the strings to compare as the smallest of
2846:/usr/include/c++/10/bits/basic_string.h ****        *  size() and str.size().  The function then compares the two
2847:/usr/include/c++/10/bits/basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
2848:/usr/include/c++/10/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2849:/usr/include/c++/10/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
2850:/usr/include/c++/10/bits/basic_string.h ****       */
2851:/usr/include/c++/10/bits/basic_string.h ****       int
2852:/usr/include/c++/10/bits/basic_string.h ****       compare(const basic_string& __str) const
2853:/usr/include/c++/10/bits/basic_string.h ****       {
2854:/usr/include/c++/10/bits/basic_string.h **** 	const size_type __size = this->size();
2855:/usr/include/c++/10/bits/basic_string.h **** 	const size_type __osize = __str.size();
2856:/usr/include/c++/10/bits/basic_string.h **** 	const size_type __len = std::min(__size, __osize);
2857:/usr/include/c++/10/bits/basic_string.h **** 
2858:/usr/include/c++/10/bits/basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
2859:/usr/include/c++/10/bits/basic_string.h **** 	if (!__r)
2860:/usr/include/c++/10/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
2861:/usr/include/c++/10/bits/basic_string.h **** 	return __r;
2862:/usr/include/c++/10/bits/basic_string.h ****       }
2863:/usr/include/c++/10/bits/basic_string.h **** 
2864:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201703L
2865:/usr/include/c++/10/bits/basic_string.h ****       /**
2866:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Compare to a string_view.
2867:/usr/include/c++/10/bits/basic_string.h ****        *  @param __svt An object convertible to string_view to compare against.
2868:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2869:/usr/include/c++/10/bits/basic_string.h ****        */
2870:/usr/include/c++/10/bits/basic_string.h ****       template<typename _Tp>
2871:/usr/include/c++/10/bits/basic_string.h **** 	_If_sv<_Tp, int>
2872:/usr/include/c++/10/bits/basic_string.h **** 	compare(const _Tp& __svt) const
2873:/usr/include/c++/10/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2874:/usr/include/c++/10/bits/basic_string.h **** 	{
2875:/usr/include/c++/10/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2876:/usr/include/c++/10/bits/basic_string.h **** 	  const size_type __size = this->size();
2877:/usr/include/c++/10/bits/basic_string.h **** 	  const size_type __osize = __sv.size();
2878:/usr/include/c++/10/bits/basic_string.h **** 	  const size_type __len = std::min(__size, __osize);
AARCH64 GAS  obj/extInstr.s 			page 138


2879:/usr/include/c++/10/bits/basic_string.h **** 
2880:/usr/include/c++/10/bits/basic_string.h **** 	  int __r = traits_type::compare(_M_data(), __sv.data(), __len);
2881:/usr/include/c++/10/bits/basic_string.h **** 	  if (!__r)
2882:/usr/include/c++/10/bits/basic_string.h **** 	    __r = _S_compare(__size, __osize);
2883:/usr/include/c++/10/bits/basic_string.h **** 	  return __r;
2884:/usr/include/c++/10/bits/basic_string.h **** 	}
2885:/usr/include/c++/10/bits/basic_string.h **** 
2886:/usr/include/c++/10/bits/basic_string.h ****       /**
2887:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Compare to a string_view.
2888:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  A position in the string to start comparing from.
2889:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  The number of characters to compare.
2890:/usr/include/c++/10/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
2891:/usr/include/c++/10/bits/basic_string.h ****        *                against.
2892:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2893:/usr/include/c++/10/bits/basic_string.h ****        */
2894:/usr/include/c++/10/bits/basic_string.h ****       template<typename _Tp>
2895:/usr/include/c++/10/bits/basic_string.h **** 	_If_sv<_Tp, int>
2896:/usr/include/c++/10/bits/basic_string.h **** 	compare(size_type __pos, size_type __n, const _Tp& __svt) const
2897:/usr/include/c++/10/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2898:/usr/include/c++/10/bits/basic_string.h **** 	{
2899:/usr/include/c++/10/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2900:/usr/include/c++/10/bits/basic_string.h **** 	  return __sv_type(*this).substr(__pos, __n).compare(__sv);
2901:/usr/include/c++/10/bits/basic_string.h **** 	}
2902:/usr/include/c++/10/bits/basic_string.h **** 
2903:/usr/include/c++/10/bits/basic_string.h ****       /**
2904:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Compare to a string_view.
2905:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos1  A position in the string to start comparing from.
2906:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n1  The number of characters to compare.
2907:/usr/include/c++/10/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
2908:/usr/include/c++/10/bits/basic_string.h ****        *                against.
2909:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos2  A position in the string_view to start comparing from.
2910:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n2  The number of characters to compare.
2911:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2912:/usr/include/c++/10/bits/basic_string.h ****        */
2913:/usr/include/c++/10/bits/basic_string.h ****       template<typename _Tp>
2914:/usr/include/c++/10/bits/basic_string.h **** 	_If_sv<_Tp, int>
2915:/usr/include/c++/10/bits/basic_string.h **** 	compare(size_type __pos1, size_type __n1, const _Tp& __svt,
2916:/usr/include/c++/10/bits/basic_string.h **** 		size_type __pos2, size_type __n2 = npos) const
2917:/usr/include/c++/10/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2918:/usr/include/c++/10/bits/basic_string.h **** 	{
2919:/usr/include/c++/10/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2920:/usr/include/c++/10/bits/basic_string.h **** 	  return __sv_type(*this)
2921:/usr/include/c++/10/bits/basic_string.h **** 	    .substr(__pos1, __n1).compare(__sv.substr(__pos2, __n2));
2922:/usr/include/c++/10/bits/basic_string.h **** 	}
2923:/usr/include/c++/10/bits/basic_string.h **** #endif // C++17
2924:/usr/include/c++/10/bits/basic_string.h **** 
2925:/usr/include/c++/10/bits/basic_string.h ****       /**
2926:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Compare substring to a string.
2927:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
2928:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  Number of characters in substring.
2929:/usr/include/c++/10/bits/basic_string.h ****        *  @param __str  String to compare against.
2930:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2931:/usr/include/c++/10/bits/basic_string.h ****        *
2932:/usr/include/c++/10/bits/basic_string.h ****        *  Form the substring of this string from the @a __n characters
2933:/usr/include/c++/10/bits/basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
2934:/usr/include/c++/10/bits/basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
2935:/usr/include/c++/10/bits/basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
AARCH64 GAS  obj/extInstr.s 			page 139


2936:/usr/include/c++/10/bits/basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
2937:/usr/include/c++/10/bits/basic_string.h ****        *  to compare as the smallest of the length of the substring
2938:/usr/include/c++/10/bits/basic_string.h ****        *  and @a __str.size().  The function then compares the two
2939:/usr/include/c++/10/bits/basic_string.h ****        *  strings by calling
2940:/usr/include/c++/10/bits/basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
2941:/usr/include/c++/10/bits/basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
2942:/usr/include/c++/10/bits/basic_string.h ****        *  the shorter one is ordered first.
2943:/usr/include/c++/10/bits/basic_string.h ****       */
2944:/usr/include/c++/10/bits/basic_string.h ****       int
2945:/usr/include/c++/10/bits/basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
2946:/usr/include/c++/10/bits/basic_string.h **** 
2947:/usr/include/c++/10/bits/basic_string.h ****       /**
2948:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Compare substring to a substring.
2949:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos1  Index of first character of substring.
2950:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
2951:/usr/include/c++/10/bits/basic_string.h ****        *  @param __str  String to compare against.
2952:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
2953:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n2  Number of characters in substring of str.
2954:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2955:/usr/include/c++/10/bits/basic_string.h ****        *
2956:/usr/include/c++/10/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
2957:/usr/include/c++/10/bits/basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
2958:/usr/include/c++/10/bits/basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
2959:/usr/include/c++/10/bits/basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
2960:/usr/include/c++/10/bits/basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
2961:/usr/include/c++/10/bits/basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
2962:/usr/include/c++/10/bits/basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
2963:/usr/include/c++/10/bits/basic_string.h ****        *  strings to compare as the smallest of the lengths of the
2964:/usr/include/c++/10/bits/basic_string.h ****        *  substrings.  The function then compares the two strings by
2965:/usr/include/c++/10/bits/basic_string.h ****        *  calling
2966:/usr/include/c++/10/bits/basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
2967:/usr/include/c++/10/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2968:/usr/include/c++/10/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
2969:/usr/include/c++/10/bits/basic_string.h ****       */
2970:/usr/include/c++/10/bits/basic_string.h ****       int
2971:/usr/include/c++/10/bits/basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
2972:/usr/include/c++/10/bits/basic_string.h **** 	      size_type __pos2, size_type __n2 = npos) const;
2973:/usr/include/c++/10/bits/basic_string.h **** 
2974:/usr/include/c++/10/bits/basic_string.h ****       /**
2975:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Compare to a C string.
2976:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  C string to compare against.
2977:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2978:/usr/include/c++/10/bits/basic_string.h ****        *
2979:/usr/include/c++/10/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
2980:/usr/include/c++/10/bits/basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
2981:/usr/include/c++/10/bits/basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
2982:/usr/include/c++/10/bits/basic_string.h ****        *  compare as the smallest of size() and the length of a string
2983:/usr/include/c++/10/bits/basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
2984:/usr/include/c++/10/bits/basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
2985:/usr/include/c++/10/bits/basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
2986:/usr/include/c++/10/bits/basic_string.h ****        *  ordered first.
2987:/usr/include/c++/10/bits/basic_string.h ****       */
2988:/usr/include/c++/10/bits/basic_string.h ****       int
2989:/usr/include/c++/10/bits/basic_string.h ****       compare(const _CharT* __s) const _GLIBCXX_NOEXCEPT;
2990:/usr/include/c++/10/bits/basic_string.h **** 
2991:/usr/include/c++/10/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
2992:/usr/include/c++/10/bits/basic_string.h ****       // 5 String::compare specification questionable
AARCH64 GAS  obj/extInstr.s 			page 140


2993:/usr/include/c++/10/bits/basic_string.h ****       /**
2994:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Compare substring to a C string.
2995:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
2996:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
2997:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  C string to compare against.
2998:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2999:/usr/include/c++/10/bits/basic_string.h ****        *
3000:/usr/include/c++/10/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
3001:/usr/include/c++/10/bits/basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
3002:/usr/include/c++/10/bits/basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
3003:/usr/include/c++/10/bits/basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
3004:/usr/include/c++/10/bits/basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
3005:/usr/include/c++/10/bits/basic_string.h ****        *  compare as the smallest of the length of the substring and
3006:/usr/include/c++/10/bits/basic_string.h ****        *  the length of a string constructed from @a __s.  The
3007:/usr/include/c++/10/bits/basic_string.h ****        *  function then compares the two string by calling
3008:/usr/include/c++/10/bits/basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
3009:/usr/include/c++/10/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
3010:/usr/include/c++/10/bits/basic_string.h ****        *  one is ordered first.
3011:/usr/include/c++/10/bits/basic_string.h ****       */
3012:/usr/include/c++/10/bits/basic_string.h ****       int
3013:/usr/include/c++/10/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
3014:/usr/include/c++/10/bits/basic_string.h **** 
3015:/usr/include/c++/10/bits/basic_string.h ****       /**
3016:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Compare substring against a character %array.
3017:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
3018:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
3019:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  character %array to compare against.
3020:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n2  Number of characters of s.
3021:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
3022:/usr/include/c++/10/bits/basic_string.h ****        *
3023:/usr/include/c++/10/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
3024:/usr/include/c++/10/bits/basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
3025:/usr/include/c++/10/bits/basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
3026:/usr/include/c++/10/bits/basic_string.h ****        *  if this substring is ordered before the string from @a __s,
3027:/usr/include/c++/10/bits/basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
3028:/usr/include/c++/10/bits/basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
3029:/usr/include/c++/10/bits/basic_string.h ****        *  effective length rlen of the strings to compare as the
3030:/usr/include/c++/10/bits/basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
3031:/usr/include/c++/10/bits/basic_string.h ****        *  function then compares the two strings by calling
3032:/usr/include/c++/10/bits/basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
3033:/usr/include/c++/10/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
3034:/usr/include/c++/10/bits/basic_string.h ****        *  one is ordered first.
3035:/usr/include/c++/10/bits/basic_string.h ****        *
3036:/usr/include/c++/10/bits/basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
3037:/usr/include/c++/10/bits/basic_string.h ****        *  no special meaning.
3038:/usr/include/c++/10/bits/basic_string.h ****       */
3039:/usr/include/c++/10/bits/basic_string.h ****       int
3040:/usr/include/c++/10/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
3041:/usr/include/c++/10/bits/basic_string.h **** 	      size_type __n2) const;
3042:/usr/include/c++/10/bits/basic_string.h **** 
3043:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus > 201703L
3044:/usr/include/c++/10/bits/basic_string.h ****       bool
3045:/usr/include/c++/10/bits/basic_string.h ****       starts_with(basic_string_view<_CharT, _Traits> __x) const noexcept
3046:/usr/include/c++/10/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3047:/usr/include/c++/10/bits/basic_string.h **** 
3048:/usr/include/c++/10/bits/basic_string.h ****       bool
3049:/usr/include/c++/10/bits/basic_string.h ****       starts_with(_CharT __x) const noexcept
AARCH64 GAS  obj/extInstr.s 			page 141


3050:/usr/include/c++/10/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3051:/usr/include/c++/10/bits/basic_string.h **** 
3052:/usr/include/c++/10/bits/basic_string.h ****       bool
3053:/usr/include/c++/10/bits/basic_string.h ****       starts_with(const _CharT* __x) const noexcept
3054:/usr/include/c++/10/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3055:/usr/include/c++/10/bits/basic_string.h **** 
3056:/usr/include/c++/10/bits/basic_string.h ****       bool
3057:/usr/include/c++/10/bits/basic_string.h ****       ends_with(basic_string_view<_CharT, _Traits> __x) const noexcept
3058:/usr/include/c++/10/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3059:/usr/include/c++/10/bits/basic_string.h **** 
3060:/usr/include/c++/10/bits/basic_string.h ****       bool
3061:/usr/include/c++/10/bits/basic_string.h ****       ends_with(_CharT __x) const noexcept
3062:/usr/include/c++/10/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3063:/usr/include/c++/10/bits/basic_string.h **** 
3064:/usr/include/c++/10/bits/basic_string.h ****       bool
3065:/usr/include/c++/10/bits/basic_string.h ****       ends_with(const _CharT* __x) const noexcept
3066:/usr/include/c++/10/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3067:/usr/include/c++/10/bits/basic_string.h **** #endif // C++20
3068:/usr/include/c++/10/bits/basic_string.h **** 
3069:/usr/include/c++/10/bits/basic_string.h ****       // Allow basic_stringbuf::__xfer_bufptrs to call _M_length:
3070:/usr/include/c++/10/bits/basic_string.h ****       template<typename, typename, typename> friend class basic_stringbuf;
3071:/usr/include/c++/10/bits/basic_string.h ****     };
3072:/usr/include/c++/10/bits/basic_string.h **** _GLIBCXX_END_NAMESPACE_CXX11
3073:/usr/include/c++/10/bits/basic_string.h **** #else  // !_GLIBCXX_USE_CXX11_ABI
3074:/usr/include/c++/10/bits/basic_string.h ****   // Reference-counted COW string implentation
3075:/usr/include/c++/10/bits/basic_string.h **** 
3076:/usr/include/c++/10/bits/basic_string.h ****   /**
3077:/usr/include/c++/10/bits/basic_string.h ****    *  @class basic_string basic_string.h <string>
3078:/usr/include/c++/10/bits/basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
3079:/usr/include/c++/10/bits/basic_string.h ****    *
3080:/usr/include/c++/10/bits/basic_string.h ****    *  @ingroup strings
3081:/usr/include/c++/10/bits/basic_string.h ****    *  @ingroup sequences
3082:/usr/include/c++/10/bits/basic_string.h ****    *
3083:/usr/include/c++/10/bits/basic_string.h ****    *  @tparam _CharT  Type of character
3084:/usr/include/c++/10/bits/basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
3085:/usr/include/c++/10/bits/basic_string.h ****    *                   char_traits<_CharT>.
3086:/usr/include/c++/10/bits/basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
3087:/usr/include/c++/10/bits/basic_string.h ****    *
3088:/usr/include/c++/10/bits/basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
3089:/usr/include/c++/10/bits/basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
3090:/usr/include/c++/10/bits/basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
3091:/usr/include/c++/10/bits/basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
3092:/usr/include/c++/10/bits/basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
3093:/usr/include/c++/10/bits/basic_string.h ****    *
3094:/usr/include/c++/10/bits/basic_string.h ****    *  @doctodo
3095:/usr/include/c++/10/bits/basic_string.h ****    *
3096:/usr/include/c++/10/bits/basic_string.h ****    *
3097:/usr/include/c++/10/bits/basic_string.h ****    *  Documentation?  What's that?
3098:/usr/include/c++/10/bits/basic_string.h ****    *  Nathan Myers <ncm@cantrip.org>.
3099:/usr/include/c++/10/bits/basic_string.h ****    *
3100:/usr/include/c++/10/bits/basic_string.h ****    *  A string looks like this:
3101:/usr/include/c++/10/bits/basic_string.h ****    *
3102:/usr/include/c++/10/bits/basic_string.h ****    *  @code
3103:/usr/include/c++/10/bits/basic_string.h ****    *                                        [_Rep]
3104:/usr/include/c++/10/bits/basic_string.h ****    *                                        _M_length
3105:/usr/include/c++/10/bits/basic_string.h ****    *   [basic_string<char_type>]            _M_capacity
3106:/usr/include/c++/10/bits/basic_string.h ****    *   _M_dataplus                          _M_refcount
AARCH64 GAS  obj/extInstr.s 			page 142


3107:/usr/include/c++/10/bits/basic_string.h ****    *   _M_p ---------------->               unnamed array of char_type
3108:/usr/include/c++/10/bits/basic_string.h ****    *  @endcode
3109:/usr/include/c++/10/bits/basic_string.h ****    *
3110:/usr/include/c++/10/bits/basic_string.h ****    *  Where the _M_p points to the first character in the string, and
3111:/usr/include/c++/10/bits/basic_string.h ****    *  you cast it to a pointer-to-_Rep and subtract 1 to get a
3112:/usr/include/c++/10/bits/basic_string.h ****    *  pointer to the header.
3113:/usr/include/c++/10/bits/basic_string.h ****    *
3114:/usr/include/c++/10/bits/basic_string.h ****    *  This approach has the enormous advantage that a string object
3115:/usr/include/c++/10/bits/basic_string.h ****    *  requires only one allocation.  All the ugliness is confined
3116:/usr/include/c++/10/bits/basic_string.h ****    *  within a single %pair of inline functions, which each compile to
3117:/usr/include/c++/10/bits/basic_string.h ****    *  a single @a add instruction: _Rep::_M_data(), and
3118:/usr/include/c++/10/bits/basic_string.h ****    *  string::_M_rep(); and the allocation function which gets a
3119:/usr/include/c++/10/bits/basic_string.h ****    *  block of raw bytes and with room enough and constructs a _Rep
3120:/usr/include/c++/10/bits/basic_string.h ****    *  object at the front.
3121:/usr/include/c++/10/bits/basic_string.h ****    *
3122:/usr/include/c++/10/bits/basic_string.h ****    *  The reason you want _M_data pointing to the character %array and
3123:/usr/include/c++/10/bits/basic_string.h ****    *  not the _Rep is so that the debugger can see the string
3124:/usr/include/c++/10/bits/basic_string.h ****    *  contents. (Probably we should add a non-inline member to get
3125:/usr/include/c++/10/bits/basic_string.h ****    *  the _Rep for the debugger to use, so users can check the actual
3126:/usr/include/c++/10/bits/basic_string.h ****    *  string length.)
3127:/usr/include/c++/10/bits/basic_string.h ****    *
3128:/usr/include/c++/10/bits/basic_string.h ****    *  Note that the _Rep object is a POD so that you can have a
3129:/usr/include/c++/10/bits/basic_string.h ****    *  static <em>empty string</em> _Rep object already @a constructed before
3130:/usr/include/c++/10/bits/basic_string.h ****    *  static constructors have run.  The reference-count encoding is
3131:/usr/include/c++/10/bits/basic_string.h ****    *  chosen so that a 0 indicates one reference, so you never try to
3132:/usr/include/c++/10/bits/basic_string.h ****    *  destroy the empty-string _Rep object.
3133:/usr/include/c++/10/bits/basic_string.h ****    *
3134:/usr/include/c++/10/bits/basic_string.h ****    *  All but the last paragraph is considered pretty conventional
3135:/usr/include/c++/10/bits/basic_string.h ****    *  for a C++ string implementation.
3136:/usr/include/c++/10/bits/basic_string.h ****   */
3137:/usr/include/c++/10/bits/basic_string.h ****   // 21.3  Template class basic_string
3138:/usr/include/c++/10/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
3139:/usr/include/c++/10/bits/basic_string.h ****     class basic_string
3140:/usr/include/c++/10/bits/basic_string.h ****     {
3141:/usr/include/c++/10/bits/basic_string.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
3142:/usr/include/c++/10/bits/basic_string.h **** 	rebind<_CharT>::other _CharT_alloc_type;
3143:/usr/include/c++/10/bits/basic_string.h ****       typedef __gnu_cxx::__alloc_traits<_CharT_alloc_type> _CharT_alloc_traits;
3144:/usr/include/c++/10/bits/basic_string.h **** 
3145:/usr/include/c++/10/bits/basic_string.h ****       // Types:
3146:/usr/include/c++/10/bits/basic_string.h ****     public:
3147:/usr/include/c++/10/bits/basic_string.h ****       typedef _Traits					    traits_type;
3148:/usr/include/c++/10/bits/basic_string.h ****       typedef typename _Traits::char_type		    value_type;
3149:/usr/include/c++/10/bits/basic_string.h ****       typedef _Alloc					    allocator_type;
3150:/usr/include/c++/10/bits/basic_string.h ****       typedef typename _CharT_alloc_type::size_type	    size_type;
3151:/usr/include/c++/10/bits/basic_string.h ****       typedef typename _CharT_alloc_type::difference_type   difference_type;
3152:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus < 201103L
3153:/usr/include/c++/10/bits/basic_string.h ****       typedef typename _CharT_alloc_type::reference	    reference;
3154:/usr/include/c++/10/bits/basic_string.h ****       typedef typename _CharT_alloc_type::const_reference   const_reference;
3155:/usr/include/c++/10/bits/basic_string.h **** #else
3156:/usr/include/c++/10/bits/basic_string.h ****       typedef value_type&				    reference;
3157:/usr/include/c++/10/bits/basic_string.h ****       typedef const value_type&				    const_reference;
3158:/usr/include/c++/10/bits/basic_string.h **** #endif
3159:/usr/include/c++/10/bits/basic_string.h ****       typedef typename _CharT_alloc_traits::pointer	    pointer;
3160:/usr/include/c++/10/bits/basic_string.h ****       typedef typename _CharT_alloc_traits::const_pointer   const_pointer;
3161:/usr/include/c++/10/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
3162:/usr/include/c++/10/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
3163:/usr/include/c++/10/bits/basic_string.h ****                                                             const_iterator;
AARCH64 GAS  obj/extInstr.s 			page 143


3164:/usr/include/c++/10/bits/basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
3165:/usr/include/c++/10/bits/basic_string.h ****       typedef std::reverse_iterator<iterator>		    reverse_iterator;
3166:/usr/include/c++/10/bits/basic_string.h **** 
3167:/usr/include/c++/10/bits/basic_string.h ****     protected:
3168:/usr/include/c++/10/bits/basic_string.h ****       // type used for positions in insert, erase etc.
3169:/usr/include/c++/10/bits/basic_string.h ****       typedef iterator __const_iterator;
3170:/usr/include/c++/10/bits/basic_string.h **** 
3171:/usr/include/c++/10/bits/basic_string.h ****     private:
3172:/usr/include/c++/10/bits/basic_string.h ****       // _Rep: string representation
3173:/usr/include/c++/10/bits/basic_string.h ****       //   Invariants:
3174:/usr/include/c++/10/bits/basic_string.h ****       //   1. String really contains _M_length + 1 characters: due to 21.3.4
3175:/usr/include/c++/10/bits/basic_string.h ****       //      must be kept null-terminated.
3176:/usr/include/c++/10/bits/basic_string.h ****       //   2. _M_capacity >= _M_length
3177:/usr/include/c++/10/bits/basic_string.h ****       //      Allocated memory is always (_M_capacity + 1) * sizeof(_CharT).
3178:/usr/include/c++/10/bits/basic_string.h ****       //   3. _M_refcount has three states:
3179:/usr/include/c++/10/bits/basic_string.h ****       //      -1: leaked, one reference, no ref-copies allowed, non-const.
3180:/usr/include/c++/10/bits/basic_string.h ****       //       0: one reference, non-const.
3181:/usr/include/c++/10/bits/basic_string.h ****       //     n>0: n + 1 references, operations require a lock, const.
3182:/usr/include/c++/10/bits/basic_string.h ****       //   4. All fields==0 is an empty string, given the extra storage
3183:/usr/include/c++/10/bits/basic_string.h ****       //      beyond-the-end for a null terminator; thus, the shared
3184:/usr/include/c++/10/bits/basic_string.h ****       //      empty string representation needs no constructor.
3185:/usr/include/c++/10/bits/basic_string.h **** 
3186:/usr/include/c++/10/bits/basic_string.h ****       struct _Rep_base
3187:/usr/include/c++/10/bits/basic_string.h ****       {
3188:/usr/include/c++/10/bits/basic_string.h **** 	size_type		_M_length;
3189:/usr/include/c++/10/bits/basic_string.h **** 	size_type		_M_capacity;
3190:/usr/include/c++/10/bits/basic_string.h **** 	_Atomic_word		_M_refcount;
3191:/usr/include/c++/10/bits/basic_string.h ****       };
3192:/usr/include/c++/10/bits/basic_string.h **** 
3193:/usr/include/c++/10/bits/basic_string.h ****       struct _Rep : _Rep_base
3194:/usr/include/c++/10/bits/basic_string.h ****       {
3195:/usr/include/c++/10/bits/basic_string.h **** 	// Types:
3196:/usr/include/c++/10/bits/basic_string.h **** 	typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
3197:/usr/include/c++/10/bits/basic_string.h **** 	  rebind<char>::other _Raw_bytes_alloc;
3198:/usr/include/c++/10/bits/basic_string.h **** 
3199:/usr/include/c++/10/bits/basic_string.h **** 	// (Public) Data members:
3200:/usr/include/c++/10/bits/basic_string.h **** 
3201:/usr/include/c++/10/bits/basic_string.h **** 	// The maximum number of individual char_type elements of an
3202:/usr/include/c++/10/bits/basic_string.h **** 	// individual string is determined by _S_max_size. This is the
3203:/usr/include/c++/10/bits/basic_string.h **** 	// value that will be returned by max_size().  (Whereas npos
3204:/usr/include/c++/10/bits/basic_string.h **** 	// is the maximum number of bytes the allocator can allocate.)
3205:/usr/include/c++/10/bits/basic_string.h **** 	// If one was to divvy up the theoretical largest size string,
3206:/usr/include/c++/10/bits/basic_string.h **** 	// with a terminating character and m _CharT elements, it'd
3207:/usr/include/c++/10/bits/basic_string.h **** 	// look like this:
3208:/usr/include/c++/10/bits/basic_string.h **** 	// npos = sizeof(_Rep) + (m * sizeof(_CharT)) + sizeof(_CharT)
3209:/usr/include/c++/10/bits/basic_string.h **** 	// Solving for m:
3210:/usr/include/c++/10/bits/basic_string.h **** 	// m = ((npos - sizeof(_Rep))/sizeof(CharT)) - 1
3211:/usr/include/c++/10/bits/basic_string.h **** 	// In addition, this implementation quarters this amount.
3212:/usr/include/c++/10/bits/basic_string.h **** 	static const size_type	_S_max_size;
3213:/usr/include/c++/10/bits/basic_string.h **** 	static const _CharT	_S_terminal;
3214:/usr/include/c++/10/bits/basic_string.h **** 
3215:/usr/include/c++/10/bits/basic_string.h **** 	// The following storage is init'd to 0 by the linker, resulting
3216:/usr/include/c++/10/bits/basic_string.h ****         // (carefully) in an empty string with one reference.
3217:/usr/include/c++/10/bits/basic_string.h ****         static size_type _S_empty_rep_storage[];
3218:/usr/include/c++/10/bits/basic_string.h **** 
3219:/usr/include/c++/10/bits/basic_string.h ****         static _Rep&
3220:/usr/include/c++/10/bits/basic_string.h ****         _S_empty_rep() _GLIBCXX_NOEXCEPT
AARCH64 GAS  obj/extInstr.s 			page 144


3221:/usr/include/c++/10/bits/basic_string.h ****         { 
3222:/usr/include/c++/10/bits/basic_string.h **** 	  // NB: Mild hack to avoid strict-aliasing warnings.  Note that
3223:/usr/include/c++/10/bits/basic_string.h **** 	  // _S_empty_rep_storage is never modified and the punning should
3224:/usr/include/c++/10/bits/basic_string.h **** 	  // be reasonably safe in this case.
3225:/usr/include/c++/10/bits/basic_string.h **** 	  void* __p = reinterpret_cast<void*>(&_S_empty_rep_storage);
3226:/usr/include/c++/10/bits/basic_string.h **** 	  return *reinterpret_cast<_Rep*>(__p);
3227:/usr/include/c++/10/bits/basic_string.h **** 	}
3228:/usr/include/c++/10/bits/basic_string.h **** 
3229:/usr/include/c++/10/bits/basic_string.h ****         bool
3230:/usr/include/c++/10/bits/basic_string.h **** 	_M_is_leaked() const _GLIBCXX_NOEXCEPT
3231:/usr/include/c++/10/bits/basic_string.h ****         {
3232:/usr/include/c++/10/bits/basic_string.h **** #if defined(__GTHREADS)
3233:/usr/include/c++/10/bits/basic_string.h ****           // _M_refcount is mutated concurrently by _M_refcopy/_M_dispose,
3234:/usr/include/c++/10/bits/basic_string.h ****           // so we need to use an atomic load. However, _M_is_leaked
3235:/usr/include/c++/10/bits/basic_string.h ****           // predicate does not change concurrently (i.e. the string is either
3236:/usr/include/c++/10/bits/basic_string.h ****           // leaked or not), so a relaxed load is enough.
3237:/usr/include/c++/10/bits/basic_string.h ****           return __atomic_load_n(&this->_M_refcount, __ATOMIC_RELAXED) < 0;
3238:/usr/include/c++/10/bits/basic_string.h **** #else
3239:/usr/include/c++/10/bits/basic_string.h ****           return this->_M_refcount < 0;
3240:/usr/include/c++/10/bits/basic_string.h **** #endif
3241:/usr/include/c++/10/bits/basic_string.h ****         }
3242:/usr/include/c++/10/bits/basic_string.h **** 
3243:/usr/include/c++/10/bits/basic_string.h ****         bool
3244:/usr/include/c++/10/bits/basic_string.h **** 	_M_is_shared() const _GLIBCXX_NOEXCEPT
3245:/usr/include/c++/10/bits/basic_string.h **** 	{
3246:/usr/include/c++/10/bits/basic_string.h **** #if defined(__GTHREADS)
3247:/usr/include/c++/10/bits/basic_string.h ****           // _M_refcount is mutated concurrently by _M_refcopy/_M_dispose,
3248:/usr/include/c++/10/bits/basic_string.h ****           // so we need to use an atomic load. Another thread can drop last
3249:/usr/include/c++/10/bits/basic_string.h ****           // but one reference concurrently with this check, so we need this
3250:/usr/include/c++/10/bits/basic_string.h ****           // load to be acquire to synchronize with release fetch_and_add in
3251:/usr/include/c++/10/bits/basic_string.h ****           // _M_dispose.
3252:/usr/include/c++/10/bits/basic_string.h ****           return __atomic_load_n(&this->_M_refcount, __ATOMIC_ACQUIRE) > 0;
3253:/usr/include/c++/10/bits/basic_string.h **** #else
3254:/usr/include/c++/10/bits/basic_string.h ****           return this->_M_refcount > 0;
3255:/usr/include/c++/10/bits/basic_string.h **** #endif
3256:/usr/include/c++/10/bits/basic_string.h ****         }
3257:/usr/include/c++/10/bits/basic_string.h **** 
3258:/usr/include/c++/10/bits/basic_string.h ****         void
3259:/usr/include/c++/10/bits/basic_string.h **** 	_M_set_leaked() _GLIBCXX_NOEXCEPT
3260:/usr/include/c++/10/bits/basic_string.h ****         { this->_M_refcount = -1; }
3261:/usr/include/c++/10/bits/basic_string.h **** 
3262:/usr/include/c++/10/bits/basic_string.h ****         void
3263:/usr/include/c++/10/bits/basic_string.h **** 	_M_set_sharable() _GLIBCXX_NOEXCEPT
3264:/usr/include/c++/10/bits/basic_string.h ****         { this->_M_refcount = 0; }
3265:/usr/include/c++/10/bits/basic_string.h **** 
3266:/usr/include/c++/10/bits/basic_string.h **** 	void
3267:/usr/include/c++/10/bits/basic_string.h **** 	_M_set_length_and_sharable(size_type __n) _GLIBCXX_NOEXCEPT
3268:/usr/include/c++/10/bits/basic_string.h **** 	{
3269:/usr/include/c++/10/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3270:/usr/include/c++/10/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3271:/usr/include/c++/10/bits/basic_string.h **** #endif
3272:/usr/include/c++/10/bits/basic_string.h **** 	    {
3273:/usr/include/c++/10/bits/basic_string.h **** 	      this->_M_set_sharable();  // One reference.
3274:/usr/include/c++/10/bits/basic_string.h **** 	      this->_M_length = __n;
3275:/usr/include/c++/10/bits/basic_string.h **** 	      traits_type::assign(this->_M_refdata()[__n], _S_terminal);
3276:/usr/include/c++/10/bits/basic_string.h **** 	      // grrr. (per 21.3.4)
3277:/usr/include/c++/10/bits/basic_string.h **** 	      // You cannot leave those LWG people alone for a second.
AARCH64 GAS  obj/extInstr.s 			page 145


3278:/usr/include/c++/10/bits/basic_string.h **** 	    }
3279:/usr/include/c++/10/bits/basic_string.h **** 	}
3280:/usr/include/c++/10/bits/basic_string.h **** 
3281:/usr/include/c++/10/bits/basic_string.h **** 	_CharT*
3282:/usr/include/c++/10/bits/basic_string.h **** 	_M_refdata() throw()
3283:/usr/include/c++/10/bits/basic_string.h **** 	{ return reinterpret_cast<_CharT*>(this + 1); }
3284:/usr/include/c++/10/bits/basic_string.h **** 
3285:/usr/include/c++/10/bits/basic_string.h **** 	_CharT*
3286:/usr/include/c++/10/bits/basic_string.h **** 	_M_grab(const _Alloc& __alloc1, const _Alloc& __alloc2)
3287:/usr/include/c++/10/bits/basic_string.h **** 	{
3288:/usr/include/c++/10/bits/basic_string.h **** 	  return (!_M_is_leaked() && __alloc1 == __alloc2)
3289:/usr/include/c++/10/bits/basic_string.h **** 	          ? _M_refcopy() : _M_clone(__alloc1);
3290:/usr/include/c++/10/bits/basic_string.h **** 	}
3291:/usr/include/c++/10/bits/basic_string.h **** 
3292:/usr/include/c++/10/bits/basic_string.h **** 	// Create & Destroy
3293:/usr/include/c++/10/bits/basic_string.h **** 	static _Rep*
3294:/usr/include/c++/10/bits/basic_string.h **** 	_S_create(size_type, size_type, const _Alloc&);
3295:/usr/include/c++/10/bits/basic_string.h **** 
3296:/usr/include/c++/10/bits/basic_string.h **** 	void
3297:/usr/include/c++/10/bits/basic_string.h **** 	_M_dispose(const _Alloc& __a) _GLIBCXX_NOEXCEPT
3298:/usr/include/c++/10/bits/basic_string.h **** 	{
3299:/usr/include/c++/10/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3300:/usr/include/c++/10/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3301:/usr/include/c++/10/bits/basic_string.h **** #endif
3302:/usr/include/c++/10/bits/basic_string.h **** 	    {
3303:/usr/include/c++/10/bits/basic_string.h **** 	      // Be race-detector-friendly.  For more info see bits/c++config.
3304:/usr/include/c++/10/bits/basic_string.h **** 	      _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&this->_M_refcount);
3305:/usr/include/c++/10/bits/basic_string.h ****               // Decrement of _M_refcount is acq_rel, because:
3306:/usr/include/c++/10/bits/basic_string.h ****               // - all but last decrements need to release to synchronize with
3307:/usr/include/c++/10/bits/basic_string.h ****               //   the last decrement that will delete the object.
3308:/usr/include/c++/10/bits/basic_string.h ****               // - the last decrement needs to acquire to synchronize with
3309:/usr/include/c++/10/bits/basic_string.h ****               //   all the previous decrements.
3310:/usr/include/c++/10/bits/basic_string.h ****               // - last but one decrement needs to release to synchronize with
3311:/usr/include/c++/10/bits/basic_string.h ****               //   the acquire load in _M_is_shared that will conclude that
3312:/usr/include/c++/10/bits/basic_string.h ****               //   the object is not shared anymore.
3313:/usr/include/c++/10/bits/basic_string.h **** 	      if (__gnu_cxx::__exchange_and_add_dispatch(&this->_M_refcount,
3314:/usr/include/c++/10/bits/basic_string.h **** 							 -1) <= 0)
3315:/usr/include/c++/10/bits/basic_string.h **** 		{
3316:/usr/include/c++/10/bits/basic_string.h **** 		  _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&this->_M_refcount);
3317:/usr/include/c++/10/bits/basic_string.h **** 		  _M_destroy(__a);
3318:/usr/include/c++/10/bits/basic_string.h **** 		}
3319:/usr/include/c++/10/bits/basic_string.h **** 	    }
3320:/usr/include/c++/10/bits/basic_string.h **** 	}  // XXX MT
3321:/usr/include/c++/10/bits/basic_string.h **** 
3322:/usr/include/c++/10/bits/basic_string.h **** 	void
3323:/usr/include/c++/10/bits/basic_string.h **** 	_M_destroy(const _Alloc&) throw();
3324:/usr/include/c++/10/bits/basic_string.h **** 
3325:/usr/include/c++/10/bits/basic_string.h **** 	_CharT*
3326:/usr/include/c++/10/bits/basic_string.h **** 	_M_refcopy() throw()
3327:/usr/include/c++/10/bits/basic_string.h **** 	{
3328:/usr/include/c++/10/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3329:/usr/include/c++/10/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3330:/usr/include/c++/10/bits/basic_string.h **** #endif
3331:/usr/include/c++/10/bits/basic_string.h ****             __gnu_cxx::__atomic_add_dispatch(&this->_M_refcount, 1);
3332:/usr/include/c++/10/bits/basic_string.h **** 	  return _M_refdata();
3333:/usr/include/c++/10/bits/basic_string.h **** 	}  // XXX MT
3334:/usr/include/c++/10/bits/basic_string.h **** 
AARCH64 GAS  obj/extInstr.s 			page 146


3335:/usr/include/c++/10/bits/basic_string.h **** 	_CharT*
3336:/usr/include/c++/10/bits/basic_string.h **** 	_M_clone(const _Alloc&, size_type __res = 0);
3337:/usr/include/c++/10/bits/basic_string.h ****       };
3338:/usr/include/c++/10/bits/basic_string.h **** 
3339:/usr/include/c++/10/bits/basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
3340:/usr/include/c++/10/bits/basic_string.h ****       struct _Alloc_hider : _Alloc
3341:/usr/include/c++/10/bits/basic_string.h ****       {
3342:/usr/include/c++/10/bits/basic_string.h **** 	_Alloc_hider(_CharT* __dat, const _Alloc& __a) _GLIBCXX_NOEXCEPT
3343:/usr/include/c++/10/bits/basic_string.h **** 	: _Alloc(__a), _M_p(__dat) { }
3344:/usr/include/c++/10/bits/basic_string.h **** 
3345:/usr/include/c++/10/bits/basic_string.h **** 	_CharT* _M_p; // The actual data.
3346:/usr/include/c++/10/bits/basic_string.h ****       };
3347:/usr/include/c++/10/bits/basic_string.h **** 
3348:/usr/include/c++/10/bits/basic_string.h ****     public:
3349:/usr/include/c++/10/bits/basic_string.h ****       // Data Members (public):
3350:/usr/include/c++/10/bits/basic_string.h ****       // NB: This is an unsigned type, and thus represents the maximum
3351:/usr/include/c++/10/bits/basic_string.h ****       // size that the allocator can hold.
3352:/usr/include/c++/10/bits/basic_string.h ****       ///  Value returned by various member functions when they fail.
3353:/usr/include/c++/10/bits/basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
3354:/usr/include/c++/10/bits/basic_string.h **** 
3355:/usr/include/c++/10/bits/basic_string.h ****     private:
3356:/usr/include/c++/10/bits/basic_string.h ****       // Data Members (private):
3357:/usr/include/c++/10/bits/basic_string.h ****       mutable _Alloc_hider	_M_dataplus;
3358:/usr/include/c++/10/bits/basic_string.h **** 
3359:/usr/include/c++/10/bits/basic_string.h ****       _CharT*
3360:/usr/include/c++/10/bits/basic_string.h ****       _M_data() const _GLIBCXX_NOEXCEPT
3361:/usr/include/c++/10/bits/basic_string.h ****       { return  _M_dataplus._M_p; }
3362:/usr/include/c++/10/bits/basic_string.h **** 
3363:/usr/include/c++/10/bits/basic_string.h ****       _CharT*
3364:/usr/include/c++/10/bits/basic_string.h ****       _M_data(_CharT* __p) _GLIBCXX_NOEXCEPT
3365:/usr/include/c++/10/bits/basic_string.h ****       { return (_M_dataplus._M_p = __p); }
3366:/usr/include/c++/10/bits/basic_string.h **** 
3367:/usr/include/c++/10/bits/basic_string.h ****       _Rep*
3368:/usr/include/c++/10/bits/basic_string.h ****       _M_rep() const _GLIBCXX_NOEXCEPT
3369:/usr/include/c++/10/bits/basic_string.h ****       { return &((reinterpret_cast<_Rep*> (_M_data()))[-1]); }
3370:/usr/include/c++/10/bits/basic_string.h **** 
3371:/usr/include/c++/10/bits/basic_string.h ****       // For the internal use we have functions similar to `begin'/`end'
3372:/usr/include/c++/10/bits/basic_string.h ****       // but they do not call _M_leak.
3373:/usr/include/c++/10/bits/basic_string.h ****       iterator
3374:/usr/include/c++/10/bits/basic_string.h ****       _M_ibegin() const _GLIBCXX_NOEXCEPT
3375:/usr/include/c++/10/bits/basic_string.h ****       { return iterator(_M_data()); }
3376:/usr/include/c++/10/bits/basic_string.h **** 
3377:/usr/include/c++/10/bits/basic_string.h ****       iterator
3378:/usr/include/c++/10/bits/basic_string.h ****       _M_iend() const _GLIBCXX_NOEXCEPT
3379:/usr/include/c++/10/bits/basic_string.h ****       { return iterator(_M_data() + this->size()); }
3380:/usr/include/c++/10/bits/basic_string.h **** 
3381:/usr/include/c++/10/bits/basic_string.h ****       void
3382:/usr/include/c++/10/bits/basic_string.h ****       _M_leak()    // for use in begin() & non-const op[]
3383:/usr/include/c++/10/bits/basic_string.h ****       {
3384:/usr/include/c++/10/bits/basic_string.h **** 	if (!_M_rep()->_M_is_leaked())
3385:/usr/include/c++/10/bits/basic_string.h **** 	  _M_leak_hard();
3386:/usr/include/c++/10/bits/basic_string.h ****       }
3387:/usr/include/c++/10/bits/basic_string.h **** 
3388:/usr/include/c++/10/bits/basic_string.h ****       size_type
3389:/usr/include/c++/10/bits/basic_string.h ****       _M_check(size_type __pos, const char* __s) const
3390:/usr/include/c++/10/bits/basic_string.h ****       {
3391:/usr/include/c++/10/bits/basic_string.h **** 	if (__pos > this->size())
AARCH64 GAS  obj/extInstr.s 			page 147


3392:/usr/include/c++/10/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
3393:/usr/include/c++/10/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
3394:/usr/include/c++/10/bits/basic_string.h **** 				   __s, __pos, this->size());
3395:/usr/include/c++/10/bits/basic_string.h **** 	return __pos;
3396:/usr/include/c++/10/bits/basic_string.h ****       }
3397:/usr/include/c++/10/bits/basic_string.h **** 
3398:/usr/include/c++/10/bits/basic_string.h ****       void
3399:/usr/include/c++/10/bits/basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
3400:/usr/include/c++/10/bits/basic_string.h ****       {
3401:/usr/include/c++/10/bits/basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
3402:/usr/include/c++/10/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
3403:/usr/include/c++/10/bits/basic_string.h ****       }
3404:/usr/include/c++/10/bits/basic_string.h **** 
3405:/usr/include/c++/10/bits/basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
3406:/usr/include/c++/10/bits/basic_string.h ****       size_type
3407:/usr/include/c++/10/bits/basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
3408:/usr/include/c++/10/bits/basic_string.h ****       {
3409:/usr/include/c++/10/bits/basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
3410:/usr/include/c++/10/bits/basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
3411:/usr/include/c++/10/bits/basic_string.h ****       }
3412:/usr/include/c++/10/bits/basic_string.h **** 
3413:/usr/include/c++/10/bits/basic_string.h ****       // True if _Rep and source do not overlap.
3414:/usr/include/c++/10/bits/basic_string.h ****       bool
3415:/usr/include/c++/10/bits/basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
3416:/usr/include/c++/10/bits/basic_string.h ****       {
3417:/usr/include/c++/10/bits/basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
3418:/usr/include/c++/10/bits/basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
3419:/usr/include/c++/10/bits/basic_string.h ****       }
3420:/usr/include/c++/10/bits/basic_string.h **** 
3421:/usr/include/c++/10/bits/basic_string.h ****       // When __n = 1 way faster than the general multichar
3422:/usr/include/c++/10/bits/basic_string.h ****       // traits_type::copy/move/assign.
3423:/usr/include/c++/10/bits/basic_string.h ****       static void
3424:/usr/include/c++/10/bits/basic_string.h ****       _M_copy(_CharT* __d, const _CharT* __s, size_type __n) _GLIBCXX_NOEXCEPT
3425:/usr/include/c++/10/bits/basic_string.h ****       {
3426:/usr/include/c++/10/bits/basic_string.h **** 	if (__n == 1)
3427:/usr/include/c++/10/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
3428:/usr/include/c++/10/bits/basic_string.h **** 	else
3429:/usr/include/c++/10/bits/basic_string.h **** 	  traits_type::copy(__d, __s, __n);
3430:/usr/include/c++/10/bits/basic_string.h ****       }
3431:/usr/include/c++/10/bits/basic_string.h **** 
3432:/usr/include/c++/10/bits/basic_string.h ****       static void
3433:/usr/include/c++/10/bits/basic_string.h ****       _M_move(_CharT* __d, const _CharT* __s, size_type __n) _GLIBCXX_NOEXCEPT
3434:/usr/include/c++/10/bits/basic_string.h ****       {
3435:/usr/include/c++/10/bits/basic_string.h **** 	if (__n == 1)
3436:/usr/include/c++/10/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
3437:/usr/include/c++/10/bits/basic_string.h **** 	else
3438:/usr/include/c++/10/bits/basic_string.h **** 	  traits_type::move(__d, __s, __n);	  
3439:/usr/include/c++/10/bits/basic_string.h ****       }
3440:/usr/include/c++/10/bits/basic_string.h **** 
3441:/usr/include/c++/10/bits/basic_string.h ****       static void
3442:/usr/include/c++/10/bits/basic_string.h ****       _M_assign(_CharT* __d, size_type __n, _CharT __c) _GLIBCXX_NOEXCEPT
3443:/usr/include/c++/10/bits/basic_string.h ****       {
3444:/usr/include/c++/10/bits/basic_string.h **** 	if (__n == 1)
3445:/usr/include/c++/10/bits/basic_string.h **** 	  traits_type::assign(*__d, __c);
3446:/usr/include/c++/10/bits/basic_string.h **** 	else
3447:/usr/include/c++/10/bits/basic_string.h **** 	  traits_type::assign(__d, __n, __c);	  
3448:/usr/include/c++/10/bits/basic_string.h ****       }
AARCH64 GAS  obj/extInstr.s 			page 148


3449:/usr/include/c++/10/bits/basic_string.h **** 
3450:/usr/include/c++/10/bits/basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
3451:/usr/include/c++/10/bits/basic_string.h ****       // to optimize for the common case of pointers as iterators.
3452:/usr/include/c++/10/bits/basic_string.h ****       template<class _Iterator>
3453:/usr/include/c++/10/bits/basic_string.h ****         static void
3454:/usr/include/c++/10/bits/basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
3455:/usr/include/c++/10/bits/basic_string.h ****         {
3456:/usr/include/c++/10/bits/basic_string.h **** 	  for (; __k1 != __k2; ++__k1, (void)++__p)
3457:/usr/include/c++/10/bits/basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
3458:/usr/include/c++/10/bits/basic_string.h **** 	}
3459:/usr/include/c++/10/bits/basic_string.h **** 
3460:/usr/include/c++/10/bits/basic_string.h ****       static void
3461:/usr/include/c++/10/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
3462:/usr/include/c++/10/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
3463:/usr/include/c++/10/bits/basic_string.h **** 
3464:/usr/include/c++/10/bits/basic_string.h ****       static void
3465:/usr/include/c++/10/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
3466:/usr/include/c++/10/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
3467:/usr/include/c++/10/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
3468:/usr/include/c++/10/bits/basic_string.h **** 
3469:/usr/include/c++/10/bits/basic_string.h ****       static void
3470:/usr/include/c++/10/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
3471:/usr/include/c++/10/bits/basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
3472:/usr/include/c++/10/bits/basic_string.h **** 
3473:/usr/include/c++/10/bits/basic_string.h ****       static void
3474:/usr/include/c++/10/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
3475:/usr/include/c++/10/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
3476:/usr/include/c++/10/bits/basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
3477:/usr/include/c++/10/bits/basic_string.h **** 
3478:/usr/include/c++/10/bits/basic_string.h ****       static int
3479:/usr/include/c++/10/bits/basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
3480:/usr/include/c++/10/bits/basic_string.h ****       {
3481:/usr/include/c++/10/bits/basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
3482:/usr/include/c++/10/bits/basic_string.h **** 
3483:/usr/include/c++/10/bits/basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
3484:/usr/include/c++/10/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
3485:/usr/include/c++/10/bits/basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
3486:/usr/include/c++/10/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
3487:/usr/include/c++/10/bits/basic_string.h **** 	else
3488:/usr/include/c++/10/bits/basic_string.h **** 	  return int(__d);
3489:/usr/include/c++/10/bits/basic_string.h ****       }
3490:/usr/include/c++/10/bits/basic_string.h **** 
3491:/usr/include/c++/10/bits/basic_string.h ****       void
3492:/usr/include/c++/10/bits/basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, size_type __len2);
3493:/usr/include/c++/10/bits/basic_string.h **** 
3494:/usr/include/c++/10/bits/basic_string.h ****       void
3495:/usr/include/c++/10/bits/basic_string.h ****       _M_leak_hard();
3496:/usr/include/c++/10/bits/basic_string.h **** 
3497:/usr/include/c++/10/bits/basic_string.h ****       static _Rep&
3498:/usr/include/c++/10/bits/basic_string.h ****       _S_empty_rep() _GLIBCXX_NOEXCEPT
3499:/usr/include/c++/10/bits/basic_string.h ****       { return _Rep::_S_empty_rep(); }
3500:/usr/include/c++/10/bits/basic_string.h **** 
3501:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201703L
3502:/usr/include/c++/10/bits/basic_string.h ****       // A helper type for avoiding boiler-plate.
3503:/usr/include/c++/10/bits/basic_string.h ****       typedef basic_string_view<_CharT, _Traits> __sv_type;
3504:/usr/include/c++/10/bits/basic_string.h **** 
3505:/usr/include/c++/10/bits/basic_string.h ****       template<typename _Tp, typename _Res>
AARCH64 GAS  obj/extInstr.s 			page 149


3506:/usr/include/c++/10/bits/basic_string.h **** 	using _If_sv = enable_if_t<
3507:/usr/include/c++/10/bits/basic_string.h **** 	  __and_<is_convertible<const _Tp&, __sv_type>,
3508:/usr/include/c++/10/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp*, const basic_string*>>,
3509:/usr/include/c++/10/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp&, const _CharT*>>>::value,
3510:/usr/include/c++/10/bits/basic_string.h **** 	  _Res>;
3511:/usr/include/c++/10/bits/basic_string.h **** 
3512:/usr/include/c++/10/bits/basic_string.h ****       // Allows an implicit conversion to __sv_type.
3513:/usr/include/c++/10/bits/basic_string.h ****       static __sv_type
3514:/usr/include/c++/10/bits/basic_string.h ****       _S_to_string_view(__sv_type __svt) noexcept
3515:/usr/include/c++/10/bits/basic_string.h ****       { return __svt; }
3516:/usr/include/c++/10/bits/basic_string.h **** 
3517:/usr/include/c++/10/bits/basic_string.h ****       // Wraps a string_view by explicit conversion and thus
3518:/usr/include/c++/10/bits/basic_string.h ****       // allows to add an internal constructor that does not
3519:/usr/include/c++/10/bits/basic_string.h ****       // participate in overload resolution when a string_view
3520:/usr/include/c++/10/bits/basic_string.h ****       // is provided.
3521:/usr/include/c++/10/bits/basic_string.h ****       struct __sv_wrapper
3522:/usr/include/c++/10/bits/basic_string.h ****       {
3523:/usr/include/c++/10/bits/basic_string.h **** 	explicit __sv_wrapper(__sv_type __sv) noexcept : _M_sv(__sv) { }
3524:/usr/include/c++/10/bits/basic_string.h **** 	__sv_type _M_sv;
3525:/usr/include/c++/10/bits/basic_string.h ****       };
3526:/usr/include/c++/10/bits/basic_string.h **** 
3527:/usr/include/c++/10/bits/basic_string.h ****       /**
3528:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Only internally used: Construct string from a string view
3529:/usr/include/c++/10/bits/basic_string.h ****        *          wrapper.
3530:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __svw  string view wrapper.
3531:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __a  Allocator to use.
3532:/usr/include/c++/10/bits/basic_string.h ****        */
3533:/usr/include/c++/10/bits/basic_string.h ****       explicit
3534:/usr/include/c++/10/bits/basic_string.h ****       basic_string(__sv_wrapper __svw, const _Alloc& __a)
3535:/usr/include/c++/10/bits/basic_string.h ****       : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
3536:/usr/include/c++/10/bits/basic_string.h **** #endif
3537:/usr/include/c++/10/bits/basic_string.h **** 
3538:/usr/include/c++/10/bits/basic_string.h ****     public:
3539:/usr/include/c++/10/bits/basic_string.h ****       // Construct/copy/destroy:
3540:/usr/include/c++/10/bits/basic_string.h ****       // NB: We overload ctors in some cases instead of using default
3541:/usr/include/c++/10/bits/basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
3542:/usr/include/c++/10/bits/basic_string.h **** 
3543:/usr/include/c++/10/bits/basic_string.h ****       /**
3544:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Default constructor creates an empty string.
3545:/usr/include/c++/10/bits/basic_string.h ****        */
3546:/usr/include/c++/10/bits/basic_string.h ****       basic_string()
3547:/usr/include/c++/10/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3548:/usr/include/c++/10/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
3549:/usr/include/c++/10/bits/basic_string.h ****       : _M_dataplus(_S_empty_rep()._M_refdata(), _Alloc())
3550:/usr/include/c++/10/bits/basic_string.h **** #else
3551:/usr/include/c++/10/bits/basic_string.h ****       : _M_dataplus(_S_construct(size_type(), _CharT(), _Alloc()), _Alloc())
3552:/usr/include/c++/10/bits/basic_string.h **** #endif
3553:/usr/include/c++/10/bits/basic_string.h ****       { }
3554:/usr/include/c++/10/bits/basic_string.h **** 
3555:/usr/include/c++/10/bits/basic_string.h ****       /**
3556:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
3557:/usr/include/c++/10/bits/basic_string.h ****        */
3558:/usr/include/c++/10/bits/basic_string.h ****       explicit
3559:/usr/include/c++/10/bits/basic_string.h ****       basic_string(const _Alloc& __a);
3560:/usr/include/c++/10/bits/basic_string.h **** 
3561:/usr/include/c++/10/bits/basic_string.h ****       // NB: per LWG issue 42, semantics different from IS:
3562:/usr/include/c++/10/bits/basic_string.h ****       /**
AARCH64 GAS  obj/extInstr.s 			page 150


3563:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Construct string with copy of value of @a str.
3564:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __str  Source string.
3565:/usr/include/c++/10/bits/basic_string.h ****        */
3566:/usr/include/c++/10/bits/basic_string.h ****       basic_string(const basic_string& __str);
3567:/usr/include/c++/10/bits/basic_string.h **** 
3568:/usr/include/c++/10/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
3569:/usr/include/c++/10/bits/basic_string.h ****       // 2583. no way to supply an allocator for basic_string(str, pos)
3570:/usr/include/c++/10/bits/basic_string.h ****       /**
3571:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
3572:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __str  Source string.
3573:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3574:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __a  Allocator to use.
3575:/usr/include/c++/10/bits/basic_string.h ****        */
3576:/usr/include/c++/10/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3577:/usr/include/c++/10/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc());
3578:/usr/include/c++/10/bits/basic_string.h **** 
3579:/usr/include/c++/10/bits/basic_string.h ****       /**
3580:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
3581:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __str  Source string.
3582:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3583:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
3584:/usr/include/c++/10/bits/basic_string.h ****        */
3585:/usr/include/c++/10/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3586:/usr/include/c++/10/bits/basic_string.h **** 		   size_type __n);
3587:/usr/include/c++/10/bits/basic_string.h ****       /**
3588:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
3589:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __str  Source string.
3590:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3591:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
3592:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __a  Allocator to use.
3593:/usr/include/c++/10/bits/basic_string.h ****        */
3594:/usr/include/c++/10/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3595:/usr/include/c++/10/bits/basic_string.h **** 		   size_type __n, const _Alloc& __a);
3596:/usr/include/c++/10/bits/basic_string.h **** 
3597:/usr/include/c++/10/bits/basic_string.h ****       /**
3598:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Construct string initialized by a character %array.
3599:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __s  Source character %array.
3600:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
3601:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3602:/usr/include/c++/10/bits/basic_string.h ****        *
3603:/usr/include/c++/10/bits/basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
3604:/usr/include/c++/10/bits/basic_string.h ****        *  has no special meaning.
3605:/usr/include/c++/10/bits/basic_string.h ****        */
3606:/usr/include/c++/10/bits/basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
3607:/usr/include/c++/10/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc());
3608:/usr/include/c++/10/bits/basic_string.h **** 
3609:/usr/include/c++/10/bits/basic_string.h ****       /**
3610:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Construct string as copy of a C string.
3611:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __s  Source C string.
3612:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3613:/usr/include/c++/10/bits/basic_string.h ****        */
3614:/usr/include/c++/10/bits/basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
3615:/usr/include/c++/10/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
3616:/usr/include/c++/10/bits/basic_string.h ****       // 3076. basic_string CTAD ambiguity
3617:/usr/include/c++/10/bits/basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
3618:/usr/include/c++/10/bits/basic_string.h **** #endif
3619:/usr/include/c++/10/bits/basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
AARCH64 GAS  obj/extInstr.s 			page 151


3620:/usr/include/c++/10/bits/basic_string.h ****       : _M_dataplus(_S_construct(__s, __s ? __s + traits_type::length(__s) :
3621:/usr/include/c++/10/bits/basic_string.h ****                                  __s + npos, __a), __a)
3622:/usr/include/c++/10/bits/basic_string.h ****       { }
3623:/usr/include/c++/10/bits/basic_string.h **** 
3624:/usr/include/c++/10/bits/basic_string.h ****       /**
3625:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Construct string as multiple characters.
3626:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __n  Number of characters.
3627:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __c  Character to use.
3628:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3629:/usr/include/c++/10/bits/basic_string.h ****        */
3630:/usr/include/c++/10/bits/basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc());
3631:/usr/include/c++/10/bits/basic_string.h **** 
3632:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201103L
3633:/usr/include/c++/10/bits/basic_string.h ****       /**
3634:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Move construct string.
3635:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __str  Source string.
3636:/usr/include/c++/10/bits/basic_string.h ****        *
3637:/usr/include/c++/10/bits/basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
3638:/usr/include/c++/10/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
3639:/usr/include/c++/10/bits/basic_string.h ****        **/
3640:/usr/include/c++/10/bits/basic_string.h ****       basic_string(basic_string&& __str)
3641:/usr/include/c++/10/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3642:/usr/include/c++/10/bits/basic_string.h ****       noexcept // FIXME C++11: should always be noexcept.
3643:/usr/include/c++/10/bits/basic_string.h **** #endif
3644:/usr/include/c++/10/bits/basic_string.h ****       : _M_dataplus(std::move(__str._M_dataplus))
3645:/usr/include/c++/10/bits/basic_string.h ****       {
3646:/usr/include/c++/10/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3647:/usr/include/c++/10/bits/basic_string.h **** 	__str._M_data(_S_empty_rep()._M_refdata());
3648:/usr/include/c++/10/bits/basic_string.h **** #else
3649:/usr/include/c++/10/bits/basic_string.h **** 	__str._M_data(_S_construct(size_type(), _CharT(), get_allocator()));
3650:/usr/include/c++/10/bits/basic_string.h **** #endif
3651:/usr/include/c++/10/bits/basic_string.h ****       }
3652:/usr/include/c++/10/bits/basic_string.h **** 
3653:/usr/include/c++/10/bits/basic_string.h ****       /**
3654:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Construct string from an initializer %list.
3655:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __l  std::initializer_list of characters.
3656:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3657:/usr/include/c++/10/bits/basic_string.h ****        */
3658:/usr/include/c++/10/bits/basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc());
3659:/usr/include/c++/10/bits/basic_string.h **** 
3660:/usr/include/c++/10/bits/basic_string.h ****       basic_string(const basic_string& __str, const _Alloc& __a)
3661:/usr/include/c++/10/bits/basic_string.h ****       : _M_dataplus(__str._M_rep()->_M_grab(__a, __str.get_allocator()), __a)
3662:/usr/include/c++/10/bits/basic_string.h ****       { }
3663:/usr/include/c++/10/bits/basic_string.h **** 
3664:/usr/include/c++/10/bits/basic_string.h ****       basic_string(basic_string&& __str, const _Alloc& __a)
3665:/usr/include/c++/10/bits/basic_string.h ****       : _M_dataplus(__str._M_data(), __a)
3666:/usr/include/c++/10/bits/basic_string.h ****       {
3667:/usr/include/c++/10/bits/basic_string.h **** 	if (__a == __str.get_allocator())
3668:/usr/include/c++/10/bits/basic_string.h **** 	  {
3669:/usr/include/c++/10/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3670:/usr/include/c++/10/bits/basic_string.h **** 	    __str._M_data(_S_empty_rep()._M_refdata());
3671:/usr/include/c++/10/bits/basic_string.h **** #else
3672:/usr/include/c++/10/bits/basic_string.h **** 	    __str._M_data(_S_construct(size_type(), _CharT(), __a));
3673:/usr/include/c++/10/bits/basic_string.h **** #endif
3674:/usr/include/c++/10/bits/basic_string.h **** 	  }
3675:/usr/include/c++/10/bits/basic_string.h **** 	else
3676:/usr/include/c++/10/bits/basic_string.h **** 	  _M_dataplus._M_p = _S_construct(__str.begin(), __str.end(), __a);
AARCH64 GAS  obj/extInstr.s 			page 152


3677:/usr/include/c++/10/bits/basic_string.h ****       }
3678:/usr/include/c++/10/bits/basic_string.h **** #endif // C++11
3679:/usr/include/c++/10/bits/basic_string.h **** 
3680:/usr/include/c++/10/bits/basic_string.h ****       /**
3681:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Construct string as copy of a range.
3682:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __beg  Start of range.
3683:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __end  End of range.
3684:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3685:/usr/include/c++/10/bits/basic_string.h ****        */
3686:/usr/include/c++/10/bits/basic_string.h ****       template<class _InputIterator>
3687:/usr/include/c++/10/bits/basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
3688:/usr/include/c++/10/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc());
3689:/usr/include/c++/10/bits/basic_string.h **** 
3690:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201703L
3691:/usr/include/c++/10/bits/basic_string.h ****       /**
3692:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Construct string from a substring of a string_view.
3693:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __t   Source object convertible to string view.
3694:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __pos The index of the first character to copy from __t.
3695:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __n   The number of characters to copy from __t.
3696:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __a   Allocator to use.
3697:/usr/include/c++/10/bits/basic_string.h ****        */
3698:/usr/include/c++/10/bits/basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
3699:/usr/include/c++/10/bits/basic_string.h **** 	basic_string(const _Tp& __t, size_type __pos, size_type __n,
3700:/usr/include/c++/10/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
3701:/usr/include/c++/10/bits/basic_string.h **** 	: basic_string(_S_to_string_view(__t).substr(__pos, __n), __a) { }
3702:/usr/include/c++/10/bits/basic_string.h **** 
3703:/usr/include/c++/10/bits/basic_string.h ****       /**
3704:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Construct string from a string_view.
3705:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __t  Source object convertible to string view.
3706:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3707:/usr/include/c++/10/bits/basic_string.h ****        */
3708:/usr/include/c++/10/bits/basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
3709:/usr/include/c++/10/bits/basic_string.h **** 	explicit
3710:/usr/include/c++/10/bits/basic_string.h **** 	basic_string(const _Tp& __t, const _Alloc& __a = _Alloc())
3711:/usr/include/c++/10/bits/basic_string.h **** 	: basic_string(__sv_wrapper(_S_to_string_view(__t)), __a) { }
3712:/usr/include/c++/10/bits/basic_string.h **** #endif // C++17
3713:/usr/include/c++/10/bits/basic_string.h **** 
3714:/usr/include/c++/10/bits/basic_string.h ****       /**
3715:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Destroy the string instance.
3716:/usr/include/c++/10/bits/basic_string.h ****        */
3717:/usr/include/c++/10/bits/basic_string.h ****       ~basic_string() _GLIBCXX_NOEXCEPT
3718:/usr/include/c++/10/bits/basic_string.h ****       { _M_rep()->_M_dispose(this->get_allocator()); }
3719:/usr/include/c++/10/bits/basic_string.h **** 
3720:/usr/include/c++/10/bits/basic_string.h ****       /**
3721:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Assign the value of @a str to this string.
3722:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __str  Source string.
3723:/usr/include/c++/10/bits/basic_string.h ****        */
3724:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
3725:/usr/include/c++/10/bits/basic_string.h ****       operator=(const basic_string& __str)
3726:/usr/include/c++/10/bits/basic_string.h ****       { return this->assign(__str); }
3727:/usr/include/c++/10/bits/basic_string.h **** 
3728:/usr/include/c++/10/bits/basic_string.h ****       /**
3729:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Copy contents of @a s into this string.
3730:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __s  Source null-terminated string.
3731:/usr/include/c++/10/bits/basic_string.h ****        */
3732:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
3733:/usr/include/c++/10/bits/basic_string.h ****       operator=(const _CharT* __s) 
AARCH64 GAS  obj/extInstr.s 			page 153


3734:/usr/include/c++/10/bits/basic_string.h ****       { return this->assign(__s); }
3735:/usr/include/c++/10/bits/basic_string.h **** 
3736:/usr/include/c++/10/bits/basic_string.h ****       /**
3737:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Set value to string of length 1.
3738:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __c  Source character.
3739:/usr/include/c++/10/bits/basic_string.h ****        *
3740:/usr/include/c++/10/bits/basic_string.h ****        *  Assigning to a character makes this string length 1 and
3741:/usr/include/c++/10/bits/basic_string.h ****        *  (*this)[0] == @a c.
3742:/usr/include/c++/10/bits/basic_string.h ****        */
3743:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
3744:/usr/include/c++/10/bits/basic_string.h ****       operator=(_CharT __c) 
3745:/usr/include/c++/10/bits/basic_string.h ****       { 
3746:/usr/include/c++/10/bits/basic_string.h **** 	this->assign(1, __c); 
3747:/usr/include/c++/10/bits/basic_string.h **** 	return *this;
3748:/usr/include/c++/10/bits/basic_string.h ****       }
3749:/usr/include/c++/10/bits/basic_string.h **** 
3750:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201103L
3751:/usr/include/c++/10/bits/basic_string.h ****       /**
3752:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
3753:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __str  Source string.
3754:/usr/include/c++/10/bits/basic_string.h ****        *
3755:/usr/include/c++/10/bits/basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
3756:/usr/include/c++/10/bits/basic_string.h ****        *  @a str is a valid, but unspecified string.
3757:/usr/include/c++/10/bits/basic_string.h ****        **/
3758:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
3759:/usr/include/c++/10/bits/basic_string.h ****       operator=(basic_string&& __str)
3760:/usr/include/c++/10/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(allocator_traits<_Alloc>::is_always_equal::value)
3761:/usr/include/c++/10/bits/basic_string.h ****       {
3762:/usr/include/c++/10/bits/basic_string.h **** 	// NB: DR 1204.
3763:/usr/include/c++/10/bits/basic_string.h **** 	this->swap(__str);
3764:/usr/include/c++/10/bits/basic_string.h **** 	return *this;
3765:/usr/include/c++/10/bits/basic_string.h ****       }
3766:/usr/include/c++/10/bits/basic_string.h **** 
3767:/usr/include/c++/10/bits/basic_string.h ****       /**
3768:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
3769:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __l  std::initializer_list.
3770:/usr/include/c++/10/bits/basic_string.h ****        */
3771:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
3772:/usr/include/c++/10/bits/basic_string.h ****       operator=(initializer_list<_CharT> __l)
3773:/usr/include/c++/10/bits/basic_string.h ****       {
3774:/usr/include/c++/10/bits/basic_string.h **** 	this->assign(__l.begin(), __l.size());
3775:/usr/include/c++/10/bits/basic_string.h **** 	return *this;
3776:/usr/include/c++/10/bits/basic_string.h ****       }
3777:/usr/include/c++/10/bits/basic_string.h **** #endif // C++11
3778:/usr/include/c++/10/bits/basic_string.h **** 
3779:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201703L
3780:/usr/include/c++/10/bits/basic_string.h ****       /**
3781:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Set value to string constructed from a string_view.
3782:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __svt An object convertible to  string_view.
3783:/usr/include/c++/10/bits/basic_string.h ****        */
3784:/usr/include/c++/10/bits/basic_string.h ****       template<typename _Tp>
3785:/usr/include/c++/10/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
3786:/usr/include/c++/10/bits/basic_string.h **** 	operator=(const _Tp& __svt)
3787:/usr/include/c++/10/bits/basic_string.h **** 	{ return this->assign(__svt); }
3788:/usr/include/c++/10/bits/basic_string.h **** 
3789:/usr/include/c++/10/bits/basic_string.h ****       /**
3790:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Convert to a string_view.
AARCH64 GAS  obj/extInstr.s 			page 154


3791:/usr/include/c++/10/bits/basic_string.h ****        *  @return A string_view.
3792:/usr/include/c++/10/bits/basic_string.h ****        */
3793:/usr/include/c++/10/bits/basic_string.h ****       operator __sv_type() const noexcept
3794:/usr/include/c++/10/bits/basic_string.h ****       { return __sv_type(data(), size()); }
3795:/usr/include/c++/10/bits/basic_string.h **** #endif // C++17
3796:/usr/include/c++/10/bits/basic_string.h **** 
3797:/usr/include/c++/10/bits/basic_string.h ****       // Iterators:
3798:/usr/include/c++/10/bits/basic_string.h ****       /**
3799:/usr/include/c++/10/bits/basic_string.h ****        *  Returns a read/write iterator that points to the first character in
3800:/usr/include/c++/10/bits/basic_string.h ****        *  the %string.  Unshares the string.
3801:/usr/include/c++/10/bits/basic_string.h ****        */
3802:/usr/include/c++/10/bits/basic_string.h ****       iterator
3803:/usr/include/c++/10/bits/basic_string.h ****       begin() // FIXME C++11: should be noexcept.
3804:/usr/include/c++/10/bits/basic_string.h ****       {
3805:/usr/include/c++/10/bits/basic_string.h **** 	_M_leak();
3806:/usr/include/c++/10/bits/basic_string.h **** 	return iterator(_M_data());
3807:/usr/include/c++/10/bits/basic_string.h ****       }
3808:/usr/include/c++/10/bits/basic_string.h **** 
3809:/usr/include/c++/10/bits/basic_string.h ****       /**
3810:/usr/include/c++/10/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
3811:/usr/include/c++/10/bits/basic_string.h ****        *  character in the %string.
3812:/usr/include/c++/10/bits/basic_string.h ****        */
3813:/usr/include/c++/10/bits/basic_string.h ****       const_iterator
3814:/usr/include/c++/10/bits/basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
3815:/usr/include/c++/10/bits/basic_string.h ****       { return const_iterator(_M_data()); }
3816:/usr/include/c++/10/bits/basic_string.h **** 
3817:/usr/include/c++/10/bits/basic_string.h ****       /**
3818:/usr/include/c++/10/bits/basic_string.h ****        *  Returns a read/write iterator that points one past the last
3819:/usr/include/c++/10/bits/basic_string.h ****        *  character in the %string.  Unshares the string.
3820:/usr/include/c++/10/bits/basic_string.h ****        */
3821:/usr/include/c++/10/bits/basic_string.h ****       iterator
3822:/usr/include/c++/10/bits/basic_string.h ****       end() // FIXME C++11: should be noexcept.
3823:/usr/include/c++/10/bits/basic_string.h ****       {
3824:/usr/include/c++/10/bits/basic_string.h **** 	_M_leak();
3825:/usr/include/c++/10/bits/basic_string.h **** 	return iterator(_M_data() + this->size());
3826:/usr/include/c++/10/bits/basic_string.h ****       }
3827:/usr/include/c++/10/bits/basic_string.h **** 
3828:/usr/include/c++/10/bits/basic_string.h ****       /**
3829:/usr/include/c++/10/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
3830:/usr/include/c++/10/bits/basic_string.h ****        *  last character in the %string.
3831:/usr/include/c++/10/bits/basic_string.h ****        */
3832:/usr/include/c++/10/bits/basic_string.h ****       const_iterator
3833:/usr/include/c++/10/bits/basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
3834:/usr/include/c++/10/bits/basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
3835:/usr/include/c++/10/bits/basic_string.h **** 
3836:/usr/include/c++/10/bits/basic_string.h ****       /**
3837:/usr/include/c++/10/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
3838:/usr/include/c++/10/bits/basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
3839:/usr/include/c++/10/bits/basic_string.h ****        *  order.  Unshares the string.
3840:/usr/include/c++/10/bits/basic_string.h ****        */
3841:/usr/include/c++/10/bits/basic_string.h ****       reverse_iterator
3842:/usr/include/c++/10/bits/basic_string.h ****       rbegin() // FIXME C++11: should be noexcept.
3843:/usr/include/c++/10/bits/basic_string.h ****       { return reverse_iterator(this->end()); }
3844:/usr/include/c++/10/bits/basic_string.h **** 
3845:/usr/include/c++/10/bits/basic_string.h ****       /**
3846:/usr/include/c++/10/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3847:/usr/include/c++/10/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
AARCH64 GAS  obj/extInstr.s 			page 155


3848:/usr/include/c++/10/bits/basic_string.h ****        *  reverse element order.
3849:/usr/include/c++/10/bits/basic_string.h ****        */
3850:/usr/include/c++/10/bits/basic_string.h ****       const_reverse_iterator
3851:/usr/include/c++/10/bits/basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
3852:/usr/include/c++/10/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
3853:/usr/include/c++/10/bits/basic_string.h **** 
3854:/usr/include/c++/10/bits/basic_string.h ****       /**
3855:/usr/include/c++/10/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
3856:/usr/include/c++/10/bits/basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
3857:/usr/include/c++/10/bits/basic_string.h ****        *  element order.  Unshares the string.
3858:/usr/include/c++/10/bits/basic_string.h ****        */
3859:/usr/include/c++/10/bits/basic_string.h ****       reverse_iterator
3860:/usr/include/c++/10/bits/basic_string.h ****       rend() // FIXME C++11: should be noexcept.
3861:/usr/include/c++/10/bits/basic_string.h ****       { return reverse_iterator(this->begin()); }
3862:/usr/include/c++/10/bits/basic_string.h **** 
3863:/usr/include/c++/10/bits/basic_string.h ****       /**
3864:/usr/include/c++/10/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3865:/usr/include/c++/10/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
3866:/usr/include/c++/10/bits/basic_string.h ****        *  is done in reverse element order.
3867:/usr/include/c++/10/bits/basic_string.h ****        */
3868:/usr/include/c++/10/bits/basic_string.h ****       const_reverse_iterator
3869:/usr/include/c++/10/bits/basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
3870:/usr/include/c++/10/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
3871:/usr/include/c++/10/bits/basic_string.h **** 
3872:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201103L
3873:/usr/include/c++/10/bits/basic_string.h ****       /**
3874:/usr/include/c++/10/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
3875:/usr/include/c++/10/bits/basic_string.h ****        *  character in the %string.
3876:/usr/include/c++/10/bits/basic_string.h ****        */
3877:/usr/include/c++/10/bits/basic_string.h ****       const_iterator
3878:/usr/include/c++/10/bits/basic_string.h ****       cbegin() const noexcept
3879:/usr/include/c++/10/bits/basic_string.h ****       { return const_iterator(this->_M_data()); }
3880:/usr/include/c++/10/bits/basic_string.h **** 
3881:/usr/include/c++/10/bits/basic_string.h ****       /**
3882:/usr/include/c++/10/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
3883:/usr/include/c++/10/bits/basic_string.h ****        *  last character in the %string.
3884:/usr/include/c++/10/bits/basic_string.h ****        */
3885:/usr/include/c++/10/bits/basic_string.h ****       const_iterator
3886:/usr/include/c++/10/bits/basic_string.h ****       cend() const noexcept
3887:/usr/include/c++/10/bits/basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
3888:/usr/include/c++/10/bits/basic_string.h **** 
3889:/usr/include/c++/10/bits/basic_string.h ****       /**
3890:/usr/include/c++/10/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3891:/usr/include/c++/10/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
3892:/usr/include/c++/10/bits/basic_string.h ****        *  reverse element order.
3893:/usr/include/c++/10/bits/basic_string.h ****        */
3894:/usr/include/c++/10/bits/basic_string.h ****       const_reverse_iterator
3895:/usr/include/c++/10/bits/basic_string.h ****       crbegin() const noexcept
3896:/usr/include/c++/10/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
3897:/usr/include/c++/10/bits/basic_string.h **** 
3898:/usr/include/c++/10/bits/basic_string.h ****       /**
3899:/usr/include/c++/10/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3900:/usr/include/c++/10/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
3901:/usr/include/c++/10/bits/basic_string.h ****        *  is done in reverse element order.
3902:/usr/include/c++/10/bits/basic_string.h ****        */
3903:/usr/include/c++/10/bits/basic_string.h ****       const_reverse_iterator
3904:/usr/include/c++/10/bits/basic_string.h ****       crend() const noexcept
AARCH64 GAS  obj/extInstr.s 			page 156


3905:/usr/include/c++/10/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
3906:/usr/include/c++/10/bits/basic_string.h **** #endif
3907:/usr/include/c++/10/bits/basic_string.h **** 
3908:/usr/include/c++/10/bits/basic_string.h ****     public:
3909:/usr/include/c++/10/bits/basic_string.h ****       // Capacity:
3910:/usr/include/c++/10/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
3911:/usr/include/c++/10/bits/basic_string.h ****       ///  null-termination.
3912:/usr/include/c++/10/bits/basic_string.h ****       size_type
3913:/usr/include/c++/10/bits/basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
3914:/usr/include/c++/10/bits/basic_string.h ****       { return _M_rep()->_M_length; }
3915:/usr/include/c++/10/bits/basic_string.h **** 
3916:/usr/include/c++/10/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
3917:/usr/include/c++/10/bits/basic_string.h ****       ///  null-termination.
3918:/usr/include/c++/10/bits/basic_string.h ****       size_type
3919:/usr/include/c++/10/bits/basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
3920:/usr/include/c++/10/bits/basic_string.h ****       { return _M_rep()->_M_length; }
3921:/usr/include/c++/10/bits/basic_string.h **** 
3922:/usr/include/c++/10/bits/basic_string.h ****       ///  Returns the size() of the largest possible %string.
3923:/usr/include/c++/10/bits/basic_string.h ****       size_type
3924:/usr/include/c++/10/bits/basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
3925:/usr/include/c++/10/bits/basic_string.h ****       { return _Rep::_S_max_size; }
3926:/usr/include/c++/10/bits/basic_string.h **** 
3927:/usr/include/c++/10/bits/basic_string.h ****       /**
3928:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
3929:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
3930:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __c  Character to fill any new elements.
3931:/usr/include/c++/10/bits/basic_string.h ****        *
3932:/usr/include/c++/10/bits/basic_string.h ****        *  This function will %resize the %string to the specified
3933:/usr/include/c++/10/bits/basic_string.h ****        *  number of characters.  If the number is smaller than the
3934:/usr/include/c++/10/bits/basic_string.h ****        *  %string's current size the %string is truncated, otherwise
3935:/usr/include/c++/10/bits/basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
3936:/usr/include/c++/10/bits/basic_string.h ****        */
3937:/usr/include/c++/10/bits/basic_string.h ****       void
3938:/usr/include/c++/10/bits/basic_string.h ****       resize(size_type __n, _CharT __c);
3939:/usr/include/c++/10/bits/basic_string.h **** 
3940:/usr/include/c++/10/bits/basic_string.h ****       /**
3941:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
3942:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
3943:/usr/include/c++/10/bits/basic_string.h ****        *
3944:/usr/include/c++/10/bits/basic_string.h ****        *  This function will resize the %string to the specified length.  If
3945:/usr/include/c++/10/bits/basic_string.h ****        *  the new size is smaller than the %string's current size the %string
3946:/usr/include/c++/10/bits/basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
3947:/usr/include/c++/10/bits/basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
3948:/usr/include/c++/10/bits/basic_string.h ****        *  setting them to 0.
3949:/usr/include/c++/10/bits/basic_string.h ****        */
3950:/usr/include/c++/10/bits/basic_string.h ****       void
3951:/usr/include/c++/10/bits/basic_string.h ****       resize(size_type __n)
3952:/usr/include/c++/10/bits/basic_string.h ****       { this->resize(__n, _CharT()); }
3953:/usr/include/c++/10/bits/basic_string.h **** 
3954:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201103L
3955:/usr/include/c++/10/bits/basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
3956:/usr/include/c++/10/bits/basic_string.h ****       void
3957:/usr/include/c++/10/bits/basic_string.h ****       shrink_to_fit() _GLIBCXX_NOEXCEPT
3958:/usr/include/c++/10/bits/basic_string.h ****       {
3959:/usr/include/c++/10/bits/basic_string.h **** #if __cpp_exceptions
3960:/usr/include/c++/10/bits/basic_string.h **** 	if (capacity() > size())
3961:/usr/include/c++/10/bits/basic_string.h **** 	  {
AARCH64 GAS  obj/extInstr.s 			page 157


3962:/usr/include/c++/10/bits/basic_string.h **** 	    try
3963:/usr/include/c++/10/bits/basic_string.h **** 	      { reserve(0); }
3964:/usr/include/c++/10/bits/basic_string.h **** 	    catch(...)
3965:/usr/include/c++/10/bits/basic_string.h **** 	      { }
3966:/usr/include/c++/10/bits/basic_string.h **** 	  }
3967:/usr/include/c++/10/bits/basic_string.h **** #endif
3968:/usr/include/c++/10/bits/basic_string.h ****       }
3969:/usr/include/c++/10/bits/basic_string.h **** #endif
3970:/usr/include/c++/10/bits/basic_string.h **** 
3971:/usr/include/c++/10/bits/basic_string.h ****       /**
3972:/usr/include/c++/10/bits/basic_string.h ****        *  Returns the total number of characters that the %string can hold
3973:/usr/include/c++/10/bits/basic_string.h ****        *  before needing to allocate more memory.
3974:/usr/include/c++/10/bits/basic_string.h ****        */
3975:/usr/include/c++/10/bits/basic_string.h ****       size_type
3976:/usr/include/c++/10/bits/basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
3977:/usr/include/c++/10/bits/basic_string.h ****       { return _M_rep()->_M_capacity; }
3978:/usr/include/c++/10/bits/basic_string.h **** 
3979:/usr/include/c++/10/bits/basic_string.h ****       /**
3980:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
3981:/usr/include/c++/10/bits/basic_string.h ****        *          characters.
3982:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __res_arg  Number of characters required.
3983:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
3984:/usr/include/c++/10/bits/basic_string.h ****        *
3985:/usr/include/c++/10/bits/basic_string.h ****        *  This function attempts to reserve enough memory for the
3986:/usr/include/c++/10/bits/basic_string.h ****        *  %string to hold the specified number of characters.  If the
3987:/usr/include/c++/10/bits/basic_string.h ****        *  number requested is more than max_size(), length_error is
3988:/usr/include/c++/10/bits/basic_string.h ****        *  thrown.
3989:/usr/include/c++/10/bits/basic_string.h ****        *
3990:/usr/include/c++/10/bits/basic_string.h ****        *  The advantage of this function is that if optimal code is a
3991:/usr/include/c++/10/bits/basic_string.h ****        *  necessity and the user can determine the string length that will be
3992:/usr/include/c++/10/bits/basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
3993:/usr/include/c++/10/bits/basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
3994:/usr/include/c++/10/bits/basic_string.h ****        *  data.
3995:/usr/include/c++/10/bits/basic_string.h ****        */
3996:/usr/include/c++/10/bits/basic_string.h ****       void
3997:/usr/include/c++/10/bits/basic_string.h ****       reserve(size_type __res_arg = 0);
3998:/usr/include/c++/10/bits/basic_string.h **** 
3999:/usr/include/c++/10/bits/basic_string.h ****       /**
4000:/usr/include/c++/10/bits/basic_string.h ****        *  Erases the string, making it empty.
4001:/usr/include/c++/10/bits/basic_string.h ****        */
4002:/usr/include/c++/10/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
4003:/usr/include/c++/10/bits/basic_string.h ****       void
4004:/usr/include/c++/10/bits/basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
4005:/usr/include/c++/10/bits/basic_string.h ****       {
4006:/usr/include/c++/10/bits/basic_string.h **** 	if (_M_rep()->_M_is_shared())
4007:/usr/include/c++/10/bits/basic_string.h **** 	  {
4008:/usr/include/c++/10/bits/basic_string.h **** 	    _M_rep()->_M_dispose(this->get_allocator());
4009:/usr/include/c++/10/bits/basic_string.h **** 	    _M_data(_S_empty_rep()._M_refdata());
4010:/usr/include/c++/10/bits/basic_string.h **** 	  }
4011:/usr/include/c++/10/bits/basic_string.h **** 	else
4012:/usr/include/c++/10/bits/basic_string.h **** 	  _M_rep()->_M_set_length_and_sharable(0);
4013:/usr/include/c++/10/bits/basic_string.h ****       }
4014:/usr/include/c++/10/bits/basic_string.h **** #else
4015:/usr/include/c++/10/bits/basic_string.h ****       // PR 56166: this should not throw.
4016:/usr/include/c++/10/bits/basic_string.h ****       void
4017:/usr/include/c++/10/bits/basic_string.h ****       clear()
4018:/usr/include/c++/10/bits/basic_string.h ****       { _M_mutate(0, this->size(), 0); }
AARCH64 GAS  obj/extInstr.s 			page 158


4019:/usr/include/c++/10/bits/basic_string.h **** #endif
4020:/usr/include/c++/10/bits/basic_string.h **** 
4021:/usr/include/c++/10/bits/basic_string.h ****       /**
4022:/usr/include/c++/10/bits/basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
4023:/usr/include/c++/10/bits/basic_string.h ****        *  <code>*this == ""</code>.
4024:/usr/include/c++/10/bits/basic_string.h ****        */
4025:/usr/include/c++/10/bits/basic_string.h ****       _GLIBCXX_NODISCARD bool
4026:/usr/include/c++/10/bits/basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
4027:/usr/include/c++/10/bits/basic_string.h ****       { return this->size() == 0; }
4028:/usr/include/c++/10/bits/basic_string.h **** 
4029:/usr/include/c++/10/bits/basic_string.h ****       // Element access:
4030:/usr/include/c++/10/bits/basic_string.h ****       /**
4031:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
4032:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
4033:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Read-only (constant) reference to the character.
4034:/usr/include/c++/10/bits/basic_string.h ****        *
4035:/usr/include/c++/10/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
4036:/usr/include/c++/10/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
4037:/usr/include/c++/10/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
4038:/usr/include/c++/10/bits/basic_string.h ****        *  see at().)
4039:/usr/include/c++/10/bits/basic_string.h ****        */
4040:/usr/include/c++/10/bits/basic_string.h ****       const_reference
4041:/usr/include/c++/10/bits/basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
4042:/usr/include/c++/10/bits/basic_string.h ****       {
4043:/usr/include/c++/10/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
4044:/usr/include/c++/10/bits/basic_string.h **** 	return _M_data()[__pos];
4045:/usr/include/c++/10/bits/basic_string.h ****       }
4046:/usr/include/c++/10/bits/basic_string.h **** 
4047:/usr/include/c++/10/bits/basic_string.h ****       /**
4048:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
4049:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
4050:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Read/write reference to the character.
4051:/usr/include/c++/10/bits/basic_string.h ****        *
4052:/usr/include/c++/10/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
4053:/usr/include/c++/10/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
4054:/usr/include/c++/10/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
4055:/usr/include/c++/10/bits/basic_string.h ****        *  see at().)  Unshares the string.
4056:/usr/include/c++/10/bits/basic_string.h ****        */
4057:/usr/include/c++/10/bits/basic_string.h ****       reference
4058:/usr/include/c++/10/bits/basic_string.h ****       operator[](size_type __pos)
4059:/usr/include/c++/10/bits/basic_string.h ****       {
4060:/usr/include/c++/10/bits/basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
4061:/usr/include/c++/10/bits/basic_string.h **** 	// and in C++11 mode.
4062:/usr/include/c++/10/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
4063:/usr/include/c++/10/bits/basic_string.h ****         // In pedantic mode be strict in C++98 mode.
4064:/usr/include/c++/10/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
4065:/usr/include/c++/10/bits/basic_string.h **** 	_M_leak();
4066:/usr/include/c++/10/bits/basic_string.h **** 	return _M_data()[__pos];
4067:/usr/include/c++/10/bits/basic_string.h ****       }
4068:/usr/include/c++/10/bits/basic_string.h **** 
4069:/usr/include/c++/10/bits/basic_string.h ****       /**
4070:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
4071:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n The index of the character to access.
4072:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Read-only (const) reference to the character.
4073:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
4074:/usr/include/c++/10/bits/basic_string.h ****        *
4075:/usr/include/c++/10/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
AARCH64 GAS  obj/extInstr.s 			page 159


4076:/usr/include/c++/10/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
4077:/usr/include/c++/10/bits/basic_string.h ****        *  throws out_of_range if the check fails.
4078:/usr/include/c++/10/bits/basic_string.h ****        */
4079:/usr/include/c++/10/bits/basic_string.h ****       const_reference
4080:/usr/include/c++/10/bits/basic_string.h ****       at(size_type __n) const
4081:/usr/include/c++/10/bits/basic_string.h ****       {
4082:/usr/include/c++/10/bits/basic_string.h **** 	if (__n >= this->size())
4083:/usr/include/c++/10/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
4084:/usr/include/c++/10/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
4085:/usr/include/c++/10/bits/basic_string.h **** 				       "(which is %zu)"),
4086:/usr/include/c++/10/bits/basic_string.h **** 				   __n, this->size());
4087:/usr/include/c++/10/bits/basic_string.h **** 	return _M_data()[__n];
4088:/usr/include/c++/10/bits/basic_string.h ****       }
4089:/usr/include/c++/10/bits/basic_string.h **** 
4090:/usr/include/c++/10/bits/basic_string.h ****       /**
4091:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
4092:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n The index of the character to access.
4093:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Read/write reference to the character.
4094:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
4095:/usr/include/c++/10/bits/basic_string.h ****        *
4096:/usr/include/c++/10/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
4097:/usr/include/c++/10/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
4098:/usr/include/c++/10/bits/basic_string.h ****        *  throws out_of_range if the check fails.  Success results in
4099:/usr/include/c++/10/bits/basic_string.h ****        *  unsharing the string.
4100:/usr/include/c++/10/bits/basic_string.h ****        */
4101:/usr/include/c++/10/bits/basic_string.h ****       reference
4102:/usr/include/c++/10/bits/basic_string.h ****       at(size_type __n)
4103:/usr/include/c++/10/bits/basic_string.h ****       {
4104:/usr/include/c++/10/bits/basic_string.h **** 	if (__n >= size())
4105:/usr/include/c++/10/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
4106:/usr/include/c++/10/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
4107:/usr/include/c++/10/bits/basic_string.h **** 				       "(which is %zu)"),
4108:/usr/include/c++/10/bits/basic_string.h **** 				   __n, this->size());
4109:/usr/include/c++/10/bits/basic_string.h **** 	_M_leak();
4110:/usr/include/c++/10/bits/basic_string.h **** 	return _M_data()[__n];
4111:/usr/include/c++/10/bits/basic_string.h ****       }
4112:/usr/include/c++/10/bits/basic_string.h **** 
4113:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201103L
4114:/usr/include/c++/10/bits/basic_string.h ****       /**
4115:/usr/include/c++/10/bits/basic_string.h ****        *  Returns a read/write reference to the data at the first
4116:/usr/include/c++/10/bits/basic_string.h ****        *  element of the %string.
4117:/usr/include/c++/10/bits/basic_string.h ****        */
4118:/usr/include/c++/10/bits/basic_string.h ****       reference
4119:/usr/include/c++/10/bits/basic_string.h ****       front()
4120:/usr/include/c++/10/bits/basic_string.h ****       {
4121:/usr/include/c++/10/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4122:/usr/include/c++/10/bits/basic_string.h **** 	return operator[](0);
4123:/usr/include/c++/10/bits/basic_string.h ****       }
4124:/usr/include/c++/10/bits/basic_string.h **** 
4125:/usr/include/c++/10/bits/basic_string.h ****       /**
4126:/usr/include/c++/10/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
4127:/usr/include/c++/10/bits/basic_string.h ****        *  element of the %string.
4128:/usr/include/c++/10/bits/basic_string.h ****        */
4129:/usr/include/c++/10/bits/basic_string.h ****       const_reference
4130:/usr/include/c++/10/bits/basic_string.h ****       front() const noexcept
4131:/usr/include/c++/10/bits/basic_string.h ****       {
4132:/usr/include/c++/10/bits/basic_string.h **** 	__glibcxx_assert(!empty());
AARCH64 GAS  obj/extInstr.s 			page 160


4133:/usr/include/c++/10/bits/basic_string.h **** 	return operator[](0);
4134:/usr/include/c++/10/bits/basic_string.h ****       }
4135:/usr/include/c++/10/bits/basic_string.h **** 
4136:/usr/include/c++/10/bits/basic_string.h ****       /**
4137:/usr/include/c++/10/bits/basic_string.h ****        *  Returns a read/write reference to the data at the last
4138:/usr/include/c++/10/bits/basic_string.h ****        *  element of the %string.
4139:/usr/include/c++/10/bits/basic_string.h ****        */
4140:/usr/include/c++/10/bits/basic_string.h ****       reference
4141:/usr/include/c++/10/bits/basic_string.h ****       back()
4142:/usr/include/c++/10/bits/basic_string.h ****       {
4143:/usr/include/c++/10/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4144:/usr/include/c++/10/bits/basic_string.h **** 	return operator[](this->size() - 1);
4145:/usr/include/c++/10/bits/basic_string.h ****       }
4146:/usr/include/c++/10/bits/basic_string.h **** 
4147:/usr/include/c++/10/bits/basic_string.h ****       /**
4148:/usr/include/c++/10/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
4149:/usr/include/c++/10/bits/basic_string.h ****        *  last element of the %string.
4150:/usr/include/c++/10/bits/basic_string.h ****        */
4151:/usr/include/c++/10/bits/basic_string.h ****       const_reference
4152:/usr/include/c++/10/bits/basic_string.h ****       back() const noexcept
4153:/usr/include/c++/10/bits/basic_string.h ****       {
4154:/usr/include/c++/10/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4155:/usr/include/c++/10/bits/basic_string.h **** 	return operator[](this->size() - 1);
4156:/usr/include/c++/10/bits/basic_string.h ****       }
4157:/usr/include/c++/10/bits/basic_string.h **** #endif
4158:/usr/include/c++/10/bits/basic_string.h **** 
4159:/usr/include/c++/10/bits/basic_string.h ****       // Modifiers:
4160:/usr/include/c++/10/bits/basic_string.h ****       /**
4161:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Append a string to this string.
4162:/usr/include/c++/10/bits/basic_string.h ****        *  @param __str  The string to append.
4163:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
4164:/usr/include/c++/10/bits/basic_string.h ****        */
4165:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
4166:/usr/include/c++/10/bits/basic_string.h ****       operator+=(const basic_string& __str)
4167:/usr/include/c++/10/bits/basic_string.h ****       { return this->append(__str); }
4168:/usr/include/c++/10/bits/basic_string.h **** 
4169:/usr/include/c++/10/bits/basic_string.h ****       /**
4170:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Append a C string.
4171:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  The C string to append.
4172:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
4173:/usr/include/c++/10/bits/basic_string.h ****        */
4174:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
4175:/usr/include/c++/10/bits/basic_string.h ****       operator+=(const _CharT* __s)
4176:/usr/include/c++/10/bits/basic_string.h ****       { return this->append(__s); }
4177:/usr/include/c++/10/bits/basic_string.h **** 
4178:/usr/include/c++/10/bits/basic_string.h ****       /**
4179:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Append a character.
4180:/usr/include/c++/10/bits/basic_string.h ****        *  @param __c  The character to append.
4181:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
4182:/usr/include/c++/10/bits/basic_string.h ****        */
4183:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
4184:/usr/include/c++/10/bits/basic_string.h ****       operator+=(_CharT __c)
4185:/usr/include/c++/10/bits/basic_string.h ****       { 
4186:/usr/include/c++/10/bits/basic_string.h **** 	this->push_back(__c);
4187:/usr/include/c++/10/bits/basic_string.h **** 	return *this;
4188:/usr/include/c++/10/bits/basic_string.h ****       }
4189:/usr/include/c++/10/bits/basic_string.h **** 
AARCH64 GAS  obj/extInstr.s 			page 161


4190:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201103L
4191:/usr/include/c++/10/bits/basic_string.h ****       /**
4192:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
4193:/usr/include/c++/10/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
4194:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
4195:/usr/include/c++/10/bits/basic_string.h ****        */
4196:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
4197:/usr/include/c++/10/bits/basic_string.h ****       operator+=(initializer_list<_CharT> __l)
4198:/usr/include/c++/10/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
4199:/usr/include/c++/10/bits/basic_string.h **** #endif // C++11
4200:/usr/include/c++/10/bits/basic_string.h **** 
4201:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201703L
4202:/usr/include/c++/10/bits/basic_string.h ****       /**
4203:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Append a string_view.
4204:/usr/include/c++/10/bits/basic_string.h ****        *  @param __svt The object convertible to string_view to be appended.
4205:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
4206:/usr/include/c++/10/bits/basic_string.h ****        */
4207:/usr/include/c++/10/bits/basic_string.h ****       template<typename _Tp>
4208:/usr/include/c++/10/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4209:/usr/include/c++/10/bits/basic_string.h **** 	operator+=(const _Tp& __svt)
4210:/usr/include/c++/10/bits/basic_string.h **** 	{ return this->append(__svt); }
4211:/usr/include/c++/10/bits/basic_string.h **** #endif // C++17
4212:/usr/include/c++/10/bits/basic_string.h **** 
4213:/usr/include/c++/10/bits/basic_string.h ****       /**
4214:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Append a string to this string.
4215:/usr/include/c++/10/bits/basic_string.h ****        *  @param __str  The string to append.
4216:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
4217:/usr/include/c++/10/bits/basic_string.h ****        */
4218:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
4219:/usr/include/c++/10/bits/basic_string.h ****       append(const basic_string& __str);
4220:/usr/include/c++/10/bits/basic_string.h **** 
4221:/usr/include/c++/10/bits/basic_string.h ****       /**
4222:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Append a substring.
4223:/usr/include/c++/10/bits/basic_string.h ****        *  @param __str  The string to append.
4224:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of the first character of str to append.
4225:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  The number of characters to append.
4226:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
4227:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
4228:/usr/include/c++/10/bits/basic_string.h ****        *
4229:/usr/include/c++/10/bits/basic_string.h ****        *  This function appends @a __n characters from @a __str
4230:/usr/include/c++/10/bits/basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
4231:/usr/include/c++/10/bits/basic_string.h ****        *  than the number of available characters in @a __str, the
4232:/usr/include/c++/10/bits/basic_string.h ****        *  remainder of @a __str is appended.
4233:/usr/include/c++/10/bits/basic_string.h ****        */
4234:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
4235:/usr/include/c++/10/bits/basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n = npos);
4236:/usr/include/c++/10/bits/basic_string.h **** 
4237:/usr/include/c++/10/bits/basic_string.h ****       /**
4238:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Append a C substring.
4239:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  The C string to append.
4240:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  The number of characters to append.
4241:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
4242:/usr/include/c++/10/bits/basic_string.h ****        */
4243:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
4244:/usr/include/c++/10/bits/basic_string.h ****       append(const _CharT* __s, size_type __n);
4245:/usr/include/c++/10/bits/basic_string.h **** 
4246:/usr/include/c++/10/bits/basic_string.h ****       /**
AARCH64 GAS  obj/extInstr.s 			page 162


4247:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Append a C string.
4248:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  The C string to append.
4249:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
4250:/usr/include/c++/10/bits/basic_string.h ****        */
4251:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
4252:/usr/include/c++/10/bits/basic_string.h ****       append(const _CharT* __s)
4253:/usr/include/c++/10/bits/basic_string.h ****       {
4254:/usr/include/c++/10/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4255:/usr/include/c++/10/bits/basic_string.h **** 	return this->append(__s, traits_type::length(__s));
4256:/usr/include/c++/10/bits/basic_string.h ****       }
4257:/usr/include/c++/10/bits/basic_string.h **** 
4258:/usr/include/c++/10/bits/basic_string.h ****       /**
4259:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Append multiple characters.
4260:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  The number of characters to append.
4261:/usr/include/c++/10/bits/basic_string.h ****        *  @param __c  The character to use.
4262:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
4263:/usr/include/c++/10/bits/basic_string.h ****        *
4264:/usr/include/c++/10/bits/basic_string.h ****        *  Appends __n copies of __c to this string.
4265:/usr/include/c++/10/bits/basic_string.h ****        */
4266:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
4267:/usr/include/c++/10/bits/basic_string.h ****       append(size_type __n, _CharT __c);
4268:/usr/include/c++/10/bits/basic_string.h **** 
4269:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201103L
4270:/usr/include/c++/10/bits/basic_string.h ****       /**
4271:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
4272:/usr/include/c++/10/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to append.
4273:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
4274:/usr/include/c++/10/bits/basic_string.h ****        */
4275:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
4276:/usr/include/c++/10/bits/basic_string.h ****       append(initializer_list<_CharT> __l)
4277:/usr/include/c++/10/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
4278:/usr/include/c++/10/bits/basic_string.h **** #endif // C++11
4279:/usr/include/c++/10/bits/basic_string.h **** 
4280:/usr/include/c++/10/bits/basic_string.h ****       /**
4281:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Append a range of characters.
4282:/usr/include/c++/10/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
4283:/usr/include/c++/10/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
4284:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
4285:/usr/include/c++/10/bits/basic_string.h ****        *
4286:/usr/include/c++/10/bits/basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
4287:/usr/include/c++/10/bits/basic_string.h ****        */
4288:/usr/include/c++/10/bits/basic_string.h ****       template<class _InputIterator>
4289:/usr/include/c++/10/bits/basic_string.h ****         basic_string&
4290:/usr/include/c++/10/bits/basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
4291:/usr/include/c++/10/bits/basic_string.h ****         { return this->replace(_M_iend(), _M_iend(), __first, __last); }
4292:/usr/include/c++/10/bits/basic_string.h **** 
4293:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201703L
4294:/usr/include/c++/10/bits/basic_string.h ****       /**
4295:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Append a string_view.
4296:/usr/include/c++/10/bits/basic_string.h ****        *  @param __svt The object convertible to string_view to be appended.
4297:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
4298:/usr/include/c++/10/bits/basic_string.h ****        */
4299:/usr/include/c++/10/bits/basic_string.h ****       template<typename _Tp>
4300:/usr/include/c++/10/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4301:/usr/include/c++/10/bits/basic_string.h **** 	append(const _Tp& __svt)
4302:/usr/include/c++/10/bits/basic_string.h **** 	{
4303:/usr/include/c++/10/bits/basic_string.h **** 	  __sv_type __sv = __svt;
AARCH64 GAS  obj/extInstr.s 			page 163


4304:/usr/include/c++/10/bits/basic_string.h **** 	  return this->append(__sv.data(), __sv.size());
4305:/usr/include/c++/10/bits/basic_string.h **** 	}
4306:/usr/include/c++/10/bits/basic_string.h **** 
4307:/usr/include/c++/10/bits/basic_string.h ****       /**
4308:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Append a range of characters from a string_view.
4309:/usr/include/c++/10/bits/basic_string.h ****        *  @param __svt The object convertible to string_view to be appended
4310:/usr/include/c++/10/bits/basic_string.h ****        *               from.
4311:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos The position in the string_view to append from.
4312:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n   The number of characters to append from the string_view.
4313:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
4314:/usr/include/c++/10/bits/basic_string.h ****        */
4315:/usr/include/c++/10/bits/basic_string.h ****       template<typename _Tp>
4316:/usr/include/c++/10/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
4317:/usr/include/c++/10/bits/basic_string.h **** 	append(const _Tp& __svt, size_type __pos, size_type __n = npos)
4318:/usr/include/c++/10/bits/basic_string.h **** 	{
4319:/usr/include/c++/10/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4320:/usr/include/c++/10/bits/basic_string.h **** 	  return append(__sv.data()
4321:/usr/include/c++/10/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::append"),
4322:/usr/include/c++/10/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
4323:/usr/include/c++/10/bits/basic_string.h **** 	}
4324:/usr/include/c++/10/bits/basic_string.h **** #endif // C++17
4325:/usr/include/c++/10/bits/basic_string.h **** 
4326:/usr/include/c++/10/bits/basic_string.h ****       /**
4327:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Append a single character.
4328:/usr/include/c++/10/bits/basic_string.h ****        *  @param __c  Character to append.
4329:/usr/include/c++/10/bits/basic_string.h ****        */
4330:/usr/include/c++/10/bits/basic_string.h ****       void
4331:/usr/include/c++/10/bits/basic_string.h ****       push_back(_CharT __c)
4332:/usr/include/c++/10/bits/basic_string.h ****       { 
4333:/usr/include/c++/10/bits/basic_string.h **** 	const size_type __len = 1 + this->size();
4334:/usr/include/c++/10/bits/basic_string.h **** 	if (__len > this->capacity() || _M_rep()->_M_is_shared())
4335:/usr/include/c++/10/bits/basic_string.h **** 	  this->reserve(__len);
4336:/usr/include/c++/10/bits/basic_string.h **** 	traits_type::assign(_M_data()[this->size()], __c);
4337:/usr/include/c++/10/bits/basic_string.h **** 	_M_rep()->_M_set_length_and_sharable(__len);
4338:/usr/include/c++/10/bits/basic_string.h ****       }
4339:/usr/include/c++/10/bits/basic_string.h **** 
4340:/usr/include/c++/10/bits/basic_string.h ****       /**
4341:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
4342:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __str  Source string to use.
4343:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
4344:/usr/include/c++/10/bits/basic_string.h ****        */
4345:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
4346:/usr/include/c++/10/bits/basic_string.h ****       assign(const basic_string& __str);
4347:/usr/include/c++/10/bits/basic_string.h **** 
4348:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201103L
4349:/usr/include/c++/10/bits/basic_string.h ****       /**
4350:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
4351:/usr/include/c++/10/bits/basic_string.h ****        *  @param  __str  Source string to use.
4352:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
4353:/usr/include/c++/10/bits/basic_string.h ****        *
4354:/usr/include/c++/10/bits/basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
4355:/usr/include/c++/10/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
4356:/usr/include/c++/10/bits/basic_string.h ****        */
4357:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
4358:/usr/include/c++/10/bits/basic_string.h ****       assign(basic_string&& __str)
4359:/usr/include/c++/10/bits/basic_string.h ****       noexcept(allocator_traits<_Alloc>::is_always_equal::value)
4360:/usr/include/c++/10/bits/basic_string.h ****       {
AARCH64 GAS  obj/extInstr.s 			page 164


4361:/usr/include/c++/10/bits/basic_string.h **** 	this->swap(__str);
4362:/usr/include/c++/10/bits/basic_string.h **** 	return *this;
4363:/usr/include/c++/10/bits/basic_string.h ****       }
4364:/usr/include/c++/10/bits/basic_string.h **** #endif // C++11
4365:/usr/include/c++/10/bits/basic_string.h **** 
4366:/usr/include/c++/10/bits/basic_string.h ****       /**
4367:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Set value to a substring of a string.
4368:/usr/include/c++/10/bits/basic_string.h ****        *  @param __str  The string to use.
4369:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of the first character of str.
4370:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  Number of characters to use.
4371:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
4372:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
4373:/usr/include/c++/10/bits/basic_string.h ****        *
4374:/usr/include/c++/10/bits/basic_string.h ****        *  This function sets this string to the substring of @a __str
4375:/usr/include/c++/10/bits/basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
4376:/usr/include/c++/10/bits/basic_string.h ****        *  is larger than the number of available characters in @a
4377:/usr/include/c++/10/bits/basic_string.h ****        *  __str, the remainder of @a __str is used.
4378:/usr/include/c++/10/bits/basic_string.h ****        */
4379:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
4380:/usr/include/c++/10/bits/basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n = npos)
4381:/usr/include/c++/10/bits/basic_string.h ****       { return this->assign(__str._M_data()
4382:/usr/include/c++/10/bits/basic_string.h **** 			    + __str._M_check(__pos, "basic_string::assign"),
4383:/usr/include/c++/10/bits/basic_string.h **** 			    __str._M_limit(__pos, __n)); }
4384:/usr/include/c++/10/bits/basic_string.h **** 
4385:/usr/include/c++/10/bits/basic_string.h ****       /**
4386:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Set value to a C substring.
4387:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  The C string to use.
4388:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  Number of characters to use.
4389:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
4390:/usr/include/c++/10/bits/basic_string.h ****        *
4391:/usr/include/c++/10/bits/basic_string.h ****        *  This function sets the value of this string to the first @a __n
4392:/usr/include/c++/10/bits/basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
4393:/usr/include/c++/10/bits/basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
4394:/usr/include/c++/10/bits/basic_string.h ****        */
4395:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
4396:/usr/include/c++/10/bits/basic_string.h ****       assign(const _CharT* __s, size_type __n);
4397:/usr/include/c++/10/bits/basic_string.h **** 
4398:/usr/include/c++/10/bits/basic_string.h ****       /**
4399:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Set value to contents of a C string.
4400:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  The C string to use.
4401:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
4402:/usr/include/c++/10/bits/basic_string.h ****        *
4403:/usr/include/c++/10/bits/basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
4404:/usr/include/c++/10/bits/basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
4405:/usr/include/c++/10/bits/basic_string.h ****        *  function returns.
4406:/usr/include/c++/10/bits/basic_string.h ****        */
4407:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
4408:/usr/include/c++/10/bits/basic_string.h ****       assign(const _CharT* __s)
4409:/usr/include/c++/10/bits/basic_string.h ****       {
4410:/usr/include/c++/10/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4411:/usr/include/c++/10/bits/basic_string.h **** 	return this->assign(__s, traits_type::length(__s));
4412:/usr/include/c++/10/bits/basic_string.h ****       }
4413:/usr/include/c++/10/bits/basic_string.h **** 
4414:/usr/include/c++/10/bits/basic_string.h ****       /**
4415:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Set value to multiple characters.
4416:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  Length of the resulting string.
4417:/usr/include/c++/10/bits/basic_string.h ****        *  @param __c  The character to use.
AARCH64 GAS  obj/extInstr.s 			page 165


4418:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
4419:/usr/include/c++/10/bits/basic_string.h ****        *
4420:/usr/include/c++/10/bits/basic_string.h ****        *  This function sets the value of this string to @a __n copies of
4421:/usr/include/c++/10/bits/basic_string.h ****        *  character @a __c.
4422:/usr/include/c++/10/bits/basic_string.h ****        */
4423:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
4424:/usr/include/c++/10/bits/basic_string.h ****       assign(size_type __n, _CharT __c)
4425:/usr/include/c++/10/bits/basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
4426:/usr/include/c++/10/bits/basic_string.h **** 
4427:/usr/include/c++/10/bits/basic_string.h ****       /**
4428:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Set value to a range of characters.
4429:/usr/include/c++/10/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
4430:/usr/include/c++/10/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
4431:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
4432:/usr/include/c++/10/bits/basic_string.h ****        *
4433:/usr/include/c++/10/bits/basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
4434:/usr/include/c++/10/bits/basic_string.h ****       */
4435:/usr/include/c++/10/bits/basic_string.h ****       template<class _InputIterator>
4436:/usr/include/c++/10/bits/basic_string.h ****         basic_string&
4437:/usr/include/c++/10/bits/basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
4438:/usr/include/c++/10/bits/basic_string.h ****         { return this->replace(_M_ibegin(), _M_iend(), __first, __last); }
4439:/usr/include/c++/10/bits/basic_string.h **** 
4440:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201103L
4441:/usr/include/c++/10/bits/basic_string.h ****       /**
4442:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
4443:/usr/include/c++/10/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
4444:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
4445:/usr/include/c++/10/bits/basic_string.h ****        */
4446:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
4447:/usr/include/c++/10/bits/basic_string.h ****       assign(initializer_list<_CharT> __l)
4448:/usr/include/c++/10/bits/basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
4449:/usr/include/c++/10/bits/basic_string.h **** #endif // C++11
4450:/usr/include/c++/10/bits/basic_string.h **** 
4451:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201703L
4452:/usr/include/c++/10/bits/basic_string.h ****       /**
4453:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Set value from a string_view.
4454:/usr/include/c++/10/bits/basic_string.h ****        *  @param __svt The source object convertible to string_view.
4455:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
4456:/usr/include/c++/10/bits/basic_string.h ****        */
4457:/usr/include/c++/10/bits/basic_string.h ****       template<typename _Tp>
4458:/usr/include/c++/10/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4459:/usr/include/c++/10/bits/basic_string.h **** 	assign(const _Tp& __svt)
4460:/usr/include/c++/10/bits/basic_string.h **** 	{
4461:/usr/include/c++/10/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4462:/usr/include/c++/10/bits/basic_string.h **** 	  return this->assign(__sv.data(), __sv.size());
4463:/usr/include/c++/10/bits/basic_string.h **** 	}
4464:/usr/include/c++/10/bits/basic_string.h **** 
4465:/usr/include/c++/10/bits/basic_string.h ****       /**
4466:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Set value from a range of characters in a string_view.
4467:/usr/include/c++/10/bits/basic_string.h ****        *  @param __svt  The source object convertible to string_view.
4468:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  The position in the string_view to assign from.
4469:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  The number of characters to assign.
4470:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
4471:/usr/include/c++/10/bits/basic_string.h ****        */
4472:/usr/include/c++/10/bits/basic_string.h ****       template<typename _Tp>
4473:/usr/include/c++/10/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
4474:/usr/include/c++/10/bits/basic_string.h ****         assign(const _Tp& __svt, size_type __pos, size_type __n = npos)
AARCH64 GAS  obj/extInstr.s 			page 166


4475:/usr/include/c++/10/bits/basic_string.h **** 	{
4476:/usr/include/c++/10/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4477:/usr/include/c++/10/bits/basic_string.h **** 	  return assign(__sv.data()
4478:/usr/include/c++/10/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::assign"),
4479:/usr/include/c++/10/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
4480:/usr/include/c++/10/bits/basic_string.h **** 	}
4481:/usr/include/c++/10/bits/basic_string.h **** #endif // C++17
4482:/usr/include/c++/10/bits/basic_string.h **** 
4483:/usr/include/c++/10/bits/basic_string.h ****       /**
4484:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Insert multiple characters.
4485:/usr/include/c++/10/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4486:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  Number of characters to insert
4487:/usr/include/c++/10/bits/basic_string.h ****        *  @param __c  The character to insert.
4488:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4489:/usr/include/c++/10/bits/basic_string.h ****        *
4490:/usr/include/c++/10/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
4491:/usr/include/c++/10/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
4492:/usr/include/c++/10/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
4493:/usr/include/c++/10/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4494:/usr/include/c++/10/bits/basic_string.h ****        *  change if an error is thrown.
4495:/usr/include/c++/10/bits/basic_string.h ****       */
4496:/usr/include/c++/10/bits/basic_string.h ****       void
4497:/usr/include/c++/10/bits/basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
4498:/usr/include/c++/10/bits/basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
4499:/usr/include/c++/10/bits/basic_string.h **** 
4500:/usr/include/c++/10/bits/basic_string.h ****       /**
4501:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Insert a range of characters.
4502:/usr/include/c++/10/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4503:/usr/include/c++/10/bits/basic_string.h ****        *  @param __beg  Start of range.
4504:/usr/include/c++/10/bits/basic_string.h ****        *  @param __end  End of range.
4505:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4506:/usr/include/c++/10/bits/basic_string.h ****        *
4507:/usr/include/c++/10/bits/basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
4508:/usr/include/c++/10/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
4509:/usr/include/c++/10/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4510:/usr/include/c++/10/bits/basic_string.h ****        *  change if an error is thrown.
4511:/usr/include/c++/10/bits/basic_string.h ****       */
4512:/usr/include/c++/10/bits/basic_string.h ****       template<class _InputIterator>
4513:/usr/include/c++/10/bits/basic_string.h ****         void
4514:/usr/include/c++/10/bits/basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
4515:/usr/include/c++/10/bits/basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
4516:/usr/include/c++/10/bits/basic_string.h **** 
4517:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201103L
4518:/usr/include/c++/10/bits/basic_string.h ****       /**
4519:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Insert an initializer_list of characters.
4520:/usr/include/c++/10/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4521:/usr/include/c++/10/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
4522:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4523:/usr/include/c++/10/bits/basic_string.h ****        */
4524:/usr/include/c++/10/bits/basic_string.h ****       void
4525:/usr/include/c++/10/bits/basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
4526:/usr/include/c++/10/bits/basic_string.h ****       {
4527:/usr/include/c++/10/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
4528:/usr/include/c++/10/bits/basic_string.h **** 	this->insert(__p - _M_ibegin(), __l.begin(), __l.size());
4529:/usr/include/c++/10/bits/basic_string.h ****       }
4530:/usr/include/c++/10/bits/basic_string.h **** #endif // C++11
4531:/usr/include/c++/10/bits/basic_string.h **** 
AARCH64 GAS  obj/extInstr.s 			page 167


4532:/usr/include/c++/10/bits/basic_string.h ****       /**
4533:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Insert value of a string.
4534:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos1  Position in string to insert at.
4535:/usr/include/c++/10/bits/basic_string.h ****        *  @param __str  The string to insert.
4536:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
4537:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4538:/usr/include/c++/10/bits/basic_string.h ****        *
4539:/usr/include/c++/10/bits/basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
4540:/usr/include/c++/10/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
4541:/usr/include/c++/10/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4542:/usr/include/c++/10/bits/basic_string.h ****        *  change if an error is thrown.
4543:/usr/include/c++/10/bits/basic_string.h ****       */
4544:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
4545:/usr/include/c++/10/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
4546:/usr/include/c++/10/bits/basic_string.h ****       { return this->insert(__pos1, __str, size_type(0), __str.size()); }
4547:/usr/include/c++/10/bits/basic_string.h **** 
4548:/usr/include/c++/10/bits/basic_string.h ****       /**
4549:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Insert a substring.
4550:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos1  Position in string to insert at.
4551:/usr/include/c++/10/bits/basic_string.h ****        *  @param __str  The string to insert.
4552:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
4553:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
4554:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
4555:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4556:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
4557:/usr/include/c++/10/bits/basic_string.h ****        *  @a __pos2 > @a str.size().
4558:/usr/include/c++/10/bits/basic_string.h ****        *
4559:/usr/include/c++/10/bits/basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
4560:/usr/include/c++/10/bits/basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
4561:/usr/include/c++/10/bits/basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
4562:/usr/include/c++/10/bits/basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
4563:/usr/include/c++/10/bits/basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
4564:/usr/include/c++/10/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4565:/usr/include/c++/10/bits/basic_string.h ****       */
4566:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
4567:/usr/include/c++/10/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
4568:/usr/include/c++/10/bits/basic_string.h **** 	     size_type __pos2, size_type __n = npos)
4569:/usr/include/c++/10/bits/basic_string.h ****       { return this->insert(__pos1, __str._M_data()
4570:/usr/include/c++/10/bits/basic_string.h **** 			    + __str._M_check(__pos2, "basic_string::insert"),
4571:/usr/include/c++/10/bits/basic_string.h **** 			    __str._M_limit(__pos2, __n)); }
4572:/usr/include/c++/10/bits/basic_string.h **** 
4573:/usr/include/c++/10/bits/basic_string.h ****       /**
4574:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Insert a C substring.
4575:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Position in string to insert at.
4576:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  The C string to insert.
4577:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  The number of characters to insert.
4578:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
4579:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4580:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
4581:/usr/include/c++/10/bits/basic_string.h ****        *  string.
4582:/usr/include/c++/10/bits/basic_string.h ****        *
4583:/usr/include/c++/10/bits/basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
4584:/usr/include/c++/10/bits/basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
4585:/usr/include/c++/10/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
4586:/usr/include/c++/10/bits/basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
4587:/usr/include/c++/10/bits/basic_string.h ****        *  doesn't change if an error is thrown.
4588:/usr/include/c++/10/bits/basic_string.h ****       */
AARCH64 GAS  obj/extInstr.s 			page 168


4589:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
4590:/usr/include/c++/10/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n);
4591:/usr/include/c++/10/bits/basic_string.h **** 
4592:/usr/include/c++/10/bits/basic_string.h ****       /**
4593:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Insert a C string.
4594:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Position in string to insert at.
4595:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  The C string to insert.
4596:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
4597:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4598:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4599:/usr/include/c++/10/bits/basic_string.h ****        *  string.
4600:/usr/include/c++/10/bits/basic_string.h ****        *
4601:/usr/include/c++/10/bits/basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
4602:/usr/include/c++/10/bits/basic_string.h ****        *  adding characters causes the length to exceed max_size(),
4603:/usr/include/c++/10/bits/basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
4604:/usr/include/c++/10/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
4605:/usr/include/c++/10/bits/basic_string.h ****        *  thrown.
4606:/usr/include/c++/10/bits/basic_string.h ****       */
4607:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
4608:/usr/include/c++/10/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s)
4609:/usr/include/c++/10/bits/basic_string.h ****       {
4610:/usr/include/c++/10/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4611:/usr/include/c++/10/bits/basic_string.h **** 	return this->insert(__pos, __s, traits_type::length(__s));
4612:/usr/include/c++/10/bits/basic_string.h ****       }
4613:/usr/include/c++/10/bits/basic_string.h **** 
4614:/usr/include/c++/10/bits/basic_string.h ****       /**
4615:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Insert multiple characters.
4616:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index in string to insert at.
4617:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  Number of characters to insert
4618:/usr/include/c++/10/bits/basic_string.h ****        *  @param __c  The character to insert.
4619:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
4620:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4621:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
4622:/usr/include/c++/10/bits/basic_string.h ****        *  string.
4623:/usr/include/c++/10/bits/basic_string.h ****        *
4624:/usr/include/c++/10/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
4625:/usr/include/c++/10/bits/basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
4626:/usr/include/c++/10/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
4627:/usr/include/c++/10/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4628:/usr/include/c++/10/bits/basic_string.h ****        *  change if an error is thrown.
4629:/usr/include/c++/10/bits/basic_string.h ****       */
4630:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
4631:/usr/include/c++/10/bits/basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
4632:/usr/include/c++/10/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
4633:/usr/include/c++/10/bits/basic_string.h **** 			      size_type(0), __n, __c); }
4634:/usr/include/c++/10/bits/basic_string.h **** 
4635:/usr/include/c++/10/bits/basic_string.h ****       /**
4636:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Insert one character.
4637:/usr/include/c++/10/bits/basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
4638:/usr/include/c++/10/bits/basic_string.h ****        *  @param __c  The character to insert.
4639:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Iterator referencing newly inserted char.
4640:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4641:/usr/include/c++/10/bits/basic_string.h ****        *
4642:/usr/include/c++/10/bits/basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
4643:/usr/include/c++/10/bits/basic_string.h ****        *  If adding character causes the length to exceed max_size(),
4644:/usr/include/c++/10/bits/basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
4645:/usr/include/c++/10/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
AARCH64 GAS  obj/extInstr.s 			page 169


4646:/usr/include/c++/10/bits/basic_string.h ****        *  change if an error is thrown.
4647:/usr/include/c++/10/bits/basic_string.h ****       */
4648:/usr/include/c++/10/bits/basic_string.h ****       iterator
4649:/usr/include/c++/10/bits/basic_string.h ****       insert(iterator __p, _CharT __c)
4650:/usr/include/c++/10/bits/basic_string.h ****       {
4651:/usr/include/c++/10/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
4652:/usr/include/c++/10/bits/basic_string.h **** 	const size_type __pos = __p - _M_ibegin();
4653:/usr/include/c++/10/bits/basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
4654:/usr/include/c++/10/bits/basic_string.h **** 	_M_rep()->_M_set_leaked();
4655:/usr/include/c++/10/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
4656:/usr/include/c++/10/bits/basic_string.h ****       }
4657:/usr/include/c++/10/bits/basic_string.h **** 
4658:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201703L
4659:/usr/include/c++/10/bits/basic_string.h ****       /**
4660:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Insert a string_view.
4661:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Position in string to insert at.
4662:/usr/include/c++/10/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
4663:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
4664:/usr/include/c++/10/bits/basic_string.h ****       */
4665:/usr/include/c++/10/bits/basic_string.h ****       template<typename _Tp>
4666:/usr/include/c++/10/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4667:/usr/include/c++/10/bits/basic_string.h **** 	insert(size_type __pos, const _Tp& __svt)
4668:/usr/include/c++/10/bits/basic_string.h **** 	{
4669:/usr/include/c++/10/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4670:/usr/include/c++/10/bits/basic_string.h **** 	  return this->insert(__pos, __sv.data(), __sv.size());
4671:/usr/include/c++/10/bits/basic_string.h **** 	}
4672:/usr/include/c++/10/bits/basic_string.h **** 
4673:/usr/include/c++/10/bits/basic_string.h ****       /**
4674:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Insert a string_view.
4675:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Position in string to insert at.
4676:/usr/include/c++/10/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert from.
4677:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Position in string_view to insert
4678:/usr/include/c++/10/bits/basic_string.h ****        *  from.
4679:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n    The number of characters to insert.
4680:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
4681:/usr/include/c++/10/bits/basic_string.h ****       */
4682:/usr/include/c++/10/bits/basic_string.h ****       template<typename _Tp>
4683:/usr/include/c++/10/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
4684:/usr/include/c++/10/bits/basic_string.h ****         insert(size_type __pos1, const _Tp& __svt,
4685:/usr/include/c++/10/bits/basic_string.h **** 	       size_type __pos2, size_type __n = npos)
4686:/usr/include/c++/10/bits/basic_string.h **** 	{
4687:/usr/include/c++/10/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4688:/usr/include/c++/10/bits/basic_string.h **** 	  return this->replace(__pos1, size_type(0), __sv.data()
4689:/usr/include/c++/10/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::insert"),
4690:/usr/include/c++/10/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n));
4691:/usr/include/c++/10/bits/basic_string.h **** 	}
4692:/usr/include/c++/10/bits/basic_string.h **** #endif // C++17
4693:/usr/include/c++/10/bits/basic_string.h **** 
4694:/usr/include/c++/10/bits/basic_string.h ****       /**
4695:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Remove characters.
4696:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
4697:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
4698:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
4699:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4700:/usr/include/c++/10/bits/basic_string.h ****        *  string.
4701:/usr/include/c++/10/bits/basic_string.h ****        *
4702:/usr/include/c++/10/bits/basic_string.h ****        *  Removes @a __n characters from this string starting at @a
AARCH64 GAS  obj/extInstr.s 			page 170


4703:/usr/include/c++/10/bits/basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
4704:/usr/include/c++/10/bits/basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
4705:/usr/include/c++/10/bits/basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
4706:/usr/include/c++/10/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4707:/usr/include/c++/10/bits/basic_string.h ****        *  change if an error is thrown.
4708:/usr/include/c++/10/bits/basic_string.h ****       */
4709:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
4710:/usr/include/c++/10/bits/basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
4711:/usr/include/c++/10/bits/basic_string.h ****       { 
4712:/usr/include/c++/10/bits/basic_string.h **** 	_M_mutate(_M_check(__pos, "basic_string::erase"),
4713:/usr/include/c++/10/bits/basic_string.h **** 		  _M_limit(__pos, __n), size_type(0));
4714:/usr/include/c++/10/bits/basic_string.h **** 	return *this;
4715:/usr/include/c++/10/bits/basic_string.h ****       }
4716:/usr/include/c++/10/bits/basic_string.h **** 
4717:/usr/include/c++/10/bits/basic_string.h ****       /**
4718:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Remove one character.
4719:/usr/include/c++/10/bits/basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
4720:/usr/include/c++/10/bits/basic_string.h ****        *  @return  iterator referencing same location after removal.
4721:/usr/include/c++/10/bits/basic_string.h ****        *
4722:/usr/include/c++/10/bits/basic_string.h ****        *  Removes the character at @a __position from this string. The value
4723:/usr/include/c++/10/bits/basic_string.h ****        *  of the string doesn't change if an error is thrown.
4724:/usr/include/c++/10/bits/basic_string.h ****       */
4725:/usr/include/c++/10/bits/basic_string.h ****       iterator
4726:/usr/include/c++/10/bits/basic_string.h ****       erase(iterator __position)
4727:/usr/include/c++/10/bits/basic_string.h ****       {
4728:/usr/include/c++/10/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= _M_ibegin()
4729:/usr/include/c++/10/bits/basic_string.h **** 				 && __position < _M_iend());
4730:/usr/include/c++/10/bits/basic_string.h **** 	const size_type __pos = __position - _M_ibegin();
4731:/usr/include/c++/10/bits/basic_string.h **** 	_M_mutate(__pos, size_type(1), size_type(0));
4732:/usr/include/c++/10/bits/basic_string.h **** 	_M_rep()->_M_set_leaked();
4733:/usr/include/c++/10/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
4734:/usr/include/c++/10/bits/basic_string.h ****       }
4735:/usr/include/c++/10/bits/basic_string.h **** 
4736:/usr/include/c++/10/bits/basic_string.h ****       /**
4737:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Remove a range of characters.
4738:/usr/include/c++/10/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
4739:/usr/include/c++/10/bits/basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
4740:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Iterator referencing location of first after removal.
4741:/usr/include/c++/10/bits/basic_string.h ****        *
4742:/usr/include/c++/10/bits/basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
4743:/usr/include/c++/10/bits/basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
4744:/usr/include/c++/10/bits/basic_string.h ****       */
4745:/usr/include/c++/10/bits/basic_string.h ****       iterator
4746:/usr/include/c++/10/bits/basic_string.h ****       erase(iterator __first, iterator __last);
4747:/usr/include/c++/10/bits/basic_string.h ****  
4748:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201103L
4749:/usr/include/c++/10/bits/basic_string.h ****       /**
4750:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Remove the last character.
4751:/usr/include/c++/10/bits/basic_string.h ****        *
4752:/usr/include/c++/10/bits/basic_string.h ****        *  The string must be non-empty.
4753:/usr/include/c++/10/bits/basic_string.h ****        */
4754:/usr/include/c++/10/bits/basic_string.h ****       void
4755:/usr/include/c++/10/bits/basic_string.h ****       pop_back() // FIXME C++11: should be noexcept.
4756:/usr/include/c++/10/bits/basic_string.h ****       {
4757:/usr/include/c++/10/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4758:/usr/include/c++/10/bits/basic_string.h **** 	erase(size() - 1, 1);
4759:/usr/include/c++/10/bits/basic_string.h ****       }
AARCH64 GAS  obj/extInstr.s 			page 171


4760:/usr/include/c++/10/bits/basic_string.h **** #endif // C++11
4761:/usr/include/c++/10/bits/basic_string.h **** 
4762:/usr/include/c++/10/bits/basic_string.h ****       /**
4763:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
4764:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
4765:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  Number of characters to be replaced.
4766:/usr/include/c++/10/bits/basic_string.h ****        *  @param __str  String to insert.
4767:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
4768:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4769:/usr/include/c++/10/bits/basic_string.h ****        *  string.
4770:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4771:/usr/include/c++/10/bits/basic_string.h ****        *
4772:/usr/include/c++/10/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
4773:/usr/include/c++/10/bits/basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
4774:/usr/include/c++/10/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
4775:/usr/include/c++/10/bits/basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
4776:/usr/include/c++/10/bits/basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
4777:/usr/include/c++/10/bits/basic_string.h ****        *  error is thrown.
4778:/usr/include/c++/10/bits/basic_string.h ****       */
4779:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
4780:/usr/include/c++/10/bits/basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
4781:/usr/include/c++/10/bits/basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
4782:/usr/include/c++/10/bits/basic_string.h **** 
4783:/usr/include/c++/10/bits/basic_string.h ****       /**
4784:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
4785:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos1  Index of first character to replace.
4786:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4787:/usr/include/c++/10/bits/basic_string.h ****        *  @param __str  String to insert.
4788:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos2  Index of first character of str to use.
4789:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n2  Number of characters from str to use.
4790:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
4791:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
4792:/usr/include/c++/10/bits/basic_string.h ****        *  __str.size().
4793:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4794:/usr/include/c++/10/bits/basic_string.h ****        *
4795:/usr/include/c++/10/bits/basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
4796:/usr/include/c++/10/bits/basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
4797:/usr/include/c++/10/bits/basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
4798:/usr/include/c++/10/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
4799:/usr/include/c++/10/bits/basic_string.h ****        *  string doesn't change if an error is thrown.
4800:/usr/include/c++/10/bits/basic_string.h ****       */
4801:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
4802:/usr/include/c++/10/bits/basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
4803:/usr/include/c++/10/bits/basic_string.h **** 	      size_type __pos2, size_type __n2 = npos)
4804:/usr/include/c++/10/bits/basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
4805:/usr/include/c++/10/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
4806:/usr/include/c++/10/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
4807:/usr/include/c++/10/bits/basic_string.h **** 
4808:/usr/include/c++/10/bits/basic_string.h ****       /**
4809:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Replace characters with value of a C substring.
4810:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
4811:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4812:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  C string to insert.
4813:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
4814:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
4815:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
4816:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
AARCH64 GAS  obj/extInstr.s 			page 172


4817:/usr/include/c++/10/bits/basic_string.h ****        *
4818:/usr/include/c++/10/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
4819:/usr/include/c++/10/bits/basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
4820:/usr/include/c++/10/bits/basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
4821:/usr/include/c++/10/bits/basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
4822:/usr/include/c++/10/bits/basic_string.h ****        *  the length of result exceeds max_size(), length_error is
4823:/usr/include/c++/10/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
4824:/usr/include/c++/10/bits/basic_string.h ****        *  is thrown.
4825:/usr/include/c++/10/bits/basic_string.h ****       */
4826:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
4827:/usr/include/c++/10/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
4828:/usr/include/c++/10/bits/basic_string.h **** 	      size_type __n2);
4829:/usr/include/c++/10/bits/basic_string.h **** 
4830:/usr/include/c++/10/bits/basic_string.h ****       /**
4831:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Replace characters with value of a C string.
4832:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
4833:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4834:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  C string to insert.
4835:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
4836:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
4837:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4838:/usr/include/c++/10/bits/basic_string.h ****        *
4839:/usr/include/c++/10/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
4840:/usr/include/c++/10/bits/basic_string.h ****        *  from this string.  In place, the characters of @a __s are
4841:/usr/include/c++/10/bits/basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
4842:/usr/include/c++/10/bits/basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
4843:/usr/include/c++/10/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4844:/usr/include/c++/10/bits/basic_string.h ****        *  change if an error is thrown.
4845:/usr/include/c++/10/bits/basic_string.h ****       */
4846:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
4847:/usr/include/c++/10/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
4848:/usr/include/c++/10/bits/basic_string.h ****       {
4849:/usr/include/c++/10/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4850:/usr/include/c++/10/bits/basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
4851:/usr/include/c++/10/bits/basic_string.h ****       }
4852:/usr/include/c++/10/bits/basic_string.h **** 
4853:/usr/include/c++/10/bits/basic_string.h ****       /**
4854:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Replace characters with multiple characters.
4855:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
4856:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4857:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n2  Number of characters to insert.
4858:/usr/include/c++/10/bits/basic_string.h ****        *  @param __c  Character to insert.
4859:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
4860:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
4861:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4862:/usr/include/c++/10/bits/basic_string.h ****        *
4863:/usr/include/c++/10/bits/basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
4864:/usr/include/c++/10/bits/basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
4865:/usr/include/c++/10/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
4866:/usr/include/c++/10/bits/basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
4867:/usr/include/c++/10/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
4868:/usr/include/c++/10/bits/basic_string.h ****        *  is thrown.
4869:/usr/include/c++/10/bits/basic_string.h ****       */
4870:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
4871:/usr/include/c++/10/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
4872:/usr/include/c++/10/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
4873:/usr/include/c++/10/bits/basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
AARCH64 GAS  obj/extInstr.s 			page 173


4874:/usr/include/c++/10/bits/basic_string.h **** 
4875:/usr/include/c++/10/bits/basic_string.h ****       /**
4876:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Replace range of characters with string.
4877:/usr/include/c++/10/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4878:/usr/include/c++/10/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4879:/usr/include/c++/10/bits/basic_string.h ****        *  @param __str  String value to insert.
4880:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
4881:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4882:/usr/include/c++/10/bits/basic_string.h ****        *
4883:/usr/include/c++/10/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4884:/usr/include/c++/10/bits/basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
4885:/usr/include/c++/10/bits/basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
4886:/usr/include/c++/10/bits/basic_string.h ****        *  the string doesn't change if an error is thrown.
4887:/usr/include/c++/10/bits/basic_string.h ****       */
4888:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
4889:/usr/include/c++/10/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const basic_string& __str)
4890:/usr/include/c++/10/bits/basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
4891:/usr/include/c++/10/bits/basic_string.h **** 
4892:/usr/include/c++/10/bits/basic_string.h ****       /**
4893:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Replace range of characters with C substring.
4894:/usr/include/c++/10/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4895:/usr/include/c++/10/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4896:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  C string value to insert.
4897:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  Number of characters from s to insert.
4898:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
4899:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4900:/usr/include/c++/10/bits/basic_string.h ****        *
4901:/usr/include/c++/10/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4902:/usr/include/c++/10/bits/basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
4903:/usr/include/c++/10/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
4904:/usr/include/c++/10/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
4905:/usr/include/c++/10/bits/basic_string.h ****        *  thrown.
4906:/usr/include/c++/10/bits/basic_string.h ****       */
4907:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
4908:/usr/include/c++/10/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s, size_type __n)
4909:/usr/include/c++/10/bits/basic_string.h ****       {
4910:/usr/include/c++/10/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4911:/usr/include/c++/10/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4912:/usr/include/c++/10/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1, __s, __n);
4913:/usr/include/c++/10/bits/basic_string.h ****       }
4914:/usr/include/c++/10/bits/basic_string.h **** 
4915:/usr/include/c++/10/bits/basic_string.h ****       /**
4916:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Replace range of characters with C string.
4917:/usr/include/c++/10/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4918:/usr/include/c++/10/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4919:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  C string value to insert.
4920:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
4921:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4922:/usr/include/c++/10/bits/basic_string.h ****        *
4923:/usr/include/c++/10/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4924:/usr/include/c++/10/bits/basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
4925:/usr/include/c++/10/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
4926:/usr/include/c++/10/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4927:/usr/include/c++/10/bits/basic_string.h ****       */
4928:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
4929:/usr/include/c++/10/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s)
4930:/usr/include/c++/10/bits/basic_string.h ****       {
AARCH64 GAS  obj/extInstr.s 			page 174


4931:/usr/include/c++/10/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4932:/usr/include/c++/10/bits/basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
4933:/usr/include/c++/10/bits/basic_string.h ****       }
4934:/usr/include/c++/10/bits/basic_string.h **** 
4935:/usr/include/c++/10/bits/basic_string.h ****       /**
4936:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Replace range of characters with multiple characters
4937:/usr/include/c++/10/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4938:/usr/include/c++/10/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4939:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
4940:/usr/include/c++/10/bits/basic_string.h ****        *  @param __c  Character to insert.
4941:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
4942:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4943:/usr/include/c++/10/bits/basic_string.h ****        *
4944:/usr/include/c++/10/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4945:/usr/include/c++/10/bits/basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
4946:/usr/include/c++/10/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
4947:/usr/include/c++/10/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4948:/usr/include/c++/10/bits/basic_string.h ****       */
4949:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
4950:/usr/include/c++/10/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, size_type __n, _CharT __c)
4951:/usr/include/c++/10/bits/basic_string.h ****       {
4952:/usr/include/c++/10/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4953:/usr/include/c++/10/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4954:/usr/include/c++/10/bits/basic_string.h **** 	return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __c);
4955:/usr/include/c++/10/bits/basic_string.h ****       }
4956:/usr/include/c++/10/bits/basic_string.h **** 
4957:/usr/include/c++/10/bits/basic_string.h ****       /**
4958:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Replace range of characters with range.
4959:/usr/include/c++/10/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4960:/usr/include/c++/10/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4961:/usr/include/c++/10/bits/basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
4962:/usr/include/c++/10/bits/basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
4963:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
4964:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4965:/usr/include/c++/10/bits/basic_string.h ****        *
4966:/usr/include/c++/10/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4967:/usr/include/c++/10/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
4968:/usr/include/c++/10/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
4969:/usr/include/c++/10/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
4970:/usr/include/c++/10/bits/basic_string.h ****        *  thrown.
4971:/usr/include/c++/10/bits/basic_string.h ****       */
4972:/usr/include/c++/10/bits/basic_string.h ****       template<class _InputIterator>
4973:/usr/include/c++/10/bits/basic_string.h ****         basic_string&
4974:/usr/include/c++/10/bits/basic_string.h ****         replace(iterator __i1, iterator __i2,
4975:/usr/include/c++/10/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
4976:/usr/include/c++/10/bits/basic_string.h ****         {
4977:/usr/include/c++/10/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4978:/usr/include/c++/10/bits/basic_string.h **** 				   && __i2 <= _M_iend());
4979:/usr/include/c++/10/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
4980:/usr/include/c++/10/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
4981:/usr/include/c++/10/bits/basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
4982:/usr/include/c++/10/bits/basic_string.h **** 	}
4983:/usr/include/c++/10/bits/basic_string.h **** 
4984:/usr/include/c++/10/bits/basic_string.h ****       // Specializations for the common case of pointer and iterator:
4985:/usr/include/c++/10/bits/basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
4986:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
4987:/usr/include/c++/10/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, _CharT* __k1, _CharT* __k2)
AARCH64 GAS  obj/extInstr.s 			page 175


4988:/usr/include/c++/10/bits/basic_string.h ****       {
4989:/usr/include/c++/10/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4990:/usr/include/c++/10/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4991:/usr/include/c++/10/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
4992:/usr/include/c++/10/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
4993:/usr/include/c++/10/bits/basic_string.h **** 			     __k1, __k2 - __k1);
4994:/usr/include/c++/10/bits/basic_string.h ****       }
4995:/usr/include/c++/10/bits/basic_string.h **** 
4996:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
4997:/usr/include/c++/10/bits/basic_string.h ****       replace(iterator __i1, iterator __i2,
4998:/usr/include/c++/10/bits/basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
4999:/usr/include/c++/10/bits/basic_string.h ****       {
5000:/usr/include/c++/10/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
5001:/usr/include/c++/10/bits/basic_string.h **** 				 && __i2 <= _M_iend());
5002:/usr/include/c++/10/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
5003:/usr/include/c++/10/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
5004:/usr/include/c++/10/bits/basic_string.h **** 			     __k1, __k2 - __k1);
5005:/usr/include/c++/10/bits/basic_string.h ****       }
5006:/usr/include/c++/10/bits/basic_string.h **** 
5007:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
5008:/usr/include/c++/10/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2)
5009:/usr/include/c++/10/bits/basic_string.h ****       {
5010:/usr/include/c++/10/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
5011:/usr/include/c++/10/bits/basic_string.h **** 				 && __i2 <= _M_iend());
5012:/usr/include/c++/10/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
5013:/usr/include/c++/10/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
5014:/usr/include/c++/10/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
5015:/usr/include/c++/10/bits/basic_string.h ****       }
5016:/usr/include/c++/10/bits/basic_string.h **** 
5017:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
5018:/usr/include/c++/10/bits/basic_string.h ****       replace(iterator __i1, iterator __i2,
5019:/usr/include/c++/10/bits/basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
5020:/usr/include/c++/10/bits/basic_string.h ****       {
5021:/usr/include/c++/10/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
5022:/usr/include/c++/10/bits/basic_string.h **** 				 && __i2 <= _M_iend());
5023:/usr/include/c++/10/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
5024:/usr/include/c++/10/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
5025:/usr/include/c++/10/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
5026:/usr/include/c++/10/bits/basic_string.h ****       }
5027:/usr/include/c++/10/bits/basic_string.h **** 
5028:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201103L
5029:/usr/include/c++/10/bits/basic_string.h ****       /**
5030:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
5031:/usr/include/c++/10/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
5032:/usr/include/c++/10/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
5033:/usr/include/c++/10/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
5034:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
5035:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
5036:/usr/include/c++/10/bits/basic_string.h ****        *
5037:/usr/include/c++/10/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
5038:/usr/include/c++/10/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
5039:/usr/include/c++/10/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
5040:/usr/include/c++/10/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
5041:/usr/include/c++/10/bits/basic_string.h ****        *  thrown.
5042:/usr/include/c++/10/bits/basic_string.h ****       */
5043:/usr/include/c++/10/bits/basic_string.h ****       basic_string& replace(iterator __i1, iterator __i2,
5044:/usr/include/c++/10/bits/basic_string.h **** 			    initializer_list<_CharT> __l)
AARCH64 GAS  obj/extInstr.s 			page 176


5045:/usr/include/c++/10/bits/basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.end()); }
5046:/usr/include/c++/10/bits/basic_string.h **** #endif // C++11
5047:/usr/include/c++/10/bits/basic_string.h **** 
5048:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201703L
5049:/usr/include/c++/10/bits/basic_string.h ****       /**
5050:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
5051:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  The position to replace at.
5052:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n    The number of characters to replace.
5053:/usr/include/c++/10/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
5054:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
5055:/usr/include/c++/10/bits/basic_string.h ****       */
5056:/usr/include/c++/10/bits/basic_string.h ****       template<typename _Tp>
5057:/usr/include/c++/10/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
5058:/usr/include/c++/10/bits/basic_string.h **** 	replace(size_type __pos, size_type __n, const _Tp& __svt)
5059:/usr/include/c++/10/bits/basic_string.h **** 	{
5060:/usr/include/c++/10/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5061:/usr/include/c++/10/bits/basic_string.h **** 	  return this->replace(__pos, __n, __sv.data(), __sv.size());
5062:/usr/include/c++/10/bits/basic_string.h **** 	}
5063:/usr/include/c++/10/bits/basic_string.h **** 
5064:/usr/include/c++/10/bits/basic_string.h ****       /**
5065:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
5066:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos1  The position to replace at.
5067:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n1    The number of characters to replace.
5068:/usr/include/c++/10/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
5069:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos2  The position in the string_view to insert from.
5070:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n2    The number of characters to insert.
5071:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
5072:/usr/include/c++/10/bits/basic_string.h ****       */
5073:/usr/include/c++/10/bits/basic_string.h ****       template<typename _Tp>
5074:/usr/include/c++/10/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
5075:/usr/include/c++/10/bits/basic_string.h ****         replace(size_type __pos1, size_type __n1, const _Tp& __svt,
5076:/usr/include/c++/10/bits/basic_string.h **** 		size_type __pos2, size_type __n2 = npos)
5077:/usr/include/c++/10/bits/basic_string.h **** 	{
5078:/usr/include/c++/10/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5079:/usr/include/c++/10/bits/basic_string.h **** 	  return this->replace(__pos1, __n1,
5080:/usr/include/c++/10/bits/basic_string.h **** 	      __sv.data()
5081:/usr/include/c++/10/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::replace"),
5082:/usr/include/c++/10/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n2));
5083:/usr/include/c++/10/bits/basic_string.h **** 	}
5084:/usr/include/c++/10/bits/basic_string.h **** 
5085:/usr/include/c++/10/bits/basic_string.h ****       /**
5086:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
5087:/usr/include/c++/10/bits/basic_string.h ****        *  @param __i1    An iterator referencing the start position
5088:/usr/include/c++/10/bits/basic_string.h ****           to replace at.
5089:/usr/include/c++/10/bits/basic_string.h ****        *  @param __i2    An iterator referencing the end position
5090:/usr/include/c++/10/bits/basic_string.h ****           for the replace.
5091:/usr/include/c++/10/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
5092:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Reference to this string.
5093:/usr/include/c++/10/bits/basic_string.h ****       */
5094:/usr/include/c++/10/bits/basic_string.h ****       template<typename _Tp>
5095:/usr/include/c++/10/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
5096:/usr/include/c++/10/bits/basic_string.h **** 	replace(const_iterator __i1, const_iterator __i2, const _Tp& __svt)
5097:/usr/include/c++/10/bits/basic_string.h **** 	{
5098:/usr/include/c++/10/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5099:/usr/include/c++/10/bits/basic_string.h **** 	  return this->replace(__i1 - begin(), __i2 - __i1, __sv);
5100:/usr/include/c++/10/bits/basic_string.h **** 	}
5101:/usr/include/c++/10/bits/basic_string.h **** #endif // C++17
AARCH64 GAS  obj/extInstr.s 			page 177


5102:/usr/include/c++/10/bits/basic_string.h **** 
5103:/usr/include/c++/10/bits/basic_string.h ****     private:
5104:/usr/include/c++/10/bits/basic_string.h ****       template<class _Integer>
5105:/usr/include/c++/10/bits/basic_string.h **** 	basic_string&
5106:/usr/include/c++/10/bits/basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n,
5107:/usr/include/c++/10/bits/basic_string.h **** 			    _Integer __val, __true_type)
5108:/usr/include/c++/10/bits/basic_string.h ****         { return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __val); }
5109:/usr/include/c++/10/bits/basic_string.h **** 
5110:/usr/include/c++/10/bits/basic_string.h ****       template<class _InputIterator>
5111:/usr/include/c++/10/bits/basic_string.h **** 	basic_string&
5112:/usr/include/c++/10/bits/basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1,
5113:/usr/include/c++/10/bits/basic_string.h **** 			    _InputIterator __k2, __false_type);
5114:/usr/include/c++/10/bits/basic_string.h **** 
5115:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
5116:/usr/include/c++/10/bits/basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
5117:/usr/include/c++/10/bits/basic_string.h **** 		     _CharT __c);
5118:/usr/include/c++/10/bits/basic_string.h **** 
5119:/usr/include/c++/10/bits/basic_string.h ****       basic_string&
5120:/usr/include/c++/10/bits/basic_string.h ****       _M_replace_safe(size_type __pos1, size_type __n1, const _CharT* __s,
5121:/usr/include/c++/10/bits/basic_string.h **** 		      size_type __n2);
5122:/usr/include/c++/10/bits/basic_string.h **** 
5123:/usr/include/c++/10/bits/basic_string.h ****       // _S_construct_aux is used to implement the 21.3.1 para 15 which
5124:/usr/include/c++/10/bits/basic_string.h ****       // requires special behaviour if _InIter is an integral type
5125:/usr/include/c++/10/bits/basic_string.h ****       template<class _InIterator>
5126:/usr/include/c++/10/bits/basic_string.h ****         static _CharT*
5127:/usr/include/c++/10/bits/basic_string.h ****         _S_construct_aux(_InIterator __beg, _InIterator __end,
5128:/usr/include/c++/10/bits/basic_string.h **** 			 const _Alloc& __a, __false_type)
5129:/usr/include/c++/10/bits/basic_string.h **** 	{
5130:/usr/include/c++/10/bits/basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
5131:/usr/include/c++/10/bits/basic_string.h ****           return _S_construct(__beg, __end, __a, _Tag());
5132:/usr/include/c++/10/bits/basic_string.h **** 	}
5133:/usr/include/c++/10/bits/basic_string.h **** 
5134:/usr/include/c++/10/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
5135:/usr/include/c++/10/bits/basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
5136:/usr/include/c++/10/bits/basic_string.h ****       template<class _Integer>
5137:/usr/include/c++/10/bits/basic_string.h ****         static _CharT*
5138:/usr/include/c++/10/bits/basic_string.h ****         _S_construct_aux(_Integer __beg, _Integer __end,
5139:/usr/include/c++/10/bits/basic_string.h **** 			 const _Alloc& __a, __true_type)
5140:/usr/include/c++/10/bits/basic_string.h ****         { return _S_construct_aux_2(static_cast<size_type>(__beg),
5141:/usr/include/c++/10/bits/basic_string.h **** 				    __end, __a); }
5142:/usr/include/c++/10/bits/basic_string.h **** 
5143:/usr/include/c++/10/bits/basic_string.h ****       static _CharT*
5144:/usr/include/c++/10/bits/basic_string.h ****       _S_construct_aux_2(size_type __req, _CharT __c, const _Alloc& __a)
5145:/usr/include/c++/10/bits/basic_string.h ****       { return _S_construct(__req, __c, __a); }
5146:/usr/include/c++/10/bits/basic_string.h **** 
5147:/usr/include/c++/10/bits/basic_string.h ****       template<class _InIterator>
5148:/usr/include/c++/10/bits/basic_string.h ****         static _CharT*
5149:/usr/include/c++/10/bits/basic_string.h ****         _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a)
5150:/usr/include/c++/10/bits/basic_string.h **** 	{
5151:/usr/include/c++/10/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
5152:/usr/include/c++/10/bits/basic_string.h **** 	  return _S_construct_aux(__beg, __end, __a, _Integral());
5153:/usr/include/c++/10/bits/basic_string.h ****         }
5154:/usr/include/c++/10/bits/basic_string.h **** 
5155:/usr/include/c++/10/bits/basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
5156:/usr/include/c++/10/bits/basic_string.h ****       template<class _InIterator>
5157:/usr/include/c++/10/bits/basic_string.h ****         static _CharT*
5158:/usr/include/c++/10/bits/basic_string.h ****          _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a,
AARCH64 GAS  obj/extInstr.s 			page 178


5159:/usr/include/c++/10/bits/basic_string.h **** 		      input_iterator_tag);
5160:/usr/include/c++/10/bits/basic_string.h **** 
5161:/usr/include/c++/10/bits/basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
5162:/usr/include/c++/10/bits/basic_string.h ****       // string::iterator, _CharT*, etc.
5163:/usr/include/c++/10/bits/basic_string.h ****       template<class _FwdIterator>
5164:/usr/include/c++/10/bits/basic_string.h ****         static _CharT*
5165:/usr/include/c++/10/bits/basic_string.h ****         _S_construct(_FwdIterator __beg, _FwdIterator __end, const _Alloc& __a,
5166:/usr/include/c++/10/bits/basic_string.h **** 		     forward_iterator_tag);
5167:/usr/include/c++/10/bits/basic_string.h **** 
5168:/usr/include/c++/10/bits/basic_string.h ****       static _CharT*
5169:/usr/include/c++/10/bits/basic_string.h ****       _S_construct(size_type __req, _CharT __c, const _Alloc& __a);
5170:/usr/include/c++/10/bits/basic_string.h **** 
5171:/usr/include/c++/10/bits/basic_string.h ****     public:
5172:/usr/include/c++/10/bits/basic_string.h **** 
5173:/usr/include/c++/10/bits/basic_string.h ****       /**
5174:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Copy substring into C string.
5175:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  C string to copy value into.
5176:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  Number of characters to copy.
5177:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of first character to copy.
5178:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Number of characters actually copied
5179:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
5180:/usr/include/c++/10/bits/basic_string.h ****        *
5181:/usr/include/c++/10/bits/basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
5182:/usr/include/c++/10/bits/basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
5183:/usr/include/c++/10/bits/basic_string.h ****        *  out_of_range is thrown.
5184:/usr/include/c++/10/bits/basic_string.h ****       */
5185:/usr/include/c++/10/bits/basic_string.h ****       size_type
5186:/usr/include/c++/10/bits/basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
5187:/usr/include/c++/10/bits/basic_string.h **** 
5188:/usr/include/c++/10/bits/basic_string.h ****       /**
5189:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Swap contents with another string.
5190:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  String to swap with.
5191:/usr/include/c++/10/bits/basic_string.h ****        *
5192:/usr/include/c++/10/bits/basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
5193:/usr/include/c++/10/bits/basic_string.h ****        *  time.
5194:/usr/include/c++/10/bits/basic_string.h ****       */
5195:/usr/include/c++/10/bits/basic_string.h ****       void
5196:/usr/include/c++/10/bits/basic_string.h ****       swap(basic_string& __s)
5197:/usr/include/c++/10/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(allocator_traits<_Alloc>::is_always_equal::value);
5198:/usr/include/c++/10/bits/basic_string.h **** 
5199:/usr/include/c++/10/bits/basic_string.h ****       // String operations:
5200:/usr/include/c++/10/bits/basic_string.h ****       /**
5201:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
5202:/usr/include/c++/10/bits/basic_string.h ****        *
5203:/usr/include/c++/10/bits/basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
5204:/usr/include/c++/10/bits/basic_string.h ****        *  happen.
5205:/usr/include/c++/10/bits/basic_string.h ****       */
5206:/usr/include/c++/10/bits/basic_string.h ****       const _CharT*
5207:/usr/include/c++/10/bits/basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
5208:/usr/include/c++/10/bits/basic_string.h ****       { return _M_data(); }
5209:/usr/include/c++/10/bits/basic_string.h **** 
5210:/usr/include/c++/10/bits/basic_string.h ****       /**
5211:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Return const pointer to contents.
5212:/usr/include/c++/10/bits/basic_string.h ****        *
5213:/usr/include/c++/10/bits/basic_string.h ****        *  This is a pointer to internal data.  It is undefined to modify
5214:/usr/include/c++/10/bits/basic_string.h ****        *  the contents through the returned pointer. To get a pointer that
5215:/usr/include/c++/10/bits/basic_string.h ****        *  allows modifying the contents use @c &str[0] instead,
AARCH64 GAS  obj/extInstr.s 			page 179


5216:/usr/include/c++/10/bits/basic_string.h ****        *  (or in C++17 the non-const @c str.data() overload).
5217:/usr/include/c++/10/bits/basic_string.h ****       */
5218:/usr/include/c++/10/bits/basic_string.h ****       const _CharT*
5219:/usr/include/c++/10/bits/basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
5220:/usr/include/c++/10/bits/basic_string.h ****       { return _M_data(); }
5221:/usr/include/c++/10/bits/basic_string.h **** 
5222:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201703L
5223:/usr/include/c++/10/bits/basic_string.h ****       /**
5224:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Return non-const pointer to contents.
5225:/usr/include/c++/10/bits/basic_string.h ****        *
5226:/usr/include/c++/10/bits/basic_string.h ****        *  This is a pointer to the character sequence held by the string.
5227:/usr/include/c++/10/bits/basic_string.h ****        *  Modifying the characters in the sequence is allowed.
5228:/usr/include/c++/10/bits/basic_string.h ****       */
5229:/usr/include/c++/10/bits/basic_string.h ****       _CharT*
5230:/usr/include/c++/10/bits/basic_string.h ****       data() noexcept
5231:/usr/include/c++/10/bits/basic_string.h ****       {
5232:/usr/include/c++/10/bits/basic_string.h **** 	_M_leak();
5233:/usr/include/c++/10/bits/basic_string.h **** 	return _M_data();
5234:/usr/include/c++/10/bits/basic_string.h ****       }
5235:/usr/include/c++/10/bits/basic_string.h **** #endif
5236:/usr/include/c++/10/bits/basic_string.h **** 
5237:/usr/include/c++/10/bits/basic_string.h ****       /**
5238:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
5239:/usr/include/c++/10/bits/basic_string.h ****       */
5240:/usr/include/c++/10/bits/basic_string.h ****       allocator_type
5241:/usr/include/c++/10/bits/basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
5242:/usr/include/c++/10/bits/basic_string.h ****       { return _M_dataplus; }
5243:/usr/include/c++/10/bits/basic_string.h **** 
5244:/usr/include/c++/10/bits/basic_string.h ****       /**
5245:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find position of a C substring.
5246:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  C string to locate.
5247:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
5248:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
5249:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
5250:/usr/include/c++/10/bits/basic_string.h ****        *
5251:/usr/include/c++/10/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
5252:/usr/include/c++/10/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
5253:/usr/include/c++/10/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
5254:/usr/include/c++/10/bits/basic_string.h ****        *  npos.
5255:/usr/include/c++/10/bits/basic_string.h ****       */
5256:/usr/include/c++/10/bits/basic_string.h ****       size_type
5257:/usr/include/c++/10/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const
5258:/usr/include/c++/10/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5259:/usr/include/c++/10/bits/basic_string.h **** 
5260:/usr/include/c++/10/bits/basic_string.h ****       /**
5261:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find position of a string.
5262:/usr/include/c++/10/bits/basic_string.h ****        *  @param __str  String to locate.
5263:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5264:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
5265:/usr/include/c++/10/bits/basic_string.h ****        *
5266:/usr/include/c++/10/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
5267:/usr/include/c++/10/bits/basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
5268:/usr/include/c++/10/bits/basic_string.h ****        *  found, returns npos.
5269:/usr/include/c++/10/bits/basic_string.h ****       */
5270:/usr/include/c++/10/bits/basic_string.h ****       size_type
5271:/usr/include/c++/10/bits/basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
5272:/usr/include/c++/10/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
AARCH64 GAS  obj/extInstr.s 			page 180


5273:/usr/include/c++/10/bits/basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
5274:/usr/include/c++/10/bits/basic_string.h **** 
5275:/usr/include/c++/10/bits/basic_string.h ****       /**
5276:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find position of a C string.
5277:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  C string to locate.
5278:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5279:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
5280:/usr/include/c++/10/bits/basic_string.h ****        *
5281:/usr/include/c++/10/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
5282:/usr/include/c++/10/bits/basic_string.h ****        *  __s within this string.  If found, returns the index where
5283:/usr/include/c++/10/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
5284:/usr/include/c++/10/bits/basic_string.h ****       */
5285:/usr/include/c++/10/bits/basic_string.h ****       size_type
5286:/usr/include/c++/10/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
5287:/usr/include/c++/10/bits/basic_string.h ****       {
5288:/usr/include/c++/10/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5289:/usr/include/c++/10/bits/basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
5290:/usr/include/c++/10/bits/basic_string.h ****       }
5291:/usr/include/c++/10/bits/basic_string.h **** 
5292:/usr/include/c++/10/bits/basic_string.h ****       /**
5293:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find position of a character.
5294:/usr/include/c++/10/bits/basic_string.h ****        *  @param __c  Character to locate.
5295:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5296:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of first occurrence.
5297:/usr/include/c++/10/bits/basic_string.h ****        *
5298:/usr/include/c++/10/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
5299:/usr/include/c++/10/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
5300:/usr/include/c++/10/bits/basic_string.h ****        *  found.  If not found, returns npos.
5301:/usr/include/c++/10/bits/basic_string.h ****       */
5302:/usr/include/c++/10/bits/basic_string.h ****       size_type
5303:/usr/include/c++/10/bits/basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
5304:/usr/include/c++/10/bits/basic_string.h **** 
5305:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201703L
5306:/usr/include/c++/10/bits/basic_string.h ****       /**
5307:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find position of a string_view.
5308:/usr/include/c++/10/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
5309:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5310:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
5311:/usr/include/c++/10/bits/basic_string.h ****       */
5312:/usr/include/c++/10/bits/basic_string.h ****       template<typename _Tp>
5313:/usr/include/c++/10/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5314:/usr/include/c++/10/bits/basic_string.h **** 	find(const _Tp& __svt, size_type __pos = 0) const
5315:/usr/include/c++/10/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5316:/usr/include/c++/10/bits/basic_string.h **** 	{
5317:/usr/include/c++/10/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5318:/usr/include/c++/10/bits/basic_string.h **** 	  return this->find(__sv.data(), __pos, __sv.size());
5319:/usr/include/c++/10/bits/basic_string.h **** 	}
5320:/usr/include/c++/10/bits/basic_string.h **** #endif // C++17
5321:/usr/include/c++/10/bits/basic_string.h **** 
5322:/usr/include/c++/10/bits/basic_string.h ****       /**
5323:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find last position of a string.
5324:/usr/include/c++/10/bits/basic_string.h ****        *  @param __str  String to locate.
5325:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5326:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
5327:/usr/include/c++/10/bits/basic_string.h ****        *
5328:/usr/include/c++/10/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
5329:/usr/include/c++/10/bits/basic_string.h ****        *  __str within this string.  If found, returns the index where
AARCH64 GAS  obj/extInstr.s 			page 181


5330:/usr/include/c++/10/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
5331:/usr/include/c++/10/bits/basic_string.h ****       */
5332:/usr/include/c++/10/bits/basic_string.h ****       size_type
5333:/usr/include/c++/10/bits/basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
5334:/usr/include/c++/10/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5335:/usr/include/c++/10/bits/basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
5336:/usr/include/c++/10/bits/basic_string.h **** 
5337:/usr/include/c++/10/bits/basic_string.h ****       /**
5338:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find last position of a C substring.
5339:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  C string to locate.
5340:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
5341:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
5342:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
5343:/usr/include/c++/10/bits/basic_string.h ****        *
5344:/usr/include/c++/10/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
5345:/usr/include/c++/10/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
5346:/usr/include/c++/10/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
5347:/usr/include/c++/10/bits/basic_string.h ****        *  npos.
5348:/usr/include/c++/10/bits/basic_string.h ****       */
5349:/usr/include/c++/10/bits/basic_string.h ****       size_type
5350:/usr/include/c++/10/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const
5351:/usr/include/c++/10/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5352:/usr/include/c++/10/bits/basic_string.h **** 
5353:/usr/include/c++/10/bits/basic_string.h ****       /**
5354:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find last position of a C string.
5355:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  C string to locate.
5356:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
5357:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of start of  last occurrence.
5358:/usr/include/c++/10/bits/basic_string.h ****        *
5359:/usr/include/c++/10/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
5360:/usr/include/c++/10/bits/basic_string.h ****        *  @a __s within this string.  If found, returns the index
5361:/usr/include/c++/10/bits/basic_string.h ****        *  where it begins.  If not found, returns npos.
5362:/usr/include/c++/10/bits/basic_string.h ****       */
5363:/usr/include/c++/10/bits/basic_string.h ****       size_type
5364:/usr/include/c++/10/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
5365:/usr/include/c++/10/bits/basic_string.h ****       {
5366:/usr/include/c++/10/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5367:/usr/include/c++/10/bits/basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
5368:/usr/include/c++/10/bits/basic_string.h ****       }
5369:/usr/include/c++/10/bits/basic_string.h **** 
5370:/usr/include/c++/10/bits/basic_string.h ****       /**
5371:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find last position of a character.
5372:/usr/include/c++/10/bits/basic_string.h ****        *  @param __c  Character to locate.
5373:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5374:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of last occurrence.
5375:/usr/include/c++/10/bits/basic_string.h ****        *
5376:/usr/include/c++/10/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
5377:/usr/include/c++/10/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
5378:/usr/include/c++/10/bits/basic_string.h ****        *  found.  If not found, returns npos.
5379:/usr/include/c++/10/bits/basic_string.h ****       */
5380:/usr/include/c++/10/bits/basic_string.h ****       size_type
5381:/usr/include/c++/10/bits/basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
5382:/usr/include/c++/10/bits/basic_string.h **** 
5383:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201703L
5384:/usr/include/c++/10/bits/basic_string.h ****       /**
5385:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find last position of a string_view.
5386:/usr/include/c++/10/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
AARCH64 GAS  obj/extInstr.s 			page 182


5387:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5388:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
5389:/usr/include/c++/10/bits/basic_string.h ****       */
5390:/usr/include/c++/10/bits/basic_string.h ****       template<typename _Tp>
5391:/usr/include/c++/10/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5392:/usr/include/c++/10/bits/basic_string.h **** 	rfind(const _Tp& __svt, size_type __pos = npos) const
5393:/usr/include/c++/10/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5394:/usr/include/c++/10/bits/basic_string.h **** 	{
5395:/usr/include/c++/10/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5396:/usr/include/c++/10/bits/basic_string.h **** 	  return this->rfind(__sv.data(), __pos, __sv.size());
5397:/usr/include/c++/10/bits/basic_string.h **** 	}
5398:/usr/include/c++/10/bits/basic_string.h **** #endif // C++17
5399:/usr/include/c++/10/bits/basic_string.h **** 
5400:/usr/include/c++/10/bits/basic_string.h ****       /**
5401:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find position of a character of string.
5402:/usr/include/c++/10/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
5403:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5404:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of first occurrence.
5405:/usr/include/c++/10/bits/basic_string.h ****        *
5406:/usr/include/c++/10/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5407:/usr/include/c++/10/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
5408:/usr/include/c++/10/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
5409:/usr/include/c++/10/bits/basic_string.h ****        *  npos.
5410:/usr/include/c++/10/bits/basic_string.h ****       */
5411:/usr/include/c++/10/bits/basic_string.h ****       size_type
5412:/usr/include/c++/10/bits/basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
5413:/usr/include/c++/10/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5414:/usr/include/c++/10/bits/basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
5415:/usr/include/c++/10/bits/basic_string.h **** 
5416:/usr/include/c++/10/bits/basic_string.h ****       /**
5417:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find position of a character of C substring.
5418:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
5419:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
5420:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
5421:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of first occurrence.
5422:/usr/include/c++/10/bits/basic_string.h ****        *
5423:/usr/include/c++/10/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5424:/usr/include/c++/10/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
5425:/usr/include/c++/10/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
5426:/usr/include/c++/10/bits/basic_string.h ****        *  returns npos.
5427:/usr/include/c++/10/bits/basic_string.h ****       */
5428:/usr/include/c++/10/bits/basic_string.h ****       size_type
5429:/usr/include/c++/10/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const
5430:/usr/include/c++/10/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5431:/usr/include/c++/10/bits/basic_string.h **** 
5432:/usr/include/c++/10/bits/basic_string.h ****       /**
5433:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find position of a character of C string.
5434:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
5435:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5436:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of first occurrence.
5437:/usr/include/c++/10/bits/basic_string.h ****        *
5438:/usr/include/c++/10/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5439:/usr/include/c++/10/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
5440:/usr/include/c++/10/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5441:/usr/include/c++/10/bits/basic_string.h ****       */
5442:/usr/include/c++/10/bits/basic_string.h ****       size_type
5443:/usr/include/c++/10/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
AARCH64 GAS  obj/extInstr.s 			page 183


5444:/usr/include/c++/10/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5445:/usr/include/c++/10/bits/basic_string.h ****       {
5446:/usr/include/c++/10/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5447:/usr/include/c++/10/bits/basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
5448:/usr/include/c++/10/bits/basic_string.h ****       }
5449:/usr/include/c++/10/bits/basic_string.h **** 
5450:/usr/include/c++/10/bits/basic_string.h ****       /**
5451:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find position of a character.
5452:/usr/include/c++/10/bits/basic_string.h ****        *  @param __c  Character to locate.
5453:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5454:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of first occurrence.
5455:/usr/include/c++/10/bits/basic_string.h ****        *
5456:/usr/include/c++/10/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the character
5457:/usr/include/c++/10/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index
5458:/usr/include/c++/10/bits/basic_string.h ****        *  where it was found.  If not found, returns npos.
5459:/usr/include/c++/10/bits/basic_string.h ****        *
5460:/usr/include/c++/10/bits/basic_string.h ****        *  Note: equivalent to find(__c, __pos).
5461:/usr/include/c++/10/bits/basic_string.h ****       */
5462:/usr/include/c++/10/bits/basic_string.h ****       size_type
5463:/usr/include/c++/10/bits/basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
5464:/usr/include/c++/10/bits/basic_string.h ****       { return this->find(__c, __pos); }
5465:/usr/include/c++/10/bits/basic_string.h **** 
5466:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201703L
5467:/usr/include/c++/10/bits/basic_string.h ****       /**
5468:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find position of a character of a string_view.
5469:/usr/include/c++/10/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5470:/usr/include/c++/10/bits/basic_string.h ****        *                characters to locate.
5471:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5472:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of first occurrence.
5473:/usr/include/c++/10/bits/basic_string.h ****       */
5474:/usr/include/c++/10/bits/basic_string.h ****       template<typename _Tp>
5475:/usr/include/c++/10/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5476:/usr/include/c++/10/bits/basic_string.h **** 	find_first_of(const _Tp& __svt, size_type __pos = 0) const
5477:/usr/include/c++/10/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5478:/usr/include/c++/10/bits/basic_string.h **** 	{
5479:/usr/include/c++/10/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5480:/usr/include/c++/10/bits/basic_string.h **** 	  return this->find_first_of(__sv.data(), __pos, __sv.size());
5481:/usr/include/c++/10/bits/basic_string.h **** 	}
5482:/usr/include/c++/10/bits/basic_string.h **** #endif // C++17
5483:/usr/include/c++/10/bits/basic_string.h **** 
5484:/usr/include/c++/10/bits/basic_string.h ****       /**
5485:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
5486:/usr/include/c++/10/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
5487:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5488:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of last occurrence.
5489:/usr/include/c++/10/bits/basic_string.h ****        *
5490:/usr/include/c++/10/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5491:/usr/include/c++/10/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
5492:/usr/include/c++/10/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
5493:/usr/include/c++/10/bits/basic_string.h ****        *  npos.
5494:/usr/include/c++/10/bits/basic_string.h ****       */
5495:/usr/include/c++/10/bits/basic_string.h ****       size_type
5496:/usr/include/c++/10/bits/basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
5497:/usr/include/c++/10/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5498:/usr/include/c++/10/bits/basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
5499:/usr/include/c++/10/bits/basic_string.h **** 
5500:/usr/include/c++/10/bits/basic_string.h ****       /**
AARCH64 GAS  obj/extInstr.s 			page 184


5501:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find last position of a character of C substring.
5502:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
5503:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
5504:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
5505:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of last occurrence.
5506:/usr/include/c++/10/bits/basic_string.h ****        *
5507:/usr/include/c++/10/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5508:/usr/include/c++/10/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
5509:/usr/include/c++/10/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
5510:/usr/include/c++/10/bits/basic_string.h ****        *  returns npos.
5511:/usr/include/c++/10/bits/basic_string.h ****       */
5512:/usr/include/c++/10/bits/basic_string.h ****       size_type
5513:/usr/include/c++/10/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const
5514:/usr/include/c++/10/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5515:/usr/include/c++/10/bits/basic_string.h **** 
5516:/usr/include/c++/10/bits/basic_string.h ****       /**
5517:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find last position of a character of C string.
5518:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
5519:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5520:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of last occurrence.
5521:/usr/include/c++/10/bits/basic_string.h ****        *
5522:/usr/include/c++/10/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5523:/usr/include/c++/10/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
5524:/usr/include/c++/10/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5525:/usr/include/c++/10/bits/basic_string.h ****       */
5526:/usr/include/c++/10/bits/basic_string.h ****       size_type
5527:/usr/include/c++/10/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
5528:/usr/include/c++/10/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5529:/usr/include/c++/10/bits/basic_string.h ****       {
5530:/usr/include/c++/10/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5531:/usr/include/c++/10/bits/basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
5532:/usr/include/c++/10/bits/basic_string.h ****       }
5533:/usr/include/c++/10/bits/basic_string.h **** 
5534:/usr/include/c++/10/bits/basic_string.h ****       /**
5535:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find last position of a character.
5536:/usr/include/c++/10/bits/basic_string.h ****        *  @param __c  Character to locate.
5537:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5538:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of last occurrence.
5539:/usr/include/c++/10/bits/basic_string.h ****        *
5540:/usr/include/c++/10/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
5541:/usr/include/c++/10/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
5542:/usr/include/c++/10/bits/basic_string.h ****        *  found.  If not found, returns npos.
5543:/usr/include/c++/10/bits/basic_string.h ****        *
5544:/usr/include/c++/10/bits/basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
5545:/usr/include/c++/10/bits/basic_string.h ****       */
5546:/usr/include/c++/10/bits/basic_string.h ****       size_type
5547:/usr/include/c++/10/bits/basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
5548:/usr/include/c++/10/bits/basic_string.h ****       { return this->rfind(__c, __pos); }
5549:/usr/include/c++/10/bits/basic_string.h **** 
5550:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201703L
5551:/usr/include/c++/10/bits/basic_string.h ****       /**
5552:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
5553:/usr/include/c++/10/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5554:/usr/include/c++/10/bits/basic_string.h ****        *                characters to locate.
5555:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5556:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of last occurrence.
5557:/usr/include/c++/10/bits/basic_string.h ****       */
AARCH64 GAS  obj/extInstr.s 			page 185


5558:/usr/include/c++/10/bits/basic_string.h ****       template<typename _Tp>
5559:/usr/include/c++/10/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5560:/usr/include/c++/10/bits/basic_string.h **** 	find_last_of(const _Tp& __svt, size_type __pos = npos) const
5561:/usr/include/c++/10/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5562:/usr/include/c++/10/bits/basic_string.h **** 	{
5563:/usr/include/c++/10/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5564:/usr/include/c++/10/bits/basic_string.h **** 	  return this->find_last_of(__sv.data(), __pos, __sv.size());
5565:/usr/include/c++/10/bits/basic_string.h **** 	}
5566:/usr/include/c++/10/bits/basic_string.h **** #endif // C++17
5567:/usr/include/c++/10/bits/basic_string.h **** 
5568:/usr/include/c++/10/bits/basic_string.h ****       /**
5569:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find position of a character not in string.
5570:/usr/include/c++/10/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
5571:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5572:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of first occurrence.
5573:/usr/include/c++/10/bits/basic_string.h ****        *
5574:/usr/include/c++/10/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
5575:/usr/include/c++/10/bits/basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
5576:/usr/include/c++/10/bits/basic_string.h ****        *  was found.  If not found, returns npos.
5577:/usr/include/c++/10/bits/basic_string.h ****       */
5578:/usr/include/c++/10/bits/basic_string.h ****       size_type
5579:/usr/include/c++/10/bits/basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
5580:/usr/include/c++/10/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5581:/usr/include/c++/10/bits/basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
5582:/usr/include/c++/10/bits/basic_string.h **** 
5583:/usr/include/c++/10/bits/basic_string.h ****       /**
5584:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find position of a character not in C substring.
5585:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
5586:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
5587:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  Number of characters from __s to consider.
5588:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of first occurrence.
5589:/usr/include/c++/10/bits/basic_string.h ****        *
5590:/usr/include/c++/10/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
5591:/usr/include/c++/10/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within
5592:/usr/include/c++/10/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
5593:/usr/include/c++/10/bits/basic_string.h ****        *  found.  If not found, returns npos.
5594:/usr/include/c++/10/bits/basic_string.h ****       */
5595:/usr/include/c++/10/bits/basic_string.h ****       size_type
5596:/usr/include/c++/10/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
5597:/usr/include/c++/10/bits/basic_string.h **** 			size_type __n) const _GLIBCXX_NOEXCEPT;
5598:/usr/include/c++/10/bits/basic_string.h **** 
5599:/usr/include/c++/10/bits/basic_string.h ****       /**
5600:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find position of a character not in C string.
5601:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
5602:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5603:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of first occurrence.
5604:/usr/include/c++/10/bits/basic_string.h ****        *
5605:/usr/include/c++/10/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
5606:/usr/include/c++/10/bits/basic_string.h ****        *  contained in @a __s within this string.  If found, returns
5607:/usr/include/c++/10/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5608:/usr/include/c++/10/bits/basic_string.h ****       */
5609:/usr/include/c++/10/bits/basic_string.h ****       size_type
5610:/usr/include/c++/10/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
5611:/usr/include/c++/10/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5612:/usr/include/c++/10/bits/basic_string.h ****       {
5613:/usr/include/c++/10/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5614:/usr/include/c++/10/bits/basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
AARCH64 GAS  obj/extInstr.s 			page 186


5615:/usr/include/c++/10/bits/basic_string.h ****       }
5616:/usr/include/c++/10/bits/basic_string.h **** 
5617:/usr/include/c++/10/bits/basic_string.h ****       /**
5618:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find position of a different character.
5619:/usr/include/c++/10/bits/basic_string.h ****        *  @param __c  Character to avoid.
5620:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5621:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of first occurrence.
5622:/usr/include/c++/10/bits/basic_string.h ****        *
5623:/usr/include/c++/10/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character
5624:/usr/include/c++/10/bits/basic_string.h ****        *  other than @a __c within this string.  If found, returns the
5625:/usr/include/c++/10/bits/basic_string.h ****        *  index where it was found.  If not found, returns npos.
5626:/usr/include/c++/10/bits/basic_string.h ****       */
5627:/usr/include/c++/10/bits/basic_string.h ****       size_type
5628:/usr/include/c++/10/bits/basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
5629:/usr/include/c++/10/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5630:/usr/include/c++/10/bits/basic_string.h **** 
5631:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201703L
5632:/usr/include/c++/10/bits/basic_string.h ****       /**
5633:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find position of a character not in a string_view.
5634:/usr/include/c++/10/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5635:/usr/include/c++/10/bits/basic_string.h ****        *                characters to avoid.
5636:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5637:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of first occurrence.
5638:/usr/include/c++/10/bits/basic_string.h ****        */
5639:/usr/include/c++/10/bits/basic_string.h ****       template<typename _Tp>
5640:/usr/include/c++/10/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5641:/usr/include/c++/10/bits/basic_string.h **** 	find_first_not_of(const _Tp& __svt, size_type __pos = 0) const
5642:/usr/include/c++/10/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5643:/usr/include/c++/10/bits/basic_string.h **** 	{
5644:/usr/include/c++/10/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5645:/usr/include/c++/10/bits/basic_string.h **** 	  return this->find_first_not_of(__sv.data(), __pos, __sv.size());
5646:/usr/include/c++/10/bits/basic_string.h **** 	}
5647:/usr/include/c++/10/bits/basic_string.h **** #endif // C++17
5648:/usr/include/c++/10/bits/basic_string.h **** 
5649:/usr/include/c++/10/bits/basic_string.h ****       /**
5650:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find last position of a character not in string.
5651:/usr/include/c++/10/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
5652:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5653:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of last occurrence.
5654:/usr/include/c++/10/bits/basic_string.h ****        *
5655:/usr/include/c++/10/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
5656:/usr/include/c++/10/bits/basic_string.h ****        *  not contained in @a __str within this string.  If found,
5657:/usr/include/c++/10/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
5658:/usr/include/c++/10/bits/basic_string.h ****        *  npos.
5659:/usr/include/c++/10/bits/basic_string.h ****       */
5660:/usr/include/c++/10/bits/basic_string.h ****       size_type
5661:/usr/include/c++/10/bits/basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
5662:/usr/include/c++/10/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5663:/usr/include/c++/10/bits/basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
5664:/usr/include/c++/10/bits/basic_string.h **** 
5665:/usr/include/c++/10/bits/basic_string.h ****       /**
5666:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find last position of a character not in C substring.
5667:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
5668:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
5669:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  Number of characters from s to consider.
5670:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of last occurrence.
5671:/usr/include/c++/10/bits/basic_string.h ****        *
AARCH64 GAS  obj/extInstr.s 			page 187


5672:/usr/include/c++/10/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
5673:/usr/include/c++/10/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
5674:/usr/include/c++/10/bits/basic_string.h ****        *  If found, returns the index where it was found.  If not found,
5675:/usr/include/c++/10/bits/basic_string.h ****        *  returns npos.
5676:/usr/include/c++/10/bits/basic_string.h ****       */
5677:/usr/include/c++/10/bits/basic_string.h ****       size_type
5678:/usr/include/c++/10/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
5679:/usr/include/c++/10/bits/basic_string.h **** 		       size_type __n) const _GLIBCXX_NOEXCEPT;
5680:/usr/include/c++/10/bits/basic_string.h ****       /**
5681:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find last position of a character not in C string.
5682:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
5683:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5684:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of last occurrence.
5685:/usr/include/c++/10/bits/basic_string.h ****        *
5686:/usr/include/c++/10/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
5687:/usr/include/c++/10/bits/basic_string.h ****        *  not contained in @a __s within this string.  If found,
5688:/usr/include/c++/10/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
5689:/usr/include/c++/10/bits/basic_string.h ****        *  npos.
5690:/usr/include/c++/10/bits/basic_string.h ****       */
5691:/usr/include/c++/10/bits/basic_string.h ****       size_type
5692:/usr/include/c++/10/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
5693:/usr/include/c++/10/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5694:/usr/include/c++/10/bits/basic_string.h ****       {
5695:/usr/include/c++/10/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5696:/usr/include/c++/10/bits/basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
5697:/usr/include/c++/10/bits/basic_string.h ****       }
5698:/usr/include/c++/10/bits/basic_string.h **** 
5699:/usr/include/c++/10/bits/basic_string.h ****       /**
5700:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find last position of a different character.
5701:/usr/include/c++/10/bits/basic_string.h ****        *  @param __c  Character to avoid.
5702:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5703:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of last occurrence.
5704:/usr/include/c++/10/bits/basic_string.h ****        *
5705:/usr/include/c++/10/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
5706:/usr/include/c++/10/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
5707:/usr/include/c++/10/bits/basic_string.h ****        *  found.  If not found, returns npos.
5708:/usr/include/c++/10/bits/basic_string.h ****       */
5709:/usr/include/c++/10/bits/basic_string.h ****       size_type
5710:/usr/include/c++/10/bits/basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
5711:/usr/include/c++/10/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5712:/usr/include/c++/10/bits/basic_string.h **** 
5713:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201703L
5714:/usr/include/c++/10/bits/basic_string.h ****       /**
5715:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Find last position of a character not in a string_view.
5716:/usr/include/c++/10/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5717:/usr/include/c++/10/bits/basic_string.h ****        *                characters to avoid.
5718:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5719:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Index of last occurrence.
5720:/usr/include/c++/10/bits/basic_string.h ****        */
5721:/usr/include/c++/10/bits/basic_string.h ****       template<typename _Tp>
5722:/usr/include/c++/10/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5723:/usr/include/c++/10/bits/basic_string.h **** 	find_last_not_of(const _Tp& __svt, size_type __pos = npos) const
5724:/usr/include/c++/10/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5725:/usr/include/c++/10/bits/basic_string.h **** 	{
5726:/usr/include/c++/10/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5727:/usr/include/c++/10/bits/basic_string.h **** 	  return this->find_last_not_of(__sv.data(), __pos, __sv.size());
5728:/usr/include/c++/10/bits/basic_string.h **** 	}
AARCH64 GAS  obj/extInstr.s 			page 188


5729:/usr/include/c++/10/bits/basic_string.h **** #endif // C++17
5730:/usr/include/c++/10/bits/basic_string.h **** 
5731:/usr/include/c++/10/bits/basic_string.h ****       /**
5732:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Get a substring.
5733:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of first character (default 0).
5734:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
5735:/usr/include/c++/10/bits/basic_string.h ****        *  @return  The new string.
5736:/usr/include/c++/10/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
5737:/usr/include/c++/10/bits/basic_string.h ****        *
5738:/usr/include/c++/10/bits/basic_string.h ****        *  Construct and return a new string using the @a __n
5739:/usr/include/c++/10/bits/basic_string.h ****        *  characters starting at @a __pos.  If the string is too
5740:/usr/include/c++/10/bits/basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
5741:/usr/include/c++/10/bits/basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
5742:/usr/include/c++/10/bits/basic_string.h ****       */
5743:/usr/include/c++/10/bits/basic_string.h ****       basic_string
5744:/usr/include/c++/10/bits/basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
5745:/usr/include/c++/10/bits/basic_string.h ****       { return basic_string(*this,
5746:/usr/include/c++/10/bits/basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
5747:/usr/include/c++/10/bits/basic_string.h **** 
5748:/usr/include/c++/10/bits/basic_string.h ****       /**
5749:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Compare to a string.
5750:/usr/include/c++/10/bits/basic_string.h ****        *  @param __str  String to compare against.
5751:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5752:/usr/include/c++/10/bits/basic_string.h ****        *
5753:/usr/include/c++/10/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
5754:/usr/include/c++/10/bits/basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
5755:/usr/include/c++/10/bits/basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
5756:/usr/include/c++/10/bits/basic_string.h ****        *  length rlen of the strings to compare as the smallest of
5757:/usr/include/c++/10/bits/basic_string.h ****        *  size() and str.size().  The function then compares the two
5758:/usr/include/c++/10/bits/basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
5759:/usr/include/c++/10/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
5760:/usr/include/c++/10/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
5761:/usr/include/c++/10/bits/basic_string.h ****       */
5762:/usr/include/c++/10/bits/basic_string.h ****       int
5763:/usr/include/c++/10/bits/basic_string.h ****       compare(const basic_string& __str) const
5764:/usr/include/c++/10/bits/basic_string.h ****       {
5765:/usr/include/c++/10/bits/basic_string.h **** 	const size_type __size = this->size();
5766:/usr/include/c++/10/bits/basic_string.h **** 	const size_type __osize = __str.size();
5767:/usr/include/c++/10/bits/basic_string.h **** 	const size_type __len = std::min(__size, __osize);
5768:/usr/include/c++/10/bits/basic_string.h **** 
5769:/usr/include/c++/10/bits/basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
5770:/usr/include/c++/10/bits/basic_string.h **** 	if (!__r)
5771:/usr/include/c++/10/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
5772:/usr/include/c++/10/bits/basic_string.h **** 	return __r;
5773:/usr/include/c++/10/bits/basic_string.h ****       }
5774:/usr/include/c++/10/bits/basic_string.h **** 
5775:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201703L
5776:/usr/include/c++/10/bits/basic_string.h ****       /**
5777:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Compare to a string_view.
5778:/usr/include/c++/10/bits/basic_string.h ****        *  @param __svt An object convertible to string_view to compare against.
5779:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5780:/usr/include/c++/10/bits/basic_string.h ****        */
5781:/usr/include/c++/10/bits/basic_string.h ****       template<typename _Tp>
5782:/usr/include/c++/10/bits/basic_string.h **** 	_If_sv<_Tp, int>
5783:/usr/include/c++/10/bits/basic_string.h **** 	compare(const _Tp& __svt) const
5784:/usr/include/c++/10/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5785:/usr/include/c++/10/bits/basic_string.h **** 	{
AARCH64 GAS  obj/extInstr.s 			page 189


5786:/usr/include/c++/10/bits/basic_string.h **** 	   __sv_type __sv = __svt;
5787:/usr/include/c++/10/bits/basic_string.h **** 	  const size_type __size = this->size();
5788:/usr/include/c++/10/bits/basic_string.h **** 	  const size_type __osize = __sv.size();
5789:/usr/include/c++/10/bits/basic_string.h **** 	  const size_type __len = std::min(__size, __osize);
5790:/usr/include/c++/10/bits/basic_string.h **** 
5791:/usr/include/c++/10/bits/basic_string.h **** 	  int __r = traits_type::compare(_M_data(), __sv.data(), __len);
5792:/usr/include/c++/10/bits/basic_string.h **** 	  if (!__r)
5793:/usr/include/c++/10/bits/basic_string.h **** 	    __r = _S_compare(__size, __osize);
5794:/usr/include/c++/10/bits/basic_string.h **** 	  return __r;
5795:/usr/include/c++/10/bits/basic_string.h **** 	}
5796:/usr/include/c++/10/bits/basic_string.h **** 
5797:/usr/include/c++/10/bits/basic_string.h ****       /**
5798:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Compare to a string_view.
5799:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  A position in the string to start comparing from.
5800:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  The number of characters to compare.
5801:/usr/include/c++/10/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
5802:/usr/include/c++/10/bits/basic_string.h ****        *                against.
5803:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5804:/usr/include/c++/10/bits/basic_string.h ****        */
5805:/usr/include/c++/10/bits/basic_string.h ****       template<typename _Tp>
5806:/usr/include/c++/10/bits/basic_string.h **** 	_If_sv<_Tp, int>
5807:/usr/include/c++/10/bits/basic_string.h **** 	compare(size_type __pos, size_type __n, const _Tp& __svt) const
5808:/usr/include/c++/10/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5809:/usr/include/c++/10/bits/basic_string.h **** 	{
5810:/usr/include/c++/10/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5811:/usr/include/c++/10/bits/basic_string.h **** 	  return __sv_type(*this).substr(__pos, __n).compare(__sv);
5812:/usr/include/c++/10/bits/basic_string.h **** 	}
5813:/usr/include/c++/10/bits/basic_string.h **** 
5814:/usr/include/c++/10/bits/basic_string.h ****       /**
5815:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Compare to a string_view.
5816:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos1  A position in the string to start comparing from.
5817:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n1  The number of characters to compare.
5818:/usr/include/c++/10/bits/basic_string.h ****        *  @param __svt   An object convertible to string_view to compare
5819:/usr/include/c++/10/bits/basic_string.h ****        *                 against.
5820:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos2  A position in the string_view to start comparing from.
5821:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n2  The number of characters to compare.
5822:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5823:/usr/include/c++/10/bits/basic_string.h ****        */
5824:/usr/include/c++/10/bits/basic_string.h ****       template<typename _Tp>
5825:/usr/include/c++/10/bits/basic_string.h **** 	_If_sv<_Tp, int>
5826:/usr/include/c++/10/bits/basic_string.h **** 	compare(size_type __pos1, size_type __n1, const _Tp& __svt,
5827:/usr/include/c++/10/bits/basic_string.h **** 		size_type __pos2, size_type __n2 = npos) const
5828:/usr/include/c++/10/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5829:/usr/include/c++/10/bits/basic_string.h **** 	{
5830:/usr/include/c++/10/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5831:/usr/include/c++/10/bits/basic_string.h **** 	  return __sv_type(*this)
5832:/usr/include/c++/10/bits/basic_string.h **** 	    .substr(__pos1, __n1).compare(__sv.substr(__pos2, __n2));
5833:/usr/include/c++/10/bits/basic_string.h **** 	}
5834:/usr/include/c++/10/bits/basic_string.h **** #endif // C++17
5835:/usr/include/c++/10/bits/basic_string.h **** 
5836:/usr/include/c++/10/bits/basic_string.h ****       /**
5837:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Compare substring to a string.
5838:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
5839:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n  Number of characters in substring.
5840:/usr/include/c++/10/bits/basic_string.h ****        *  @param __str  String to compare against.
5841:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5842:/usr/include/c++/10/bits/basic_string.h ****        *
AARCH64 GAS  obj/extInstr.s 			page 190


5843:/usr/include/c++/10/bits/basic_string.h ****        *  Form the substring of this string from the @a __n characters
5844:/usr/include/c++/10/bits/basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
5845:/usr/include/c++/10/bits/basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
5846:/usr/include/c++/10/bits/basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
5847:/usr/include/c++/10/bits/basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
5848:/usr/include/c++/10/bits/basic_string.h ****        *  to compare as the smallest of the length of the substring
5849:/usr/include/c++/10/bits/basic_string.h ****        *  and @a __str.size().  The function then compares the two
5850:/usr/include/c++/10/bits/basic_string.h ****        *  strings by calling
5851:/usr/include/c++/10/bits/basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
5852:/usr/include/c++/10/bits/basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
5853:/usr/include/c++/10/bits/basic_string.h ****        *  the shorter one is ordered first.
5854:/usr/include/c++/10/bits/basic_string.h ****       */
5855:/usr/include/c++/10/bits/basic_string.h ****       int
5856:/usr/include/c++/10/bits/basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
5857:/usr/include/c++/10/bits/basic_string.h **** 
5858:/usr/include/c++/10/bits/basic_string.h ****       /**
5859:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Compare substring to a substring.
5860:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos1  Index of first character of substring.
5861:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
5862:/usr/include/c++/10/bits/basic_string.h ****        *  @param __str  String to compare against.
5863:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
5864:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n2  Number of characters in substring of str.
5865:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5866:/usr/include/c++/10/bits/basic_string.h ****        *
5867:/usr/include/c++/10/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
5868:/usr/include/c++/10/bits/basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
5869:/usr/include/c++/10/bits/basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
5870:/usr/include/c++/10/bits/basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
5871:/usr/include/c++/10/bits/basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
5872:/usr/include/c++/10/bits/basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
5873:/usr/include/c++/10/bits/basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
5874:/usr/include/c++/10/bits/basic_string.h ****        *  strings to compare as the smallest of the lengths of the
5875:/usr/include/c++/10/bits/basic_string.h ****        *  substrings.  The function then compares the two strings by
5876:/usr/include/c++/10/bits/basic_string.h ****        *  calling
5877:/usr/include/c++/10/bits/basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
5878:/usr/include/c++/10/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
5879:/usr/include/c++/10/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
5880:/usr/include/c++/10/bits/basic_string.h ****       */
5881:/usr/include/c++/10/bits/basic_string.h ****       int
5882:/usr/include/c++/10/bits/basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
5883:/usr/include/c++/10/bits/basic_string.h **** 	      size_type __pos2, size_type __n2 = npos) const;
5884:/usr/include/c++/10/bits/basic_string.h **** 
5885:/usr/include/c++/10/bits/basic_string.h ****       /**
5886:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Compare to a C string.
5887:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  C string to compare against.
5888:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5889:/usr/include/c++/10/bits/basic_string.h ****        *
5890:/usr/include/c++/10/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
5891:/usr/include/c++/10/bits/basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
5892:/usr/include/c++/10/bits/basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
5893:/usr/include/c++/10/bits/basic_string.h ****        *  compare as the smallest of size() and the length of a string
5894:/usr/include/c++/10/bits/basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
5895:/usr/include/c++/10/bits/basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
5896:/usr/include/c++/10/bits/basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
5897:/usr/include/c++/10/bits/basic_string.h ****        *  ordered first.
5898:/usr/include/c++/10/bits/basic_string.h ****       */
5899:/usr/include/c++/10/bits/basic_string.h ****       int
AARCH64 GAS  obj/extInstr.s 			page 191


5900:/usr/include/c++/10/bits/basic_string.h ****       compare(const _CharT* __s) const _GLIBCXX_NOEXCEPT;
5901:/usr/include/c++/10/bits/basic_string.h **** 
5902:/usr/include/c++/10/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
5903:/usr/include/c++/10/bits/basic_string.h ****       // 5 String::compare specification questionable
5904:/usr/include/c++/10/bits/basic_string.h ****       /**
5905:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Compare substring to a C string.
5906:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
5907:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
5908:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  C string to compare against.
5909:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5910:/usr/include/c++/10/bits/basic_string.h ****        *
5911:/usr/include/c++/10/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
5912:/usr/include/c++/10/bits/basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
5913:/usr/include/c++/10/bits/basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
5914:/usr/include/c++/10/bits/basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
5915:/usr/include/c++/10/bits/basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
5916:/usr/include/c++/10/bits/basic_string.h ****        *  compare as the smallest of the length of the substring and
5917:/usr/include/c++/10/bits/basic_string.h ****        *  the length of a string constructed from @a __s.  The
5918:/usr/include/c++/10/bits/basic_string.h ****        *  function then compares the two string by calling
5919:/usr/include/c++/10/bits/basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
5920:/usr/include/c++/10/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
5921:/usr/include/c++/10/bits/basic_string.h ****        *  one is ordered first.
5922:/usr/include/c++/10/bits/basic_string.h ****       */
5923:/usr/include/c++/10/bits/basic_string.h ****       int
5924:/usr/include/c++/10/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
5925:/usr/include/c++/10/bits/basic_string.h **** 
5926:/usr/include/c++/10/bits/basic_string.h ****       /**
5927:/usr/include/c++/10/bits/basic_string.h ****        *  @brief  Compare substring against a character %array.
5928:/usr/include/c++/10/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
5929:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
5930:/usr/include/c++/10/bits/basic_string.h ****        *  @param __s  character %array to compare against.
5931:/usr/include/c++/10/bits/basic_string.h ****        *  @param __n2  Number of characters of s.
5932:/usr/include/c++/10/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5933:/usr/include/c++/10/bits/basic_string.h ****        *
5934:/usr/include/c++/10/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
5935:/usr/include/c++/10/bits/basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
5936:/usr/include/c++/10/bits/basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
5937:/usr/include/c++/10/bits/basic_string.h ****        *  if this substring is ordered before the string from @a __s,
5938:/usr/include/c++/10/bits/basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
5939:/usr/include/c++/10/bits/basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
5940:/usr/include/c++/10/bits/basic_string.h ****        *  effective length rlen of the strings to compare as the
5941:/usr/include/c++/10/bits/basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
5942:/usr/include/c++/10/bits/basic_string.h ****        *  function then compares the two strings by calling
5943:/usr/include/c++/10/bits/basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
5944:/usr/include/c++/10/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
5945:/usr/include/c++/10/bits/basic_string.h ****        *  one is ordered first.
5946:/usr/include/c++/10/bits/basic_string.h ****        *
5947:/usr/include/c++/10/bits/basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
5948:/usr/include/c++/10/bits/basic_string.h ****        *  no special meaning.
5949:/usr/include/c++/10/bits/basic_string.h ****       */
5950:/usr/include/c++/10/bits/basic_string.h ****       int
5951:/usr/include/c++/10/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
5952:/usr/include/c++/10/bits/basic_string.h **** 	      size_type __n2) const;
5953:/usr/include/c++/10/bits/basic_string.h **** 
5954:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus > 201703L
5955:/usr/include/c++/10/bits/basic_string.h ****       bool
5956:/usr/include/c++/10/bits/basic_string.h ****       starts_with(basic_string_view<_CharT, _Traits> __x) const noexcept
AARCH64 GAS  obj/extInstr.s 			page 192


5957:/usr/include/c++/10/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
5958:/usr/include/c++/10/bits/basic_string.h **** 
5959:/usr/include/c++/10/bits/basic_string.h ****       bool
5960:/usr/include/c++/10/bits/basic_string.h ****       starts_with(_CharT __x) const noexcept
5961:/usr/include/c++/10/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
5962:/usr/include/c++/10/bits/basic_string.h **** 
5963:/usr/include/c++/10/bits/basic_string.h ****       bool
5964:/usr/include/c++/10/bits/basic_string.h ****       starts_with(const _CharT* __x) const noexcept
5965:/usr/include/c++/10/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
5966:/usr/include/c++/10/bits/basic_string.h **** 
5967:/usr/include/c++/10/bits/basic_string.h ****       bool
5968:/usr/include/c++/10/bits/basic_string.h ****       ends_with(basic_string_view<_CharT, _Traits> __x) const noexcept
5969:/usr/include/c++/10/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
5970:/usr/include/c++/10/bits/basic_string.h **** 
5971:/usr/include/c++/10/bits/basic_string.h ****       bool
5972:/usr/include/c++/10/bits/basic_string.h ****       ends_with(_CharT __x) const noexcept
5973:/usr/include/c++/10/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
5974:/usr/include/c++/10/bits/basic_string.h **** 
5975:/usr/include/c++/10/bits/basic_string.h ****       bool
5976:/usr/include/c++/10/bits/basic_string.h ****       ends_with(const _CharT* __x) const noexcept
5977:/usr/include/c++/10/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
5978:/usr/include/c++/10/bits/basic_string.h **** #endif // C++20
5979:/usr/include/c++/10/bits/basic_string.h **** 
5980:/usr/include/c++/10/bits/basic_string.h **** # ifdef _GLIBCXX_TM_TS_INTERNAL
5981:/usr/include/c++/10/bits/basic_string.h ****       friend void
5982:/usr/include/c++/10/bits/basic_string.h ****       ::_txnal_cow_string_C1_for_exceptions(void* that, const char* s,
5983:/usr/include/c++/10/bits/basic_string.h **** 					    void* exc);
5984:/usr/include/c++/10/bits/basic_string.h ****       friend const char*
5985:/usr/include/c++/10/bits/basic_string.h ****       ::_txnal_cow_string_c_str(const void *that);
5986:/usr/include/c++/10/bits/basic_string.h ****       friend void
5987:/usr/include/c++/10/bits/basic_string.h ****       ::_txnal_cow_string_D1(void *that);
5988:/usr/include/c++/10/bits/basic_string.h ****       friend void
5989:/usr/include/c++/10/bits/basic_string.h ****       ::_txnal_cow_string_D1_commit(void *that);
5990:/usr/include/c++/10/bits/basic_string.h **** # endif
5991:/usr/include/c++/10/bits/basic_string.h ****   };
5992:/usr/include/c++/10/bits/basic_string.h **** #endif  // !_GLIBCXX_USE_CXX11_ABI
5993:/usr/include/c++/10/bits/basic_string.h **** 
5994:/usr/include/c++/10/bits/basic_string.h **** #if __cpp_deduction_guides >= 201606
5995:/usr/include/c++/10/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
5996:/usr/include/c++/10/bits/basic_string.h ****   template<typename _InputIterator, typename _CharT
5997:/usr/include/c++/10/bits/basic_string.h **** 	     = typename iterator_traits<_InputIterator>::value_type,
5998:/usr/include/c++/10/bits/basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
5999:/usr/include/c++/10/bits/basic_string.h **** 	   typename = _RequireInputIter<_InputIterator>,
6000:/usr/include/c++/10/bits/basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
6001:/usr/include/c++/10/bits/basic_string.h ****     basic_string(_InputIterator, _InputIterator, _Allocator = _Allocator())
6002:/usr/include/c++/10/bits/basic_string.h ****       -> basic_string<_CharT, char_traits<_CharT>, _Allocator>;
6003:/usr/include/c++/10/bits/basic_string.h **** 
6004:/usr/include/c++/10/bits/basic_string.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
6005:/usr/include/c++/10/bits/basic_string.h ****   // 3075. basic_string needs deduction guides from basic_string_view
6006:/usr/include/c++/10/bits/basic_string.h ****   template<typename _CharT, typename _Traits,
6007:/usr/include/c++/10/bits/basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
6008:/usr/include/c++/10/bits/basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
6009:/usr/include/c++/10/bits/basic_string.h ****     basic_string(basic_string_view<_CharT, _Traits>, const _Allocator& = _Allocator())
6010:/usr/include/c++/10/bits/basic_string.h ****       -> basic_string<_CharT, _Traits, _Allocator>;
6011:/usr/include/c++/10/bits/basic_string.h **** 
6012:/usr/include/c++/10/bits/basic_string.h ****   template<typename _CharT, typename _Traits,
6013:/usr/include/c++/10/bits/basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
AARCH64 GAS  obj/extInstr.s 			page 193


6014:/usr/include/c++/10/bits/basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
6015:/usr/include/c++/10/bits/basic_string.h ****     basic_string(basic_string_view<_CharT, _Traits>,
6016:/usr/include/c++/10/bits/basic_string.h **** 		 typename basic_string<_CharT, _Traits, _Allocator>::size_type,
6017:/usr/include/c++/10/bits/basic_string.h **** 		 typename basic_string<_CharT, _Traits, _Allocator>::size_type,
6018:/usr/include/c++/10/bits/basic_string.h **** 		 const _Allocator& = _Allocator())
6019:/usr/include/c++/10/bits/basic_string.h ****       -> basic_string<_CharT, _Traits, _Allocator>;
6020:/usr/include/c++/10/bits/basic_string.h **** _GLIBCXX_END_NAMESPACE_CXX11
6021:/usr/include/c++/10/bits/basic_string.h **** #endif
6022:/usr/include/c++/10/bits/basic_string.h **** 
6023:/usr/include/c++/10/bits/basic_string.h ****   // operator+
6024:/usr/include/c++/10/bits/basic_string.h ****   /**
6025:/usr/include/c++/10/bits/basic_string.h ****    *  @brief  Concatenate two strings.
6026:/usr/include/c++/10/bits/basic_string.h ****    *  @param __lhs  First string.
6027:/usr/include/c++/10/bits/basic_string.h ****    *  @param __rhs  Last string.
6028:/usr/include/c++/10/bits/basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
6029:/usr/include/c++/10/bits/basic_string.h ****    */
6030:/usr/include/c++/10/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6031:/usr/include/c++/10/bits/basic_string.h ****     basic_string<_CharT, _Traits, _Alloc>
6032:/usr/include/c++/10/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6033:/usr/include/c++/10/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6034:/usr/include/c++/10/bits/basic_string.h ****     {
6035:/usr/include/c++/10/bits/basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
6036:/usr/include/c++/10/bits/basic_string.h ****       __str.append(__rhs);
6037:/usr/include/c++/10/bits/basic_string.h ****       return __str;
6038:/usr/include/c++/10/bits/basic_string.h ****     }
6039:/usr/include/c++/10/bits/basic_string.h **** 
6040:/usr/include/c++/10/bits/basic_string.h ****   /**
6041:/usr/include/c++/10/bits/basic_string.h ****    *  @brief  Concatenate C string and string.
6042:/usr/include/c++/10/bits/basic_string.h ****    *  @param __lhs  First string.
6043:/usr/include/c++/10/bits/basic_string.h ****    *  @param __rhs  Last string.
6044:/usr/include/c++/10/bits/basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
6045:/usr/include/c++/10/bits/basic_string.h ****    */
6046:/usr/include/c++/10/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6047:/usr/include/c++/10/bits/basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
6048:/usr/include/c++/10/bits/basic_string.h ****     operator+(const _CharT* __lhs,
6049:/usr/include/c++/10/bits/basic_string.h **** 	      const basic_string<_CharT,_Traits,_Alloc>& __rhs);
6050:/usr/include/c++/10/bits/basic_string.h **** 
6051:/usr/include/c++/10/bits/basic_string.h ****   /**
6052:/usr/include/c++/10/bits/basic_string.h ****    *  @brief  Concatenate character and string.
6053:/usr/include/c++/10/bits/basic_string.h ****    *  @param __lhs  First string.
6054:/usr/include/c++/10/bits/basic_string.h ****    *  @param __rhs  Last string.
6055:/usr/include/c++/10/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6056:/usr/include/c++/10/bits/basic_string.h ****    */
6057:/usr/include/c++/10/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6058:/usr/include/c++/10/bits/basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
6059:/usr/include/c++/10/bits/basic_string.h ****     operator+(_CharT __lhs, const basic_string<_CharT,_Traits,_Alloc>& __rhs);
6060:/usr/include/c++/10/bits/basic_string.h **** 
6061:/usr/include/c++/10/bits/basic_string.h ****   /**
6062:/usr/include/c++/10/bits/basic_string.h ****    *  @brief  Concatenate string and C string.
6063:/usr/include/c++/10/bits/basic_string.h ****    *  @param __lhs  First string.
6064:/usr/include/c++/10/bits/basic_string.h ****    *  @param __rhs  Last string.
6065:/usr/include/c++/10/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6066:/usr/include/c++/10/bits/basic_string.h ****    */
6067:/usr/include/c++/10/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6068:/usr/include/c++/10/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6069:/usr/include/c++/10/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6070:/usr/include/c++/10/bits/basic_string.h **** 	      const _CharT* __rhs)
AARCH64 GAS  obj/extInstr.s 			page 194


6071:/usr/include/c++/10/bits/basic_string.h ****     {
6072:/usr/include/c++/10/bits/basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
6073:/usr/include/c++/10/bits/basic_string.h ****       __str.append(__rhs);
6074:/usr/include/c++/10/bits/basic_string.h ****       return __str;
6075:/usr/include/c++/10/bits/basic_string.h ****     }
6076:/usr/include/c++/10/bits/basic_string.h **** 
6077:/usr/include/c++/10/bits/basic_string.h ****   /**
6078:/usr/include/c++/10/bits/basic_string.h ****    *  @brief  Concatenate string and character.
6079:/usr/include/c++/10/bits/basic_string.h ****    *  @param __lhs  First string.
6080:/usr/include/c++/10/bits/basic_string.h ****    *  @param __rhs  Last string.
6081:/usr/include/c++/10/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6082:/usr/include/c++/10/bits/basic_string.h ****    */
6083:/usr/include/c++/10/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6084:/usr/include/c++/10/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6085:/usr/include/c++/10/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)
6086:/usr/include/c++/10/bits/basic_string.h ****     {
6087:/usr/include/c++/10/bits/basic_string.h ****       typedef basic_string<_CharT, _Traits, _Alloc>	__string_type;
6088:/usr/include/c++/10/bits/basic_string.h ****       typedef typename __string_type::size_type		__size_type;
6089:/usr/include/c++/10/bits/basic_string.h ****       __string_type __str(__lhs);
6090:/usr/include/c++/10/bits/basic_string.h ****       __str.append(__size_type(1), __rhs);
6091:/usr/include/c++/10/bits/basic_string.h ****       return __str;
6092:/usr/include/c++/10/bits/basic_string.h ****     }
6093:/usr/include/c++/10/bits/basic_string.h **** 
6094:/usr/include/c++/10/bits/basic_string.h **** #if __cplusplus >= 201103L
6095:/usr/include/c++/10/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6096:/usr/include/c++/10/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6097:/usr/include/c++/10/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6098:/usr/include/c++/10/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6099:/usr/include/c++/10/bits/basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
6100:/usr/include/c++/10/bits/basic_string.h **** 
6101:/usr/include/c++/10/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6102:/usr/include/c++/10/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6103:/usr/include/c++/10/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6104:/usr/include/c++/10/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6105:/usr/include/c++/10/bits/basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
6106:/usr/include/c++/10/bits/basic_string.h **** 
6107:/usr/include/c++/10/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6108:/usr/include/c++/10/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6109:/usr/include/c++/10/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6110:/usr/include/c++/10/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6111:/usr/include/c++/10/bits/basic_string.h ****     {
6112:/usr/include/c++/10/bits/basic_string.h **** #if _GLIBCXX_USE_CXX11_ABI
6113:/usr/include/c++/10/bits/basic_string.h ****       using _Alloc_traits = allocator_traits<_Alloc>;
6114:/usr/include/c++/10/bits/basic_string.h ****       bool __use_rhs = false;
6115:/usr/include/c++/10/bits/basic_string.h ****       if _GLIBCXX17_CONSTEXPR (typename _Alloc_traits::is_always_equal{})
6116:/usr/include/c++/10/bits/basic_string.h **** 	__use_rhs = true;
6117:/usr/include/c++/10/bits/basic_string.h ****       else if (__lhs.get_allocator() == __rhs.get_allocator())
6118:/usr/include/c++/10/bits/basic_string.h **** 	__use_rhs = true;
6119:/usr/include/c++/10/bits/basic_string.h ****       if (__use_rhs)
6120:/usr/include/c++/10/bits/basic_string.h **** #endif
6121:/usr/include/c++/10/bits/basic_string.h **** 	{
6122:/usr/include/c++/10/bits/basic_string.h **** 	  const auto __size = __lhs.size() + __rhs.size();
6123:/usr/include/c++/10/bits/basic_string.h **** 	  if (__size > __lhs.capacity() && __size <= __rhs.capacity())
6124:/usr/include/c++/10/bits/basic_string.h **** 	    return std::move(__rhs.insert(0, __lhs));
6125:/usr/include/c++/10/bits/basic_string.h **** 	}
6126:/usr/include/c++/10/bits/basic_string.h ****       return std::move(__lhs.append(__rhs));
6127:/usr/include/c++/10/bits/basic_string.h ****     }
AARCH64 GAS  obj/extInstr.s 			page 195


6128:/usr/include/c++/10/bits/basic_string.h **** 
6129:/usr/include/c++/10/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6130:/usr/include/c++/10/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6131:/usr/include/c++/10/bits/basic_string.h ****     operator+(const _CharT* __lhs,
6132:/usr/include/c++/10/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6133:/usr/include/c++/10/bits/basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
6134:/usr/include/c++/10/bits/basic_string.h **** 
6135:/usr/include/c++/10/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6136:/usr/include/c++/10/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6137:/usr/include/c++/10/bits/basic_string.h ****     operator+(_CharT __lhs,
6138:/usr/include/c++/10/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6139:/usr/include/c++/10/bits/basic_string.h ****     { return std::move(__rhs.insert(0, 1, __lhs)); }
6140:/usr/include/c++/10/bits/basic_string.h **** 
6141:/usr/include/c++/10/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6142:/usr/include/c++/10/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6143:/usr/include/c++/10/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6144:/usr/include/c++/10/bits/basic_string.h **** 	      const _CharT* __rhs)
6145:/usr/include/c++/10/bits/basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
6146:/usr/include/c++/10/bits/basic_string.h **** 
6147:/usr/include/c++/10/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6148:/usr/include/c++/10/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6149:/usr/include/c++/10/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6150:/usr/include/c++/10/bits/basic_string.h **** 	      _CharT __rhs)
6151:/usr/include/c++/10/bits/basic_string.h ****     { return std::move(__lhs.append(1, __rhs)); }
6152:/usr/include/c++/10/bits/basic_string.h **** #endif
6153:/usr/include/c++/10/bits/basic_string.h **** 
6154:/usr/include/c++/10/bits/basic_string.h ****   // operator ==
6155:/usr/include/c++/10/bits/basic_string.h ****   /**
6156:/usr/include/c++/10/bits/basic_string.h ****    *  @brief  Test equivalence of two strings.
6157:/usr/include/c++/10/bits/basic_string.h ****    *  @param __lhs  First string.
6158:/usr/include/c++/10/bits/basic_string.h ****    *  @param __rhs  Second string.
6159:/usr/include/c++/10/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.
6160:/usr/include/c++/10/bits/basic_string.h ****    */
6161:/usr/include/c++/10/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6162:/usr/include/c++/10/bits/basic_string.h ****     inline bool
6163:/usr/include/c++/10/bits/basic_string.h ****     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6164:/usr/include/c++/10/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6165:/usr/include/c++/10/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
6166:/usr/include/c++/10/bits/basic_string.h ****     { return __lhs.compare(__rhs) == 0; }
6167:/usr/include/c++/10/bits/basic_string.h **** 
6168:/usr/include/c++/10/bits/basic_string.h ****   template<typename _CharT>
6169:/usr/include/c++/10/bits/basic_string.h ****     inline
6170:/usr/include/c++/10/bits/basic_string.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, bool>::__type
6171:/usr/include/c++/10/bits/basic_string.h ****     operator==(const basic_string<_CharT>& __lhs,
6172:/usr/include/c++/10/bits/basic_string.h **** 	       const basic_string<_CharT>& __rhs) _GLIBCXX_NOEXCEPT
6173:/usr/include/c++/10/bits/basic_string.h ****     { return (__lhs.size() == __rhs.size()
6174:/usr/include/c++/10/bits/basic_string.h **** 	      && !std::char_traits<_CharT>::compare(__lhs.data(), __rhs.data(),
6175:/usr/include/c++/10/bits/basic_string.h **** 						    __lhs.size())); }
6176:/usr/include/c++/10/bits/basic_string.h **** 
6177:/usr/include/c++/10/bits/basic_string.h ****   /**
6178:/usr/include/c++/10/bits/basic_string.h ****    *  @brief  Test equivalence of string and C string.
6179:/usr/include/c++/10/bits/basic_string.h ****    *  @param __lhs  String.
6180:/usr/include/c++/10/bits/basic_string.h ****    *  @param __rhs  C string.
6181:/usr/include/c++/10/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.
6182:/usr/include/c++/10/bits/basic_string.h ****    */
6183:/usr/include/c++/10/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6184:/usr/include/c++/10/bits/basic_string.h ****     inline bool
AARCH64 GAS  obj/extInstr.s 			page 196


6185:/usr/include/c++/10/bits/basic_string.h ****     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6186:/usr/include/c++/10/bits/basic_string.h **** 	       const _CharT* __rhs)
6187:/usr/include/c++/10/bits/basic_string.h ****     { return __lhs.compare(__rhs) == 0; }
6188:/usr/include/c++/10/bits/basic_string.h **** 
6189:/usr/include/c++/10/bits/basic_string.h **** #if __cpp_lib_three_way_comparison
6190:/usr/include/c++/10/bits/basic_string.h ****   /**
6191:/usr/include/c++/10/bits/basic_string.h ****    *  @brief  Three-way comparison of a string and a C string.
6192:/usr/include/c++/10/bits/basic_string.h ****    *  @param __lhs  A string.
6193:/usr/include/c++/10/bits/basic_string.h ****    *  @param __rhs  A null-terminated string.
6194:/usr/include/c++/10/bits/basic_string.h ****    *  @return  A value indicating whether `__lhs` is less than, equal to,
6195:/usr/include/c++/10/bits/basic_string.h ****    *	       greater than, or incomparable with `__rhs`.
6196:/usr/include/c++/10/bits/basic_string.h ****    */
6197:/usr/include/c++/10/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6198:/usr/include/c++/10/bits/basic_string.h ****     inline auto
6199:/usr/include/c++/10/bits/basic_string.h ****     operator<=>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6200:/usr/include/c++/10/bits/basic_string.h **** 		const basic_string<_CharT, _Traits, _Alloc>& __rhs) noexcept
6201:/usr/include/c++/10/bits/basic_string.h ****     -> decltype(__detail::__char_traits_cmp_cat<_Traits>(0))
6202:/usr/include/c++/10/bits/basic_string.h ****     { return __detail::__char_traits_cmp_cat<_Traits>(__lhs.compare(__rhs)); }
6203:/usr/include/c++/10/bits/basic_string.h **** 
6204:/usr/include/c++/10/bits/basic_string.h ****   /**
6205:/usr/include/c++/10/bits/basic_string.h ****    *  @brief  Three-way comparison of a string and a C string.
6206:/usr/include/c++/10/bits/basic_string.h ****    *  @param __lhs  A string.
6207:/usr/include/c++/10/bits/basic_string.h ****    *  @param __rhs  A null-terminated string.
6208:/usr/include/c++/10/bits/basic_string.h ****    *  @return  A value indicating whether `__lhs` is less than, equal to,
6209:/usr/include/c++/10/bits/basic_string.h ****    *	       greater than, or incomparable with `__rhs`.
6210:/usr/include/c++/10/bits/basic_string.h ****    */
6211:/usr/include/c++/10/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6212:/usr/include/c++/10/bits/basic_string.h ****     inline auto
6213:/usr/include/c++/10/bits/basic_string.h ****     operator<=>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6214:/usr/include/c++/10/bits/basic_string.h **** 		const _CharT* __rhs) noexcept
6215:/usr/include/c++/10/bits/basic_string.h ****     -> decltype(__detail::__char_traits_cmp_cat<_Traits>(0))
6216:/usr/include/c++/10/bits/basic_string.h ****     { return __detail::__char_traits_cmp_cat<_Traits>(__lhs.compare(__rhs)); }
6217:/usr/include/c++/10/bits/basic_string.h **** #else
6218:/usr/include/c++/10/bits/basic_string.h ****   /**
6219:/usr/include/c++/10/bits/basic_string.h ****    *  @brief  Test equivalence of C string and string.
6220:/usr/include/c++/10/bits/basic_string.h ****    *  @param __lhs  C string.
6221:/usr/include/c++/10/bits/basic_string.h ****    *  @param __rhs  String.
6222:/usr/include/c++/10/bits/basic_string.h ****    *  @return  True if @a __rhs.compare(@a __lhs) == 0.  False otherwise.
6223:/usr/include/c++/10/bits/basic_string.h ****    */
6224:/usr/include/c++/10/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6225:/usr/include/c++/10/bits/basic_string.h ****     inline bool
6226:/usr/include/c++/10/bits/basic_string.h ****     operator==(const _CharT* __lhs,
6227:/usr/include/c++/10/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6228:/usr/include/c++/10/bits/basic_string.h ****     { return __rhs.compare(__lhs) == 0; }
6229:/usr/include/c++/10/bits/basic_string.h **** 
6230:/usr/include/c++/10/bits/basic_string.h ****   // operator !=
6231:/usr/include/c++/10/bits/basic_string.h ****   /**
6232:/usr/include/c++/10/bits/basic_string.h ****    *  @brief  Test difference of two strings.
6233:/usr/include/c++/10/bits/basic_string.h ****    *  @param __lhs  First string.
6234:/usr/include/c++/10/bits/basic_string.h ****    *  @param __rhs  Second string.
6235:/usr/include/c++/10/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) != 0.  False otherwise.
6236:/usr/include/c++/10/bits/basic_string.h ****    */
6237:/usr/include/c++/10/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6238:/usr/include/c++/10/bits/basic_string.h ****     inline bool
6239:/usr/include/c++/10/bits/basic_string.h ****     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6240:/usr/include/c++/10/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6241:/usr/include/c++/10/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
AARCH64 GAS  obj/extInstr.s 			page 197


6242:/usr/include/c++/10/bits/basic_string.h ****     { return !(__lhs == __rhs); }
6243:/usr/include/c++/10/bits/basic_string.h **** 
6244:/usr/include/c++/10/bits/basic_string.h ****   /**
6245:/usr/include/c++/10/bits/basic_string.h ****    *  @brief  Test difference of C string and string.
6246:/usr/include/c++/10/bits/basic_string.h ****    *  @param __lhs  C string.
6247:/usr/include/c++/10/bits/basic_string.h ****    *  @param __rhs  String.
6248:/usr/include/c++/10/bits/basic_string.h ****    *  @return  True if @a __rhs.compare(@a __lhs) != 0.  False otherwise.
6249:/usr/include/c++/10/bits/basic_string.h ****    */
6250:/usr/include/c++/10/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6251:/usr/include/c++/10/bits/basic_string.h ****     inline bool
6252:/usr/include/c++/10/bits/basic_string.h ****     operator!=(const _CharT* __lhs,
6253:/usr/include/c++/10/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6254:/usr/include/c++/10/bits/basic_string.h ****     { return !(__lhs == __rhs); }
6255:/usr/include/c++/10/bits/basic_string.h **** 
6256:/usr/include/c++/10/bits/basic_string.h ****   /**
6257:/usr/include/c++/10/bits/basic_string.h ****    *  @brief  Test difference of string and C string.
6258:/usr/include/c++/10/bits/basic_string.h ****    *  @param __lhs  String.
6259:/usr/include/c++/10/bits/basic_string.h ****    *  @param __rhs  C string.
6260:/usr/include/c++/10/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) != 0.  False otherwise.
6261:/usr/include/c++/10/bits/basic_string.h ****    */
6262:/usr/include/c++/10/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6263:/usr/include/c++/10/bits/basic_string.h ****     inline bool
6264:/usr/include/c++/10/bits/basic_string.h ****     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6265:/usr/include/c++/10/bits/basic_string.h **** 	       const _CharT* __rhs)
6266:/usr/include/c++/10/bits/basic_string.h ****     { return !(__lhs == __rhs); }
6267:/usr/include/c++/10/bits/basic_string.h **** 
6268:/usr/include/c++/10/bits/basic_string.h ****   // operator <
6269:/usr/include/c++/10/bits/basic_string.h ****   /**
6270:/usr/include/c++/10/bits/basic_string.h ****    *  @brief  Test if string precedes string.
6271:/usr/include/c++/10/bits/basic_string.h ****    *  @param __lhs  First string.
6272:/usr/include/c++/10/bits/basic_string.h ****    *  @param __rhs  Second string.
6273:/usr/include/c++/10/bits/basic_string.h ****    *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
6274:/usr/include/c++/10/bits/basic_string.h ****    */
6275:/usr/include/c++/10/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6276:/usr/include/c++/10/bits/basic_string.h ****     inline bool
6277:/usr/include/c++/10/bits/basic_string.h ****     operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6278:/usr/include/c++/10/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6279:/usr/include/c++/10/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
6280:/usr/include/c++/10/bits/basic_string.h ****     { return __lhs.compare(__rhs) < 0; }
6281:/usr/include/c++/10/bits/basic_string.h **** 
6282:/usr/include/c++/10/bits/basic_string.h ****   /**
6283:/usr/include/c++/10/bits/basic_string.h ****    *  @brief  Test if string precedes C string.
6284:/usr/include/c++/10/bits/basic_string.h ****    *  @param __lhs  String.
6285:/usr/include/c++/10/bits/basic_string.h ****    *  @param __rhs  C string.
6286:/usr/include/c++/10/bits/basic_string.h ****    *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
6287:/usr/include/c++/10/bits/basic_string.h ****    */
6288:/usr/include/c++/10/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6289:/usr/include/c++/10/bits/basic_string.h ****     inline bool
6290:/usr/include/c++/10/bits/basic_string.h ****     operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6291:/usr/include/c++/10/bits/basic_string.h **** 	      const _CharT* __rhs)
6292:/usr/include/c++/10/bits/basic_string.h ****     { return __lhs.compare(__rhs) < 0; }
6293:/usr/include/c++/10/bits/basic_string.h **** 
6294:/usr/include/c++/10/bits/basic_string.h ****   /**
6295:/usr/include/c++/10/bits/basic_string.h ****    *  @brief  Test if C string precedes string.
6296:/usr/include/c++/10/bits/basic_string.h ****    *  @param __lhs  C string.
6297:/usr/include/c++/10/bits/basic_string.h ****    *  @param __rhs  String.
6298:/usr/include/c++/10/bits/basic_string.h ****    *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
AARCH64 GAS  obj/extInstr.s 			page 198


6299:/usr/include/c++/10/bits/basic_string.h ****    */
6300:/usr/include/c++/10/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6301:/usr/include/c++/10/bits/basic_string.h ****     inline bool
6302:/usr/include/c++/10/bits/basic_string.h ****     operator<(const _CharT* __lhs,
6303:/usr/include/c++/10/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6304:/usr/include/c++/10/bits/basic_string.h ****     { return __rhs.compare(__lhs) > 0; }
6305:/usr/include/c++/10/bits/basic_string.h **** 
6306:/usr/include/c++/10/bits/basic_string.h ****   // operator >
6307:/usr/include/c++/10/bits/basic_string.h ****   /**
6308:/usr/include/c++/10/bits/basic_string.h ****    *  @brief  Test if string follows string.
6309:/usr/include/c++/10/bits/basic_string.h ****    *  @param __lhs  First string.
6310:/usr/include/c++/10/bits/basic_string.h ****    *  @param __rhs  Second string.
6311:/usr/include/c++/10/bits/basic_string.h ****    *  @return  True if @a __lhs follows @a __rhs.  False otherwise.
6312:/usr/include/c++/10/bits/basic_string.h ****    */
6313:/usr/include/c++/10/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6314:/usr/include/c++/10/bits/basic_string.h ****     inline bool
6315:/usr/include/c++/10/bits/basic_string.h ****     operator>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6316:/usr/include/c++/10/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6317:/usr/include/c++/10/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
6318:/usr/include/c++/10/bits/basic_string.h ****     { return __lhs.compare(__rhs) > 0; }
6319:/usr/include/c++/10/bits/basic_string.h **** 
6320:/usr/include/c++/10/bits/basic_string.h ****   /**
6321:/usr/include/c++/10/bits/basic_string.h ****    *  @brief  Test if string follows C string.
6322:/usr/include/c++/10/bits/basic_string.h ****    *  @param __lhs  String.
6323:/usr/include/c++/10/bits/basic_string.h ****    *  @param __rhs  C string.
6324:/usr/include/c++/10/bits/basic_string.h ****    *  @return  True if @a __lhs follows @a __rhs.  False otherwise.
6325:/usr/include/c++/10/bits/basic_string.h ****    */
6326:/usr/include/c++/10/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6327:/usr/include/c++/10/bits/basic_string.h ****     inline bool
6328:/usr/include/c++/10/bits/basic_string.h ****     operator>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6329:/usr/include/c++/10/bits/basic_string.h **** 	      const _CharT* __rhs)
6330:/usr/include/c++/10/bits/basic_string.h ****     { return __lhs.compare(__rhs) > 0; }
6331:/usr/include/c++/10/bits/basic_string.h **** 
6332:/usr/include/c++/10/bits/basic_string.h ****   /**
6333:/usr/include/c++/10/bits/basic_string.h ****    *  @brief  Test if C string follows string.
6334:/usr/include/c++/10/bits/basic_string.h ****    *  @param __lhs  C string.
6335:/usr/include/c++/10/bits/basic_string.h ****    *  @param __rhs  String.
6336:/usr/include/c++/10/bits/basic_string.h ****    *  @return  True if @a __lhs follows @a __rhs.  False otherwise.
6337:/usr/include/c++/10/bits/basic_string.h ****    */
6338:/usr/include/c++/10/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6339:/usr/include/c++/10/bits/basic_string.h ****     inline bool
6340:/usr/include/c++/10/bits/basic_string.h ****     operator>(const _CharT* __lhs,
6341:/usr/include/c++/10/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6342:/usr/include/c++/10/bits/basic_string.h ****     { return __rhs.compare(__lhs) < 0; }
6343:/usr/include/c++/10/bits/basic_string.h **** 
6344:/usr/include/c++/10/bits/basic_string.h ****   // operator <=
6345:/usr/include/c++/10/bits/basic_string.h ****   /**
6346:/usr/include/c++/10/bits/basic_string.h ****    *  @brief  Test if string doesn't follow string.
6347:/usr/include/c++/10/bits/basic_string.h ****    *  @param __lhs  First string.
6348:/usr/include/c++/10/bits/basic_string.h ****    *  @param __rhs  Second string.
6349:/usr/include/c++/10/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't follow @a __rhs.  False otherwise.
6350:/usr/include/c++/10/bits/basic_string.h ****    */
6351:/usr/include/c++/10/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6352:/usr/include/c++/10/bits/basic_string.h ****     inline bool
6353:/usr/include/c++/10/bits/basic_string.h ****     operator<=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6354:/usr/include/c++/10/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6355:/usr/include/c++/10/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
AARCH64 GAS  obj/extInstr.s 			page 199


6356:/usr/include/c++/10/bits/basic_string.h ****     { return __lhs.compare(__rhs) <= 0; }
6357:/usr/include/c++/10/bits/basic_string.h **** 
6358:/usr/include/c++/10/bits/basic_string.h ****   /**
6359:/usr/include/c++/10/bits/basic_string.h ****    *  @brief  Test if string doesn't follow C string.
6360:/usr/include/c++/10/bits/basic_string.h ****    *  @param __lhs  String.
6361:/usr/include/c++/10/bits/basic_string.h ****    *  @param __rhs  C string.
6362:/usr/include/c++/10/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't follow @a __rhs.  False otherwise.
6363:/usr/include/c++/10/bits/basic_string.h ****    */
6364:/usr/include/c++/10/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6365:/usr/include/c++/10/bits/basic_string.h ****     inline bool
6366:/usr/include/c++/10/bits/basic_string.h ****     operator<=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6367:/usr/include/c++/10/bits/basic_string.h **** 	       const _CharT* __rhs)
6368:/usr/include/c++/10/bits/basic_string.h ****     { return __lhs.compare(__rhs) <= 0; }
6369:/usr/include/c++/10/bits/basic_string.h **** 
6370:/usr/include/c++/10/bits/basic_string.h ****   /**
6371:/usr/include/c++/10/bits/basic_string.h ****    *  @brief  Test if C string doesn't follow string.
6372:/usr/include/c++/10/bits/basic_string.h ****    *  @param __lhs  C string.
6373:/usr/include/c++/10/bits/basic_string.h ****    *  @param __rhs  String.
6374:/usr/include/c++/10/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't follow @a __rhs.  False otherwise.
6375:/usr/include/c++/10/bits/basic_string.h ****    */
6376:/usr/include/c++/10/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6377:/usr/include/c++/10/bits/basic_string.h ****     inline bool
6378:/usr/include/c++/10/bits/basic_string.h ****     operator<=(const _CharT* __lhs,
6379:/usr/include/c++/10/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6380:/usr/include/c++/10/bits/basic_string.h ****     { return __rhs.compare(__lhs) >= 0; }
6381:/usr/include/c++/10/bits/basic_string.h **** 
6382:/usr/include/c++/10/bits/basic_string.h ****   // operator >=
6383:/usr/include/c++/10/bits/basic_string.h ****   /**
6384:/usr/include/c++/10/bits/basic_string.h ****    *  @brief  Test if string doesn't precede string.
6385:/usr/include/c++/10/bits/basic_string.h ****    *  @param __lhs  First string.
6386:/usr/include/c++/10/bits/basic_string.h ****    *  @param __rhs  Second string.
6387:/usr/include/c++/10/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't precede @a __rhs.  False otherwise.
6388:/usr/include/c++/10/bits/basic_string.h ****    */
6389:/usr/include/c++/10/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6390:/usr/include/c++/10/bits/basic_string.h ****     inline bool
6391:/usr/include/c++/10/bits/basic_string.h ****     operator>=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6392:/usr/include/c++/10/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6393:/usr/include/c++/10/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
6394:/usr/include/c++/10/bits/basic_string.h ****     { return __lhs.compare(__rhs) >= 0; }
6395:/usr/include/c++/10/bits/basic_string.h **** 
6396:/usr/include/c++/10/bits/basic_string.h ****   /**
6397:/usr/include/c++/10/bits/basic_string.h ****    *  @brief  Test if string doesn't precede C string.
6398:/usr/include/c++/10/bits/basic_string.h ****    *  @param __lhs  String.
6399:/usr/include/c++/10/bits/basic_string.h ****    *  @param __rhs  C string.
6400:/usr/include/c++/10/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't precede @a __rhs.  False otherwise.
6401:/usr/include/c++/10/bits/basic_string.h ****    */
6402:/usr/include/c++/10/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6403:/usr/include/c++/10/bits/basic_string.h ****     inline bool
6404:/usr/include/c++/10/bits/basic_string.h ****     operator>=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6405:/usr/include/c++/10/bits/basic_string.h **** 	       const _CharT* __rhs)
6406:/usr/include/c++/10/bits/basic_string.h ****     { return __lhs.compare(__rhs) >= 0; }
6407:/usr/include/c++/10/bits/basic_string.h **** 
6408:/usr/include/c++/10/bits/basic_string.h ****   /**
6409:/usr/include/c++/10/bits/basic_string.h ****    *  @brief  Test if C string doesn't precede string.
6410:/usr/include/c++/10/bits/basic_string.h ****    *  @param __lhs  C string.
6411:/usr/include/c++/10/bits/basic_string.h ****    *  @param __rhs  String.
6412:/usr/include/c++/10/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't precede @a __rhs.  False otherwise.
AARCH64 GAS  obj/extInstr.s 			page 200


6413:/usr/include/c++/10/bits/basic_string.h ****    */
6414:/usr/include/c++/10/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6415:/usr/include/c++/10/bits/basic_string.h ****     inline bool
6416:/usr/include/c++/10/bits/basic_string.h ****     operator>=(const _CharT* __lhs,
6417:/usr/include/c++/10/bits/basic_string.h **** 	     const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6418:/usr/include/c++/10/bits/basic_string.h ****     { return __rhs.compare(__lhs) <= 0; }
6419:/usr/include/c++/10/bits/basic_string.h **** #endif // three-way comparison
6420:/usr/include/c++/10/bits/basic_string.h **** 
6421:/usr/include/c++/10/bits/basic_string.h ****   /**
6422:/usr/include/c++/10/bits/basic_string.h ****    *  @brief  Swap contents of two strings.
6423:/usr/include/c++/10/bits/basic_string.h ****    *  @param __lhs  First string.
6424:/usr/include/c++/10/bits/basic_string.h ****    *  @param __rhs  Second string.
6425:/usr/include/c++/10/bits/basic_string.h ****    *
6426:/usr/include/c++/10/bits/basic_string.h ****    *  Exchanges the contents of @a __lhs and @a __rhs in constant time.
6427:/usr/include/c++/10/bits/basic_string.h ****    */
6428:/usr/include/c++/10/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6429:/usr/include/c++/10/bits/basic_string.h ****     inline void
6430:/usr/include/c++/10/bits/basic_string.h ****     swap(basic_string<_CharT, _Traits, _Alloc>& __lhs,
6431:/usr/include/c++/10/bits/basic_string.h **** 	 basic_string<_CharT, _Traits, _Alloc>& __rhs)
6432:/usr/include/c++/10/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT_IF(noexcept(__lhs.swap(__rhs)))
6433:/usr/include/c++/10/bits/basic_string.h ****     { __lhs.swap(__rhs); }
6434:/usr/include/c++/10/bits/basic_string.h **** 
6435:/usr/include/c++/10/bits/basic_string.h **** 
6436:/usr/include/c++/10/bits/basic_string.h ****   /**
6437:/usr/include/c++/10/bits/basic_string.h ****    *  @brief  Read stream into a string.
6438:/usr/include/c++/10/bits/basic_string.h ****    *  @param __is  Input stream.
6439:/usr/include/c++/10/bits/basic_string.h ****    *  @param __str  Buffer to store into.
6440:/usr/include/c++/10/bits/basic_string.h ****    *  @return  Reference to the input stream.
6441:/usr/include/c++/10/bits/basic_string.h ****    *
6442:/usr/include/c++/10/bits/basic_string.h ****    *  Stores characters from @a __is into @a __str until whitespace is
6443:/usr/include/c++/10/bits/basic_string.h ****    *  found, the end of the stream is encountered, or str.max_size()
6444:/usr/include/c++/10/bits/basic_string.h ****    *  is reached.  If is.width() is non-zero, that is the limit on the
6445:/usr/include/c++/10/bits/basic_string.h ****    *  number of characters stored into @a __str.  Any previous
6446:/usr/include/c++/10/bits/basic_string.h ****    *  contents of @a __str are erased.
6447:/usr/include/c++/10/bits/basic_string.h ****    */
6448:/usr/include/c++/10/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6449:/usr/include/c++/10/bits/basic_string.h ****     basic_istream<_CharT, _Traits>&
6450:/usr/include/c++/10/bits/basic_string.h ****     operator>>(basic_istream<_CharT, _Traits>& __is,
6451:/usr/include/c++/10/bits/basic_string.h **** 	       basic_string<_CharT, _Traits, _Alloc>& __str);
6452:/usr/include/c++/10/bits/basic_string.h **** 
6453:/usr/include/c++/10/bits/basic_string.h ****   template<>
6454:/usr/include/c++/10/bits/basic_string.h ****     basic_istream<char>&
6455:/usr/include/c++/10/bits/basic_string.h ****     operator>>(basic_istream<char>& __is, basic_string<char>& __str);
6456:/usr/include/c++/10/bits/basic_string.h **** 
6457:/usr/include/c++/10/bits/basic_string.h ****   /**
6458:/usr/include/c++/10/bits/basic_string.h ****    *  @brief  Write string to a stream.
6459:/usr/include/c++/10/bits/basic_string.h ****    *  @param __os  Output stream.
6460:/usr/include/c++/10/bits/basic_string.h ****    *  @param __str  String to write out.
6461:/usr/include/c++/10/bits/basic_string.h ****    *  @return  Reference to the output stream.
6462:/usr/include/c++/10/bits/basic_string.h ****    *
6463:/usr/include/c++/10/bits/basic_string.h ****    *  Output characters of @a __str into os following the same rules as for
6464:/usr/include/c++/10/bits/basic_string.h ****    *  writing a C string.
6465:/usr/include/c++/10/bits/basic_string.h ****    */
6466:/usr/include/c++/10/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6467:/usr/include/c++/10/bits/basic_string.h ****     inline basic_ostream<_CharT, _Traits>&
6468:/usr/include/c++/10/bits/basic_string.h ****     operator<<(basic_ostream<_CharT, _Traits>& __os,
 525              		.loc 10 6468 5 is_stmt 1 view .LVU137
AARCH64 GAS  obj/extInstr.s 			page 201


 526              	.LBB828:
 527              	.LBB829:
 528              	.LBI829:
2311:/usr/include/c++/10/bits/basic_string.h ****       { return _M_data(); }
 529              		.loc 10 2311 7 view .LVU138
 530              	.LBB830:
 531              	.LBI830:
 186:/usr/include/c++/10/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 532              		.loc 10 186 7 view .LVU139
 186:/usr/include/c++/10/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 533              		.loc 10 186 7 is_stmt 0 view .LVU140
 534              	.LBE830:
 535              	.LBE829:
 536              	.LBB831:
 537              	.LBI831:
 901:/usr/include/c++/10/bits/basic_string.h ****       { return _M_string_length; }
 538              		.loc 10 901 7 is_stmt 1 view .LVU141
 901:/usr/include/c++/10/bits/basic_string.h ****       { return _M_string_length; }
 539              		.loc 10 901 7 is_stmt 0 view .LVU142
 540              	.LBE831:
6469:/usr/include/c++/10/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __str)
6470:/usr/include/c++/10/bits/basic_string.h ****     {
6471:/usr/include/c++/10/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
6472:/usr/include/c++/10/bits/basic_string.h ****       // 586. string inserter not a formatted function
6473:/usr/include/c++/10/bits/basic_string.h ****       return __ostream_insert(__os, __str.data(), __str.size());
 541              		.loc 10 6473 30 view .LVU143
 542 0108 E18B46A9 		ldp	x1, x2, [sp, 104]
 543 010c E00240F9 		ldr	x0, [x23, #:got_lo12:_ZSt4cout]
 544              	.LEHB2:
 545 0110 00000094 		bl	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 546              	.LVL26:
 547              		.loc 10 6473 30 view .LVU144
 548              	.LBE828:
 549              	.LBE827:
 550              	.LBB832:
 551              	.LBI832:
 108:/usr/include/c++/10/ostream ****       {
 552              		.loc 1 108 7 is_stmt 1 view .LVU145
 553              	.LBB833:
 113:/usr/include/c++/10/ostream ****       }
 554              		.loc 1 113 13 is_stmt 0 view .LVU146
 555 0114 00000094 		bl	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0
 556              	.LVL27:
 557              	.LEHE2:
 113:/usr/include/c++/10/ostream ****       }
 558              		.loc 1 113 13 view .LVU147
 559              	.LBE833:
 560              	.LBE832:
 561              	.LBB834:
 562              	.LBI834:
 657:/usr/include/c++/10/bits/basic_string.h ****       { _M_dispose(); }
 563              		.loc 10 657 7 is_stmt 1 view .LVU148
 564              	.LBB835:
 565              	.LBB836:
 566              	.LBI836:
 229:/usr/include/c++/10/bits/basic_string.h ****       {
 567              		.loc 10 229 7 view .LVU149
AARCH64 GAS  obj/extInstr.s 			page 202


 568              	.LBB837:
 569              	.LBB838:
 570              	.LBI838:
 221:/usr/include/c++/10/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 571              		.loc 10 221 7 view .LVU150
 572              	.LBB839:
 573              	.LBI839:
 186:/usr/include/c++/10/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 574              		.loc 10 186 7 view .LVU151
 575              	.LBB840:
 187:/usr/include/c++/10/bits/basic_string.h **** 
 576              		.loc 10 187 28 is_stmt 0 view .LVU152
 577 0118 E03740F9 		ldr	x0, [sp, 104]
 578              	.LVL28:
 187:/usr/include/c++/10/bits/basic_string.h **** 
 579              		.loc 10 187 28 view .LVU153
 580              	.LBE840:
 581              	.LBE839:
 582              	.LBB841:
 583              	.LBI841:
 200:/usr/include/c++/10/bits/basic_string.h ****       {
 584              		.loc 10 200 7 is_stmt 1 view .LVU154
 200:/usr/include/c++/10/bits/basic_string.h ****       {
 585              		.loc 10 200 7 is_stmt 0 view .LVU155
 586              	.LBE841:
 587              	.LBE838:
 231:/usr/include/c++/10/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 588              		.loc 10 231 2 view .LVU156
 589 011c F9E30191 		add	x25, sp, 120
 590 0120 1F0019EB 		cmp	x0, x25
 591 0124 80000054 		beq	.L15
 592              	.LVL29:
 593              	.LBB842:
 594              	.LBI842:
 236:/usr/include/c++/10/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 595              		.loc 10 236 7 is_stmt 1 view .LVU157
 596              	.LBB843:
 597              	.LBB844:
 598              	.LBI844:
 599              		.file 11 "/usr/include/c++/10/bits/alloc_traits.h"
   1:/usr/include/c++/10/bits/alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:/usr/include/c++/10/bits/alloc_traits.h **** 
   3:/usr/include/c++/10/bits/alloc_traits.h **** // Copyright (C) 2011-2020 Free Software Foundation, Inc.
   4:/usr/include/c++/10/bits/alloc_traits.h **** //
   5:/usr/include/c++/10/bits/alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/10/bits/alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/10/bits/alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/10/bits/alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/10/bits/alloc_traits.h **** // any later version.
  10:/usr/include/c++/10/bits/alloc_traits.h **** 
  11:/usr/include/c++/10/bits/alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/10/bits/alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/10/bits/alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/10/bits/alloc_traits.h **** // GNU General Public License for more details.
  15:/usr/include/c++/10/bits/alloc_traits.h **** 
  16:/usr/include/c++/10/bits/alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/10/bits/alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
AARCH64 GAS  obj/extInstr.s 			page 203


  18:/usr/include/c++/10/bits/alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/10/bits/alloc_traits.h **** 
  20:/usr/include/c++/10/bits/alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/10/bits/alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/10/bits/alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/10/bits/alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/10/bits/alloc_traits.h **** 
  25:/usr/include/c++/10/bits/alloc_traits.h **** /** @file bits/alloc_traits.h
  26:/usr/include/c++/10/bits/alloc_traits.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/10/bits/alloc_traits.h ****  *  Do not attempt to use it directly. @headername{memory}
  28:/usr/include/c++/10/bits/alloc_traits.h ****  */
  29:/usr/include/c++/10/bits/alloc_traits.h **** 
  30:/usr/include/c++/10/bits/alloc_traits.h **** #ifndef _ALLOC_TRAITS_H
  31:/usr/include/c++/10/bits/alloc_traits.h **** #define _ALLOC_TRAITS_H 1
  32:/usr/include/c++/10/bits/alloc_traits.h **** 
  33:/usr/include/c++/10/bits/alloc_traits.h **** #include <bits/stl_construct.h>
  34:/usr/include/c++/10/bits/alloc_traits.h **** #include <bits/memoryfwd.h>
  35:/usr/include/c++/10/bits/alloc_traits.h **** #if __cplusplus >= 201103L
  36:/usr/include/c++/10/bits/alloc_traits.h **** # include <bits/allocator.h>
  37:/usr/include/c++/10/bits/alloc_traits.h **** # include <bits/ptr_traits.h>
  38:/usr/include/c++/10/bits/alloc_traits.h **** # include <ext/numeric_traits.h>
  39:/usr/include/c++/10/bits/alloc_traits.h **** #endif
  40:/usr/include/c++/10/bits/alloc_traits.h **** 
  41:/usr/include/c++/10/bits/alloc_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
  42:/usr/include/c++/10/bits/alloc_traits.h **** {
  43:/usr/include/c++/10/bits/alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:/usr/include/c++/10/bits/alloc_traits.h **** 
  45:/usr/include/c++/10/bits/alloc_traits.h **** #if __cplusplus >= 201103L
  46:/usr/include/c++/10/bits/alloc_traits.h **** #define __cpp_lib_allocator_traits_is_always_equal 201411
  47:/usr/include/c++/10/bits/alloc_traits.h **** 
  48:/usr/include/c++/10/bits/alloc_traits.h ****   struct __allocator_traits_base
  49:/usr/include/c++/10/bits/alloc_traits.h ****   {
  50:/usr/include/c++/10/bits/alloc_traits.h ****     template<typename _Tp, typename _Up, typename = void>
  51:/usr/include/c++/10/bits/alloc_traits.h ****       struct __rebind : __replace_first_arg<_Tp, _Up> { };
  52:/usr/include/c++/10/bits/alloc_traits.h **** 
  53:/usr/include/c++/10/bits/alloc_traits.h ****     template<typename _Tp, typename _Up>
  54:/usr/include/c++/10/bits/alloc_traits.h ****       struct __rebind<_Tp, _Up,
  55:/usr/include/c++/10/bits/alloc_traits.h **** 		      __void_t<typename _Tp::template rebind<_Up>::other>>
  56:/usr/include/c++/10/bits/alloc_traits.h ****       { using type = typename _Tp::template rebind<_Up>::other; };
  57:/usr/include/c++/10/bits/alloc_traits.h **** 
  58:/usr/include/c++/10/bits/alloc_traits.h ****   protected:
  59:/usr/include/c++/10/bits/alloc_traits.h ****     template<typename _Tp>
  60:/usr/include/c++/10/bits/alloc_traits.h ****       using __pointer = typename _Tp::pointer;
  61:/usr/include/c++/10/bits/alloc_traits.h ****     template<typename _Tp>
  62:/usr/include/c++/10/bits/alloc_traits.h ****       using __c_pointer = typename _Tp::const_pointer;
  63:/usr/include/c++/10/bits/alloc_traits.h ****     template<typename _Tp>
  64:/usr/include/c++/10/bits/alloc_traits.h ****       using __v_pointer = typename _Tp::void_pointer;
  65:/usr/include/c++/10/bits/alloc_traits.h ****     template<typename _Tp>
  66:/usr/include/c++/10/bits/alloc_traits.h ****       using __cv_pointer = typename _Tp::const_void_pointer;
  67:/usr/include/c++/10/bits/alloc_traits.h ****     template<typename _Tp>
  68:/usr/include/c++/10/bits/alloc_traits.h ****       using __pocca = typename _Tp::propagate_on_container_copy_assignment;
  69:/usr/include/c++/10/bits/alloc_traits.h ****     template<typename _Tp>
  70:/usr/include/c++/10/bits/alloc_traits.h ****       using __pocma = typename _Tp::propagate_on_container_move_assignment;
  71:/usr/include/c++/10/bits/alloc_traits.h ****     template<typename _Tp>
  72:/usr/include/c++/10/bits/alloc_traits.h ****       using __pocs = typename _Tp::propagate_on_container_swap;
  73:/usr/include/c++/10/bits/alloc_traits.h ****     template<typename _Tp>
  74:/usr/include/c++/10/bits/alloc_traits.h ****       using __equal = typename _Tp::is_always_equal;
AARCH64 GAS  obj/extInstr.s 			page 204


  75:/usr/include/c++/10/bits/alloc_traits.h ****   };
  76:/usr/include/c++/10/bits/alloc_traits.h **** 
  77:/usr/include/c++/10/bits/alloc_traits.h ****   template<typename _Alloc, typename _Up>
  78:/usr/include/c++/10/bits/alloc_traits.h ****     using __alloc_rebind
  79:/usr/include/c++/10/bits/alloc_traits.h ****       = typename __allocator_traits_base::template __rebind<_Alloc, _Up>::type;
  80:/usr/include/c++/10/bits/alloc_traits.h **** 
  81:/usr/include/c++/10/bits/alloc_traits.h ****   /**
  82:/usr/include/c++/10/bits/alloc_traits.h ****    * @brief  Uniform interface to all allocator types.
  83:/usr/include/c++/10/bits/alloc_traits.h ****    * @ingroup allocators
  84:/usr/include/c++/10/bits/alloc_traits.h ****   */
  85:/usr/include/c++/10/bits/alloc_traits.h ****   template<typename _Alloc>
  86:/usr/include/c++/10/bits/alloc_traits.h ****     struct allocator_traits : __allocator_traits_base
  87:/usr/include/c++/10/bits/alloc_traits.h ****     {
  88:/usr/include/c++/10/bits/alloc_traits.h ****       /// The allocator type
  89:/usr/include/c++/10/bits/alloc_traits.h ****       typedef _Alloc allocator_type;
  90:/usr/include/c++/10/bits/alloc_traits.h ****       /// The allocated type
  91:/usr/include/c++/10/bits/alloc_traits.h ****       typedef typename _Alloc::value_type value_type;
  92:/usr/include/c++/10/bits/alloc_traits.h **** 
  93:/usr/include/c++/10/bits/alloc_traits.h ****       /**
  94:/usr/include/c++/10/bits/alloc_traits.h ****        * @brief   The allocator's pointer type.
  95:/usr/include/c++/10/bits/alloc_traits.h ****        *
  96:/usr/include/c++/10/bits/alloc_traits.h ****        * @c Alloc::pointer if that type exists, otherwise @c value_type*
  97:/usr/include/c++/10/bits/alloc_traits.h ****       */
  98:/usr/include/c++/10/bits/alloc_traits.h ****       using pointer = __detected_or_t<value_type*, __pointer, _Alloc>;
  99:/usr/include/c++/10/bits/alloc_traits.h **** 
 100:/usr/include/c++/10/bits/alloc_traits.h ****     private:
 101:/usr/include/c++/10/bits/alloc_traits.h ****       // Select _Func<_Alloc> or pointer_traits<pointer>::rebind<_Tp>
 102:/usr/include/c++/10/bits/alloc_traits.h ****       template<template<typename> class _Func, typename _Tp, typename = void>
 103:/usr/include/c++/10/bits/alloc_traits.h **** 	struct _Ptr
 104:/usr/include/c++/10/bits/alloc_traits.h **** 	{
 105:/usr/include/c++/10/bits/alloc_traits.h **** 	  using type = typename pointer_traits<pointer>::template rebind<_Tp>;
 106:/usr/include/c++/10/bits/alloc_traits.h **** 	};
 107:/usr/include/c++/10/bits/alloc_traits.h **** 
 108:/usr/include/c++/10/bits/alloc_traits.h ****       template<template<typename> class _Func, typename _Tp>
 109:/usr/include/c++/10/bits/alloc_traits.h **** 	struct _Ptr<_Func, _Tp, __void_t<_Func<_Alloc>>>
 110:/usr/include/c++/10/bits/alloc_traits.h **** 	{
 111:/usr/include/c++/10/bits/alloc_traits.h **** 	  using type = _Func<_Alloc>;
 112:/usr/include/c++/10/bits/alloc_traits.h **** 	};
 113:/usr/include/c++/10/bits/alloc_traits.h **** 
 114:/usr/include/c++/10/bits/alloc_traits.h ****       // Select _A2::difference_type or pointer_traits<_Ptr>::difference_type
 115:/usr/include/c++/10/bits/alloc_traits.h ****       template<typename _A2, typename _PtrT, typename = void>
 116:/usr/include/c++/10/bits/alloc_traits.h **** 	struct _Diff
 117:/usr/include/c++/10/bits/alloc_traits.h **** 	{ using type = typename pointer_traits<_PtrT>::difference_type; };
 118:/usr/include/c++/10/bits/alloc_traits.h **** 
 119:/usr/include/c++/10/bits/alloc_traits.h ****       template<typename _A2, typename _PtrT>
 120:/usr/include/c++/10/bits/alloc_traits.h **** 	struct _Diff<_A2, _PtrT, __void_t<typename _A2::difference_type>>
 121:/usr/include/c++/10/bits/alloc_traits.h **** 	{ using type = typename _A2::difference_type; };
 122:/usr/include/c++/10/bits/alloc_traits.h **** 
 123:/usr/include/c++/10/bits/alloc_traits.h ****       // Select _A2::size_type or make_unsigned<_DiffT>::type
 124:/usr/include/c++/10/bits/alloc_traits.h ****       template<typename _A2, typename _DiffT, typename = void>
 125:/usr/include/c++/10/bits/alloc_traits.h **** 	struct _Size : make_unsigned<_DiffT> { };
 126:/usr/include/c++/10/bits/alloc_traits.h **** 
 127:/usr/include/c++/10/bits/alloc_traits.h ****       template<typename _A2, typename _DiffT>
 128:/usr/include/c++/10/bits/alloc_traits.h **** 	struct _Size<_A2, _DiffT, __void_t<typename _A2::size_type>>
 129:/usr/include/c++/10/bits/alloc_traits.h **** 	{ using type = typename _A2::size_type; };
 130:/usr/include/c++/10/bits/alloc_traits.h **** 
 131:/usr/include/c++/10/bits/alloc_traits.h ****     public:
AARCH64 GAS  obj/extInstr.s 			page 205


 132:/usr/include/c++/10/bits/alloc_traits.h ****       /**
 133:/usr/include/c++/10/bits/alloc_traits.h ****        * @brief   The allocator's const pointer type.
 134:/usr/include/c++/10/bits/alloc_traits.h ****        *
 135:/usr/include/c++/10/bits/alloc_traits.h ****        * @c Alloc::const_pointer if that type exists, otherwise
 136:/usr/include/c++/10/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const value_type> </tt>
 137:/usr/include/c++/10/bits/alloc_traits.h ****       */
 138:/usr/include/c++/10/bits/alloc_traits.h ****       using const_pointer = typename _Ptr<__c_pointer, const value_type>::type;
 139:/usr/include/c++/10/bits/alloc_traits.h **** 
 140:/usr/include/c++/10/bits/alloc_traits.h ****       /**
 141:/usr/include/c++/10/bits/alloc_traits.h ****        * @brief   The allocator's void pointer type.
 142:/usr/include/c++/10/bits/alloc_traits.h ****        *
 143:/usr/include/c++/10/bits/alloc_traits.h ****        * @c Alloc::void_pointer if that type exists, otherwise
 144:/usr/include/c++/10/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<void> </tt>
 145:/usr/include/c++/10/bits/alloc_traits.h ****       */
 146:/usr/include/c++/10/bits/alloc_traits.h ****       using void_pointer = typename _Ptr<__v_pointer, void>::type;
 147:/usr/include/c++/10/bits/alloc_traits.h **** 
 148:/usr/include/c++/10/bits/alloc_traits.h ****       /**
 149:/usr/include/c++/10/bits/alloc_traits.h ****        * @brief   The allocator's const void pointer type.
 150:/usr/include/c++/10/bits/alloc_traits.h ****        *
 151:/usr/include/c++/10/bits/alloc_traits.h ****        * @c Alloc::const_void_pointer if that type exists, otherwise
 152:/usr/include/c++/10/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const void> </tt>
 153:/usr/include/c++/10/bits/alloc_traits.h ****       */
 154:/usr/include/c++/10/bits/alloc_traits.h ****       using const_void_pointer = typename _Ptr<__cv_pointer, const void>::type;
 155:/usr/include/c++/10/bits/alloc_traits.h **** 
 156:/usr/include/c++/10/bits/alloc_traits.h ****       /**
 157:/usr/include/c++/10/bits/alloc_traits.h ****        * @brief   The allocator's difference type
 158:/usr/include/c++/10/bits/alloc_traits.h ****        *
 159:/usr/include/c++/10/bits/alloc_traits.h ****        * @c Alloc::difference_type if that type exists, otherwise
 160:/usr/include/c++/10/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::difference_type </tt>
 161:/usr/include/c++/10/bits/alloc_traits.h ****       */
 162:/usr/include/c++/10/bits/alloc_traits.h ****       using difference_type = typename _Diff<_Alloc, pointer>::type;
 163:/usr/include/c++/10/bits/alloc_traits.h **** 
 164:/usr/include/c++/10/bits/alloc_traits.h ****       /**
 165:/usr/include/c++/10/bits/alloc_traits.h ****        * @brief   The allocator's size type
 166:/usr/include/c++/10/bits/alloc_traits.h ****        *
 167:/usr/include/c++/10/bits/alloc_traits.h ****        * @c Alloc::size_type if that type exists, otherwise
 168:/usr/include/c++/10/bits/alloc_traits.h ****        * <tt> make_unsigned<difference_type>::type </tt>
 169:/usr/include/c++/10/bits/alloc_traits.h ****       */
 170:/usr/include/c++/10/bits/alloc_traits.h ****       using size_type = typename _Size<_Alloc, difference_type>::type;
 171:/usr/include/c++/10/bits/alloc_traits.h **** 
 172:/usr/include/c++/10/bits/alloc_traits.h ****       /**
 173:/usr/include/c++/10/bits/alloc_traits.h ****        * @brief   How the allocator is propagated on copy assignment
 174:/usr/include/c++/10/bits/alloc_traits.h ****        *
 175:/usr/include/c++/10/bits/alloc_traits.h ****        * @c Alloc::propagate_on_container_copy_assignment if that type exists,
 176:/usr/include/c++/10/bits/alloc_traits.h ****        * otherwise @c false_type
 177:/usr/include/c++/10/bits/alloc_traits.h ****       */
 178:/usr/include/c++/10/bits/alloc_traits.h ****       using propagate_on_container_copy_assignment
 179:/usr/include/c++/10/bits/alloc_traits.h **** 	= __detected_or_t<false_type, __pocca, _Alloc>;
 180:/usr/include/c++/10/bits/alloc_traits.h **** 
 181:/usr/include/c++/10/bits/alloc_traits.h ****       /**
 182:/usr/include/c++/10/bits/alloc_traits.h ****        * @brief   How the allocator is propagated on move assignment
 183:/usr/include/c++/10/bits/alloc_traits.h ****        *
 184:/usr/include/c++/10/bits/alloc_traits.h ****        * @c Alloc::propagate_on_container_move_assignment if that type exists,
 185:/usr/include/c++/10/bits/alloc_traits.h ****        * otherwise @c false_type
 186:/usr/include/c++/10/bits/alloc_traits.h ****       */
 187:/usr/include/c++/10/bits/alloc_traits.h ****       using propagate_on_container_move_assignment
 188:/usr/include/c++/10/bits/alloc_traits.h **** 	= __detected_or_t<false_type, __pocma, _Alloc>;
AARCH64 GAS  obj/extInstr.s 			page 206


 189:/usr/include/c++/10/bits/alloc_traits.h **** 
 190:/usr/include/c++/10/bits/alloc_traits.h ****       /**
 191:/usr/include/c++/10/bits/alloc_traits.h ****        * @brief   How the allocator is propagated on swap
 192:/usr/include/c++/10/bits/alloc_traits.h ****        *
 193:/usr/include/c++/10/bits/alloc_traits.h ****        * @c Alloc::propagate_on_container_swap if that type exists,
 194:/usr/include/c++/10/bits/alloc_traits.h ****        * otherwise @c false_type
 195:/usr/include/c++/10/bits/alloc_traits.h ****       */
 196:/usr/include/c++/10/bits/alloc_traits.h ****       using propagate_on_container_swap
 197:/usr/include/c++/10/bits/alloc_traits.h **** 	= __detected_or_t<false_type, __pocs, _Alloc>;
 198:/usr/include/c++/10/bits/alloc_traits.h **** 
 199:/usr/include/c++/10/bits/alloc_traits.h ****       /**
 200:/usr/include/c++/10/bits/alloc_traits.h ****        * @brief   Whether all instances of the allocator type compare equal.
 201:/usr/include/c++/10/bits/alloc_traits.h ****        *
 202:/usr/include/c++/10/bits/alloc_traits.h ****        * @c Alloc::is_always_equal if that type exists,
 203:/usr/include/c++/10/bits/alloc_traits.h ****        * otherwise @c is_empty<Alloc>::type
 204:/usr/include/c++/10/bits/alloc_traits.h ****       */
 205:/usr/include/c++/10/bits/alloc_traits.h ****       using is_always_equal
 206:/usr/include/c++/10/bits/alloc_traits.h **** 	= __detected_or_t<typename is_empty<_Alloc>::type, __equal, _Alloc>;
 207:/usr/include/c++/10/bits/alloc_traits.h **** 
 208:/usr/include/c++/10/bits/alloc_traits.h ****       template<typename _Tp>
 209:/usr/include/c++/10/bits/alloc_traits.h **** 	using rebind_alloc = __alloc_rebind<_Alloc, _Tp>;
 210:/usr/include/c++/10/bits/alloc_traits.h ****       template<typename _Tp>
 211:/usr/include/c++/10/bits/alloc_traits.h **** 	using rebind_traits = allocator_traits<rebind_alloc<_Tp>>;
 212:/usr/include/c++/10/bits/alloc_traits.h **** 
 213:/usr/include/c++/10/bits/alloc_traits.h ****     private:
 214:/usr/include/c++/10/bits/alloc_traits.h ****       template<typename _Alloc2>
 215:/usr/include/c++/10/bits/alloc_traits.h **** 	static constexpr auto
 216:/usr/include/c++/10/bits/alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer __hint, int)
 217:/usr/include/c++/10/bits/alloc_traits.h **** 	-> decltype(__a.allocate(__n, __hint))
 218:/usr/include/c++/10/bits/alloc_traits.h **** 	{ return __a.allocate(__n, __hint); }
 219:/usr/include/c++/10/bits/alloc_traits.h **** 
 220:/usr/include/c++/10/bits/alloc_traits.h ****       template<typename _Alloc2>
 221:/usr/include/c++/10/bits/alloc_traits.h **** 	static constexpr pointer
 222:/usr/include/c++/10/bits/alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer, ...)
 223:/usr/include/c++/10/bits/alloc_traits.h **** 	{ return __a.allocate(__n); }
 224:/usr/include/c++/10/bits/alloc_traits.h **** 
 225:/usr/include/c++/10/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 226:/usr/include/c++/10/bits/alloc_traits.h **** 	struct __construct_helper
 227:/usr/include/c++/10/bits/alloc_traits.h **** 	{
 228:/usr/include/c++/10/bits/alloc_traits.h **** 	  template<typename _Alloc2,
 229:/usr/include/c++/10/bits/alloc_traits.h **** 	    typename = decltype(std::declval<_Alloc2*>()->construct(
 230:/usr/include/c++/10/bits/alloc_traits.h **** 		  std::declval<_Tp*>(), std::declval<_Args>()...))>
 231:/usr/include/c++/10/bits/alloc_traits.h **** 	    static true_type __test(int);
 232:/usr/include/c++/10/bits/alloc_traits.h **** 
 233:/usr/include/c++/10/bits/alloc_traits.h **** 	  template<typename>
 234:/usr/include/c++/10/bits/alloc_traits.h **** 	    static false_type __test(...);
 235:/usr/include/c++/10/bits/alloc_traits.h **** 
 236:/usr/include/c++/10/bits/alloc_traits.h **** 	  using type = decltype(__test<_Alloc>(0));
 237:/usr/include/c++/10/bits/alloc_traits.h **** 	};
 238:/usr/include/c++/10/bits/alloc_traits.h **** 
 239:/usr/include/c++/10/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 240:/usr/include/c++/10/bits/alloc_traits.h **** 	using __has_construct
 241:/usr/include/c++/10/bits/alloc_traits.h **** 	  = typename __construct_helper<_Tp, _Args...>::type;
 242:/usr/include/c++/10/bits/alloc_traits.h **** 
 243:/usr/include/c++/10/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 244:/usr/include/c++/10/bits/alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR _Require<__has_construct<_Tp, _Args...>>
 245:/usr/include/c++/10/bits/alloc_traits.h **** 	_S_construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
AARCH64 GAS  obj/extInstr.s 			page 207


 246:/usr/include/c++/10/bits/alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 247:/usr/include/c++/10/bits/alloc_traits.h **** 	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 248:/usr/include/c++/10/bits/alloc_traits.h **** 
 249:/usr/include/c++/10/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 250:/usr/include/c++/10/bits/alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR
 251:/usr/include/c++/10/bits/alloc_traits.h **** 	_Require<__and_<__not_<__has_construct<_Tp, _Args...>>,
 252:/usr/include/c++/10/bits/alloc_traits.h **** 			       is_constructible<_Tp, _Args...>>>
 253:/usr/include/c++/10/bits/alloc_traits.h **** 	_S_construct(_Alloc&, _Tp* __p, _Args&&... __args)
 254:/usr/include/c++/10/bits/alloc_traits.h **** 	noexcept(std::is_nothrow_constructible<_Tp, _Args...>::value)
 255:/usr/include/c++/10/bits/alloc_traits.h **** 	{
 256:/usr/include/c++/10/bits/alloc_traits.h **** #if __cplusplus <= 201703L
 257:/usr/include/c++/10/bits/alloc_traits.h **** 	  ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
 258:/usr/include/c++/10/bits/alloc_traits.h **** #else
 259:/usr/include/c++/10/bits/alloc_traits.h **** 	  std::construct_at(__p, std::forward<_Args>(__args)...);
 260:/usr/include/c++/10/bits/alloc_traits.h **** #endif
 261:/usr/include/c++/10/bits/alloc_traits.h **** 	}
 262:/usr/include/c++/10/bits/alloc_traits.h **** 
 263:/usr/include/c++/10/bits/alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 264:/usr/include/c++/10/bits/alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR auto
 265:/usr/include/c++/10/bits/alloc_traits.h **** 	_S_destroy(_Alloc2& __a, _Tp* __p, int)
 266:/usr/include/c++/10/bits/alloc_traits.h **** 	noexcept(noexcept(__a.destroy(__p)))
 267:/usr/include/c++/10/bits/alloc_traits.h **** 	-> decltype(__a.destroy(__p))
 268:/usr/include/c++/10/bits/alloc_traits.h **** 	{ __a.destroy(__p); }
 269:/usr/include/c++/10/bits/alloc_traits.h **** 
 270:/usr/include/c++/10/bits/alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 271:/usr/include/c++/10/bits/alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR void
 272:/usr/include/c++/10/bits/alloc_traits.h **** 	_S_destroy(_Alloc2&, _Tp* __p, ...)
 273:/usr/include/c++/10/bits/alloc_traits.h **** 	noexcept(std::is_nothrow_destructible<_Tp>::value)
 274:/usr/include/c++/10/bits/alloc_traits.h **** 	{ std::_Destroy(__p); }
 275:/usr/include/c++/10/bits/alloc_traits.h **** 
 276:/usr/include/c++/10/bits/alloc_traits.h ****       template<typename _Alloc2>
 277:/usr/include/c++/10/bits/alloc_traits.h **** 	static constexpr auto
 278:/usr/include/c++/10/bits/alloc_traits.h **** 	_S_max_size(_Alloc2& __a, int)
 279:/usr/include/c++/10/bits/alloc_traits.h **** 	-> decltype(__a.max_size())
 280:/usr/include/c++/10/bits/alloc_traits.h **** 	{ return __a.max_size(); }
 281:/usr/include/c++/10/bits/alloc_traits.h **** 
 282:/usr/include/c++/10/bits/alloc_traits.h ****       template<typename _Alloc2>
 283:/usr/include/c++/10/bits/alloc_traits.h **** 	static constexpr size_type
 284:/usr/include/c++/10/bits/alloc_traits.h **** 	_S_max_size(_Alloc2&, ...)
 285:/usr/include/c++/10/bits/alloc_traits.h **** 	{
 286:/usr/include/c++/10/bits/alloc_traits.h **** 	  // _GLIBCXX_RESOLVE_LIB_DEFECTS
 287:/usr/include/c++/10/bits/alloc_traits.h **** 	  // 2466. allocator_traits::max_size() default behavior is incorrect
 288:/usr/include/c++/10/bits/alloc_traits.h **** 	  return __gnu_cxx::__numeric_traits<size_type>::__max
 289:/usr/include/c++/10/bits/alloc_traits.h **** 	    / sizeof(value_type);
 290:/usr/include/c++/10/bits/alloc_traits.h **** 	}
 291:/usr/include/c++/10/bits/alloc_traits.h **** 
 292:/usr/include/c++/10/bits/alloc_traits.h ****       template<typename _Alloc2>
 293:/usr/include/c++/10/bits/alloc_traits.h **** 	static constexpr auto
 294:/usr/include/c++/10/bits/alloc_traits.h **** 	_S_select(_Alloc2& __a, int)
 295:/usr/include/c++/10/bits/alloc_traits.h **** 	-> decltype(__a.select_on_container_copy_construction())
 296:/usr/include/c++/10/bits/alloc_traits.h **** 	{ return __a.select_on_container_copy_construction(); }
 297:/usr/include/c++/10/bits/alloc_traits.h **** 
 298:/usr/include/c++/10/bits/alloc_traits.h ****       template<typename _Alloc2>
 299:/usr/include/c++/10/bits/alloc_traits.h **** 	static constexpr _Alloc2
 300:/usr/include/c++/10/bits/alloc_traits.h **** 	_S_select(_Alloc2& __a, ...)
 301:/usr/include/c++/10/bits/alloc_traits.h **** 	{ return __a; }
 302:/usr/include/c++/10/bits/alloc_traits.h **** 
AARCH64 GAS  obj/extInstr.s 			page 208


 303:/usr/include/c++/10/bits/alloc_traits.h ****     public:
 304:/usr/include/c++/10/bits/alloc_traits.h **** 
 305:/usr/include/c++/10/bits/alloc_traits.h ****       /**
 306:/usr/include/c++/10/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 307:/usr/include/c++/10/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 308:/usr/include/c++/10/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 309:/usr/include/c++/10/bits/alloc_traits.h ****        *
 310:/usr/include/c++/10/bits/alloc_traits.h ****        *  Calls @c a.allocate(n)
 311:/usr/include/c++/10/bits/alloc_traits.h ****       */
 312:/usr/include/c++/10/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 313:/usr/include/c++/10/bits/alloc_traits.h ****       allocate(_Alloc& __a, size_type __n)
 314:/usr/include/c++/10/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 315:/usr/include/c++/10/bits/alloc_traits.h **** 
 316:/usr/include/c++/10/bits/alloc_traits.h ****       /**
 317:/usr/include/c++/10/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 318:/usr/include/c++/10/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 319:/usr/include/c++/10/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 320:/usr/include/c++/10/bits/alloc_traits.h ****        *  @param  __hint Aid to locality.
 321:/usr/include/c++/10/bits/alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 322:/usr/include/c++/10/bits/alloc_traits.h ****        *          of type @c value_type
 323:/usr/include/c++/10/bits/alloc_traits.h ****        *
 324:/usr/include/c++/10/bits/alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt> if that expression is
 325:/usr/include/c++/10/bits/alloc_traits.h ****        *  well-formed, otherwise returns @c a.allocate(n)
 326:/usr/include/c++/10/bits/alloc_traits.h ****       */
 327:/usr/include/c++/10/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 328:/usr/include/c++/10/bits/alloc_traits.h ****       allocate(_Alloc& __a, size_type __n, const_void_pointer __hint)
 329:/usr/include/c++/10/bits/alloc_traits.h ****       { return _S_allocate(__a, __n, __hint, 0); }
 330:/usr/include/c++/10/bits/alloc_traits.h **** 
 331:/usr/include/c++/10/bits/alloc_traits.h ****       /**
 332:/usr/include/c++/10/bits/alloc_traits.h ****        *  @brief  Deallocate memory.
 333:/usr/include/c++/10/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 334:/usr/include/c++/10/bits/alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 335:/usr/include/c++/10/bits/alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 336:/usr/include/c++/10/bits/alloc_traits.h ****        *
 337:/usr/include/c++/10/bits/alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 338:/usr/include/c++/10/bits/alloc_traits.h ****       */
 339:/usr/include/c++/10/bits/alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR void
 340:/usr/include/c++/10/bits/alloc_traits.h ****       deallocate(_Alloc& __a, pointer __p, size_type __n)
 341:/usr/include/c++/10/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 342:/usr/include/c++/10/bits/alloc_traits.h **** 
 343:/usr/include/c++/10/bits/alloc_traits.h ****       /**
 344:/usr/include/c++/10/bits/alloc_traits.h ****        *  @brief  Construct an object of type @a _Tp
 345:/usr/include/c++/10/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 346:/usr/include/c++/10/bits/alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for Tp
 347:/usr/include/c++/10/bits/alloc_traits.h ****        *  @param  __args Constructor arguments.
 348:/usr/include/c++/10/bits/alloc_traits.h ****        *
 349:/usr/include/c++/10/bits/alloc_traits.h ****        *  Calls <tt> __a.construct(__p, std::forward<Args>(__args)...) </tt>
 350:/usr/include/c++/10/bits/alloc_traits.h ****        *  if that expression is well-formed, otherwise uses placement-new
 351:/usr/include/c++/10/bits/alloc_traits.h ****        *  to construct an object of type @a _Tp at location @a __p from the
 352:/usr/include/c++/10/bits/alloc_traits.h ****        *  arguments @a __args...
 353:/usr/include/c++/10/bits/alloc_traits.h ****       */
 354:/usr/include/c++/10/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 355:/usr/include/c++/10/bits/alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR auto
 356:/usr/include/c++/10/bits/alloc_traits.h **** 	construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 357:/usr/include/c++/10/bits/alloc_traits.h **** 	noexcept(noexcept(_S_construct(__a, __p,
 358:/usr/include/c++/10/bits/alloc_traits.h **** 				       std::forward<_Args>(__args)...)))
 359:/usr/include/c++/10/bits/alloc_traits.h **** 	-> decltype(_S_construct(__a, __p, std::forward<_Args>(__args)...))
AARCH64 GAS  obj/extInstr.s 			page 209


 360:/usr/include/c++/10/bits/alloc_traits.h **** 	{ _S_construct(__a, __p, std::forward<_Args>(__args)...); }
 361:/usr/include/c++/10/bits/alloc_traits.h **** 
 362:/usr/include/c++/10/bits/alloc_traits.h ****       /**
 363:/usr/include/c++/10/bits/alloc_traits.h ****        *  @brief  Destroy an object of type @a _Tp
 364:/usr/include/c++/10/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 365:/usr/include/c++/10/bits/alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 366:/usr/include/c++/10/bits/alloc_traits.h ****        *
 367:/usr/include/c++/10/bits/alloc_traits.h ****        *  Calls @c __a.destroy(__p) if that expression is well-formed,
 368:/usr/include/c++/10/bits/alloc_traits.h ****        *  otherwise calls @c __p->~_Tp()
 369:/usr/include/c++/10/bits/alloc_traits.h ****       */
 370:/usr/include/c++/10/bits/alloc_traits.h ****       template<typename _Tp>
 371:/usr/include/c++/10/bits/alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 372:/usr/include/c++/10/bits/alloc_traits.h **** 	destroy(_Alloc& __a, _Tp* __p)
 373:/usr/include/c++/10/bits/alloc_traits.h **** 	noexcept(noexcept(_S_destroy(__a, __p, 0)))
 374:/usr/include/c++/10/bits/alloc_traits.h **** 	{ _S_destroy(__a, __p, 0); }
 375:/usr/include/c++/10/bits/alloc_traits.h **** 
 376:/usr/include/c++/10/bits/alloc_traits.h ****       /**
 377:/usr/include/c++/10/bits/alloc_traits.h ****        *  @brief  The maximum supported allocation size
 378:/usr/include/c++/10/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 379:/usr/include/c++/10/bits/alloc_traits.h ****        *  @return @c __a.max_size() or @c numeric_limits<size_type>::max()
 380:/usr/include/c++/10/bits/alloc_traits.h ****        *
 381:/usr/include/c++/10/bits/alloc_traits.h ****        *  Returns @c __a.max_size() if that expression is well-formed,
 382:/usr/include/c++/10/bits/alloc_traits.h ****        *  otherwise returns @c numeric_limits<size_type>::max()
 383:/usr/include/c++/10/bits/alloc_traits.h ****       */
 384:/usr/include/c++/10/bits/alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR size_type
 385:/usr/include/c++/10/bits/alloc_traits.h ****       max_size(const _Alloc& __a) noexcept
 386:/usr/include/c++/10/bits/alloc_traits.h ****       { return _S_max_size(__a, 0); }
 387:/usr/include/c++/10/bits/alloc_traits.h **** 
 388:/usr/include/c++/10/bits/alloc_traits.h ****       /**
 389:/usr/include/c++/10/bits/alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 390:/usr/include/c++/10/bits/alloc_traits.h ****        *  @param  __rhs  An allocator.
 391:/usr/include/c++/10/bits/alloc_traits.h ****        *  @return @c __rhs.select_on_container_copy_construction() or @a __rhs
 392:/usr/include/c++/10/bits/alloc_traits.h ****        *
 393:/usr/include/c++/10/bits/alloc_traits.h ****        *  Returns @c __rhs.select_on_container_copy_construction() if that
 394:/usr/include/c++/10/bits/alloc_traits.h ****        *  expression is well-formed, otherwise returns @a __rhs
 395:/usr/include/c++/10/bits/alloc_traits.h ****       */
 396:/usr/include/c++/10/bits/alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR _Alloc
 397:/usr/include/c++/10/bits/alloc_traits.h ****       select_on_container_copy_construction(const _Alloc& __rhs)
 398:/usr/include/c++/10/bits/alloc_traits.h ****       { return _S_select(__rhs, 0); }
 399:/usr/include/c++/10/bits/alloc_traits.h ****     };
 400:/usr/include/c++/10/bits/alloc_traits.h **** 
 401:/usr/include/c++/10/bits/alloc_traits.h **** #if __cplusplus > 201703L
 402:/usr/include/c++/10/bits/alloc_traits.h **** # define __cpp_lib_constexpr_dynamic_alloc 201907L
 403:/usr/include/c++/10/bits/alloc_traits.h **** #endif
 404:/usr/include/c++/10/bits/alloc_traits.h **** 
 405:/usr/include/c++/10/bits/alloc_traits.h ****   /// Partial specialization for std::allocator.
 406:/usr/include/c++/10/bits/alloc_traits.h ****   template<typename _Tp>
 407:/usr/include/c++/10/bits/alloc_traits.h ****     struct allocator_traits<allocator<_Tp>>
 408:/usr/include/c++/10/bits/alloc_traits.h ****     {
 409:/usr/include/c++/10/bits/alloc_traits.h ****       /// The allocator type
 410:/usr/include/c++/10/bits/alloc_traits.h ****       using allocator_type = allocator<_Tp>;
 411:/usr/include/c++/10/bits/alloc_traits.h **** 
 412:/usr/include/c++/10/bits/alloc_traits.h ****       /// The allocated type
 413:/usr/include/c++/10/bits/alloc_traits.h ****       using value_type = _Tp;
 414:/usr/include/c++/10/bits/alloc_traits.h **** 
 415:/usr/include/c++/10/bits/alloc_traits.h ****       /// The allocator's pointer type.
 416:/usr/include/c++/10/bits/alloc_traits.h ****       using pointer = _Tp*;
AARCH64 GAS  obj/extInstr.s 			page 210


 417:/usr/include/c++/10/bits/alloc_traits.h **** 
 418:/usr/include/c++/10/bits/alloc_traits.h ****       /// The allocator's const pointer type.
 419:/usr/include/c++/10/bits/alloc_traits.h ****       using const_pointer = const _Tp*;
 420:/usr/include/c++/10/bits/alloc_traits.h **** 
 421:/usr/include/c++/10/bits/alloc_traits.h ****       /// The allocator's void pointer type.
 422:/usr/include/c++/10/bits/alloc_traits.h ****       using void_pointer = void*;
 423:/usr/include/c++/10/bits/alloc_traits.h **** 
 424:/usr/include/c++/10/bits/alloc_traits.h ****       /// The allocator's const void pointer type.
 425:/usr/include/c++/10/bits/alloc_traits.h ****       using const_void_pointer = const void*;
 426:/usr/include/c++/10/bits/alloc_traits.h **** 
 427:/usr/include/c++/10/bits/alloc_traits.h ****       /// The allocator's difference type
 428:/usr/include/c++/10/bits/alloc_traits.h ****       using difference_type = std::ptrdiff_t;
 429:/usr/include/c++/10/bits/alloc_traits.h **** 
 430:/usr/include/c++/10/bits/alloc_traits.h ****       /// The allocator's size type
 431:/usr/include/c++/10/bits/alloc_traits.h ****       using size_type = std::size_t;
 432:/usr/include/c++/10/bits/alloc_traits.h **** 
 433:/usr/include/c++/10/bits/alloc_traits.h ****       /// How the allocator is propagated on copy assignment
 434:/usr/include/c++/10/bits/alloc_traits.h ****       using propagate_on_container_copy_assignment = false_type;
 435:/usr/include/c++/10/bits/alloc_traits.h **** 
 436:/usr/include/c++/10/bits/alloc_traits.h ****       /// How the allocator is propagated on move assignment
 437:/usr/include/c++/10/bits/alloc_traits.h ****       using propagate_on_container_move_assignment = true_type;
 438:/usr/include/c++/10/bits/alloc_traits.h **** 
 439:/usr/include/c++/10/bits/alloc_traits.h ****       /// How the allocator is propagated on swap
 440:/usr/include/c++/10/bits/alloc_traits.h ****       using propagate_on_container_swap = false_type;
 441:/usr/include/c++/10/bits/alloc_traits.h **** 
 442:/usr/include/c++/10/bits/alloc_traits.h ****       /// Whether all instances of the allocator type compare equal.
 443:/usr/include/c++/10/bits/alloc_traits.h ****       using is_always_equal = true_type;
 444:/usr/include/c++/10/bits/alloc_traits.h **** 
 445:/usr/include/c++/10/bits/alloc_traits.h ****       template<typename _Up>
 446:/usr/include/c++/10/bits/alloc_traits.h **** 	using rebind_alloc = allocator<_Up>;
 447:/usr/include/c++/10/bits/alloc_traits.h **** 
 448:/usr/include/c++/10/bits/alloc_traits.h ****       template<typename _Up>
 449:/usr/include/c++/10/bits/alloc_traits.h **** 	using rebind_traits = allocator_traits<allocator<_Up>>;
 450:/usr/include/c++/10/bits/alloc_traits.h **** 
 451:/usr/include/c++/10/bits/alloc_traits.h ****       /**
 452:/usr/include/c++/10/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 453:/usr/include/c++/10/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 454:/usr/include/c++/10/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 455:/usr/include/c++/10/bits/alloc_traits.h ****        *
 456:/usr/include/c++/10/bits/alloc_traits.h ****        *  Calls @c a.allocate(n)
 457:/usr/include/c++/10/bits/alloc_traits.h ****       */
 458:/usr/include/c++/10/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 459:/usr/include/c++/10/bits/alloc_traits.h ****       allocate(allocator_type& __a, size_type __n)
 460:/usr/include/c++/10/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 461:/usr/include/c++/10/bits/alloc_traits.h **** 
 462:/usr/include/c++/10/bits/alloc_traits.h ****       /**
 463:/usr/include/c++/10/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 464:/usr/include/c++/10/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 465:/usr/include/c++/10/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 466:/usr/include/c++/10/bits/alloc_traits.h ****        *  @param  __hint Aid to locality.
 467:/usr/include/c++/10/bits/alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 468:/usr/include/c++/10/bits/alloc_traits.h ****        *          of type @c value_type
 469:/usr/include/c++/10/bits/alloc_traits.h ****        *
 470:/usr/include/c++/10/bits/alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt>
 471:/usr/include/c++/10/bits/alloc_traits.h ****       */
 472:/usr/include/c++/10/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 473:/usr/include/c++/10/bits/alloc_traits.h ****       allocate(allocator_type& __a, size_type __n, const_void_pointer __hint)
AARCH64 GAS  obj/extInstr.s 			page 211


 474:/usr/include/c++/10/bits/alloc_traits.h ****       {
 475:/usr/include/c++/10/bits/alloc_traits.h **** #if __cplusplus <= 201703L
 476:/usr/include/c++/10/bits/alloc_traits.h **** 	return __a.allocate(__n, __hint);
 477:/usr/include/c++/10/bits/alloc_traits.h **** #else
 478:/usr/include/c++/10/bits/alloc_traits.h **** 	return __a.allocate(__n);
 479:/usr/include/c++/10/bits/alloc_traits.h **** #endif
 480:/usr/include/c++/10/bits/alloc_traits.h ****       }
 481:/usr/include/c++/10/bits/alloc_traits.h **** 
 482:/usr/include/c++/10/bits/alloc_traits.h ****       /**
 483:/usr/include/c++/10/bits/alloc_traits.h ****        *  @brief  Deallocate memory.
 484:/usr/include/c++/10/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 485:/usr/include/c++/10/bits/alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 486:/usr/include/c++/10/bits/alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 487:/usr/include/c++/10/bits/alloc_traits.h ****        *
 488:/usr/include/c++/10/bits/alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 489:/usr/include/c++/10/bits/alloc_traits.h ****       */
 490:/usr/include/c++/10/bits/alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR void
 491:/usr/include/c++/10/bits/alloc_traits.h ****       deallocate(allocator_type& __a, pointer __p, size_type __n)
 600              		.loc 11 491 7 view .LVU158
 601              	.LBB845:
 602              	.LBI845:
 603              		.file 12 "/usr/include/c++/10/ext/new_allocator.h"
   1:/usr/include/c++/10/ext/new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:/usr/include/c++/10/ext/new_allocator.h **** 
   3:/usr/include/c++/10/ext/new_allocator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:/usr/include/c++/10/ext/new_allocator.h **** //
   5:/usr/include/c++/10/ext/new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/10/ext/new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/10/ext/new_allocator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/10/ext/new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/10/ext/new_allocator.h **** // any later version.
  10:/usr/include/c++/10/ext/new_allocator.h **** 
  11:/usr/include/c++/10/ext/new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/10/ext/new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/10/ext/new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/10/ext/new_allocator.h **** // GNU General Public License for more details.
  15:/usr/include/c++/10/ext/new_allocator.h **** 
  16:/usr/include/c++/10/ext/new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/10/ext/new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/10/ext/new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/10/ext/new_allocator.h **** 
  20:/usr/include/c++/10/ext/new_allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/10/ext/new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/10/ext/new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/10/ext/new_allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/10/ext/new_allocator.h **** 
  25:/usr/include/c++/10/ext/new_allocator.h **** /** @file ext/new_allocator.h
  26:/usr/include/c++/10/ext/new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/usr/include/c++/10/ext/new_allocator.h ****  */
  28:/usr/include/c++/10/ext/new_allocator.h **** 
  29:/usr/include/c++/10/ext/new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  30:/usr/include/c++/10/ext/new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  31:/usr/include/c++/10/ext/new_allocator.h **** 
  32:/usr/include/c++/10/ext/new_allocator.h **** #include <bits/c++config.h>
  33:/usr/include/c++/10/ext/new_allocator.h **** #include <new>
  34:/usr/include/c++/10/ext/new_allocator.h **** #include <bits/functexcept.h>
  35:/usr/include/c++/10/ext/new_allocator.h **** #include <bits/move.h>
AARCH64 GAS  obj/extInstr.s 			page 212


  36:/usr/include/c++/10/ext/new_allocator.h **** #if __cplusplus >= 201103L
  37:/usr/include/c++/10/ext/new_allocator.h **** #include <type_traits>
  38:/usr/include/c++/10/ext/new_allocator.h **** #endif
  39:/usr/include/c++/10/ext/new_allocator.h **** 
  40:/usr/include/c++/10/ext/new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  41:/usr/include/c++/10/ext/new_allocator.h **** {
  42:/usr/include/c++/10/ext/new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:/usr/include/c++/10/ext/new_allocator.h **** 
  44:/usr/include/c++/10/ext/new_allocator.h ****   /**
  45:/usr/include/c++/10/ext/new_allocator.h ****    *  @brief  An allocator that uses global new, as per [20.4].
  46:/usr/include/c++/10/ext/new_allocator.h ****    *  @ingroup allocators
  47:/usr/include/c++/10/ext/new_allocator.h ****    *
  48:/usr/include/c++/10/ext/new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard.
  49:/usr/include/c++/10/ext/new_allocator.h ****    *    - all allocation calls operator new
  50:/usr/include/c++/10/ext/new_allocator.h ****    *    - all deallocation calls operator delete
  51:/usr/include/c++/10/ext/new_allocator.h ****    *
  52:/usr/include/c++/10/ext/new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  53:/usr/include/c++/10/ext/new_allocator.h ****    */
  54:/usr/include/c++/10/ext/new_allocator.h ****   template<typename _Tp>
  55:/usr/include/c++/10/ext/new_allocator.h ****     class new_allocator
  56:/usr/include/c++/10/ext/new_allocator.h ****     {
  57:/usr/include/c++/10/ext/new_allocator.h ****     public:
  58:/usr/include/c++/10/ext/new_allocator.h ****       typedef _Tp        value_type;
  59:/usr/include/c++/10/ext/new_allocator.h ****       typedef std::size_t     size_type;
  60:/usr/include/c++/10/ext/new_allocator.h ****       typedef std::ptrdiff_t  difference_type;
  61:/usr/include/c++/10/ext/new_allocator.h **** #if __cplusplus <= 201703L
  62:/usr/include/c++/10/ext/new_allocator.h ****       typedef _Tp*       pointer;
  63:/usr/include/c++/10/ext/new_allocator.h ****       typedef const _Tp* const_pointer;
  64:/usr/include/c++/10/ext/new_allocator.h ****       typedef _Tp&       reference;
  65:/usr/include/c++/10/ext/new_allocator.h ****       typedef const _Tp& const_reference;
  66:/usr/include/c++/10/ext/new_allocator.h **** 
  67:/usr/include/c++/10/ext/new_allocator.h ****       template<typename _Tp1>
  68:/usr/include/c++/10/ext/new_allocator.h **** 	struct rebind
  69:/usr/include/c++/10/ext/new_allocator.h **** 	{ typedef new_allocator<_Tp1> other; };
  70:/usr/include/c++/10/ext/new_allocator.h **** #endif
  71:/usr/include/c++/10/ext/new_allocator.h **** 
  72:/usr/include/c++/10/ext/new_allocator.h **** #if __cplusplus >= 201103L
  73:/usr/include/c++/10/ext/new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  74:/usr/include/c++/10/ext/new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  75:/usr/include/c++/10/ext/new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  76:/usr/include/c++/10/ext/new_allocator.h **** #endif
  77:/usr/include/c++/10/ext/new_allocator.h **** 
  78:/usr/include/c++/10/ext/new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  79:/usr/include/c++/10/ext/new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  80:/usr/include/c++/10/ext/new_allocator.h **** 
  81:/usr/include/c++/10/ext/new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  82:/usr/include/c++/10/ext/new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
  83:/usr/include/c++/10/ext/new_allocator.h **** 
  84:/usr/include/c++/10/ext/new_allocator.h ****       template<typename _Tp1>
  85:/usr/include/c++/10/ext/new_allocator.h **** 	_GLIBCXX20_CONSTEXPR
  86:/usr/include/c++/10/ext/new_allocator.h **** 	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  87:/usr/include/c++/10/ext/new_allocator.h **** 
  88:/usr/include/c++/10/ext/new_allocator.h **** #if __cplusplus <= 201703L
  89:/usr/include/c++/10/ext/new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  90:/usr/include/c++/10/ext/new_allocator.h **** 
  91:/usr/include/c++/10/ext/new_allocator.h ****       pointer
  92:/usr/include/c++/10/ext/new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
AARCH64 GAS  obj/extInstr.s 			page 213


  93:/usr/include/c++/10/ext/new_allocator.h ****       { return std::__addressof(__x); }
  94:/usr/include/c++/10/ext/new_allocator.h **** 
  95:/usr/include/c++/10/ext/new_allocator.h ****       const_pointer
  96:/usr/include/c++/10/ext/new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  97:/usr/include/c++/10/ext/new_allocator.h ****       { return std::__addressof(__x); }
  98:/usr/include/c++/10/ext/new_allocator.h **** #endif
  99:/usr/include/c++/10/ext/new_allocator.h **** 
 100:/usr/include/c++/10/ext/new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
 101:/usr/include/c++/10/ext/new_allocator.h ****       // about what the return value is when __n == 0.
 102:/usr/include/c++/10/ext/new_allocator.h ****       _GLIBCXX_NODISCARD _Tp*
 103:/usr/include/c++/10/ext/new_allocator.h ****       allocate(size_type __n, const void* = static_cast<const void*>(0))
 104:/usr/include/c++/10/ext/new_allocator.h ****       {
 105:/usr/include/c++/10/ext/new_allocator.h **** 	if (__n > this->_M_max_size())
 106:/usr/include/c++/10/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 107:/usr/include/c++/10/ext/new_allocator.h **** 
 108:/usr/include/c++/10/ext/new_allocator.h **** #if __cpp_aligned_new
 109:/usr/include/c++/10/ext/new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 110:/usr/include/c++/10/ext/new_allocator.h **** 	  {
 111:/usr/include/c++/10/ext/new_allocator.h **** 	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
 112:/usr/include/c++/10/ext/new_allocator.h **** 	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
 113:/usr/include/c++/10/ext/new_allocator.h **** 	  }
 114:/usr/include/c++/10/ext/new_allocator.h **** #endif
 115:/usr/include/c++/10/ext/new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 116:/usr/include/c++/10/ext/new_allocator.h ****       }
 117:/usr/include/c++/10/ext/new_allocator.h **** 
 118:/usr/include/c++/10/ext/new_allocator.h ****       // __p is not permitted to be a null pointer.
 119:/usr/include/c++/10/ext/new_allocator.h ****       void
 120:/usr/include/c++/10/ext/new_allocator.h ****       deallocate(_Tp* __p, size_type __t)
 604              		.loc 12 120 7 view .LVU159
 605              	.LBE845:
 606              	.LBE844:
 237:/usr/include/c++/10/bits/basic_string.h **** 
 607              		.loc 10 237 34 is_stmt 0 view .LVU160
 608 0128 E13F40F9 		ldr	x1, [sp, 120]
 609              	.LBB848:
 610              	.LBB847:
 611              	.LBB846:
 121:/usr/include/c++/10/ext/new_allocator.h ****       {
 122:/usr/include/c++/10/ext/new_allocator.h **** #if __cpp_aligned_new
 123:/usr/include/c++/10/ext/new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 124:/usr/include/c++/10/ext/new_allocator.h **** 	  {
 125:/usr/include/c++/10/ext/new_allocator.h **** 	    ::operator delete(__p,
 126:/usr/include/c++/10/ext/new_allocator.h **** # if __cpp_sized_deallocation
 127:/usr/include/c++/10/ext/new_allocator.h **** 			      __t * sizeof(_Tp),
 128:/usr/include/c++/10/ext/new_allocator.h **** # endif
 129:/usr/include/c++/10/ext/new_allocator.h **** 			      std::align_val_t(alignof(_Tp)));
 130:/usr/include/c++/10/ext/new_allocator.h **** 	    return;
 131:/usr/include/c++/10/ext/new_allocator.h **** 	  }
 132:/usr/include/c++/10/ext/new_allocator.h **** #endif
 133:/usr/include/c++/10/ext/new_allocator.h **** 	::operator delete(__p
 612              		.loc 12 133 19 view .LVU161
 613 012c 21040091 		add	x1, x1, 1
 614              	.LVL30:
 615              		.loc 12 133 19 view .LVU162
 616 0130 00000094 		bl	_ZdlPvm
 617              	.LVL31:
 618              	.L15:
AARCH64 GAS  obj/extInstr.s 			page 214


 619              		.loc 12 133 19 view .LVU163
 620              	.LBE846:
 621              	.LBE847:
 622              	.LBE848:
 623              	.LBE843:
 624              	.LBE842:
 625              	.LBE837:
 626              	.LBE836:
 627              	.LBB849:
 628              	.LBI849:
 150:/usr/include/c++/10/bits/basic_string.h ****       {
 629              		.loc 10 150 14 is_stmt 1 view .LVU164
 630              	.LBB850:
 631              	.LBI850:
 632              		.file 13 "/usr/include/c++/10/bits/allocator.h"
   1:/usr/include/c++/10/bits/allocator.h **** // Allocators -*- C++ -*-
   2:/usr/include/c++/10/bits/allocator.h **** 
   3:/usr/include/c++/10/bits/allocator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:/usr/include/c++/10/bits/allocator.h **** //
   5:/usr/include/c++/10/bits/allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/10/bits/allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/10/bits/allocator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/10/bits/allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/10/bits/allocator.h **** // any later version.
  10:/usr/include/c++/10/bits/allocator.h **** 
  11:/usr/include/c++/10/bits/allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/10/bits/allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/10/bits/allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/10/bits/allocator.h **** // GNU General Public License for more details.
  15:/usr/include/c++/10/bits/allocator.h **** 
  16:/usr/include/c++/10/bits/allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/10/bits/allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/10/bits/allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/10/bits/allocator.h **** 
  20:/usr/include/c++/10/bits/allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/10/bits/allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/10/bits/allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/10/bits/allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/10/bits/allocator.h **** 
  25:/usr/include/c++/10/bits/allocator.h **** /*
  26:/usr/include/c++/10/bits/allocator.h ****  * Copyright (c) 1996-1997
  27:/usr/include/c++/10/bits/allocator.h ****  * Silicon Graphics Computer Systems, Inc.
  28:/usr/include/c++/10/bits/allocator.h ****  *
  29:/usr/include/c++/10/bits/allocator.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:/usr/include/c++/10/bits/allocator.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:/usr/include/c++/10/bits/allocator.h ****  * provided that the above copyright notice appear in all copies and
  32:/usr/include/c++/10/bits/allocator.h ****  * that both that copyright notice and this permission notice appear
  33:/usr/include/c++/10/bits/allocator.h ****  * in supporting documentation.  Silicon Graphics makes no
  34:/usr/include/c++/10/bits/allocator.h ****  * representations about the suitability of this software for any
  35:/usr/include/c++/10/bits/allocator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:/usr/include/c++/10/bits/allocator.h ****  */
  37:/usr/include/c++/10/bits/allocator.h **** 
  38:/usr/include/c++/10/bits/allocator.h **** /** @file bits/allocator.h
  39:/usr/include/c++/10/bits/allocator.h ****  *  This is an internal header file, included by other library headers.
  40:/usr/include/c++/10/bits/allocator.h ****  *  Do not attempt to use it directly. @headername{memory}
  41:/usr/include/c++/10/bits/allocator.h ****  */
  42:/usr/include/c++/10/bits/allocator.h **** 
AARCH64 GAS  obj/extInstr.s 			page 215


  43:/usr/include/c++/10/bits/allocator.h **** #ifndef _ALLOCATOR_H
  44:/usr/include/c++/10/bits/allocator.h **** #define _ALLOCATOR_H 1
  45:/usr/include/c++/10/bits/allocator.h **** 
  46:/usr/include/c++/10/bits/allocator.h **** #include <bits/c++allocator.h> // Define the base class to std::allocator.
  47:/usr/include/c++/10/bits/allocator.h **** #include <bits/memoryfwd.h>
  48:/usr/include/c++/10/bits/allocator.h **** #if __cplusplus >= 201103L
  49:/usr/include/c++/10/bits/allocator.h **** #include <type_traits>
  50:/usr/include/c++/10/bits/allocator.h **** #endif
  51:/usr/include/c++/10/bits/allocator.h **** 
  52:/usr/include/c++/10/bits/allocator.h **** #define __cpp_lib_incomplete_container_elements 201505
  53:/usr/include/c++/10/bits/allocator.h **** 
  54:/usr/include/c++/10/bits/allocator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  55:/usr/include/c++/10/bits/allocator.h **** {
  56:/usr/include/c++/10/bits/allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  57:/usr/include/c++/10/bits/allocator.h **** 
  58:/usr/include/c++/10/bits/allocator.h ****   /**
  59:/usr/include/c++/10/bits/allocator.h ****    *  @addtogroup allocators
  60:/usr/include/c++/10/bits/allocator.h ****    *  @{
  61:/usr/include/c++/10/bits/allocator.h ****    */
  62:/usr/include/c++/10/bits/allocator.h **** 
  63:/usr/include/c++/10/bits/allocator.h ****   /// allocator<void> specialization.
  64:/usr/include/c++/10/bits/allocator.h ****   template<>
  65:/usr/include/c++/10/bits/allocator.h ****     class allocator<void>
  66:/usr/include/c++/10/bits/allocator.h ****     {
  67:/usr/include/c++/10/bits/allocator.h ****     public:
  68:/usr/include/c++/10/bits/allocator.h ****       typedef void        value_type;
  69:/usr/include/c++/10/bits/allocator.h ****       typedef size_t      size_type;
  70:/usr/include/c++/10/bits/allocator.h ****       typedef ptrdiff_t   difference_type;
  71:/usr/include/c++/10/bits/allocator.h **** #if __cplusplus <= 201703L
  72:/usr/include/c++/10/bits/allocator.h ****       typedef void*       pointer;
  73:/usr/include/c++/10/bits/allocator.h ****       typedef const void* const_pointer;
  74:/usr/include/c++/10/bits/allocator.h **** 
  75:/usr/include/c++/10/bits/allocator.h ****       template<typename _Tp1>
  76:/usr/include/c++/10/bits/allocator.h **** 	struct rebind
  77:/usr/include/c++/10/bits/allocator.h **** 	{ typedef allocator<_Tp1> other; };
  78:/usr/include/c++/10/bits/allocator.h **** #else
  79:/usr/include/c++/10/bits/allocator.h ****       allocator() = default;
  80:/usr/include/c++/10/bits/allocator.h **** 
  81:/usr/include/c++/10/bits/allocator.h ****       template<typename _Up>
  82:/usr/include/c++/10/bits/allocator.h **** 	constexpr
  83:/usr/include/c++/10/bits/allocator.h **** 	allocator(const allocator<_Up>&) { }
  84:/usr/include/c++/10/bits/allocator.h **** #endif // ! C++20
  85:/usr/include/c++/10/bits/allocator.h **** 
  86:/usr/include/c++/10/bits/allocator.h **** #if __cplusplus >= 201103L && __cplusplus <= 201703L
  87:/usr/include/c++/10/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  88:/usr/include/c++/10/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
  89:/usr/include/c++/10/bits/allocator.h ****       typedef true_type propagate_on_container_move_assignment;
  90:/usr/include/c++/10/bits/allocator.h **** 
  91:/usr/include/c++/10/bits/allocator.h ****       typedef true_type is_always_equal;
  92:/usr/include/c++/10/bits/allocator.h **** 
  93:/usr/include/c++/10/bits/allocator.h ****       template<typename _Up, typename... _Args>
  94:/usr/include/c++/10/bits/allocator.h **** 	void
  95:/usr/include/c++/10/bits/allocator.h **** 	construct(_Up* __p, _Args&&... __args)
  96:/usr/include/c++/10/bits/allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
  97:/usr/include/c++/10/bits/allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
  98:/usr/include/c++/10/bits/allocator.h **** 
  99:/usr/include/c++/10/bits/allocator.h ****       template<typename _Up>
AARCH64 GAS  obj/extInstr.s 			page 216


 100:/usr/include/c++/10/bits/allocator.h **** 	void
 101:/usr/include/c++/10/bits/allocator.h **** 	destroy(_Up* __p)
 102:/usr/include/c++/10/bits/allocator.h **** 	noexcept(std::is_nothrow_destructible<_Up>::value)
 103:/usr/include/c++/10/bits/allocator.h **** 	{ __p->~_Up(); }
 104:/usr/include/c++/10/bits/allocator.h **** #endif // C++11 to C++17
 105:/usr/include/c++/10/bits/allocator.h ****     };
 106:/usr/include/c++/10/bits/allocator.h **** 
 107:/usr/include/c++/10/bits/allocator.h ****   /**
 108:/usr/include/c++/10/bits/allocator.h ****    * @brief  The @a standard allocator, as per [20.4].
 109:/usr/include/c++/10/bits/allocator.h ****    *
 110:/usr/include/c++/10/bits/allocator.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/memory.html#std.util.memory.allocator
 111:/usr/include/c++/10/bits/allocator.h ****    *  for further details.
 112:/usr/include/c++/10/bits/allocator.h ****    *
 113:/usr/include/c++/10/bits/allocator.h ****    *  @tparam  _Tp  Type of allocated object.
 114:/usr/include/c++/10/bits/allocator.h ****    */
 115:/usr/include/c++/10/bits/allocator.h ****   template<typename _Tp>
 116:/usr/include/c++/10/bits/allocator.h ****     class allocator : public __allocator_base<_Tp>
 117:/usr/include/c++/10/bits/allocator.h ****     {
 118:/usr/include/c++/10/bits/allocator.h ****     public:
 119:/usr/include/c++/10/bits/allocator.h ****       typedef _Tp        value_type;
 120:/usr/include/c++/10/bits/allocator.h ****       typedef size_t     size_type;
 121:/usr/include/c++/10/bits/allocator.h ****       typedef ptrdiff_t  difference_type;
 122:/usr/include/c++/10/bits/allocator.h **** #if __cplusplus <= 201703L
 123:/usr/include/c++/10/bits/allocator.h ****       typedef _Tp*       pointer;
 124:/usr/include/c++/10/bits/allocator.h ****       typedef const _Tp* const_pointer;
 125:/usr/include/c++/10/bits/allocator.h ****       typedef _Tp&       reference;
 126:/usr/include/c++/10/bits/allocator.h ****       typedef const _Tp& const_reference;
 127:/usr/include/c++/10/bits/allocator.h **** 
 128:/usr/include/c++/10/bits/allocator.h ****       template<typename _Tp1>
 129:/usr/include/c++/10/bits/allocator.h **** 	struct rebind
 130:/usr/include/c++/10/bits/allocator.h **** 	{ typedef allocator<_Tp1> other; };
 131:/usr/include/c++/10/bits/allocator.h **** #endif
 132:/usr/include/c++/10/bits/allocator.h **** 
 133:/usr/include/c++/10/bits/allocator.h **** #if __cplusplus >= 201103L
 134:/usr/include/c++/10/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 135:/usr/include/c++/10/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
 136:/usr/include/c++/10/bits/allocator.h ****       typedef true_type propagate_on_container_move_assignment;
 137:/usr/include/c++/10/bits/allocator.h **** 
 138:/usr/include/c++/10/bits/allocator.h ****       typedef true_type is_always_equal;
 139:/usr/include/c++/10/bits/allocator.h **** #endif
 140:/usr/include/c++/10/bits/allocator.h **** 
 141:/usr/include/c++/10/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 142:/usr/include/c++/10/bits/allocator.h ****       // 3035. std::allocator's constructors should be constexpr
 143:/usr/include/c++/10/bits/allocator.h ****       _GLIBCXX20_CONSTEXPR
 144:/usr/include/c++/10/bits/allocator.h ****       allocator() _GLIBCXX_NOTHROW { }
 145:/usr/include/c++/10/bits/allocator.h **** 
 146:/usr/include/c++/10/bits/allocator.h ****       _GLIBCXX20_CONSTEXPR
 147:/usr/include/c++/10/bits/allocator.h ****       allocator(const allocator& __a) _GLIBCXX_NOTHROW
 148:/usr/include/c++/10/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 149:/usr/include/c++/10/bits/allocator.h **** 
 150:/usr/include/c++/10/bits/allocator.h **** #if __cplusplus >= 201103L
 151:/usr/include/c++/10/bits/allocator.h ****       // Avoid implicit deprecation.
 152:/usr/include/c++/10/bits/allocator.h ****       allocator& operator=(const allocator&) = default;
 153:/usr/include/c++/10/bits/allocator.h **** #endif
 154:/usr/include/c++/10/bits/allocator.h **** 
 155:/usr/include/c++/10/bits/allocator.h ****       template<typename _Tp1>
 156:/usr/include/c++/10/bits/allocator.h **** 	_GLIBCXX20_CONSTEXPR
AARCH64 GAS  obj/extInstr.s 			page 217


 157:/usr/include/c++/10/bits/allocator.h **** 	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 158:/usr/include/c++/10/bits/allocator.h **** 
 159:/usr/include/c++/10/bits/allocator.h **** #if __cpp_constexpr_dynamic_alloc
 160:/usr/include/c++/10/bits/allocator.h ****       constexpr
 161:/usr/include/c++/10/bits/allocator.h **** #endif
 162:/usr/include/c++/10/bits/allocator.h ****       ~allocator() _GLIBCXX_NOTHROW { }
 633              		.loc 13 162 7 view .LVU165
 634              	.LBB851:
 635              	.LBI851:
  89:/usr/include/c++/10/ext/new_allocator.h **** 
 636              		.loc 12 89 7 view .LVU166
  89:/usr/include/c++/10/ext/new_allocator.h **** 
 637              		.loc 12 89 7 is_stmt 0 view .LVU167
 638              	.LBE851:
 639              	.LBE850:
 640              	.LBE849:
 641              	.LBE835:
 642              	.LBE834:
  59:extInstr.cpp  **** 	
  60:extInstr.cpp  **** 	tblInstr_(&y,a2,b2,indx);
 643              		.loc 4 60 2 is_stmt 1 view .LVU168
 644              		.loc 4 60 11 is_stmt 0 view .LVU169
 645 0134 B5020091 		add	x21, x21, :lo12:.LANCHOR0
 646              	.LBB852:
 647              	.LBB853:
 648              	.LBB854:
 649              	.LBB855:
  48:../../Include/Vec128.h ****         {
 650              		.loc 5 48 18 view .LVU170
 651 0138 14008052 		mov	w20, 0
 652              	.LBE855:
 653              	.LBE854:
 654              	.LBE853:
 655              	.LBE852:
 656              		.loc 4 60 11 view .LVU171
 657 013c A3820091 		add	x3, x21, 32
 658 0140 A2020191 		add	x2, x21, 64
 659 0144 A1C20091 		add	x1, x21, 48
 660 0148 A0820191 		add	x0, x21, 96
 661              	.LEHB3:
 662 014c 00000094 		bl	tblInstr_
 663              	.LVL32:
  61:extInstr.cpp  **** 	cout<<"TBL instruction result:"<<endl;
 664              		.loc 4 61 2 is_stmt 1 view .LVU172
 665              	.LBB910:
 666              	.LBI910:
 606:/usr/include/c++/10/ostream ****     {
 667              		.loc 1 606 5 view .LVU173
 606:/usr/include/c++/10/ostream ****     {
 668              		.loc 1 606 5 is_stmt 0 view .LVU174
 669              	.LBE910:
 670              		.loc 7 364 2 is_stmt 1 view .LVU175
 671              	.LBB912:
 672              	.LBB902:
 673              	.LBB894:
 674              	.LBB885:
 675              	.LBB856:
AARCH64 GAS  obj/extInstr.s 			page 218


 676              	.LBB857:
 677              	.LBB858:
 678              	.LBB859:
 754:/usr/include/c++/10/bits/ios_base.h ****       return __old;
 679              		.loc 6 754 16 is_stmt 0 view .LVU176
 680 0150 960080D2 		mov	x22, 4
 681              	.LBE859:
 682              	.LBE858:
 683              	.LBE857:
 684              	.LBE856:
 685              	.LBE885:
 686              	.LBE894:
 687              	.LBE902:
 688              	.LBE912:
 689              	.LBB913:
 690              	.LBB911:
 611:/usr/include/c++/10/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 691              		.loc 1 611 18 view .LVU177
 692 0154 F80240F9 		ldr	x24, [x23, #:got_lo12:_ZSt4cout]
 693 0158 01000090 		adrp	x1, .LC3
 694 015c 21000091 		add	x1, x1, :lo12:.LC3
 695 0160 E20280D2 		mov	x2, 23
 696 0164 E00318AA 		mov	x0, x24
 697 0168 00000094 		bl	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 698              	.LVL33:
 611:/usr/include/c++/10/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 699              		.loc 1 611 18 view .LVU178
 700              	.LBE911:
 701              	.LBE913:
 702              	.LBB914:
 703              	.LBI914:
 108:/usr/include/c++/10/ostream ****       {
 704              		.loc 1 108 7 is_stmt 1 view .LVU179
 705              	.LBB915:
 113:/usr/include/c++/10/ostream ****       }
 706              		.loc 1 113 13 is_stmt 0 view .LVU180
 707 016c E00318AA 		mov	x0, x24
 708 0170 00000094 		bl	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0
 709              	.LVL34:
 113:/usr/include/c++/10/ostream ****       }
 710              		.loc 1 113 13 view .LVU181
 711              	.LBE915:
 712              	.LBE914:
  62:extInstr.cpp  **** 	cout<<"y: "<<y.ToStringU8()<<endl;
 713              		.loc 4 62 2 is_stmt 1 view .LVU182
 714              	.LBB916:
 715              	.LBI916:
 606:/usr/include/c++/10/ostream ****     {
 716              		.loc 1 606 5 view .LVU183
 606:/usr/include/c++/10/ostream ****     {
 717              		.loc 1 606 5 is_stmt 0 view .LVU184
 718              	.LBE916:
 719              		.loc 7 364 2 is_stmt 1 view .LVU185
 720              	.LBB920:
 721              	.LBB917:
 611:/usr/include/c++/10/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 722              		.loc 1 611 18 is_stmt 0 view .LVU186
AARCH64 GAS  obj/extInstr.s 			page 219


 723 0174 E00318AA 		mov	x0, x24
 724 0178 01000090 		adrp	x1, .LC4
 725              	.LBE917:
 726              	.LBE920:
 727              	.LBB921:
 728              	.LBB903:
 729              	.LBB895:
 730              	.LBB886:
 731              	.LBB869:
 732              	.LBB870:
 733 017c 18000090 		adrp	x24, .LC2
 734              	.LBE870:
 735              	.LBE869:
 736              	.LBE886:
 737              	.LBE895:
 738              	.LBE903:
 739              	.LBE921:
 740              	.LBB922:
 741              	.LBB918:
 742 0180 21000091 		add	x1, x1, :lo12:.LC4
 743              	.LBE918:
 744              	.LBE922:
 745              	.LBB923:
 746              	.LBB904:
 747              	.LBB896:
 748              	.LBB887:
 749              	.LBB873:
 750              	.LBB871:
 751 0184 18030091 		add	x24, x24, :lo12:.LC2
 752              	.LBE871:
 753              	.LBE873:
 754              	.LBE887:
 755              	.LBE896:
 756              	.LBE904:
 757              	.LBE923:
 758              	.LBB924:
 759              	.LBB919:
 760 0188 620080D2 		mov	x2, 3
 761 018c 00000094 		bl	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 762              	.LVL35:
 611:/usr/include/c++/10/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 763              		.loc 1 611 18 view .LVU187
 764              	.LBE919:
 765              	.LBE924:
 766              	.LBB925:
 767              	.LBI852:
 129:../../Include/Vec128.h ****     {
 768              		.loc 5 129 17 is_stmt 1 view .LVU188
 769              	.LBE925:
 131:../../Include/Vec128.h ****     }
 770              		.loc 5 131 9 view .LVU189
 771              	.LBB926:
 772              	.LBB905:
 773              	.LBI853:
  44:../../Include/Vec128.h ****     {
 774              		.loc 5 44 39 view .LVU190
 775              	.LBB897:
AARCH64 GAS  obj/extInstr.s 			page 220


  46:../../Include/Vec128.h **** 
 776              		.loc 5 46 28 is_stmt 0 view .LVU191
 777 0190 E00313AA 		mov	x0, x19
 778 0194 00000094 		bl	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEC1Ev
 779              	.LVL36:
 780              	.LEHE3:
 781              	.LBB888:
  48:../../Include/Vec128.h ****         {
 782              		.loc 5 48 27 is_stmt 1 view .LVU192
 783              		.p2align 3,,7
 784              	.L16:
  48:../../Include/Vec128.h ****         {
 785              		.loc 5 48 27 is_stmt 0 view .LVU193
 786              	.LBE888:
 787              	.LBE897:
 788              	.LBE905:
 789              	.LBE926:
 226:/usr/include/c++/10/iomanip **** 
 790              		.loc 8 226 5 is_stmt 1 view .LVU194
 791              	.LBB927:
 792              	.LBB906:
 793              	.LBB898:
 794              	.LBB889:
 795              	.LBB874:
 796              	.LBI856:
 238:/usr/include/c++/10/iomanip ****     {
 797              		.loc 8 238 5 view .LVU195
 798              	.LBB866:
 799              	.LBB863:
 800              	.LBI858:
 751:/usr/include/c++/10/bits/ios_base.h ****     {
 801              		.loc 6 751 5 view .LVU196
 802              	.LBB860:
 753:/usr/include/c++/10/bits/ios_base.h ****       _M_width = __wide;
 803              		.loc 6 753 7 view .LVU197
 754:/usr/include/c++/10/bits/ios_base.h ****       return __old;
 804              		.loc 6 754 7 view .LVU198
 805              	.LBE860:
 806              	.LBE863:
 807              		.loc 8 240 17 is_stmt 0 view .LVU199
 808 0198 E24740F9 		ldr	x2, [sp, 136]
 809              	.LBE866:
 810              	.LBE874:
  50:../../Include/Vec128.h **** 
 811              		.loc 5 50 47 view .LVU200
 812 019c A1C2348B 		add	x1, x21, x20, sxtw
 813              	.LBB875:
 814              	.LBB876:
 171:/usr/include/c++/10/ostream **** 
 815              		.loc 1 171 25 view .LVU201
 816 01a0 E00313AA 		mov	x0, x19
 817              	.LBE876:
 818              	.LBE875:
 819              	.LBB879:
 820              	.LBB867:
 821              	.LBB864:
 822              	.LBB861:
AARCH64 GAS  obj/extInstr.s 			page 221


 754:/usr/include/c++/10/bits/ios_base.h ****       return __old;
 823              		.loc 6 754 16 view .LVU202
 824 01a4 42805EF8 		ldr	x2, [x2, -24]
 825              	.LBE861:
 826              	.LBE864:
 827              	.LBE867:
 828              	.LBE879:
 829              	.LBB880:
 830              	.LBB877:
 171:/usr/include/c++/10/ostream **** 
 831              		.loc 1 171 25 view .LVU203
 832 01a8 21804139 		ldrb	w1, [x1, 96]
 833              	.LBE877:
 834              	.LBE880:
 835              	.LBB881:
 836              	.LBB868:
 837              	.LBB865:
 838              	.LBB862:
 754:/usr/include/c++/10/bits/ios_base.h ****       return __old;
 839              		.loc 6 754 16 view .LVU204
 840 01ac 6202028B 		add	x2, x19, x2
 841 01b0 560800F9 		str	x22, [x2, 16]
 842              	.LVL37:
 843              		.loc 6 755 7 is_stmt 1 view .LVU205
 844              		.loc 6 755 7 is_stmt 0 view .LVU206
 845              	.LBE862:
 846              	.LBE865:
 847              	.LBE868:
 848              	.LBE881:
 849              	.LBB882:
 850              	.LBI875:
 170:/usr/include/c++/10/ostream ****       { return _M_insert(__n); }
 851              		.loc 1 170 7 is_stmt 1 view .LVU207
 852              	.LEHB4:
 853              	.LBB878:
 171:/usr/include/c++/10/ostream **** 
 854              		.loc 1 171 25 is_stmt 0 view .LVU208
 855 01b4 00000094 		bl	_ZNSo9_M_insertImEERSoT_
 856              	.LVL38:
 171:/usr/include/c++/10/ostream **** 
 857              		.loc 1 171 25 view .LVU209
 858              	.LBE878:
 859              	.LBE882:
  52:../../Include/Vec128.h ****                 oss << "   |";
 860              		.loc 5 52 19 view .LVU210
 861 01b8 94060011 		add	w20, w20, 1
 862              	.LVL39:
  52:../../Include/Vec128.h ****                 oss << "   |";
 863              		.loc 5 52 13 view .LVU211
 864 01bc 9F220071 		cmp	w20, 8
 865 01c0 60030054 		beq	.L39
 866              	.LVL40:
  48:../../Include/Vec128.h ****         {
 867              		.loc 5 48 27 is_stmt 1 view .LVU212
 868 01c4 9F420071 		cmp	w20, 16
 869 01c8 81FEFF54 		bne	.L16
 870              	.LVL41:
AARCH64 GAS  obj/extInstr.s 			page 222


  48:../../Include/Vec128.h ****         {
 871              		.loc 5 48 27 is_stmt 0 view .LVU213
 872              	.LBE889:
 873              	.LBB890:
 874              	.LBI890:
 677:/usr/include/c++/10/sstream ****       { return _M_stringbuf.str(); }
 875              		.loc 9 677 7 is_stmt 1 view .LVU214
 876              	.LBB891:
 877              		.loc 9 678 33 is_stmt 0 view .LVU215
 878 01cc E8031BAA 		mov	x8, x27
 879 01d0 E0031AAA 		mov	x0, x26
 880 01d4 00000094 		bl	_ZNKSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE3strEv
 881              	.LVL42:
 882              	.LEHE4:
 883              		.loc 9 678 33 view .LVU216
 884              	.LBE891:
 885              	.LBE890:
  46:../../Include/Vec128.h **** 
 886              		.loc 5 46 28 view .LVU217
 887 01d8 E00313AA 		mov	x0, x19
 888 01dc 00000094 		bl	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev
 889              	.LVL43:
  46:../../Include/Vec128.h **** 
 890              		.loc 5 46 28 view .LVU218
 891              	.LBE898:
 892              	.LBE906:
 893              	.LBE927:
 894              	.LBB928:
 895              	.LBI928:
6468:/usr/include/c++/10/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __str)
 896              		.loc 10 6468 5 is_stmt 1 view .LVU219
 897              	.LBB929:
 898              	.LBB930:
 899              	.LBI930:
2311:/usr/include/c++/10/bits/basic_string.h ****       { return _M_data(); }
 900              		.loc 10 2311 7 view .LVU220
 901              	.LBB931:
 902              	.LBI931:
 186:/usr/include/c++/10/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 903              		.loc 10 186 7 view .LVU221
 186:/usr/include/c++/10/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 904              		.loc 10 186 7 is_stmt 0 view .LVU222
 905              	.LBE931:
 906              	.LBE930:
 907              	.LBB932:
 908              	.LBI932:
 901:/usr/include/c++/10/bits/basic_string.h ****       { return _M_string_length; }
 909              		.loc 10 901 7 is_stmt 1 view .LVU223
 901:/usr/include/c++/10/bits/basic_string.h ****       { return _M_string_length; }
 910              		.loc 10 901 7 is_stmt 0 view .LVU224
 911              	.LBE932:
 912              		.loc 10 6473 30 view .LVU225
 913 01e0 E18B46A9 		ldp	x1, x2, [sp, 104]
 914 01e4 E00240F9 		ldr	x0, [x23, #:got_lo12:_ZSt4cout]
 915              	.LEHB5:
 916 01e8 00000094 		bl	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 917              	.LVL44:
AARCH64 GAS  obj/extInstr.s 			page 223


 918              		.loc 10 6473 30 view .LVU226
 919              	.LBE929:
 920              	.LBE928:
 921              	.LBB933:
 922              	.LBI933:
 108:/usr/include/c++/10/ostream ****       {
 923              		.loc 1 108 7 is_stmt 1 view .LVU227
 924              	.LBB934:
 113:/usr/include/c++/10/ostream ****       }
 925              		.loc 1 113 13 is_stmt 0 view .LVU228
 926 01ec 00000094 		bl	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0
 927              	.LVL45:
 928              	.LEHE5:
 113:/usr/include/c++/10/ostream ****       }
 929              		.loc 1 113 13 view .LVU229
 930              	.LBE934:
 931              	.LBE933:
 932              	.LBB935:
 933              	.LBI935:
 657:/usr/include/c++/10/bits/basic_string.h ****       { _M_dispose(); }
 934              		.loc 10 657 7 is_stmt 1 view .LVU230
 935              	.LBB936:
 936              	.LBB937:
 937              	.LBI937:
 229:/usr/include/c++/10/bits/basic_string.h ****       {
 938              		.loc 10 229 7 view .LVU231
 939              	.LBB938:
 940              	.LBB939:
 941              	.LBI939:
 221:/usr/include/c++/10/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 942              		.loc 10 221 7 view .LVU232
 943              	.LBB940:
 944              	.LBI940:
 186:/usr/include/c++/10/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 945              		.loc 10 186 7 view .LVU233
 946              	.LBB941:
 187:/usr/include/c++/10/bits/basic_string.h **** 
 947              		.loc 10 187 28 is_stmt 0 view .LVU234
 948 01f0 E03740F9 		ldr	x0, [sp, 104]
 949              	.LVL46:
 187:/usr/include/c++/10/bits/basic_string.h **** 
 950              		.loc 10 187 28 view .LVU235
 951              	.LBE941:
 952              	.LBE940:
 953              	.LBB942:
 954              	.LBI942:
 200:/usr/include/c++/10/bits/basic_string.h ****       {
 955              		.loc 10 200 7 is_stmt 1 view .LVU236
 200:/usr/include/c++/10/bits/basic_string.h ****       {
 956              		.loc 10 200 7 is_stmt 0 view .LVU237
 957              	.LBE942:
 958              	.LBE939:
 231:/usr/include/c++/10/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 959              		.loc 10 231 2 view .LVU238
 960 01f4 1F0019EB 		cmp	x0, x25
 961 01f8 80000054 		beq	.L31
 962              	.LVL47:
AARCH64 GAS  obj/extInstr.s 			page 224


 963              	.LBB943:
 964              	.LBI943:
 236:/usr/include/c++/10/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 965              		.loc 10 236 7 is_stmt 1 view .LVU239
 966              	.LBB944:
 967              	.LBB945:
 968              	.LBI945:
 969              		.loc 11 491 7 view .LVU240
 970              	.LBB946:
 971              	.LBI946:
 120:/usr/include/c++/10/ext/new_allocator.h ****       {
 972              		.loc 12 120 7 view .LVU241
 973              	.LBE946:
 974              	.LBE945:
 237:/usr/include/c++/10/bits/basic_string.h **** 
 975              		.loc 10 237 34 is_stmt 0 view .LVU242
 976 01fc E13F40F9 		ldr	x1, [sp, 120]
 977              	.LBB949:
 978              	.LBB948:
 979              	.LBB947:
 980              		.loc 12 133 19 view .LVU243
 981 0200 21040091 		add	x1, x1, 1
 982              	.LVL48:
 983              		.loc 12 133 19 view .LVU244
 984 0204 00000094 		bl	_ZdlPvm
 985              	.LVL49:
 986              		.loc 12 133 19 view .LVU245
 987              	.LBE947:
 988              	.LBE948:
 989              	.LBE949:
 990              	.LBE944:
 991              	.LBE943:
 992              	.LBE938:
 993              	.LBE937:
 994              	.LBB950:
 995              	.LBI950:
 150:/usr/include/c++/10/bits/basic_string.h ****       {
 996              		.loc 10 150 14 is_stmt 1 view .LVU246
 997              	.LBB951:
 998              	.LBI951:
 999              		.loc 13 162 7 view .LVU247
 1000              	.LBB952:
 1001              	.LBI952:
  89:/usr/include/c++/10/ext/new_allocator.h **** 
 1002              		.loc 12 89 7 view .LVU248
  89:/usr/include/c++/10/ext/new_allocator.h **** 
 1003              		.loc 12 89 7 is_stmt 0 view .LVU249
 1004              	.LBE952:
 1005              	.LBE951:
 1006              	.LBE950:
 1007              	.LBE936:
 1008              	.LBE935:
  63:extInstr.cpp  **** 	return 0;
 1009              		.loc 4 63 2 is_stmt 1 view .LVU250
 1010              	.L31:
  64:extInstr.cpp  **** }
 1011              		.loc 4 64 1 is_stmt 0 view .LVU251
AARCH64 GAS  obj/extInstr.s 			page 225


 1012 0208 00008052 		mov	w0, 0
 1013 020c FD7B40A9 		ldp	x29, x30, [sp]
 1014 0210 F35341A9 		ldp	x19, x20, [sp, 16]
 1015 0214 F55B42A9 		ldp	x21, x22, [sp, 32]
 1016 0218 F76343A9 		ldp	x23, x24, [sp, 48]
 1017 021c F96B44A9 		ldp	x25, x26, [sp, 64]
 1018 0220 FB2B40F9 		ldr	x27, [sp, 80]
 1019 0224 FF030891 		add	sp, sp, 512
 1020              		.cfi_remember_state
 1021              		.cfi_restore 29
 1022              		.cfi_restore 30
 1023              		.cfi_restore 27
 1024              		.cfi_restore 25
 1025              		.cfi_restore 26
 1026              		.cfi_restore 23
 1027              		.cfi_restore 24
 1028              		.cfi_restore 21
 1029              		.cfi_restore 22
 1030              		.cfi_restore 19
 1031              		.cfi_restore 20
 1032              		.cfi_def_cfa_offset 0
 1033 0228 C0035FD6 		ret
 1034              	.LVL50:
 1035              		.p2align 2,,3
 1036              	.L39:
 1037              		.cfi_restore_state
 1038              	.LBB953:
 1039              	.LBB907:
 1040              	.LBB899:
 1041              	.LBB892:
 1042              	.LBB883:
 1043              	.LBI869:
 606:/usr/include/c++/10/ostream ****     {
 1044              		.loc 1 606 5 is_stmt 1 view .LVU252
 606:/usr/include/c++/10/ostream ****     {
 1045              		.loc 1 606 5 is_stmt 0 view .LVU253
 1046              	.LBE883:
 1047              	.LBE892:
 1048              	.LBE899:
 1049              	.LBE907:
 1050              	.LBE953:
 1051              		.loc 7 364 2 is_stmt 1 view .LVU254
 1052              	.LBB954:
 1053              	.LBB908:
 1054              	.LBB900:
 1055              	.LBB893:
 1056              	.LBB884:
 1057              	.LBB872:
 611:/usr/include/c++/10/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 1058              		.loc 1 611 18 is_stmt 0 view .LVU255
 1059 022c E10318AA 		mov	x1, x24
 1060 0230 E00313AA 		mov	x0, x19
 1061 0234 820080D2 		mov	x2, 4
 1062              	.LEHB6:
 1063 0238 00000094 		bl	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 1064              	.LVL51:
 1065              	.LEHE6:
AARCH64 GAS  obj/extInstr.s 			page 226


 1066 023c D7FFFF17 		b	.L16
 1067              	.LVL52:
 1068              		.p2align 2,,3
 1069              	.L38:
 611:/usr/include/c++/10/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 1070              		.loc 1 611 18 view .LVU256
 1071              	.LBE872:
 1072              	.LBE884:
 1073              	.LBE893:
 1074              	.LBE900:
 1075              	.LBE908:
 1076              	.LBE954:
 1077              	.LBB955:
 1078              	.LBB807:
 1079              	.LBB799:
 1080              	.LBB791:
 1081              	.LBB782:
 1082              	.LBI768:
 606:/usr/include/c++/10/ostream ****     {
 1083              		.loc 1 606 5 is_stmt 1 view .LVU257
 606:/usr/include/c++/10/ostream ****     {
 1084              		.loc 1 606 5 is_stmt 0 view .LVU258
 1085              	.LBE782:
 1086              	.LBE791:
 1087              	.LBE799:
 1088              	.LBE807:
 1089              	.LBE955:
 1090              		.loc 7 364 2 is_stmt 1 view .LVU259
 1091              	.LBB956:
 1092              	.LBB808:
 1093              	.LBB800:
 1094              	.LBB792:
 1095              	.LBB783:
 1096              	.LBB771:
 611:/usr/include/c++/10/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 1097              		.loc 1 611 18 is_stmt 0 view .LVU260
 1098 0240 E10319AA 		mov	x1, x25
 1099 0244 E00313AA 		mov	x0, x19
 1100 0248 820080D2 		mov	x2, 4
 1101              	.LEHB7:
 1102 024c 00000094 		bl	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 1103              	.LVL53:
 1104              	.LEHE7:
 1105 0250 9AFFFF17 		b	.L9
 1106              	.LVL54:
 1107              	.L29:
 1108              	.L35:
 611:/usr/include/c++/10/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 1109              		.loc 1 611 18 view .LVU261
 1110              	.LBE771:
 1111              	.LBE783:
 1112              	.LBE792:
 1113              	.LBE800:
 1114              	.LBE808:
 1115              	.LBE956:
 1116              	.LBB957:
 1117              	.LBB909:
AARCH64 GAS  obj/extInstr.s 			page 227


 1118              	.LBB901:
  46:../../Include/Vec128.h **** 
 1119              		.loc 5 46 28 view .LVU262
 1120 0254 E10300AA 		mov	x1, x0
 1121 0258 E00313AA 		mov	x0, x19
 1122 025c F30301AA 		mov	x19, x1
 1123 0260 00000094 		bl	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev
 1124              	.LVL55:
 1125              	.L36:
 1126 0264 E00313AA 		mov	x0, x19
 1127              	.LEHB8:
 1128 0268 00000094 		bl	_Unwind_Resume
 1129              	.LVL56:
 1130              	.LEHE8:
 1131              	.L28:
 1132              	.LBE901:
 1133              	.LBE909:
 1134              	.LBE957:
 1135              	.LBB958:
 1136              	.LBB959:
 1137              	.LBB960:
 1138              	.LBB961:
 1139              	.LBB962:
 1140              	.LBB963:
 1141              	.LBB964:
 187:/usr/include/c++/10/bits/basic_string.h **** 
 1142              		.loc 10 187 28 view .LVU263
 1143 026c E23740F9 		ldr	x2, [sp, 104]
 1144 0270 F30300AA 		mov	x19, x0
 1145              	.LVL57:
 187:/usr/include/c++/10/bits/basic_string.h **** 
 1146              		.loc 10 187 28 view .LVU264
 1147              	.LBE964:
 1148              	.LBE963:
 1149              	.LBE962:
 1150              	.LBE961:
 1151              	.LBE960:
 1152              	.LBE959:
 1153              	.LBI958:
 657:/usr/include/c++/10/bits/basic_string.h ****       { _M_dispose(); }
 1154              		.loc 10 657 7 is_stmt 1 view .LVU265
 1155              	.LBB984:
 1156              	.LBB979:
 1157              	.LBI960:
 229:/usr/include/c++/10/bits/basic_string.h ****       {
 1158              		.loc 10 229 7 view .LVU266
 1159              	.LBB977:
 1160              	.LBB967:
 1161              	.LBI962:
 221:/usr/include/c++/10/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 1162              		.loc 10 221 7 view .LVU267
 1163              	.LBB965:
 1164              	.LBI963:
 186:/usr/include/c++/10/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 1165              		.loc 10 186 7 view .LVU268
 186:/usr/include/c++/10/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 1166              		.loc 10 186 7 is_stmt 0 view .LVU269
AARCH64 GAS  obj/extInstr.s 			page 228


 1167              	.LBE965:
 1168              	.LBB966:
 1169              	.LBI966:
 200:/usr/include/c++/10/bits/basic_string.h ****       {
 1170              		.loc 10 200 7 is_stmt 1 view .LVU270
 200:/usr/include/c++/10/bits/basic_string.h ****       {
 1171              		.loc 10 200 7 is_stmt 0 view .LVU271
 1172              	.LBE966:
 1173              	.LBE967:
 231:/usr/include/c++/10/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 1174              		.loc 10 231 2 view .LVU272
 1175 0274 5F0019EB 		cmp	x2, x25
 1176 0278 60FFFF54 		beq	.L36
 1177              	.LVL58:
 1178              	.L37:
 1179              	.LBB968:
 1180              	.LBI968:
 236:/usr/include/c++/10/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 1181              		.loc 10 236 7 is_stmt 1 view .LVU273
 1182              	.LBB969:
 1183              	.LBB970:
 1184              	.LBI970:
 1185              		.loc 11 491 7 view .LVU274
 1186              	.LBB971:
 1187              	.LBI971:
 120:/usr/include/c++/10/ext/new_allocator.h ****       {
 1188              		.loc 12 120 7 view .LVU275
 1189              	.LBE971:
 1190              	.LBE970:
 237:/usr/include/c++/10/bits/basic_string.h **** 
 1191              		.loc 10 237 34 is_stmt 0 view .LVU276
 1192 027c E13F40F9 		ldr	x1, [sp, 120]
 1193              	.LBB974:
 1194              	.LBB973:
 1195              	.LBB972:
 1196              		.loc 12 133 19 view .LVU277
 1197 0280 E00302AA 		mov	x0, x2
 1198 0284 21040091 		add	x1, x1, 1
 1199              	.LVL59:
 1200              		.loc 12 133 19 view .LVU278
 1201 0288 00000094 		bl	_ZdlPvm
 1202              	.LVL60:
 1203              		.loc 12 133 19 view .LVU279
 1204              	.LBE972:
 1205              	.LBE973:
 1206              	.LBE974:
 1207              	.LBE969:
 1208              	.LBE968:
 1209              	.LBE977:
 1210              	.LBE979:
 1211              	.LBB980:
 1212              	.LBI980:
 150:/usr/include/c++/10/bits/basic_string.h ****       {
 1213              		.loc 10 150 14 is_stmt 1 view .LVU280
 1214              	.LBB981:
 1215              	.LBI981:
 1216              		.loc 13 162 7 view .LVU281
AARCH64 GAS  obj/extInstr.s 			page 229


 1217              	.LBB982:
 1218              	.LBI982:
  89:/usr/include/c++/10/ext/new_allocator.h **** 
 1219              		.loc 12 89 7 view .LVU282
  89:/usr/include/c++/10/ext/new_allocator.h **** 
 1220              		.loc 12 89 7 is_stmt 0 view .LVU283
 1221              	.LBE982:
 1222              	.LBE981:
 1223              	.LBE980:
 1224              	.LBB983:
 1225              	.LBB978:
 1226              	.LBB976:
 1227              	.LBB975:
 237:/usr/include/c++/10/bits/basic_string.h **** 
 1228              		.loc 10 237 79 view .LVU284
 1229 028c F6FFFF17 		b	.L36
 1230              	.LVL61:
 1231              	.L30:
 237:/usr/include/c++/10/bits/basic_string.h **** 
 1232              		.loc 10 237 79 view .LVU285
 1233 0290 F1FFFF17 		b	.L35
 1234              	.LVL62:
 1235              	.L27:
 237:/usr/include/c++/10/bits/basic_string.h **** 
 1236              		.loc 10 237 79 view .LVU286
 1237              	.LBE975:
 1238              	.LBE976:
 1239              	.LBE978:
 1240              	.LBE983:
 1241              	.LBE984:
 1242              	.LBE958:
 1243              	.LBB985:
 1244              	.LBB986:
 1245              	.LBB987:
 1246              	.LBB988:
 1247              	.LBB989:
 1248              	.LBB990:
 1249              	.LBB991:
 187:/usr/include/c++/10/bits/basic_string.h **** 
 1250              		.loc 10 187 28 view .LVU287
 1251 0294 E23740F9 		ldr	x2, [sp, 104]
 1252              	.LBE991:
 1253              	.LBE990:
 1254              	.LBE989:
 231:/usr/include/c++/10/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 1255              		.loc 10 231 2 view .LVU288
 1256 0298 E1E30191 		add	x1, sp, 120
 1257              	.LBB996:
 1258              	.LBB993:
 1259              	.LBB992:
 187:/usr/include/c++/10/bits/basic_string.h **** 
 1260              		.loc 10 187 28 view .LVU289
 1261 029c F30300AA 		mov	x19, x0
 1262              	.LVL63:
 187:/usr/include/c++/10/bits/basic_string.h **** 
 1263              		.loc 10 187 28 view .LVU290
 1264              	.LBE992:
AARCH64 GAS  obj/extInstr.s 			page 230


 1265              	.LBE993:
 1266              	.LBE996:
 1267              	.LBE988:
 1268              	.LBE987:
 1269              	.LBE986:
 1270              	.LBI985:
 657:/usr/include/c++/10/bits/basic_string.h ****       { _M_dispose(); }
 1271              		.loc 10 657 7 is_stmt 1 view .LVU291
 1272              	.LBB1000:
 1273              	.LBB999:
 1274              	.LBI987:
 229:/usr/include/c++/10/bits/basic_string.h ****       {
 1275              		.loc 10 229 7 view .LVU292
 1276              	.LBB998:
 1277              	.LBB997:
 1278              	.LBI989:
 221:/usr/include/c++/10/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 1279              		.loc 10 221 7 view .LVU293
 1280              	.LBB994:
 1281              	.LBI990:
 186:/usr/include/c++/10/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 1282              		.loc 10 186 7 view .LVU294
 186:/usr/include/c++/10/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 1283              		.loc 10 186 7 is_stmt 0 view .LVU295
 1284              	.LBE994:
 1285              	.LBB995:
 1286              	.LBI995:
 200:/usr/include/c++/10/bits/basic_string.h ****       {
 1287              		.loc 10 200 7 is_stmt 1 view .LVU296
 200:/usr/include/c++/10/bits/basic_string.h ****       {
 1288              		.loc 10 200 7 is_stmt 0 view .LVU297
 1289              	.LBE995:
 1290              	.LBE997:
 231:/usr/include/c++/10/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 1291              		.loc 10 231 2 view .LVU298
 1292 02a0 5F0001EB 		cmp	x2, x1
 1293 02a4 C1FEFF54 		bne	.L37
 1294 02a8 EFFFFF17 		b	.L36
 1295              	.LBE998:
 1296              	.LBE999:
 1297              	.LBE1000:
 1298              	.LBE985:
 1299              		.cfi_endproc
 1300              	.LFE2202:
 1301              		.global	__gxx_personality_v0
 1302              		.section	.gcc_except_table,"a",@progbits
 1303              	.LLSDA2202:
 1304 0000 FF       		.byte	0xff
 1305 0001 FF       		.byte	0xff
 1306 0002 01       		.byte	0x1
 1307 0003 32       		.uleb128 .LLSDACSE2202-.LLSDACSB2202
 1308              	.LLSDACSB2202:
 1309 0004 70       		.uleb128 .LEHB0-.LFB2202
 1310 0005 48       		.uleb128 .LEHE0-.LEHB0
 1311 0006 00       		.uleb128 0
 1312 0007 00       		.uleb128 0
 1313 0008 D401     		.uleb128 .LEHB1-.LFB2202
AARCH64 GAS  obj/extInstr.s 			page 231


 1314 000a 2C       		.uleb128 .LEHE1-.LEHB1
 1315 000b D404     		.uleb128 .L29-.LFB2202
 1316 000d 00       		.uleb128 0
 1317 000e 9002     		.uleb128 .LEHB2-.LFB2202
 1318 0010 08       		.uleb128 .LEHE2-.LEHB2
 1319 0011 9405     		.uleb128 .L27-.LFB2202
 1320 0013 00       		.uleb128 0
 1321 0014 CC02     		.uleb128 .LEHB3-.LFB2202
 1322 0016 4C       		.uleb128 .LEHE3-.LEHB3
 1323 0017 00       		.uleb128 0
 1324 0018 00       		.uleb128 0
 1325 0019 B403     		.uleb128 .LEHB4-.LFB2202
 1326 001b 24       		.uleb128 .LEHE4-.LEHB4
 1327 001c 9005     		.uleb128 .L30-.LFB2202
 1328 001e 00       		.uleb128 0
 1329 001f E803     		.uleb128 .LEHB5-.LFB2202
 1330 0021 08       		.uleb128 .LEHE5-.LEHB5
 1331 0022 EC04     		.uleb128 .L28-.LFB2202
 1332 0024 00       		.uleb128 0
 1333 0025 B804     		.uleb128 .LEHB6-.LFB2202
 1334 0027 04       		.uleb128 .LEHE6-.LEHB6
 1335 0028 9005     		.uleb128 .L30-.LFB2202
 1336 002a 00       		.uleb128 0
 1337 002b CC04     		.uleb128 .LEHB7-.LFB2202
 1338 002d 04       		.uleb128 .LEHE7-.LEHB7
 1339 002e D404     		.uleb128 .L29-.LFB2202
 1340 0030 00       		.uleb128 0
 1341 0031 E804     		.uleb128 .LEHB8-.LFB2202
 1342 0033 04       		.uleb128 .LEHE8-.LEHB8
 1343 0034 00       		.uleb128 0
 1344 0035 00       		.uleb128 0
 1345              	.LLSDACSE2202:
 1346              		.section	.text.startup
 1347              		.size	main, .-main
 1348              		.align	2
 1349 02ac 1F2003D5 		.p2align 4,,11
 1350              		.type	_GLOBAL__sub_I_a, %function
 1351              	_GLOBAL__sub_I_a:
 1352              	.LFB2817:
 1353              		.loc 4 64 1 is_stmt 1 view -0
 1354              		.cfi_startproc
 1355              	.LVL64:
 1356              	.LBB1001:
 1357              	.LBI1001:
 1358              		.loc 4 64 1 view .LVU300
 1359              	.LBE1001:
 1360 02b0 FD7BBEA9 		stp	x29, x30, [sp, -32]!
 1361              		.cfi_def_cfa_offset 32
 1362              		.cfi_offset 29, -32
 1363              		.cfi_offset 30, -24
 1364 02b4 FD030091 		mov	x29, sp
 1365 02b8 F30B00F9 		str	x19, [sp, 16]
 1366              		.cfi_offset 19, -16
 1367              	.LBB1005:
 1368              	.LBB1002:
 1369              		.file 14 "/usr/include/c++/10/iostream"
   1:/usr/include/c++/10/iostream **** // Standard iostream objects -*- C++ -*-
AARCH64 GAS  obj/extInstr.s 			page 232


   2:/usr/include/c++/10/iostream **** 
   3:/usr/include/c++/10/iostream **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:/usr/include/c++/10/iostream **** //
   5:/usr/include/c++/10/iostream **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/10/iostream **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/10/iostream **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/10/iostream **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/10/iostream **** // any later version.
  10:/usr/include/c++/10/iostream **** 
  11:/usr/include/c++/10/iostream **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/10/iostream **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/10/iostream **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/10/iostream **** // GNU General Public License for more details.
  15:/usr/include/c++/10/iostream **** 
  16:/usr/include/c++/10/iostream **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/10/iostream **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/10/iostream **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/10/iostream **** 
  20:/usr/include/c++/10/iostream **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/10/iostream **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/10/iostream **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/10/iostream **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/10/iostream **** 
  25:/usr/include/c++/10/iostream **** /** @file include/iostream
  26:/usr/include/c++/10/iostream ****  *  This is a Standard C++ Library header.
  27:/usr/include/c++/10/iostream ****  */
  28:/usr/include/c++/10/iostream **** 
  29:/usr/include/c++/10/iostream **** //
  30:/usr/include/c++/10/iostream **** // ISO C++ 14882: 27.3  Standard iostream objects
  31:/usr/include/c++/10/iostream **** //
  32:/usr/include/c++/10/iostream **** 
  33:/usr/include/c++/10/iostream **** #ifndef _GLIBCXX_IOSTREAM
  34:/usr/include/c++/10/iostream **** #define _GLIBCXX_IOSTREAM 1
  35:/usr/include/c++/10/iostream **** 
  36:/usr/include/c++/10/iostream **** #pragma GCC system_header
  37:/usr/include/c++/10/iostream **** 
  38:/usr/include/c++/10/iostream **** #include <bits/c++config.h>
  39:/usr/include/c++/10/iostream **** #include <ostream>
  40:/usr/include/c++/10/iostream **** #include <istream>
  41:/usr/include/c++/10/iostream **** 
  42:/usr/include/c++/10/iostream **** namespace std _GLIBCXX_VISIBILITY(default)
  43:/usr/include/c++/10/iostream **** {
  44:/usr/include/c++/10/iostream **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  45:/usr/include/c++/10/iostream **** 
  46:/usr/include/c++/10/iostream ****   /**
  47:/usr/include/c++/10/iostream ****    *  @name Standard Stream Objects
  48:/usr/include/c++/10/iostream ****    *
  49:/usr/include/c++/10/iostream ****    *  The &lt;iostream&gt; header declares the eight <em>standard stream
  50:/usr/include/c++/10/iostream ****    *  objects</em>.  For other declarations, see
  51:/usr/include/c++/10/iostream ****    *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/io.html
  52:/usr/include/c++/10/iostream ****    *  and the @link iosfwd I/O forward declarations @endlink
  53:/usr/include/c++/10/iostream ****    *
  54:/usr/include/c++/10/iostream ****    *  They are required by default to cooperate with the global C
  55:/usr/include/c++/10/iostream ****    *  library's @c FILE streams, and to be available during program
  56:/usr/include/c++/10/iostream ****    *  startup and termination. For more information, see the section of the
  57:/usr/include/c++/10/iostream ****    *  manual linked to above.
  58:/usr/include/c++/10/iostream ****   */
AARCH64 GAS  obj/extInstr.s 			page 233


  59:/usr/include/c++/10/iostream ****   //@{
  60:/usr/include/c++/10/iostream ****   extern istream cin;		/// Linked to standard input
  61:/usr/include/c++/10/iostream ****   extern ostream cout;		/// Linked to standard output
  62:/usr/include/c++/10/iostream ****   extern ostream cerr;		/// Linked to standard error (unbuffered)
  63:/usr/include/c++/10/iostream ****   extern ostream clog;		/// Linked to standard error (buffered)
  64:/usr/include/c++/10/iostream **** 
  65:/usr/include/c++/10/iostream **** #ifdef _GLIBCXX_USE_WCHAR_T
  66:/usr/include/c++/10/iostream ****   extern wistream wcin;		/// Linked to standard input
  67:/usr/include/c++/10/iostream ****   extern wostream wcout;	/// Linked to standard output
  68:/usr/include/c++/10/iostream ****   extern wostream wcerr;	/// Linked to standard error (unbuffered)
  69:/usr/include/c++/10/iostream ****   extern wostream wclog;	/// Linked to standard error (buffered)
  70:/usr/include/c++/10/iostream **** #endif
  71:/usr/include/c++/10/iostream ****   //@}
  72:/usr/include/c++/10/iostream **** 
  73:/usr/include/c++/10/iostream ****   // For construction of filebuffers for cout, cin, cerr, clog et. al.
  74:/usr/include/c++/10/iostream ****   static ios_base::Init __ioinit;
 1370              		.loc 14 74 25 is_stmt 0 view .LVU301
 1371 02bc 13000090 		adrp	x19, .LANCHOR0
 1372 02c0 73020091 		add	x19, x19, :lo12:.LANCHOR0
 1373 02c4 73C20191 		add	x19, x19, 112
 1374 02c8 E00313AA 		mov	x0, x19
 1375 02cc 00000094 		bl	_ZNSt8ios_base4InitC1Ev
 1376              	.LVL65:
 1377 02d0 E10313AA 		mov	x1, x19
 1378 02d4 00000090 		adrp	x0, :got:_ZNSt8ios_base4InitD1Ev
 1379              	.LBE1002:
 1380              	.LBE1005:
 1381              		.loc 4 64 1 view .LVU302
 1382 02d8 F30B40F9 		ldr	x19, [sp, 16]
 1383              	.LBB1006:
 1384              	.LBB1003:
 1385              		.loc 14 74 25 view .LVU303
 1386 02dc 02000090 		adrp	x2, __dso_handle
 1387              	.LBE1003:
 1388              	.LBE1006:
 1389              		.loc 4 64 1 view .LVU304
 1390 02e0 FD7BC2A8 		ldp	x29, x30, [sp], 32
 1391              		.cfi_restore 30
 1392              		.cfi_restore 29
 1393              		.cfi_restore 19
 1394              		.cfi_def_cfa_offset 0
 1395              	.LBB1007:
 1396              	.LBB1004:
 1397              		.loc 14 74 25 view .LVU305
 1398 02e4 42000091 		add	x2, x2, :lo12:__dso_handle
 1399 02e8 000040F9 		ldr	x0, [x0, #:got_lo12:_ZNSt8ios_base4InitD1Ev]
 1400 02ec 00000014 		b	__cxa_atexit
 1401              	.LVL66:
 1402              	.LBE1004:
 1403              	.LBE1007:
 1404              		.cfi_endproc
 1405              	.LFE2817:
 1406              		.size	_GLOBAL__sub_I_a, .-_GLOBAL__sub_I_a
 1407              		.section	.init_array,"aw"
 1408              		.align	3
 1409 0000 00000000 		.xword	_GLOBAL__sub_I_a
 1409      00000000 
AARCH64 GAS  obj/extInstr.s 			page 234


 1410              		.global	b2
 1411              		.global	a2
 1412              		.global	y
 1413              		.global	x
 1414              		.global	indx
 1415              		.global	b
 1416              		.global	a
 1417              		.section	.rodata.cst16,"aM",@progbits,16
 1418              		.align	4
 1419              	.LC5:
 1420 0000 0000     		.hword	0
 1421 0002 0100     		.hword	1
 1422 0004 0200     		.hword	2
 1423 0006 0300     		.hword	3
 1424 0008 0400     		.hword	4
 1425 000a 0500     		.hword	5
 1426 000c 0600     		.hword	6
 1427 000e 0700     		.hword	7
 1428              		.align	4
 1429              	.LC6:
 1430 0010 0800     		.hword	8
 1431 0012 0900     		.hword	9
 1432 0014 0A00     		.hword	10
 1433 0016 0B00     		.hword	11
 1434 0018 0C00     		.hword	12
 1435 001a 0D00     		.hword	13
 1436 001c 0E00     		.hword	14
 1437 001e 0F00     		.hword	15
 1438              		.align	4
 1439              	.LC7:
 1440 0020 00       		.byte	0
 1441 0021 03       		.byte	3
 1442 0022 06       		.byte	6
 1443 0023 09       		.byte	9
 1444 0024 0C       		.byte	12
 1445 0025 0F       		.byte	15
 1446 0026 12       		.byte	18
 1447 0027 15       		.byte	21
 1448 0028 18       		.byte	24
 1449 0029 1B       		.byte	27
 1450 002a 1E       		.byte	30
 1451 002b 21       		.byte	33
 1452 002c 24       		.byte	36
 1453 002d 27       		.byte	39
 1454 002e 2A       		.byte	42
 1455 002f 2D       		.byte	45
 1456              		.align	4
 1457              	.LC8:
 1458 0030 00       		.byte	0
 1459 0031 02       		.byte	2
 1460 0032 04       		.byte	4
 1461 0033 06       		.byte	6
 1462 0034 08       		.byte	8
 1463 0035 0A       		.byte	10
 1464 0036 0C       		.byte	12
 1465 0037 0E       		.byte	14
 1466 0038 10       		.byte	16
AARCH64 GAS  obj/extInstr.s 			page 235


 1467 0039 12       		.byte	18
 1468 003a 14       		.byte	20
 1469 003b 16       		.byte	22
 1470 003c 18       		.byte	24
 1471 003d 1A       		.byte	26
 1472 003e 1C       		.byte	28
 1473 003f 1E       		.byte	30
 1474              		.bss
 1475              		.align	4
 1476              		.set	.LANCHOR0,. + 0
 1477              		.type	a, %object
 1478              		.size	a, 16
 1479              	a:
 1480 0000 00000000 		.zero	16
 1480      00000000 
 1480      00000000 
 1480      00000000 
 1481              		.type	b, %object
 1482              		.size	b, 16
 1483              	b:
 1484 0010 00000000 		.zero	16
 1484      00000000 
 1484      00000000 
 1484      00000000 
 1485              		.type	indx, %object
 1486              		.size	indx, 16
 1487              	indx:
 1488 0020 00000000 		.zero	16
 1488      00000000 
 1488      00000000 
 1488      00000000 
 1489              		.type	a2, %object
 1490              		.size	a2, 16
 1491              	a2:
 1492 0030 00000000 		.zero	16
 1492      00000000 
 1492      00000000 
 1492      00000000 
 1493              		.type	b2, %object
 1494              		.size	b2, 16
 1495              	b2:
 1496 0040 00000000 		.zero	16
 1496      00000000 
 1496      00000000 
 1496      00000000 
 1497              		.type	x, %object
 1498              		.size	x, 16
 1499              	x:
 1500 0050 00000000 		.zero	16
 1500      00000000 
 1500      00000000 
 1500      00000000 
 1501              		.type	y, %object
 1502              		.size	y, 16
 1503              	y:
 1504 0060 00000000 		.zero	16
 1504      00000000 
AARCH64 GAS  obj/extInstr.s 			page 236


 1504      00000000 
 1504      00000000 
 1505              		.type	_ZStL8__ioinit, %object
 1506              		.size	_ZStL8__ioinit, 1
 1507              	_ZStL8__ioinit:
 1508 0070 00       		.zero	1
 1509              		.text
 1510              	.Letext0:
 1511              		.file 15 "/usr/include/c++/10/cwchar"
 1512              		.file 16 "/usr/include/c++/10/bits/exception_ptr.h"
 1513              		.file 17 "/usr/include/aarch64-linux-gnu/c++/10/bits/c++config.h"
 1514              		.file 18 "/usr/include/c++/10/bits/stl_pair.h"
 1515              		.file 19 "/usr/include/c++/10/type_traits"
 1516              		.file 20 "/usr/include/c++/10/debug/debug.h"
 1517              		.file 21 "/usr/include/c++/10/cstdint"
 1518              		.file 22 "/usr/include/c++/10/clocale"
 1519              		.file 23 "/usr/include/c++/10/cstdlib"
 1520              		.file 24 "/usr/include/c++/10/cstdio"
 1521              		.file 25 "/usr/include/c++/10/initializer_list"
 1522              		.file 26 "/usr/include/c++/10/bits/stringfwd.h"
 1523              		.file 27 "/usr/include/c++/10/system_error"
 1524              		.file 28 "/usr/include/c++/10/cwctype"
 1525              		.file 29 "/usr/include/c++/10/bits/ostream.tcc"
 1526              		.file 30 "/usr/include/c++/10/streambuf"
 1527              		.file 31 "/usr/include/c++/10/iosfwd"
 1528              		.file 32 "/usr/include/c++/10/ctime"
 1529              		.file 33 "/usr/include/c++/10/bits/stl_iterator_base_types.h"
 1530              		.file 34 "/usr/include/c++/10/bits/uses_allocator.h"
 1531              		.file 35 "/usr/include/c++/10/tuple"
 1532              		.file 36 "/usr/include/c++/10/bits/ptr_traits.h"
 1533              		.file 37 "/usr/include/c++/10/bits/move.h"
 1534              		.file 38 "/usr/include/c++/10/bits/postypes.h"
 1535              		.file 39 "/usr/include/c++/10/bits/ostream_insert.h"
 1536              		.file 40 "/usr/include/c++/10/bits/functexcept.h"
 1537              		.file 41 "/usr/include/c++/10/bits/predefined_ops.h"
 1538              		.file 42 "/usr/include/c++/10/ext/alloc_traits.h"
 1539              		.file 43 "/usr/include/c++/10/bits/stl_iterator.h"
 1540              		.file 44 "/usr/lib/gcc/aarch64-linux-gnu/10/include/stddef.h"
 1541              		.file 45 "/usr/lib/gcc/aarch64-linux-gnu/10/include/stdarg.h"
 1542              		.file 46 "/usr/include/aarch64-linux-gnu/bits/types/wint_t.h"
 1543              		.file 47 "/usr/include/aarch64-linux-gnu/bits/types/__mbstate_t.h"
 1544              		.file 48 "/usr/include/aarch64-linux-gnu/bits/types/mbstate_t.h"
 1545              		.file 49 "/usr/include/aarch64-linux-gnu/bits/types/__FILE.h"
 1546              		.file 50 "/usr/include/aarch64-linux-gnu/bits/types/struct_FILE.h"
 1547              		.file 51 "/usr/include/aarch64-linux-gnu/bits/types/FILE.h"
 1548              		.file 52 "/usr/include/wchar.h"
 1549              		.file 53 "/usr/include/aarch64-linux-gnu/bits/types/struct_tm.h"
 1550              		.file 54 "/usr/include/aarch64-linux-gnu/bits/types.h"
 1551              		.file 55 "/usr/include/aarch64-linux-gnu/bits/stdint-intn.h"
 1552              		.file 56 "/usr/include/aarch64-linux-gnu/bits/stdint-uintn.h"
 1553              		.file 57 "/usr/include/stdint.h"
 1554              		.file 58 "/usr/include/locale.h"
 1555              		.file 59 "/usr/include/aarch64-linux-gnu/bits/types/time_t.h"
 1556              		.file 60 "/usr/include/aarch64-linux-gnu/bits/types/clock_t.h"
 1557              		.file 61 "/usr/include/aarch64-linux-gnu/c++/10/bits/atomic_word.h"
 1558              		.file 62 "/usr/include/stdlib.h"
 1559              		.file 63 "/usr/include/aarch64-linux-gnu/bits/stdlib-float.h"
AARCH64 GAS  obj/extInstr.s 			page 237


 1560              		.file 64 "/usr/include/aarch64-linux-gnu/bits/stdlib-bsearch.h"
 1561              		.file 65 "/usr/include/aarch64-linux-gnu/bits/types/__fpos_t.h"
 1562              		.file 66 "/usr/include/stdio.h"
 1563              		.file 67 "/usr/include/aarch64-linux-gnu/bits/stdio.h"
 1564              		.file 68 "/usr/include/aarch64-linux-gnu/bits/wctype-wchar.h"
 1565              		.file 69 "/usr/include/wctype.h"
 1566              		.file 70 "/usr/include/time.h"
 1567              		.file 71 "/usr/include/c++/10/new"
 1568              		.file 72 "<built-in>"
 1569              		.section	.debug_info,"",@progbits
 1570              	.Ldebug_info0:
 1571 0000 D17A0000 		.4byte	0x7ad1
 1572 0004 0400     		.2byte	0x4
 1573 0006 00000000 		.4byte	.Ldebug_abbrev0
 1574 000a 08       		.byte	0x8
 1575 000b 6D       		.uleb128 0x6d
 1576 000c 00000000 		.4byte	.LASF987
 1577 0010 04       		.byte	0x4
 1578 0011 00000000 		.4byte	.LASF988
 1579 0015 00000000 		.4byte	.LASF989
 1580 0019 00000000 		.4byte	.Ldebug_ranges0+0xa50
 1581 001d 00000000 		.8byte	0
 1581      00000000 
 1582 0025 00000000 		.4byte	.Ldebug_line0
 1583 0029 6E       		.uleb128 0x6e
 1584 002a 73746400 		.string	"std"
 1585 002e 48       		.byte	0x48
 1586 002f 00       		.byte	0
 1587 0030 ED310000 		.4byte	0x31ed
 1588 0034 54       		.uleb128 0x54
 1589 0035 00000000 		.4byte	.LASF354
 1590 0039 11       		.byte	0x11
 1591 003a 1E01     		.2byte	0x11e
 1592 003c 41       		.byte	0x41
 1593 003d 191C0000 		.4byte	0x1c19
 1594 0041 3D       		.uleb128 0x3d
 1595 0042 00000000 		.4byte	.LASF265
 1596 0046 20       		.byte	0x20
 1597 0047 0A       		.byte	0xa
 1598 0048 4D       		.byte	0x4d
 1599 0049 0B       		.byte	0xb
 1600 004a D21A0000 		.4byte	0x1ad2
 1601 004e 24       		.uleb128 0x24
 1602 004f 00000000 		.4byte	.LASF0
 1603 0053 08       		.byte	0x8
 1604 0054 0A       		.byte	0xa
 1605 0055 96       		.byte	0x96
 1606 0056 0E       		.byte	0xe
 1607 0057 CF000000 		.4byte	0xcf
 1608 005b 55       		.uleb128 0x55
 1609 005c D3230000 		.4byte	0x23d3
 1610 0060 00       		.byte	0
 1611 0061 2B       		.uleb128 0x2b
 1612 0062 00000000 		.4byte	.LASF0
 1613 0066 0A       		.byte	0xa
 1614 0067 9C       		.byte	0x9c
 1615 0068 02       		.byte	0x2
AARCH64 GAS  obj/extInstr.s 			page 238


 1616 0069 00000000 		.4byte	.LASF1
 1617 006d 75000000 		.4byte	0x75
 1618 0071 85000000 		.4byte	0x85
 1619 0075 02       		.uleb128 0x2
 1620 0076 A0510000 		.4byte	0x51a0
 1621 007a 01       		.uleb128 0x1
 1622 007b CF000000 		.4byte	0xcf
 1623 007f 01       		.uleb128 0x1
 1624 0080 964A0000 		.4byte	0x4a96
 1625 0084 00       		.byte	0
 1626 0085 2B       		.uleb128 0x2b
 1627 0086 00000000 		.4byte	.LASF0
 1628 008a 0A       		.byte	0xa
 1629 008b 9F       		.byte	0x9f
 1630 008c 02       		.byte	0x2
 1631 008d 00000000 		.4byte	.LASF2
 1632 0091 99000000 		.4byte	0x99
 1633 0095 A9000000 		.4byte	0xa9
 1634 0099 02       		.uleb128 0x2
 1635 009a A0510000 		.4byte	0x51a0
 1636 009e 01       		.uleb128 0x1
 1637 009f CF000000 		.4byte	0xcf
 1638 00a3 01       		.uleb128 0x1
 1639 00a4 AB510000 		.4byte	0x51ab
 1640 00a8 00       		.byte	0
 1641 00a9 08       		.uleb128 0x8
 1642 00aa 00000000 		.4byte	.LASF7
 1643 00ae 0A       		.byte	0xa
 1644 00af A3       		.byte	0xa3
 1645 00b0 0A       		.byte	0xa
 1646 00b1 CF000000 		.4byte	0xcf
 1647 00b5 00       		.byte	0
 1648 00b6 6F       		.uleb128 0x6f
 1649 00b7 00000000 		.4byte	.LASF990
 1650 00bb 00000000 		.4byte	.LASF991
 1651 00bf C3000000 		.4byte	0xc3
 1652 00c3 02       		.uleb128 0x2
 1653 00c4 A0510000 		.4byte	0x51a0
 1654 00c8 02       		.uleb128 0x2
 1655 00c9 D43A0000 		.4byte	0x3ad4
 1656 00cd 00       		.byte	0
 1657 00ce 00       		.byte	0
 1658 00cf 17       		.uleb128 0x17
 1659 00d0 00000000 		.4byte	.LASF5
 1660 00d4 0A       		.byte	0xa
 1661 00d5 5C       		.byte	0x5c
 1662 00d6 2F       		.byte	0x2f
 1663 00d7 DC340000 		.4byte	0x34dc
 1664 00db 01       		.byte	0x1
 1665 00dc 70       		.uleb128 0x70
 1666 00dd 07       		.byte	0x7
 1667 00de 04       		.byte	0x4
 1668 00df ED3A0000 		.4byte	0x3aed
 1669 00e3 0A       		.byte	0xa
 1670 00e4 A9       		.byte	0xa9
 1671 00e5 0C       		.byte	0xc
 1672 00e6 F1000000 		.4byte	0xf1
AARCH64 GAS  obj/extInstr.s 			page 239


 1673 00ea 2C       		.uleb128 0x2c
 1674 00eb 00000000 		.4byte	.LASF357
 1675 00ef 0F       		.byte	0xf
 1676 00f0 00       		.byte	0
 1677 00f1 4B       		.uleb128 0x4b
 1678 00f2 10       		.byte	0x10
 1679 00f3 0A       		.byte	0xa
 1680 00f4 AC       		.byte	0xac
 1681 00f5 07       		.byte	0x7
 1682 00f6 13010000 		.4byte	0x113
 1683 00fa 1F       		.uleb128 0x1f
 1684 00fb 00000000 		.4byte	.LASF3
 1685 00ff 0A       		.byte	0xa
 1686 0100 AD       		.byte	0xad
 1687 0101 09       		.byte	0x9
 1688 0102 B1510000 		.4byte	0x51b1
 1689 0106 1F       		.uleb128 0x1f
 1690 0107 00000000 		.4byte	.LASF4
 1691 010b 0A       		.byte	0xa
 1692 010c AE       		.byte	0xae
 1693 010d 0C       		.byte	0xc
 1694 010e 13010000 		.4byte	0x113
 1695 0112 00       		.byte	0
 1696 0113 17       		.uleb128 0x17
 1697 0114 00000000 		.4byte	.LASF6
 1698 0118 0A       		.byte	0xa
 1699 0119 58       		.byte	0x58
 1700 011a 31       		.byte	0x31
 1701 011b F4340000 		.4byte	0x34f4
 1702 011f 01       		.byte	0x1
 1703 0120 0C       		.uleb128 0xc
 1704 0121 13010000 		.4byte	0x113
 1705 0125 71       		.uleb128 0x71
 1706 0126 00000000 		.4byte	.LASF992
 1707 012a 0A       		.byte	0xa
 1708 012b 65       		.byte	0x65
 1709 012c 1E       		.byte	0x1e
 1710 012d 20010000 		.4byte	0x120
 1711 0131 01       		.byte	0x1
 1712 0132 FFFFFFFF 		.8byte	0xffffffffffffffff
 1712      FFFFFFFF 
 1713 013a 08       		.uleb128 0x8
 1714 013b 00000000 		.4byte	.LASF8
 1715 013f 0A       		.byte	0xa
 1716 0140 A6       		.byte	0xa6
 1717 0141 14       		.byte	0x14
 1718 0142 4E000000 		.4byte	0x4e
 1719 0146 00       		.byte	0
 1720 0147 08       		.uleb128 0x8
 1721 0148 00000000 		.4byte	.LASF9
 1722 014c 0A       		.byte	0xa
 1723 014d A7       		.byte	0xa7
 1724 014e 11       		.byte	0x11
 1725 014f 13010000 		.4byte	0x113
 1726 0153 08       		.byte	0x8
 1727 0154 56       		.uleb128 0x56
 1728 0155 F1000000 		.4byte	0xf1
AARCH64 GAS  obj/extInstr.s 			page 240


 1729 0159 10       		.byte	0x10
 1730 015a 2B       		.uleb128 0x2b
 1731 015b 00000000 		.4byte	.LASF10
 1732 015f 0A       		.byte	0xa
 1733 0160 B2       		.byte	0xb2
 1734 0161 07       		.byte	0x7
 1735 0162 00000000 		.4byte	.LASF11
 1736 0166 6E010000 		.4byte	0x16e
 1737 016a 79010000 		.4byte	0x179
 1738 016e 02       		.uleb128 0x2
 1739 016f C1510000 		.4byte	0x51c1
 1740 0173 01       		.uleb128 0x1
 1741 0174 CF000000 		.4byte	0xcf
 1742 0178 00       		.byte	0
 1743 0179 2B       		.uleb128 0x2b
 1744 017a 00000000 		.4byte	.LASF12
 1745 017e 0A       		.byte	0xa
 1746 017f B6       		.byte	0xb6
 1747 0180 07       		.byte	0x7
 1748 0181 00000000 		.4byte	.LASF13
 1749 0185 8D010000 		.4byte	0x18d
 1750 0189 98010000 		.4byte	0x198
 1751 018d 02       		.uleb128 0x2
 1752 018e C1510000 		.4byte	0x51c1
 1753 0192 01       		.uleb128 0x1
 1754 0193 13010000 		.4byte	0x113
 1755 0197 00       		.byte	0
 1756 0198 19       		.uleb128 0x19
 1757 0199 00000000 		.4byte	.LASF10
 1758 019d 0A       		.byte	0xa
 1759 019e BA       		.byte	0xba
 1760 019f 07       		.byte	0x7
 1761 01a0 00000000 		.4byte	.LASF15
 1762 01a4 CF000000 		.4byte	0xcf
 1763 01a8 B0010000 		.4byte	0x1b0
 1764 01ac B6010000 		.4byte	0x1b6
 1765 01b0 02       		.uleb128 0x2
 1766 01b1 CC510000 		.4byte	0x51cc
 1767 01b5 00       		.byte	0
 1768 01b6 19       		.uleb128 0x19
 1769 01b7 00000000 		.4byte	.LASF14
 1770 01bb 0A       		.byte	0xa
 1771 01bc BE       		.byte	0xbe
 1772 01bd 07       		.byte	0x7
 1773 01be 00000000 		.4byte	.LASF16
 1774 01c2 CF000000 		.4byte	0xcf
 1775 01c6 CE010000 		.4byte	0x1ce
 1776 01ca D4010000 		.4byte	0x1d4
 1777 01ce 02       		.uleb128 0x2
 1778 01cf C1510000 		.4byte	0x51c1
 1779 01d3 00       		.byte	0
 1780 01d4 17       		.uleb128 0x17
 1781 01d5 00000000 		.4byte	.LASF17
 1782 01d9 0A       		.byte	0xa
 1783 01da 5D       		.byte	0x5d
 1784 01db 35       		.byte	0x35
 1785 01dc E8340000 		.4byte	0x34e8
AARCH64 GAS  obj/extInstr.s 			page 241


 1786 01e0 01       		.byte	0x1
 1787 01e1 19       		.uleb128 0x19
 1788 01e2 00000000 		.4byte	.LASF14
 1789 01e6 0A       		.byte	0xa
 1790 01e7 C8       		.byte	0xc8
 1791 01e8 07       		.byte	0x7
 1792 01e9 00000000 		.4byte	.LASF18
 1793 01ed D4010000 		.4byte	0x1d4
 1794 01f1 F9010000 		.4byte	0x1f9
 1795 01f5 FF010000 		.4byte	0x1ff
 1796 01f9 02       		.uleb128 0x2
 1797 01fa CC510000 		.4byte	0x51cc
 1798 01fe 00       		.byte	0
 1799 01ff 2B       		.uleb128 0x2b
 1800 0200 00000000 		.4byte	.LASF19
 1801 0204 0A       		.byte	0xa
 1802 0205 D2       		.byte	0xd2
 1803 0206 07       		.byte	0x7
 1804 0207 00000000 		.4byte	.LASF20
 1805 020b 13020000 		.4byte	0x213
 1806 020f 1E020000 		.4byte	0x21e
 1807 0213 02       		.uleb128 0x2
 1808 0214 C1510000 		.4byte	0x51c1
 1809 0218 01       		.uleb128 0x1
 1810 0219 13010000 		.4byte	0x113
 1811 021d 00       		.byte	0
 1812 021e 2B       		.uleb128 0x2b
 1813 021f 00000000 		.4byte	.LASF21
 1814 0223 0A       		.byte	0xa
 1815 0224 D6       		.byte	0xd6
 1816 0225 07       		.byte	0x7
 1817 0226 00000000 		.4byte	.LASF22
 1818 022a 32020000 		.4byte	0x232
 1819 022e 3D020000 		.4byte	0x23d
 1820 0232 02       		.uleb128 0x2
 1821 0233 C1510000 		.4byte	0x51c1
 1822 0237 01       		.uleb128 0x1
 1823 0238 13010000 		.4byte	0x113
 1824 023c 00       		.byte	0
 1825 023d 19       		.uleb128 0x19
 1826 023e 00000000 		.4byte	.LASF23
 1827 0242 0A       		.byte	0xa
 1828 0243 DD       		.byte	0xdd
 1829 0244 07       		.byte	0x7
 1830 0245 00000000 		.4byte	.LASF24
 1831 0249 EF450000 		.4byte	0x45ef
 1832 024d 55020000 		.4byte	0x255
 1833 0251 5B020000 		.4byte	0x25b
 1834 0255 02       		.uleb128 0x2
 1835 0256 CC510000 		.4byte	0x51cc
 1836 025a 00       		.byte	0
 1837 025b 19       		.uleb128 0x19
 1838 025c 00000000 		.4byte	.LASF25
 1839 0260 0A       		.byte	0xa
 1840 0261 E2       		.byte	0xe2
 1841 0262 07       		.byte	0x7
 1842 0263 00000000 		.4byte	.LASF26
AARCH64 GAS  obj/extInstr.s 			page 242


 1843 0267 CF000000 		.4byte	0xcf
 1844 026b 73020000 		.4byte	0x273
 1845 026f 83020000 		.4byte	0x283
 1846 0273 02       		.uleb128 0x2
 1847 0274 C1510000 		.4byte	0x51c1
 1848 0278 01       		.uleb128 0x1
 1849 0279 D7510000 		.4byte	0x51d7
 1850 027d 01       		.uleb128 0x1
 1851 027e 13010000 		.4byte	0x113
 1852 0282 00       		.byte	0
 1853 0283 2B       		.uleb128 0x2b
 1854 0284 00000000 		.4byte	.LASF27
 1855 0288 0A       		.byte	0xa
 1856 0289 E5       		.byte	0xe5
 1857 028a 07       		.byte	0x7
 1858 028b 00000000 		.4byte	.LASF28
 1859 028f 97020000 		.4byte	0x297
 1860 0293 9D020000 		.4byte	0x29d
 1861 0297 02       		.uleb128 0x2
 1862 0298 C1510000 		.4byte	0x51c1
 1863 029c 00       		.byte	0
 1864 029d 2B       		.uleb128 0x2b
 1865 029e 00000000 		.4byte	.LASF29
 1866 02a2 0A       		.byte	0xa
 1867 02a3 EC       		.byte	0xec
 1868 02a4 07       		.byte	0x7
 1869 02a5 00000000 		.4byte	.LASF30
 1870 02a9 B1020000 		.4byte	0x2b1
 1871 02ad BC020000 		.4byte	0x2bc
 1872 02b1 02       		.uleb128 0x2
 1873 02b2 C1510000 		.4byte	0x51c1
 1874 02b6 01       		.uleb128 0x1
 1875 02b7 13010000 		.4byte	0x113
 1876 02bb 00       		.byte	0
 1877 02bc 37       		.uleb128 0x37
 1878 02bd 00000000 		.4byte	.LASF31
 1879 02c1 0A       		.byte	0xa
 1880 02c2 0201     		.2byte	0x102
 1881 02c4 07       		.byte	0x7
 1882 02c5 00000000 		.4byte	.LASF33
 1883 02c9 D1020000 		.4byte	0x2d1
 1884 02cd E1020000 		.4byte	0x2e1
 1885 02d1 02       		.uleb128 0x2
 1886 02d2 C1510000 		.4byte	0x51c1
 1887 02d6 01       		.uleb128 0x1
 1888 02d7 13010000 		.4byte	0x113
 1889 02db 01       		.uleb128 0x1
 1890 02dc 4E3B0000 		.4byte	0x3b4e
 1891 02e0 00       		.byte	0
 1892 02e1 37       		.uleb128 0x37
 1893 02e2 00000000 		.4byte	.LASF32
 1894 02e6 0A       		.byte	0xa
 1895 02e7 1B01     		.2byte	0x11b
 1896 02e9 07       		.byte	0x7
 1897 02ea 00000000 		.4byte	.LASF34
 1898 02ee F6020000 		.4byte	0x2f6
 1899 02f2 06030000 		.4byte	0x306
AARCH64 GAS  obj/extInstr.s 			page 243


 1900 02f6 02       		.uleb128 0x2
 1901 02f7 C1510000 		.4byte	0x51c1
 1902 02fb 01       		.uleb128 0x1
 1903 02fc 13010000 		.4byte	0x113
 1904 0300 01       		.uleb128 0x1
 1905 0301 4E3B0000 		.4byte	0x3b4e
 1906 0305 00       		.byte	0
 1907 0306 17       		.uleb128 0x17
 1908 0307 00000000 		.4byte	.LASF35
 1909 030b 0A       		.byte	0xa
 1910 030c 57       		.byte	0x57
 1911 030d 20       		.byte	0x20
 1912 030e 18030000 		.4byte	0x318
 1913 0312 01       		.byte	0x1
 1914 0313 0C       		.uleb128 0xc
 1915 0314 06030000 		.4byte	0x306
 1916 0318 06       		.uleb128 0x6
 1917 0319 00000000 		.4byte	.LASF291
 1918 031d 0A       		.byte	0xa
 1919 031e 50       		.byte	0x50
 1920 031f 18       		.byte	0x18
 1921 0320 25350000 		.4byte	0x3525
 1922 0324 31       		.uleb128 0x31
 1923 0325 00000000 		.4byte	.LASF36
 1924 0329 0A       		.byte	0xa
 1925 032a 1E01     		.2byte	0x11e
 1926 032c 07       		.byte	0x7
 1927 032d 00000000 		.4byte	.LASF37
 1928 0331 DD510000 		.4byte	0x51dd
 1929 0335 3D030000 		.4byte	0x33d
 1930 0339 43030000 		.4byte	0x343
 1931 033d 02       		.uleb128 0x2
 1932 033e C1510000 		.4byte	0x51c1
 1933 0342 00       		.byte	0
 1934 0343 31       		.uleb128 0x31
 1935 0344 00000000 		.4byte	.LASF36
 1936 0348 0A       		.byte	0xa
 1937 0349 2201     		.2byte	0x122
 1938 034b 07       		.byte	0x7
 1939 034c 00000000 		.4byte	.LASF38
 1940 0350 E3510000 		.4byte	0x51e3
 1941 0354 5C030000 		.4byte	0x35c
 1942 0358 62030000 		.4byte	0x362
 1943 035c 02       		.uleb128 0x2
 1944 035d CC510000 		.4byte	0x51cc
 1945 0361 00       		.byte	0
 1946 0362 31       		.uleb128 0x31
 1947 0363 00000000 		.4byte	.LASF39
 1948 0367 0A       		.byte	0xa
 1949 0368 3601     		.2byte	0x136
 1950 036a 07       		.byte	0x7
 1951 036b 00000000 		.4byte	.LASF40
 1952 036f 13010000 		.4byte	0x113
 1953 0373 7B030000 		.4byte	0x37b
 1954 0377 8B030000 		.4byte	0x38b
 1955 037b 02       		.uleb128 0x2
 1956 037c CC510000 		.4byte	0x51cc
AARCH64 GAS  obj/extInstr.s 			page 244


 1957 0380 01       		.uleb128 0x1
 1958 0381 13010000 		.4byte	0x113
 1959 0385 01       		.uleb128 0x1
 1960 0386 283D0000 		.4byte	0x3d28
 1961 038a 00       		.byte	0
 1962 038b 37       		.uleb128 0x37
 1963 038c 00000000 		.4byte	.LASF41
 1964 0390 0A       		.byte	0xa
 1965 0391 4001     		.2byte	0x140
 1966 0393 07       		.byte	0x7
 1967 0394 00000000 		.4byte	.LASF42
 1968 0398 A0030000 		.4byte	0x3a0
 1969 039c B5030000 		.4byte	0x3b5
 1970 03a0 02       		.uleb128 0x2
 1971 03a1 CC510000 		.4byte	0x51cc
 1972 03a5 01       		.uleb128 0x1
 1973 03a6 13010000 		.4byte	0x113
 1974 03aa 01       		.uleb128 0x1
 1975 03ab 13010000 		.4byte	0x113
 1976 03af 01       		.uleb128 0x1
 1977 03b0 283D0000 		.4byte	0x3d28
 1978 03b4 00       		.byte	0
 1979 03b5 31       		.uleb128 0x31
 1980 03b6 00000000 		.4byte	.LASF43
 1981 03ba 0A       		.byte	0xa
 1982 03bb 4901     		.2byte	0x149
 1983 03bd 07       		.byte	0x7
 1984 03be 00000000 		.4byte	.LASF44
 1985 03c2 13010000 		.4byte	0x113
 1986 03c6 CE030000 		.4byte	0x3ce
 1987 03ca DE030000 		.4byte	0x3de
 1988 03ce 02       		.uleb128 0x2
 1989 03cf CC510000 		.4byte	0x51cc
 1990 03d3 01       		.uleb128 0x1
 1991 03d4 13010000 		.4byte	0x113
 1992 03d8 01       		.uleb128 0x1
 1993 03d9 13010000 		.4byte	0x113
 1994 03dd 00       		.byte	0
 1995 03de 31       		.uleb128 0x31
 1996 03df 00000000 		.4byte	.LASF45
 1997 03e3 0A       		.byte	0xa
 1998 03e4 5101     		.2byte	0x151
 1999 03e6 07       		.byte	0x7
 2000 03e7 00000000 		.4byte	.LASF46
 2001 03eb EF450000 		.4byte	0x45ef
 2002 03ef F7030000 		.4byte	0x3f7
 2003 03f3 02040000 		.4byte	0x402
 2004 03f7 02       		.uleb128 0x2
 2005 03f8 CC510000 		.4byte	0x51cc
 2006 03fc 01       		.uleb128 0x1
 2007 03fd 283D0000 		.4byte	0x3d28
 2008 0401 00       		.byte	0
 2009 0402 2F       		.uleb128 0x2f
 2010 0403 00000000 		.4byte	.LASF47
 2011 0407 0A       		.byte	0xa
 2012 0408 5A01     		.2byte	0x15a
 2013 040a 07       		.byte	0x7
AARCH64 GAS  obj/extInstr.s 			page 245


 2014 040b 00000000 		.4byte	.LASF49
 2015 040f 23040000 		.4byte	0x423
 2016 0413 01       		.uleb128 0x1
 2017 0414 6C400000 		.4byte	0x406c
 2018 0418 01       		.uleb128 0x1
 2019 0419 283D0000 		.4byte	0x3d28
 2020 041d 01       		.uleb128 0x1
 2021 041e 13010000 		.4byte	0x113
 2022 0422 00       		.byte	0
 2023 0423 2F       		.uleb128 0x2f
 2024 0424 00000000 		.4byte	.LASF48
 2025 0428 0A       		.byte	0xa
 2026 0429 6301     		.2byte	0x163
 2027 042b 07       		.byte	0x7
 2028 042c 00000000 		.4byte	.LASF50
 2029 0430 44040000 		.4byte	0x444
 2030 0434 01       		.uleb128 0x1
 2031 0435 6C400000 		.4byte	0x406c
 2032 0439 01       		.uleb128 0x1
 2033 043a 283D0000 		.4byte	0x3d28
 2034 043e 01       		.uleb128 0x1
 2035 043f 13010000 		.4byte	0x113
 2036 0443 00       		.byte	0
 2037 0444 2F       		.uleb128 0x2f
 2038 0445 00000000 		.4byte	.LASF51
 2039 0449 0A       		.byte	0xa
 2040 044a 6C01     		.2byte	0x16c
 2041 044c 07       		.byte	0x7
 2042 044d 00000000 		.4byte	.LASF52
 2043 0451 65040000 		.4byte	0x465
 2044 0455 01       		.uleb128 0x1
 2045 0456 6C400000 		.4byte	0x406c
 2046 045a 01       		.uleb128 0x1
 2047 045b 13010000 		.4byte	0x113
 2048 045f 01       		.uleb128 0x1
 2049 0460 4E3B0000 		.4byte	0x3b4e
 2050 0464 00       		.byte	0
 2051 0465 2F       		.uleb128 0x2f
 2052 0466 00000000 		.4byte	.LASF53
 2053 046a 0A       		.byte	0xa
 2054 046b 7F01     		.2byte	0x17f
 2055 046d 07       		.byte	0x7
 2056 046e 00000000 		.4byte	.LASF54
 2057 0472 86040000 		.4byte	0x486
 2058 0476 01       		.uleb128 0x1
 2059 0477 6C400000 		.4byte	0x406c
 2060 047b 01       		.uleb128 0x1
 2061 047c 86040000 		.4byte	0x486
 2062 0480 01       		.uleb128 0x1
 2063 0481 86040000 		.4byte	0x486
 2064 0485 00       		.byte	0
 2065 0486 17       		.uleb128 0x17
 2066 0487 00000000 		.4byte	.LASF55
 2067 048b 0A       		.byte	0xa
 2068 048c 5E       		.byte	0x5e
 2069 048d 43       		.byte	0x43
 2070 048e 45350000 		.4byte	0x3545
AARCH64 GAS  obj/extInstr.s 			page 246


 2071 0492 01       		.byte	0x1
 2072 0493 2F       		.uleb128 0x2f
 2073 0494 00000000 		.4byte	.LASF53
 2074 0498 0A       		.byte	0xa
 2075 0499 8301     		.2byte	0x183
 2076 049b 07       		.byte	0x7
 2077 049c 00000000 		.4byte	.LASF56
 2078 04a0 B4040000 		.4byte	0x4b4
 2079 04a4 01       		.uleb128 0x1
 2080 04a5 6C400000 		.4byte	0x406c
 2081 04a9 01       		.uleb128 0x1
 2082 04aa B4040000 		.4byte	0x4b4
 2083 04ae 01       		.uleb128 0x1
 2084 04af B4040000 		.4byte	0x4b4
 2085 04b3 00       		.byte	0
 2086 04b4 17       		.uleb128 0x17
 2087 04b5 00000000 		.4byte	.LASF57
 2088 04b9 0A       		.byte	0xa
 2089 04ba 60       		.byte	0x60
 2090 04bb 08       		.byte	0x8
 2091 04bc 84370000 		.4byte	0x3784
 2092 04c0 01       		.byte	0x1
 2093 04c1 2F       		.uleb128 0x2f
 2094 04c2 00000000 		.4byte	.LASF53
 2095 04c6 0A       		.byte	0xa
 2096 04c7 8801     		.2byte	0x188
 2097 04c9 07       		.byte	0x7
 2098 04ca 00000000 		.4byte	.LASF58
 2099 04ce E2040000 		.4byte	0x4e2
 2100 04d2 01       		.uleb128 0x1
 2101 04d3 6C400000 		.4byte	0x406c
 2102 04d7 01       		.uleb128 0x1
 2103 04d8 6C400000 		.4byte	0x406c
 2104 04dc 01       		.uleb128 0x1
 2105 04dd 6C400000 		.4byte	0x406c
 2106 04e1 00       		.byte	0
 2107 04e2 2F       		.uleb128 0x2f
 2108 04e3 00000000 		.4byte	.LASF53
 2109 04e7 0A       		.byte	0xa
 2110 04e8 8C01     		.2byte	0x18c
 2111 04ea 07       		.byte	0x7
 2112 04eb 00000000 		.4byte	.LASF59
 2113 04ef 03050000 		.4byte	0x503
 2114 04f3 01       		.uleb128 0x1
 2115 04f4 6C400000 		.4byte	0x406c
 2116 04f8 01       		.uleb128 0x1
 2117 04f9 283D0000 		.4byte	0x3d28
 2118 04fd 01       		.uleb128 0x1
 2119 04fe 283D0000 		.4byte	0x3d28
 2120 0502 00       		.byte	0
 2121 0503 14       		.uleb128 0x14
 2122 0504 00000000 		.4byte	.LASF60
 2123 0508 0A       		.byte	0xa
 2124 0509 9101     		.2byte	0x191
 2125 050b 07       		.byte	0x7
 2126 050c 00000000 		.4byte	.LASF61
 2127 0510 D43A0000 		.4byte	0x3ad4
AARCH64 GAS  obj/extInstr.s 			page 247


 2128 0514 23050000 		.4byte	0x523
 2129 0518 01       		.uleb128 0x1
 2130 0519 13010000 		.4byte	0x113
 2131 051d 01       		.uleb128 0x1
 2132 051e 13010000 		.4byte	0x113
 2133 0522 00       		.byte	0
 2134 0523 37       		.uleb128 0x37
 2135 0524 00000000 		.4byte	.LASF62
 2136 0528 0A       		.byte	0xa
 2137 0529 9E01     		.2byte	0x19e
 2138 052b 07       		.byte	0x7
 2139 052c 00000000 		.4byte	.LASF63
 2140 0530 38050000 		.4byte	0x538
 2141 0534 43050000 		.4byte	0x543
 2142 0538 02       		.uleb128 0x2
 2143 0539 C1510000 		.4byte	0x51c1
 2144 053d 01       		.uleb128 0x1
 2145 053e E9510000 		.4byte	0x51e9
 2146 0542 00       		.byte	0
 2147 0543 37       		.uleb128 0x37
 2148 0544 00000000 		.4byte	.LASF64
 2149 0548 0A       		.byte	0xa
 2150 0549 A101     		.2byte	0x1a1
 2151 054b 07       		.byte	0x7
 2152 054c 00000000 		.4byte	.LASF65
 2153 0550 58050000 		.4byte	0x558
 2154 0554 72050000 		.4byte	0x572
 2155 0558 02       		.uleb128 0x2
 2156 0559 C1510000 		.4byte	0x51c1
 2157 055d 01       		.uleb128 0x1
 2158 055e 13010000 		.4byte	0x113
 2159 0562 01       		.uleb128 0x1
 2160 0563 13010000 		.4byte	0x113
 2161 0567 01       		.uleb128 0x1
 2162 0568 283D0000 		.4byte	0x3d28
 2163 056c 01       		.uleb128 0x1
 2164 056d 13010000 		.4byte	0x113
 2165 0571 00       		.byte	0
 2166 0572 37       		.uleb128 0x37
 2167 0573 00000000 		.4byte	.LASF66
 2168 0577 0A       		.byte	0xa
 2169 0578 A501     		.2byte	0x1a5
 2170 057a 07       		.byte	0x7
 2171 057b 00000000 		.4byte	.LASF67
 2172 057f 87050000 		.4byte	0x587
 2173 0583 97050000 		.4byte	0x597
 2174 0587 02       		.uleb128 0x2
 2175 0588 C1510000 		.4byte	0x51c1
 2176 058c 01       		.uleb128 0x1
 2177 058d 13010000 		.4byte	0x113
 2178 0591 01       		.uleb128 0x1
 2179 0592 13010000 		.4byte	0x113
 2180 0596 00       		.byte	0
 2181 0597 12       		.uleb128 0x12
 2182 0598 00000000 		.4byte	.LASF68
 2183 059c 0A       		.byte	0xa
 2184 059d AF01     		.2byte	0x1af
AARCH64 GAS  obj/extInstr.s 			page 248


 2185 059f 07       		.byte	0x7
 2186 05a0 00000000 		.4byte	.LASF69
 2187 05a4 01       		.byte	0x1
 2188 05a5 AD050000 		.4byte	0x5ad
 2189 05a9 B3050000 		.4byte	0x5b3
 2190 05ad 02       		.uleb128 0x2
 2191 05ae C1510000 		.4byte	0x51c1
 2192 05b2 00       		.byte	0
 2193 05b3 4C       		.uleb128 0x4c
 2194 05b4 00000000 		.4byte	.LASF68
 2195 05b8 0A       		.byte	0xa
 2196 05b9 B801     		.2byte	0x1b8
 2197 05bb 07       		.byte	0x7
 2198 05bc 00000000 		.4byte	.LASF84
 2199 05c0 01       		.byte	0x1
 2200 05c1 C9050000 		.4byte	0x5c9
 2201 05c5 D4050000 		.4byte	0x5d4
 2202 05c9 02       		.uleb128 0x2
 2203 05ca C1510000 		.4byte	0x51c1
 2204 05ce 01       		.uleb128 0x1
 2205 05cf 964A0000 		.4byte	0x4a96
 2206 05d3 00       		.byte	0
 2207 05d4 12       		.uleb128 0x12
 2208 05d5 00000000 		.4byte	.LASF68
 2209 05d9 0A       		.byte	0xa
 2210 05da C001     		.2byte	0x1c0
 2211 05dc 07       		.byte	0x7
 2212 05dd 00000000 		.4byte	.LASF70
 2213 05e1 01       		.byte	0x1
 2214 05e2 EA050000 		.4byte	0x5ea
 2215 05e6 F5050000 		.4byte	0x5f5
 2216 05ea 02       		.uleb128 0x2
 2217 05eb C1510000 		.4byte	0x51c1
 2218 05ef 01       		.uleb128 0x1
 2219 05f0 E9510000 		.4byte	0x51e9
 2220 05f4 00       		.byte	0
 2221 05f5 12       		.uleb128 0x12
 2222 05f6 00000000 		.4byte	.LASF68
 2223 05fa 0A       		.byte	0xa
 2224 05fb CD01     		.2byte	0x1cd
 2225 05fd 07       		.byte	0x7
 2226 05fe 00000000 		.4byte	.LASF71
 2227 0602 01       		.byte	0x1
 2228 0603 0B060000 		.4byte	0x60b
 2229 0607 20060000 		.4byte	0x620
 2230 060b 02       		.uleb128 0x2
 2231 060c C1510000 		.4byte	0x51c1
 2232 0610 01       		.uleb128 0x1
 2233 0611 E9510000 		.4byte	0x51e9
 2234 0615 01       		.uleb128 0x1
 2235 0616 13010000 		.4byte	0x113
 2236 061a 01       		.uleb128 0x1
 2237 061b 964A0000 		.4byte	0x4a96
 2238 061f 00       		.byte	0
 2239 0620 12       		.uleb128 0x12
 2240 0621 00000000 		.4byte	.LASF68
 2241 0625 0A       		.byte	0xa
AARCH64 GAS  obj/extInstr.s 			page 249


 2242 0626 DC01     		.2byte	0x1dc
 2243 0628 07       		.byte	0x7
 2244 0629 00000000 		.4byte	.LASF72
 2245 062d 01       		.byte	0x1
 2246 062e 36060000 		.4byte	0x636
 2247 0632 4B060000 		.4byte	0x64b
 2248 0636 02       		.uleb128 0x2
 2249 0637 C1510000 		.4byte	0x51c1
 2250 063b 01       		.uleb128 0x1
 2251 063c E9510000 		.4byte	0x51e9
 2252 0640 01       		.uleb128 0x1
 2253 0641 13010000 		.4byte	0x113
 2254 0645 01       		.uleb128 0x1
 2255 0646 13010000 		.4byte	0x113
 2256 064a 00       		.byte	0
 2257 064b 12       		.uleb128 0x12
 2258 064c 00000000 		.4byte	.LASF68
 2259 0650 0A       		.byte	0xa
 2260 0651 EC01     		.2byte	0x1ec
 2261 0653 07       		.byte	0x7
 2262 0654 00000000 		.4byte	.LASF73
 2263 0658 01       		.byte	0x1
 2264 0659 61060000 		.4byte	0x661
 2265 065d 7B060000 		.4byte	0x67b
 2266 0661 02       		.uleb128 0x2
 2267 0662 C1510000 		.4byte	0x51c1
 2268 0666 01       		.uleb128 0x1
 2269 0667 E9510000 		.4byte	0x51e9
 2270 066b 01       		.uleb128 0x1
 2271 066c 13010000 		.4byte	0x113
 2272 0670 01       		.uleb128 0x1
 2273 0671 13010000 		.4byte	0x113
 2274 0675 01       		.uleb128 0x1
 2275 0676 964A0000 		.4byte	0x4a96
 2276 067a 00       		.byte	0
 2277 067b 12       		.uleb128 0x12
 2278 067c 00000000 		.4byte	.LASF68
 2279 0680 0A       		.byte	0xa
 2280 0681 FE01     		.2byte	0x1fe
 2281 0683 07       		.byte	0x7
 2282 0684 00000000 		.4byte	.LASF74
 2283 0688 01       		.byte	0x1
 2284 0689 91060000 		.4byte	0x691
 2285 068d A6060000 		.4byte	0x6a6
 2286 0691 02       		.uleb128 0x2
 2287 0692 C1510000 		.4byte	0x51c1
 2288 0696 01       		.uleb128 0x1
 2289 0697 283D0000 		.4byte	0x3d28
 2290 069b 01       		.uleb128 0x1
 2291 069c 13010000 		.4byte	0x113
 2292 06a0 01       		.uleb128 0x1
 2293 06a1 964A0000 		.4byte	0x4a96
 2294 06a5 00       		.byte	0
 2295 06a6 12       		.uleb128 0x12
 2296 06a7 00000000 		.4byte	.LASF68
 2297 06ab 0A       		.byte	0xa
 2298 06ac 0D02     		.2byte	0x20d
AARCH64 GAS  obj/extInstr.s 			page 250


 2299 06ae 07       		.byte	0x7
 2300 06af 00000000 		.4byte	.LASF75
 2301 06b3 01       		.byte	0x1
 2302 06b4 BC060000 		.4byte	0x6bc
 2303 06b8 CC060000 		.4byte	0x6cc
 2304 06bc 02       		.uleb128 0x2
 2305 06bd C1510000 		.4byte	0x51c1
 2306 06c1 01       		.uleb128 0x1
 2307 06c2 283D0000 		.4byte	0x3d28
 2308 06c6 01       		.uleb128 0x1
 2309 06c7 964A0000 		.4byte	0x4a96
 2310 06cb 00       		.byte	0
 2311 06cc 12       		.uleb128 0x12
 2312 06cd 00000000 		.4byte	.LASF68
 2313 06d1 0A       		.byte	0xa
 2314 06d2 1C02     		.2byte	0x21c
 2315 06d4 07       		.byte	0x7
 2316 06d5 00000000 		.4byte	.LASF76
 2317 06d9 01       		.byte	0x1
 2318 06da E2060000 		.4byte	0x6e2
 2319 06de F7060000 		.4byte	0x6f7
 2320 06e2 02       		.uleb128 0x2
 2321 06e3 C1510000 		.4byte	0x51c1
 2322 06e7 01       		.uleb128 0x1
 2323 06e8 13010000 		.4byte	0x113
 2324 06ec 01       		.uleb128 0x1
 2325 06ed 4E3B0000 		.4byte	0x3b4e
 2326 06f1 01       		.uleb128 0x1
 2327 06f2 964A0000 		.4byte	0x4a96
 2328 06f6 00       		.byte	0
 2329 06f7 12       		.uleb128 0x12
 2330 06f8 00000000 		.4byte	.LASF68
 2331 06fc 0A       		.byte	0xa
 2332 06fd 2802     		.2byte	0x228
 2333 06ff 07       		.byte	0x7
 2334 0700 00000000 		.4byte	.LASF77
 2335 0704 01       		.byte	0x1
 2336 0705 0D070000 		.4byte	0x70d
 2337 0709 18070000 		.4byte	0x718
 2338 070d 02       		.uleb128 0x2
 2339 070e C1510000 		.4byte	0x51c1
 2340 0712 01       		.uleb128 0x1
 2341 0713 EF510000 		.4byte	0x51ef
 2342 0717 00       		.byte	0
 2343 0718 12       		.uleb128 0x12
 2344 0719 00000000 		.4byte	.LASF68
 2345 071d 0A       		.byte	0xa
 2346 071e 4302     		.2byte	0x243
 2347 0720 07       		.byte	0x7
 2348 0721 00000000 		.4byte	.LASF78
 2349 0725 01       		.byte	0x1
 2350 0726 2E070000 		.4byte	0x72e
 2351 072a 3E070000 		.4byte	0x73e
 2352 072e 02       		.uleb128 0x2
 2353 072f C1510000 		.4byte	0x51c1
 2354 0733 01       		.uleb128 0x1
 2355 0734 55270000 		.4byte	0x2755
AARCH64 GAS  obj/extInstr.s 			page 251


 2356 0738 01       		.uleb128 0x1
 2357 0739 964A0000 		.4byte	0x4a96
 2358 073d 00       		.byte	0
 2359 073e 12       		.uleb128 0x12
 2360 073f 00000000 		.4byte	.LASF68
 2361 0743 0A       		.byte	0xa
 2362 0744 4702     		.2byte	0x247
 2363 0746 07       		.byte	0x7
 2364 0747 00000000 		.4byte	.LASF79
 2365 074b 01       		.byte	0x1
 2366 074c 54070000 		.4byte	0x754
 2367 0750 64070000 		.4byte	0x764
 2368 0754 02       		.uleb128 0x2
 2369 0755 C1510000 		.4byte	0x51c1
 2370 0759 01       		.uleb128 0x1
 2371 075a E9510000 		.4byte	0x51e9
 2372 075e 01       		.uleb128 0x1
 2373 075f 964A0000 		.4byte	0x4a96
 2374 0763 00       		.byte	0
 2375 0764 12       		.uleb128 0x12
 2376 0765 00000000 		.4byte	.LASF68
 2377 0769 0A       		.byte	0xa
 2378 076a 4B02     		.2byte	0x24b
 2379 076c 07       		.byte	0x7
 2380 076d 00000000 		.4byte	.LASF80
 2381 0771 01       		.byte	0x1
 2382 0772 7A070000 		.4byte	0x77a
 2383 0776 8A070000 		.4byte	0x78a
 2384 077a 02       		.uleb128 0x2
 2385 077b C1510000 		.4byte	0x51c1
 2386 077f 01       		.uleb128 0x1
 2387 0780 EF510000 		.4byte	0x51ef
 2388 0784 01       		.uleb128 0x1
 2389 0785 964A0000 		.4byte	0x4a96
 2390 0789 00       		.byte	0
 2391 078a 12       		.uleb128 0x12
 2392 078b 00000000 		.4byte	.LASF81
 2393 078f 0A       		.byte	0xa
 2394 0790 9102     		.2byte	0x291
 2395 0792 07       		.byte	0x7
 2396 0793 00000000 		.4byte	.LASF82
 2397 0797 01       		.byte	0x1
 2398 0798 A0070000 		.4byte	0x7a0
 2399 079c AB070000 		.4byte	0x7ab
 2400 07a0 02       		.uleb128 0x2
 2401 07a1 C1510000 		.4byte	0x51c1
 2402 07a5 02       		.uleb128 0x2
 2403 07a6 D43A0000 		.4byte	0x3ad4
 2404 07aa 00       		.byte	0
 2405 07ab 04       		.uleb128 0x4
 2406 07ac 00000000 		.4byte	.LASF83
 2407 07b0 0A       		.byte	0xa
 2408 07b1 9902     		.2byte	0x299
 2409 07b3 07       		.byte	0x7
 2410 07b4 00000000 		.4byte	.LASF85
 2411 07b8 F5510000 		.4byte	0x51f5
 2412 07bc 01       		.byte	0x1
AARCH64 GAS  obj/extInstr.s 			page 252


 2413 07bd C5070000 		.4byte	0x7c5
 2414 07c1 D0070000 		.4byte	0x7d0
 2415 07c5 02       		.uleb128 0x2
 2416 07c6 C1510000 		.4byte	0x51c1
 2417 07ca 01       		.uleb128 0x1
 2418 07cb E9510000 		.4byte	0x51e9
 2419 07cf 00       		.byte	0
 2420 07d0 04       		.uleb128 0x4
 2421 07d1 00000000 		.4byte	.LASF83
 2422 07d5 0A       		.byte	0xa
 2423 07d6 A302     		.2byte	0x2a3
 2424 07d8 07       		.byte	0x7
 2425 07d9 00000000 		.4byte	.LASF86
 2426 07dd F5510000 		.4byte	0x51f5
 2427 07e1 01       		.byte	0x1
 2428 07e2 EA070000 		.4byte	0x7ea
 2429 07e6 F5070000 		.4byte	0x7f5
 2430 07ea 02       		.uleb128 0x2
 2431 07eb C1510000 		.4byte	0x51c1
 2432 07ef 01       		.uleb128 0x1
 2433 07f0 283D0000 		.4byte	0x3d28
 2434 07f4 00       		.byte	0
 2435 07f5 04       		.uleb128 0x4
 2436 07f6 00000000 		.4byte	.LASF83
 2437 07fa 0A       		.byte	0xa
 2438 07fb AE02     		.2byte	0x2ae
 2439 07fd 07       		.byte	0x7
 2440 07fe 00000000 		.4byte	.LASF87
 2441 0802 F5510000 		.4byte	0x51f5
 2442 0806 01       		.byte	0x1
 2443 0807 0F080000 		.4byte	0x80f
 2444 080b 1A080000 		.4byte	0x81a
 2445 080f 02       		.uleb128 0x2
 2446 0810 C1510000 		.4byte	0x51c1
 2447 0814 01       		.uleb128 0x1
 2448 0815 4E3B0000 		.4byte	0x3b4e
 2449 0819 00       		.byte	0
 2450 081a 04       		.uleb128 0x4
 2451 081b 00000000 		.4byte	.LASF83
 2452 081f 0A       		.byte	0xa
 2453 0820 BF02     		.2byte	0x2bf
 2454 0822 07       		.byte	0x7
 2455 0823 00000000 		.4byte	.LASF88
 2456 0827 F5510000 		.4byte	0x51f5
 2457 082b 01       		.byte	0x1
 2458 082c 34080000 		.4byte	0x834
 2459 0830 3F080000 		.4byte	0x83f
 2460 0834 02       		.uleb128 0x2
 2461 0835 C1510000 		.4byte	0x51c1
 2462 0839 01       		.uleb128 0x1
 2463 083a EF510000 		.4byte	0x51ef
 2464 083e 00       		.byte	0
 2465 083f 04       		.uleb128 0x4
 2466 0840 00000000 		.4byte	.LASF83
 2467 0844 0A       		.byte	0xa
 2468 0845 FE02     		.2byte	0x2fe
 2469 0847 07       		.byte	0x7
AARCH64 GAS  obj/extInstr.s 			page 253


 2470 0848 00000000 		.4byte	.LASF89
 2471 084c F5510000 		.4byte	0x51f5
 2472 0850 01       		.byte	0x1
 2473 0851 59080000 		.4byte	0x859
 2474 0855 64080000 		.4byte	0x864
 2475 0859 02       		.uleb128 0x2
 2476 085a C1510000 		.4byte	0x51c1
 2477 085e 01       		.uleb128 0x1
 2478 085f 55270000 		.4byte	0x2755
 2479 0863 00       		.byte	0
 2480 0864 04       		.uleb128 0x4
 2481 0865 00000000 		.4byte	.LASF90
 2482 0869 0A       		.byte	0xa
 2483 086a 1D03     		.2byte	0x31d
 2484 086c 07       		.byte	0x7
 2485 086d 00000000 		.4byte	.LASF91
 2486 0871 86040000 		.4byte	0x486
 2487 0875 01       		.byte	0x1
 2488 0876 7E080000 		.4byte	0x87e
 2489 087a 84080000 		.4byte	0x884
 2490 087e 02       		.uleb128 0x2
 2491 087f C1510000 		.4byte	0x51c1
 2492 0883 00       		.byte	0
 2493 0884 04       		.uleb128 0x4
 2494 0885 00000000 		.4byte	.LASF90
 2495 0889 0A       		.byte	0xa
 2496 088a 2503     		.2byte	0x325
 2497 088c 07       		.byte	0x7
 2498 088d 00000000 		.4byte	.LASF92
 2499 0891 B4040000 		.4byte	0x4b4
 2500 0895 01       		.byte	0x1
 2501 0896 9E080000 		.4byte	0x89e
 2502 089a A4080000 		.4byte	0x8a4
 2503 089e 02       		.uleb128 0x2
 2504 089f CC510000 		.4byte	0x51cc
 2505 08a3 00       		.byte	0
 2506 08a4 3E       		.uleb128 0x3e
 2507 08a5 656E6400 		.string	"end"
 2508 08a9 0A       		.byte	0xa
 2509 08aa 2D03     		.2byte	0x32d
 2510 08ac 07       		.byte	0x7
 2511 08ad 00000000 		.4byte	.LASF93
 2512 08b1 86040000 		.4byte	0x486
 2513 08b5 01       		.byte	0x1
 2514 08b6 BE080000 		.4byte	0x8be
 2515 08ba C4080000 		.4byte	0x8c4
 2516 08be 02       		.uleb128 0x2
 2517 08bf C1510000 		.4byte	0x51c1
 2518 08c3 00       		.byte	0
 2519 08c4 3E       		.uleb128 0x3e
 2520 08c5 656E6400 		.string	"end"
 2521 08c9 0A       		.byte	0xa
 2522 08ca 3503     		.2byte	0x335
 2523 08cc 07       		.byte	0x7
 2524 08cd 00000000 		.4byte	.LASF94
 2525 08d1 B4040000 		.4byte	0x4b4
 2526 08d5 01       		.byte	0x1
AARCH64 GAS  obj/extInstr.s 			page 254


 2527 08d6 DE080000 		.4byte	0x8de
 2528 08da E4080000 		.4byte	0x8e4
 2529 08de 02       		.uleb128 0x2
 2530 08df CC510000 		.4byte	0x51cc
 2531 08e3 00       		.byte	0
 2532 08e4 17       		.uleb128 0x17
 2533 08e5 00000000 		.4byte	.LASF95
 2534 08e9 0A       		.byte	0xa
 2535 08ea 62       		.byte	0x62
 2536 08eb 2F       		.byte	0x2f
 2537 08ec 4D280000 		.4byte	0x284d
 2538 08f0 01       		.byte	0x1
 2539 08f1 04       		.uleb128 0x4
 2540 08f2 00000000 		.4byte	.LASF96
 2541 08f6 0A       		.byte	0xa
 2542 08f7 3E03     		.2byte	0x33e
 2543 08f9 07       		.byte	0x7
 2544 08fa 00000000 		.4byte	.LASF97
 2545 08fe E4080000 		.4byte	0x8e4
 2546 0902 01       		.byte	0x1
 2547 0903 0B090000 		.4byte	0x90b
 2548 0907 11090000 		.4byte	0x911
 2549 090b 02       		.uleb128 0x2
 2550 090c C1510000 		.4byte	0x51c1
 2551 0910 00       		.byte	0
 2552 0911 17       		.uleb128 0x17
 2553 0912 00000000 		.4byte	.LASF98
 2554 0916 0A       		.byte	0xa
 2555 0917 61       		.byte	0x61
 2556 0918 35       		.byte	0x35
 2557 0919 52280000 		.4byte	0x2852
 2558 091d 01       		.byte	0x1
 2559 091e 04       		.uleb128 0x4
 2560 091f 00000000 		.4byte	.LASF96
 2561 0923 0A       		.byte	0xa
 2562 0924 4703     		.2byte	0x347
 2563 0926 07       		.byte	0x7
 2564 0927 00000000 		.4byte	.LASF99
 2565 092b 11090000 		.4byte	0x911
 2566 092f 01       		.byte	0x1
 2567 0930 38090000 		.4byte	0x938
 2568 0934 3E090000 		.4byte	0x93e
 2569 0938 02       		.uleb128 0x2
 2570 0939 CC510000 		.4byte	0x51cc
 2571 093d 00       		.byte	0
 2572 093e 04       		.uleb128 0x4
 2573 093f 00000000 		.4byte	.LASF100
 2574 0943 0A       		.byte	0xa
 2575 0944 5003     		.2byte	0x350
 2576 0946 07       		.byte	0x7
 2577 0947 00000000 		.4byte	.LASF101
 2578 094b E4080000 		.4byte	0x8e4
 2579 094f 01       		.byte	0x1
 2580 0950 58090000 		.4byte	0x958
 2581 0954 5E090000 		.4byte	0x95e
 2582 0958 02       		.uleb128 0x2
 2583 0959 C1510000 		.4byte	0x51c1
AARCH64 GAS  obj/extInstr.s 			page 255


 2584 095d 00       		.byte	0
 2585 095e 04       		.uleb128 0x4
 2586 095f 00000000 		.4byte	.LASF100
 2587 0963 0A       		.byte	0xa
 2588 0964 5903     		.2byte	0x359
 2589 0966 07       		.byte	0x7
 2590 0967 00000000 		.4byte	.LASF102
 2591 096b 11090000 		.4byte	0x911
 2592 096f 01       		.byte	0x1
 2593 0970 78090000 		.4byte	0x978
 2594 0974 7E090000 		.4byte	0x97e
 2595 0978 02       		.uleb128 0x2
 2596 0979 CC510000 		.4byte	0x51cc
 2597 097d 00       		.byte	0
 2598 097e 04       		.uleb128 0x4
 2599 097f 00000000 		.4byte	.LASF103
 2600 0983 0A       		.byte	0xa
 2601 0984 6203     		.2byte	0x362
 2602 0986 07       		.byte	0x7
 2603 0987 00000000 		.4byte	.LASF104
 2604 098b B4040000 		.4byte	0x4b4
 2605 098f 01       		.byte	0x1
 2606 0990 98090000 		.4byte	0x998
 2607 0994 9E090000 		.4byte	0x99e
 2608 0998 02       		.uleb128 0x2
 2609 0999 CC510000 		.4byte	0x51cc
 2610 099d 00       		.byte	0
 2611 099e 04       		.uleb128 0x4
 2612 099f 00000000 		.4byte	.LASF105
 2613 09a3 0A       		.byte	0xa
 2614 09a4 6A03     		.2byte	0x36a
 2615 09a6 07       		.byte	0x7
 2616 09a7 00000000 		.4byte	.LASF106
 2617 09ab B4040000 		.4byte	0x4b4
 2618 09af 01       		.byte	0x1
 2619 09b0 B8090000 		.4byte	0x9b8
 2620 09b4 BE090000 		.4byte	0x9be
 2621 09b8 02       		.uleb128 0x2
 2622 09b9 CC510000 		.4byte	0x51cc
 2623 09bd 00       		.byte	0
 2624 09be 04       		.uleb128 0x4
 2625 09bf 00000000 		.4byte	.LASF107
 2626 09c3 0A       		.byte	0xa
 2627 09c4 7303     		.2byte	0x373
 2628 09c6 07       		.byte	0x7
 2629 09c7 00000000 		.4byte	.LASF108
 2630 09cb 11090000 		.4byte	0x911
 2631 09cf 01       		.byte	0x1
 2632 09d0 D8090000 		.4byte	0x9d8
 2633 09d4 DE090000 		.4byte	0x9de
 2634 09d8 02       		.uleb128 0x2
 2635 09d9 CC510000 		.4byte	0x51cc
 2636 09dd 00       		.byte	0
 2637 09de 04       		.uleb128 0x4
 2638 09df 00000000 		.4byte	.LASF109
 2639 09e3 0A       		.byte	0xa
 2640 09e4 7C03     		.2byte	0x37c
AARCH64 GAS  obj/extInstr.s 			page 256


 2641 09e6 07       		.byte	0x7
 2642 09e7 00000000 		.4byte	.LASF110
 2643 09eb 11090000 		.4byte	0x911
 2644 09ef 01       		.byte	0x1
 2645 09f0 F8090000 		.4byte	0x9f8
 2646 09f4 FE090000 		.4byte	0x9fe
 2647 09f8 02       		.uleb128 0x2
 2648 09f9 CC510000 		.4byte	0x51cc
 2649 09fd 00       		.byte	0
 2650 09fe 04       		.uleb128 0x4
 2651 09ff 00000000 		.4byte	.LASF111
 2652 0a03 0A       		.byte	0xa
 2653 0a04 8503     		.2byte	0x385
 2654 0a06 07       		.byte	0x7
 2655 0a07 00000000 		.4byte	.LASF112
 2656 0a0b 13010000 		.4byte	0x113
 2657 0a0f 01       		.byte	0x1
 2658 0a10 180A0000 		.4byte	0xa18
 2659 0a14 1E0A0000 		.4byte	0xa1e
 2660 0a18 02       		.uleb128 0x2
 2661 0a19 CC510000 		.4byte	0x51cc
 2662 0a1d 00       		.byte	0
 2663 0a1e 04       		.uleb128 0x4
 2664 0a1f 00000000 		.4byte	.LASF113
 2665 0a23 0A       		.byte	0xa
 2666 0a24 8B03     		.2byte	0x38b
 2667 0a26 07       		.byte	0x7
 2668 0a27 00000000 		.4byte	.LASF114
 2669 0a2b 13010000 		.4byte	0x113
 2670 0a2f 01       		.byte	0x1
 2671 0a30 380A0000 		.4byte	0xa38
 2672 0a34 3E0A0000 		.4byte	0xa3e
 2673 0a38 02       		.uleb128 0x2
 2674 0a39 CC510000 		.4byte	0x51cc
 2675 0a3d 00       		.byte	0
 2676 0a3e 04       		.uleb128 0x4
 2677 0a3f 00000000 		.4byte	.LASF115
 2678 0a43 0A       		.byte	0xa
 2679 0a44 9003     		.2byte	0x390
 2680 0a46 07       		.byte	0x7
 2681 0a47 00000000 		.4byte	.LASF116
 2682 0a4b 13010000 		.4byte	0x113
 2683 0a4f 01       		.byte	0x1
 2684 0a50 580A0000 		.4byte	0xa58
 2685 0a54 5E0A0000 		.4byte	0xa5e
 2686 0a58 02       		.uleb128 0x2
 2687 0a59 CC510000 		.4byte	0x51cc
 2688 0a5d 00       		.byte	0
 2689 0a5e 12       		.uleb128 0x12
 2690 0a5f 00000000 		.4byte	.LASF117
 2691 0a63 0A       		.byte	0xa
 2692 0a64 9E03     		.2byte	0x39e
 2693 0a66 07       		.byte	0x7
 2694 0a67 00000000 		.4byte	.LASF118
 2695 0a6b 01       		.byte	0x1
 2696 0a6c 740A0000 		.4byte	0xa74
 2697 0a70 840A0000 		.4byte	0xa84
AARCH64 GAS  obj/extInstr.s 			page 257


 2698 0a74 02       		.uleb128 0x2
 2699 0a75 C1510000 		.4byte	0x51c1
 2700 0a79 01       		.uleb128 0x1
 2701 0a7a 13010000 		.4byte	0x113
 2702 0a7e 01       		.uleb128 0x1
 2703 0a7f 4E3B0000 		.4byte	0x3b4e
 2704 0a83 00       		.byte	0
 2705 0a84 12       		.uleb128 0x12
 2706 0a85 00000000 		.4byte	.LASF117
 2707 0a89 0A       		.byte	0xa
 2708 0a8a AB03     		.2byte	0x3ab
 2709 0a8c 07       		.byte	0x7
 2710 0a8d 00000000 		.4byte	.LASF119
 2711 0a91 01       		.byte	0x1
 2712 0a92 9A0A0000 		.4byte	0xa9a
 2713 0a96 A50A0000 		.4byte	0xaa5
 2714 0a9a 02       		.uleb128 0x2
 2715 0a9b C1510000 		.4byte	0x51c1
 2716 0a9f 01       		.uleb128 0x1
 2717 0aa0 13010000 		.4byte	0x113
 2718 0aa4 00       		.byte	0
 2719 0aa5 12       		.uleb128 0x12
 2720 0aa6 00000000 		.4byte	.LASF120
 2721 0aaa 0A       		.byte	0xa
 2722 0aab B103     		.2byte	0x3b1
 2723 0aad 07       		.byte	0x7
 2724 0aae 00000000 		.4byte	.LASF121
 2725 0ab2 01       		.byte	0x1
 2726 0ab3 BB0A0000 		.4byte	0xabb
 2727 0ab7 C10A0000 		.4byte	0xac1
 2728 0abb 02       		.uleb128 0x2
 2729 0abc C1510000 		.4byte	0x51c1
 2730 0ac0 00       		.byte	0
 2731 0ac1 04       		.uleb128 0x4
 2732 0ac2 00000000 		.4byte	.LASF122
 2733 0ac6 0A       		.byte	0xa
 2734 0ac7 C403     		.2byte	0x3c4
 2735 0ac9 07       		.byte	0x7
 2736 0aca 00000000 		.4byte	.LASF123
 2737 0ace 13010000 		.4byte	0x113
 2738 0ad2 01       		.byte	0x1
 2739 0ad3 DB0A0000 		.4byte	0xadb
 2740 0ad7 E10A0000 		.4byte	0xae1
 2741 0adb 02       		.uleb128 0x2
 2742 0adc CC510000 		.4byte	0x51cc
 2743 0ae0 00       		.byte	0
 2744 0ae1 12       		.uleb128 0x12
 2745 0ae2 00000000 		.4byte	.LASF124
 2746 0ae6 0A       		.byte	0xa
 2747 0ae7 DC03     		.2byte	0x3dc
 2748 0ae9 07       		.byte	0x7
 2749 0aea 00000000 		.4byte	.LASF125
 2750 0aee 01       		.byte	0x1
 2751 0aef F70A0000 		.4byte	0xaf7
 2752 0af3 020B0000 		.4byte	0xb02
 2753 0af7 02       		.uleb128 0x2
 2754 0af8 C1510000 		.4byte	0x51c1
AARCH64 GAS  obj/extInstr.s 			page 258


 2755 0afc 01       		.uleb128 0x1
 2756 0afd 13010000 		.4byte	0x113
 2757 0b01 00       		.byte	0
 2758 0b02 12       		.uleb128 0x12
 2759 0b03 00000000 		.4byte	.LASF126
 2760 0b07 0A       		.byte	0xa
 2761 0b08 E203     		.2byte	0x3e2
 2762 0b0a 07       		.byte	0x7
 2763 0b0b 00000000 		.4byte	.LASF127
 2764 0b0f 01       		.byte	0x1
 2765 0b10 180B0000 		.4byte	0xb18
 2766 0b14 1E0B0000 		.4byte	0xb1e
 2767 0b18 02       		.uleb128 0x2
 2768 0b19 C1510000 		.4byte	0x51c1
 2769 0b1d 00       		.byte	0
 2770 0b1e 04       		.uleb128 0x4
 2771 0b1f 00000000 		.4byte	.LASF128
 2772 0b23 0A       		.byte	0xa
 2773 0b24 EA03     		.2byte	0x3ea
 2774 0b26 07       		.byte	0x7
 2775 0b27 00000000 		.4byte	.LASF129
 2776 0b2b EF450000 		.4byte	0x45ef
 2777 0b2f 01       		.byte	0x1
 2778 0b30 380B0000 		.4byte	0xb38
 2779 0b34 3E0B0000 		.4byte	0xb3e
 2780 0b38 02       		.uleb128 0x2
 2781 0b39 CC510000 		.4byte	0x51cc
 2782 0b3d 00       		.byte	0
 2783 0b3e 17       		.uleb128 0x17
 2784 0b3f 00000000 		.4byte	.LASF130
 2785 0b43 0A       		.byte	0xa
 2786 0b44 5B       		.byte	0x5b
 2787 0b45 37       		.byte	0x37
 2788 0b46 0C350000 		.4byte	0x350c
 2789 0b4a 01       		.byte	0x1
 2790 0b4b 04       		.uleb128 0x4
 2791 0b4c 00000000 		.4byte	.LASF131
 2792 0b50 0A       		.byte	0xa
 2793 0b51 F903     		.2byte	0x3f9
 2794 0b53 07       		.byte	0x7
 2795 0b54 00000000 		.4byte	.LASF132
 2796 0b58 3E0B0000 		.4byte	0xb3e
 2797 0b5c 01       		.byte	0x1
 2798 0b5d 650B0000 		.4byte	0xb65
 2799 0b61 700B0000 		.4byte	0xb70
 2800 0b65 02       		.uleb128 0x2
 2801 0b66 CC510000 		.4byte	0x51cc
 2802 0b6a 01       		.uleb128 0x1
 2803 0b6b 13010000 		.4byte	0x113
 2804 0b6f 00       		.byte	0
 2805 0b70 17       		.uleb128 0x17
 2806 0b71 00000000 		.4byte	.LASF133
 2807 0b75 0A       		.byte	0xa
 2808 0b76 5A       		.byte	0x5a
 2809 0b77 31       		.byte	0x31
 2810 0b78 00350000 		.4byte	0x3500
 2811 0b7c 01       		.byte	0x1
AARCH64 GAS  obj/extInstr.s 			page 259


 2812 0b7d 04       		.uleb128 0x4
 2813 0b7e 00000000 		.4byte	.LASF131
 2814 0b82 0A       		.byte	0xa
 2815 0b83 0A04     		.2byte	0x40a
 2816 0b85 07       		.byte	0x7
 2817 0b86 00000000 		.4byte	.LASF134
 2818 0b8a 700B0000 		.4byte	0xb70
 2819 0b8e 01       		.byte	0x1
 2820 0b8f 970B0000 		.4byte	0xb97
 2821 0b93 A20B0000 		.4byte	0xba2
 2822 0b97 02       		.uleb128 0x2
 2823 0b98 C1510000 		.4byte	0x51c1
 2824 0b9c 01       		.uleb128 0x1
 2825 0b9d 13010000 		.4byte	0x113
 2826 0ba1 00       		.byte	0
 2827 0ba2 3E       		.uleb128 0x3e
 2828 0ba3 617400   		.string	"at"
 2829 0ba6 0A       		.byte	0xa
 2830 0ba7 1F04     		.2byte	0x41f
 2831 0ba9 07       		.byte	0x7
 2832 0baa 00000000 		.4byte	.LASF135
 2833 0bae 3E0B0000 		.4byte	0xb3e
 2834 0bb2 01       		.byte	0x1
 2835 0bb3 BB0B0000 		.4byte	0xbbb
 2836 0bb7 C60B0000 		.4byte	0xbc6
 2837 0bbb 02       		.uleb128 0x2
 2838 0bbc CC510000 		.4byte	0x51cc
 2839 0bc0 01       		.uleb128 0x1
 2840 0bc1 13010000 		.4byte	0x113
 2841 0bc5 00       		.byte	0
 2842 0bc6 3E       		.uleb128 0x3e
 2843 0bc7 617400   		.string	"at"
 2844 0bca 0A       		.byte	0xa
 2845 0bcb 3404     		.2byte	0x434
 2846 0bcd 07       		.byte	0x7
 2847 0bce 00000000 		.4byte	.LASF136
 2848 0bd2 700B0000 		.4byte	0xb70
 2849 0bd6 01       		.byte	0x1
 2850 0bd7 DF0B0000 		.4byte	0xbdf
 2851 0bdb EA0B0000 		.4byte	0xbea
 2852 0bdf 02       		.uleb128 0x2
 2853 0be0 C1510000 		.4byte	0x51c1
 2854 0be4 01       		.uleb128 0x1
 2855 0be5 13010000 		.4byte	0x113
 2856 0be9 00       		.byte	0
 2857 0bea 04       		.uleb128 0x4
 2858 0beb 00000000 		.4byte	.LASF137
 2859 0bef 0A       		.byte	0xa
 2860 0bf0 4404     		.2byte	0x444
 2861 0bf2 07       		.byte	0x7
 2862 0bf3 00000000 		.4byte	.LASF138
 2863 0bf7 700B0000 		.4byte	0xb70
 2864 0bfb 01       		.byte	0x1
 2865 0bfc 040C0000 		.4byte	0xc04
 2866 0c00 0A0C0000 		.4byte	0xc0a
 2867 0c04 02       		.uleb128 0x2
 2868 0c05 C1510000 		.4byte	0x51c1
AARCH64 GAS  obj/extInstr.s 			page 260


 2869 0c09 00       		.byte	0
 2870 0c0a 04       		.uleb128 0x4
 2871 0c0b 00000000 		.4byte	.LASF137
 2872 0c0f 0A       		.byte	0xa
 2873 0c10 4F04     		.2byte	0x44f
 2874 0c12 07       		.byte	0x7
 2875 0c13 00000000 		.4byte	.LASF139
 2876 0c17 3E0B0000 		.4byte	0xb3e
 2877 0c1b 01       		.byte	0x1
 2878 0c1c 240C0000 		.4byte	0xc24
 2879 0c20 2A0C0000 		.4byte	0xc2a
 2880 0c24 02       		.uleb128 0x2
 2881 0c25 CC510000 		.4byte	0x51cc
 2882 0c29 00       		.byte	0
 2883 0c2a 04       		.uleb128 0x4
 2884 0c2b 00000000 		.4byte	.LASF140
 2885 0c2f 0A       		.byte	0xa
 2886 0c30 5A04     		.2byte	0x45a
 2887 0c32 07       		.byte	0x7
 2888 0c33 00000000 		.4byte	.LASF141
 2889 0c37 700B0000 		.4byte	0xb70
 2890 0c3b 01       		.byte	0x1
 2891 0c3c 440C0000 		.4byte	0xc44
 2892 0c40 4A0C0000 		.4byte	0xc4a
 2893 0c44 02       		.uleb128 0x2
 2894 0c45 C1510000 		.4byte	0x51c1
 2895 0c49 00       		.byte	0
 2896 0c4a 04       		.uleb128 0x4
 2897 0c4b 00000000 		.4byte	.LASF140
 2898 0c4f 0A       		.byte	0xa
 2899 0c50 6504     		.2byte	0x465
 2900 0c52 07       		.byte	0x7
 2901 0c53 00000000 		.4byte	.LASF142
 2902 0c57 3E0B0000 		.4byte	0xb3e
 2903 0c5b 01       		.byte	0x1
 2904 0c5c 640C0000 		.4byte	0xc64
 2905 0c60 6A0C0000 		.4byte	0xc6a
 2906 0c64 02       		.uleb128 0x2
 2907 0c65 CC510000 		.4byte	0x51cc
 2908 0c69 00       		.byte	0
 2909 0c6a 04       		.uleb128 0x4
 2910 0c6b 00000000 		.4byte	.LASF143
 2911 0c6f 0A       		.byte	0xa
 2912 0c70 7304     		.2byte	0x473
 2913 0c72 07       		.byte	0x7
 2914 0c73 00000000 		.4byte	.LASF144
 2915 0c77 F5510000 		.4byte	0x51f5
 2916 0c7b 01       		.byte	0x1
 2917 0c7c 840C0000 		.4byte	0xc84
 2918 0c80 8F0C0000 		.4byte	0xc8f
 2919 0c84 02       		.uleb128 0x2
 2920 0c85 C1510000 		.4byte	0x51c1
 2921 0c89 01       		.uleb128 0x1
 2922 0c8a E9510000 		.4byte	0x51e9
 2923 0c8e 00       		.byte	0
 2924 0c8f 04       		.uleb128 0x4
 2925 0c90 00000000 		.4byte	.LASF143
AARCH64 GAS  obj/extInstr.s 			page 261


 2926 0c94 0A       		.byte	0xa
 2927 0c95 7C04     		.2byte	0x47c
 2928 0c97 07       		.byte	0x7
 2929 0c98 00000000 		.4byte	.LASF145
 2930 0c9c F5510000 		.4byte	0x51f5
 2931 0ca0 01       		.byte	0x1
 2932 0ca1 A90C0000 		.4byte	0xca9
 2933 0ca5 B40C0000 		.4byte	0xcb4
 2934 0ca9 02       		.uleb128 0x2
 2935 0caa C1510000 		.4byte	0x51c1
 2936 0cae 01       		.uleb128 0x1
 2937 0caf 283D0000 		.4byte	0x3d28
 2938 0cb3 00       		.byte	0
 2939 0cb4 04       		.uleb128 0x4
 2940 0cb5 00000000 		.4byte	.LASF143
 2941 0cb9 0A       		.byte	0xa
 2942 0cba 8504     		.2byte	0x485
 2943 0cbc 07       		.byte	0x7
 2944 0cbd 00000000 		.4byte	.LASF146
 2945 0cc1 F5510000 		.4byte	0x51f5
 2946 0cc5 01       		.byte	0x1
 2947 0cc6 CE0C0000 		.4byte	0xcce
 2948 0cca D90C0000 		.4byte	0xcd9
 2949 0cce 02       		.uleb128 0x2
 2950 0ccf C1510000 		.4byte	0x51c1
 2951 0cd3 01       		.uleb128 0x1
 2952 0cd4 4E3B0000 		.4byte	0x3b4e
 2953 0cd8 00       		.byte	0
 2954 0cd9 04       		.uleb128 0x4
 2955 0cda 00000000 		.4byte	.LASF143
 2956 0cde 0A       		.byte	0xa
 2957 0cdf 9204     		.2byte	0x492
 2958 0ce1 07       		.byte	0x7
 2959 0ce2 00000000 		.4byte	.LASF147
 2960 0ce6 F5510000 		.4byte	0x51f5
 2961 0cea 01       		.byte	0x1
 2962 0ceb F30C0000 		.4byte	0xcf3
 2963 0cef FE0C0000 		.4byte	0xcfe
 2964 0cf3 02       		.uleb128 0x2
 2965 0cf4 C1510000 		.4byte	0x51c1
 2966 0cf8 01       		.uleb128 0x1
 2967 0cf9 55270000 		.4byte	0x2755
 2968 0cfd 00       		.byte	0
 2969 0cfe 04       		.uleb128 0x4
 2970 0cff 00000000 		.4byte	.LASF148
 2971 0d03 0A       		.byte	0xa
 2972 0d04 A804     		.2byte	0x4a8
 2973 0d06 07       		.byte	0x7
 2974 0d07 00000000 		.4byte	.LASF149
 2975 0d0b F5510000 		.4byte	0x51f5
 2976 0d0f 01       		.byte	0x1
 2977 0d10 180D0000 		.4byte	0xd18
 2978 0d14 230D0000 		.4byte	0xd23
 2979 0d18 02       		.uleb128 0x2
 2980 0d19 C1510000 		.4byte	0x51c1
 2981 0d1d 01       		.uleb128 0x1
 2982 0d1e E9510000 		.4byte	0x51e9
AARCH64 GAS  obj/extInstr.s 			page 262


 2983 0d22 00       		.byte	0
 2984 0d23 04       		.uleb128 0x4
 2985 0d24 00000000 		.4byte	.LASF148
 2986 0d28 0A       		.byte	0xa
 2987 0d29 B904     		.2byte	0x4b9
 2988 0d2b 07       		.byte	0x7
 2989 0d2c 00000000 		.4byte	.LASF150
 2990 0d30 F5510000 		.4byte	0x51f5
 2991 0d34 01       		.byte	0x1
 2992 0d35 3D0D0000 		.4byte	0xd3d
 2993 0d39 520D0000 		.4byte	0xd52
 2994 0d3d 02       		.uleb128 0x2
 2995 0d3e C1510000 		.4byte	0x51c1
 2996 0d42 01       		.uleb128 0x1
 2997 0d43 E9510000 		.4byte	0x51e9
 2998 0d47 01       		.uleb128 0x1
 2999 0d48 13010000 		.4byte	0x113
 3000 0d4c 01       		.uleb128 0x1
 3001 0d4d 13010000 		.4byte	0x113
 3002 0d51 00       		.byte	0
 3003 0d52 04       		.uleb128 0x4
 3004 0d53 00000000 		.4byte	.LASF148
 3005 0d57 0A       		.byte	0xa
 3006 0d58 C504     		.2byte	0x4c5
 3007 0d5a 07       		.byte	0x7
 3008 0d5b 00000000 		.4byte	.LASF151
 3009 0d5f F5510000 		.4byte	0x51f5
 3010 0d63 01       		.byte	0x1
 3011 0d64 6C0D0000 		.4byte	0xd6c
 3012 0d68 7C0D0000 		.4byte	0xd7c
 3013 0d6c 02       		.uleb128 0x2
 3014 0d6d C1510000 		.4byte	0x51c1
 3015 0d71 01       		.uleb128 0x1
 3016 0d72 283D0000 		.4byte	0x3d28
 3017 0d76 01       		.uleb128 0x1
 3018 0d77 13010000 		.4byte	0x113
 3019 0d7b 00       		.byte	0
 3020 0d7c 04       		.uleb128 0x4
 3021 0d7d 00000000 		.4byte	.LASF148
 3022 0d81 0A       		.byte	0xa
 3023 0d82 D204     		.2byte	0x4d2
 3024 0d84 07       		.byte	0x7
 3025 0d85 00000000 		.4byte	.LASF152
 3026 0d89 F5510000 		.4byte	0x51f5
 3027 0d8d 01       		.byte	0x1
 3028 0d8e 960D0000 		.4byte	0xd96
 3029 0d92 A10D0000 		.4byte	0xda1
 3030 0d96 02       		.uleb128 0x2
 3031 0d97 C1510000 		.4byte	0x51c1
 3032 0d9b 01       		.uleb128 0x1
 3033 0d9c 283D0000 		.4byte	0x3d28
 3034 0da0 00       		.byte	0
 3035 0da1 04       		.uleb128 0x4
 3036 0da2 00000000 		.4byte	.LASF148
 3037 0da6 0A       		.byte	0xa
 3038 0da7 E304     		.2byte	0x4e3
 3039 0da9 07       		.byte	0x7
AARCH64 GAS  obj/extInstr.s 			page 263


 3040 0daa 00000000 		.4byte	.LASF153
 3041 0dae F5510000 		.4byte	0x51f5
 3042 0db2 01       		.byte	0x1
 3043 0db3 BB0D0000 		.4byte	0xdbb
 3044 0db7 CB0D0000 		.4byte	0xdcb
 3045 0dbb 02       		.uleb128 0x2
 3046 0dbc C1510000 		.4byte	0x51c1
 3047 0dc0 01       		.uleb128 0x1
 3048 0dc1 13010000 		.4byte	0x113
 3049 0dc5 01       		.uleb128 0x1
 3050 0dc6 4E3B0000 		.4byte	0x3b4e
 3051 0dca 00       		.byte	0
 3052 0dcb 04       		.uleb128 0x4
 3053 0dcc 00000000 		.4byte	.LASF148
 3054 0dd0 0A       		.byte	0xa
 3055 0dd1 ED04     		.2byte	0x4ed
 3056 0dd3 07       		.byte	0x7
 3057 0dd4 00000000 		.4byte	.LASF154
 3058 0dd8 F5510000 		.4byte	0x51f5
 3059 0ddc 01       		.byte	0x1
 3060 0ddd E50D0000 		.4byte	0xde5
 3061 0de1 F00D0000 		.4byte	0xdf0
 3062 0de5 02       		.uleb128 0x2
 3063 0de6 C1510000 		.4byte	0x51c1
 3064 0dea 01       		.uleb128 0x1
 3065 0deb 55270000 		.4byte	0x2755
 3066 0def 00       		.byte	0
 3067 0df0 12       		.uleb128 0x12
 3068 0df1 00000000 		.4byte	.LASF155
 3069 0df5 0A       		.byte	0xa
 3070 0df6 2805     		.2byte	0x528
 3071 0df8 07       		.byte	0x7
 3072 0df9 00000000 		.4byte	.LASF156
 3073 0dfd 01       		.byte	0x1
 3074 0dfe 060E0000 		.4byte	0xe06
 3075 0e02 110E0000 		.4byte	0xe11
 3076 0e06 02       		.uleb128 0x2
 3077 0e07 C1510000 		.4byte	0x51c1
 3078 0e0b 01       		.uleb128 0x1
 3079 0e0c 4E3B0000 		.4byte	0x3b4e
 3080 0e10 00       		.byte	0
 3081 0e11 04       		.uleb128 0x4
 3082 0e12 00000000 		.4byte	.LASF157
 3083 0e16 0A       		.byte	0xa
 3084 0e17 3705     		.2byte	0x537
 3085 0e19 07       		.byte	0x7
 3086 0e1a 00000000 		.4byte	.LASF158
 3087 0e1e F5510000 		.4byte	0x51f5
 3088 0e22 01       		.byte	0x1
 3089 0e23 2B0E0000 		.4byte	0xe2b
 3090 0e27 360E0000 		.4byte	0xe36
 3091 0e2b 02       		.uleb128 0x2
 3092 0e2c C1510000 		.4byte	0x51c1
 3093 0e30 01       		.uleb128 0x1
 3094 0e31 E9510000 		.4byte	0x51e9
 3095 0e35 00       		.byte	0
 3096 0e36 04       		.uleb128 0x4
AARCH64 GAS  obj/extInstr.s 			page 264


 3097 0e37 00000000 		.4byte	.LASF157
 3098 0e3b 0A       		.byte	0xa
 3099 0e3c 6405     		.2byte	0x564
 3100 0e3e 07       		.byte	0x7
 3101 0e3f 00000000 		.4byte	.LASF159
 3102 0e43 F5510000 		.4byte	0x51f5
 3103 0e47 01       		.byte	0x1
 3104 0e48 500E0000 		.4byte	0xe50
 3105 0e4c 5B0E0000 		.4byte	0xe5b
 3106 0e50 02       		.uleb128 0x2
 3107 0e51 C1510000 		.4byte	0x51c1
 3108 0e55 01       		.uleb128 0x1
 3109 0e56 EF510000 		.4byte	0x51ef
 3110 0e5a 00       		.byte	0
 3111 0e5b 04       		.uleb128 0x4
 3112 0e5c 00000000 		.4byte	.LASF157
 3113 0e60 0A       		.byte	0xa
 3114 0e61 7B05     		.2byte	0x57b
 3115 0e63 07       		.byte	0x7
 3116 0e64 00000000 		.4byte	.LASF160
 3117 0e68 F5510000 		.4byte	0x51f5
 3118 0e6c 01       		.byte	0x1
 3119 0e6d 750E0000 		.4byte	0xe75
 3120 0e71 8A0E0000 		.4byte	0xe8a
 3121 0e75 02       		.uleb128 0x2
 3122 0e76 C1510000 		.4byte	0x51c1
 3123 0e7a 01       		.uleb128 0x1
 3124 0e7b E9510000 		.4byte	0x51e9
 3125 0e7f 01       		.uleb128 0x1
 3126 0e80 13010000 		.4byte	0x113
 3127 0e84 01       		.uleb128 0x1
 3128 0e85 13010000 		.4byte	0x113
 3129 0e89 00       		.byte	0
 3130 0e8a 04       		.uleb128 0x4
 3131 0e8b 00000000 		.4byte	.LASF157
 3132 0e8f 0A       		.byte	0xa
 3133 0e90 8B05     		.2byte	0x58b
 3134 0e92 07       		.byte	0x7
 3135 0e93 00000000 		.4byte	.LASF161
 3136 0e97 F5510000 		.4byte	0x51f5
 3137 0e9b 01       		.byte	0x1
 3138 0e9c A40E0000 		.4byte	0xea4
 3139 0ea0 B40E0000 		.4byte	0xeb4
 3140 0ea4 02       		.uleb128 0x2
 3141 0ea5 C1510000 		.4byte	0x51c1
 3142 0ea9 01       		.uleb128 0x1
 3143 0eaa 283D0000 		.4byte	0x3d28
 3144 0eae 01       		.uleb128 0x1
 3145 0eaf 13010000 		.4byte	0x113
 3146 0eb3 00       		.byte	0
 3147 0eb4 04       		.uleb128 0x4
 3148 0eb5 00000000 		.4byte	.LASF157
 3149 0eb9 0A       		.byte	0xa
 3150 0eba 9B05     		.2byte	0x59b
 3151 0ebc 07       		.byte	0x7
 3152 0ebd 00000000 		.4byte	.LASF162
 3153 0ec1 F5510000 		.4byte	0x51f5
AARCH64 GAS  obj/extInstr.s 			page 265


 3154 0ec5 01       		.byte	0x1
 3155 0ec6 CE0E0000 		.4byte	0xece
 3156 0eca D90E0000 		.4byte	0xed9
 3157 0ece 02       		.uleb128 0x2
 3158 0ecf C1510000 		.4byte	0x51c1
 3159 0ed3 01       		.uleb128 0x1
 3160 0ed4 283D0000 		.4byte	0x3d28
 3161 0ed8 00       		.byte	0
 3162 0ed9 04       		.uleb128 0x4
 3163 0eda 00000000 		.4byte	.LASF157
 3164 0ede 0A       		.byte	0xa
 3165 0edf AC05     		.2byte	0x5ac
 3166 0ee1 07       		.byte	0x7
 3167 0ee2 00000000 		.4byte	.LASF163
 3168 0ee6 F5510000 		.4byte	0x51f5
 3169 0eea 01       		.byte	0x1
 3170 0eeb F30E0000 		.4byte	0xef3
 3171 0eef 030F0000 		.4byte	0xf03
 3172 0ef3 02       		.uleb128 0x2
 3173 0ef4 C1510000 		.4byte	0x51c1
 3174 0ef8 01       		.uleb128 0x1
 3175 0ef9 13010000 		.4byte	0x113
 3176 0efd 01       		.uleb128 0x1
 3177 0efe 4E3B0000 		.4byte	0x3b4e
 3178 0f02 00       		.byte	0
 3179 0f03 04       		.uleb128 0x4
 3180 0f04 00000000 		.4byte	.LASF157
 3181 0f08 0A       		.byte	0xa
 3182 0f09 C805     		.2byte	0x5c8
 3183 0f0b 07       		.byte	0x7
 3184 0f0c 00000000 		.4byte	.LASF164
 3185 0f10 F5510000 		.4byte	0x51f5
 3186 0f14 01       		.byte	0x1
 3187 0f15 1D0F0000 		.4byte	0xf1d
 3188 0f19 280F0000 		.4byte	0xf28
 3189 0f1d 02       		.uleb128 0x2
 3190 0f1e C1510000 		.4byte	0x51c1
 3191 0f22 01       		.uleb128 0x1
 3192 0f23 55270000 		.4byte	0x2755
 3193 0f27 00       		.byte	0
 3194 0f28 04       		.uleb128 0x4
 3195 0f29 00000000 		.4byte	.LASF165
 3196 0f2d 0A       		.byte	0xa
 3197 0f2e FE05     		.2byte	0x5fe
 3198 0f30 07       		.byte	0x7
 3199 0f31 00000000 		.4byte	.LASF166
 3200 0f35 86040000 		.4byte	0x486
 3201 0f39 01       		.byte	0x1
 3202 0f3a 420F0000 		.4byte	0xf42
 3203 0f3e 570F0000 		.4byte	0xf57
 3204 0f42 02       		.uleb128 0x2
 3205 0f43 C1510000 		.4byte	0x51c1
 3206 0f47 01       		.uleb128 0x1
 3207 0f48 B4040000 		.4byte	0x4b4
 3208 0f4c 01       		.uleb128 0x1
 3209 0f4d 13010000 		.4byte	0x113
 3210 0f51 01       		.uleb128 0x1
AARCH64 GAS  obj/extInstr.s 			page 266


 3211 0f52 4E3B0000 		.4byte	0x3b4e
 3212 0f56 00       		.byte	0
 3213 0f57 04       		.uleb128 0x4
 3214 0f58 00000000 		.4byte	.LASF165
 3215 0f5c 0A       		.byte	0xa
 3216 0f5d 4C06     		.2byte	0x64c
 3217 0f5f 07       		.byte	0x7
 3218 0f60 00000000 		.4byte	.LASF167
 3219 0f64 86040000 		.4byte	0x486
 3220 0f68 01       		.byte	0x1
 3221 0f69 710F0000 		.4byte	0xf71
 3222 0f6d 810F0000 		.4byte	0xf81
 3223 0f71 02       		.uleb128 0x2
 3224 0f72 C1510000 		.4byte	0x51c1
 3225 0f76 01       		.uleb128 0x1
 3226 0f77 B4040000 		.4byte	0x4b4
 3227 0f7b 01       		.uleb128 0x1
 3228 0f7c 55270000 		.4byte	0x2755
 3229 0f80 00       		.byte	0
 3230 0f81 04       		.uleb128 0x4
 3231 0f82 00000000 		.4byte	.LASF165
 3232 0f86 0A       		.byte	0xa
 3233 0f87 6706     		.2byte	0x667
 3234 0f89 07       		.byte	0x7
 3235 0f8a 00000000 		.4byte	.LASF168
 3236 0f8e F5510000 		.4byte	0x51f5
 3237 0f92 01       		.byte	0x1
 3238 0f93 9B0F0000 		.4byte	0xf9b
 3239 0f97 AB0F0000 		.4byte	0xfab
 3240 0f9b 02       		.uleb128 0x2
 3241 0f9c C1510000 		.4byte	0x51c1
 3242 0fa0 01       		.uleb128 0x1
 3243 0fa1 13010000 		.4byte	0x113
 3244 0fa5 01       		.uleb128 0x1
 3245 0fa6 E9510000 		.4byte	0x51e9
 3246 0faa 00       		.byte	0
 3247 0fab 04       		.uleb128 0x4
 3248 0fac 00000000 		.4byte	.LASF165
 3249 0fb0 0A       		.byte	0xa
 3250 0fb1 7E06     		.2byte	0x67e
 3251 0fb3 07       		.byte	0x7
 3252 0fb4 00000000 		.4byte	.LASF169
 3253 0fb8 F5510000 		.4byte	0x51f5
 3254 0fbc 01       		.byte	0x1
 3255 0fbd C50F0000 		.4byte	0xfc5
 3256 0fc1 DF0F0000 		.4byte	0xfdf
 3257 0fc5 02       		.uleb128 0x2
 3258 0fc6 C1510000 		.4byte	0x51c1
 3259 0fca 01       		.uleb128 0x1
 3260 0fcb 13010000 		.4byte	0x113
 3261 0fcf 01       		.uleb128 0x1
 3262 0fd0 E9510000 		.4byte	0x51e9
 3263 0fd4 01       		.uleb128 0x1
 3264 0fd5 13010000 		.4byte	0x113
 3265 0fd9 01       		.uleb128 0x1
 3266 0fda 13010000 		.4byte	0x113
 3267 0fde 00       		.byte	0
AARCH64 GAS  obj/extInstr.s 			page 267


 3268 0fdf 04       		.uleb128 0x4
 3269 0fe0 00000000 		.4byte	.LASF165
 3270 0fe4 0A       		.byte	0xa
 3271 0fe5 9506     		.2byte	0x695
 3272 0fe7 07       		.byte	0x7
 3273 0fe8 00000000 		.4byte	.LASF170
 3274 0fec F5510000 		.4byte	0x51f5
 3275 0ff0 01       		.byte	0x1
 3276 0ff1 F90F0000 		.4byte	0xff9
 3277 0ff5 0E100000 		.4byte	0x100e
 3278 0ff9 02       		.uleb128 0x2
 3279 0ffa C1510000 		.4byte	0x51c1
 3280 0ffe 01       		.uleb128 0x1
 3281 0fff 13010000 		.4byte	0x113
 3282 1003 01       		.uleb128 0x1
 3283 1004 283D0000 		.4byte	0x3d28
 3284 1008 01       		.uleb128 0x1
 3285 1009 13010000 		.4byte	0x113
 3286 100d 00       		.byte	0
 3287 100e 04       		.uleb128 0x4
 3288 100f 00000000 		.4byte	.LASF165
 3289 1013 0A       		.byte	0xa
 3290 1014 A806     		.2byte	0x6a8
 3291 1016 07       		.byte	0x7
 3292 1017 00000000 		.4byte	.LASF171
 3293 101b F5510000 		.4byte	0x51f5
 3294 101f 01       		.byte	0x1
 3295 1020 28100000 		.4byte	0x1028
 3296 1024 38100000 		.4byte	0x1038
 3297 1028 02       		.uleb128 0x2
 3298 1029 C1510000 		.4byte	0x51c1
 3299 102d 01       		.uleb128 0x1
 3300 102e 13010000 		.4byte	0x113
 3301 1032 01       		.uleb128 0x1
 3302 1033 283D0000 		.4byte	0x3d28
 3303 1037 00       		.byte	0
 3304 1038 04       		.uleb128 0x4
 3305 1039 00000000 		.4byte	.LASF165
 3306 103d 0A       		.byte	0xa
 3307 103e C006     		.2byte	0x6c0
 3308 1040 07       		.byte	0x7
 3309 1041 00000000 		.4byte	.LASF172
 3310 1045 F5510000 		.4byte	0x51f5
 3311 1049 01       		.byte	0x1
 3312 104a 52100000 		.4byte	0x1052
 3313 104e 67100000 		.4byte	0x1067
 3314 1052 02       		.uleb128 0x2
 3315 1053 C1510000 		.4byte	0x51c1
 3316 1057 01       		.uleb128 0x1
 3317 1058 13010000 		.4byte	0x113
 3318 105c 01       		.uleb128 0x1
 3319 105d 13010000 		.4byte	0x113
 3320 1061 01       		.uleb128 0x1
 3321 1062 4E3B0000 		.4byte	0x3b4e
 3322 1066 00       		.byte	0
 3323 1067 04       		.uleb128 0x4
 3324 1068 00000000 		.4byte	.LASF165
AARCH64 GAS  obj/extInstr.s 			page 268


 3325 106c 0A       		.byte	0xa
 3326 106d D206     		.2byte	0x6d2
 3327 106f 07       		.byte	0x7
 3328 1070 00000000 		.4byte	.LASF173
 3329 1074 86040000 		.4byte	0x486
 3330 1078 01       		.byte	0x1
 3331 1079 81100000 		.4byte	0x1081
 3332 107d 91100000 		.4byte	0x1091
 3333 1081 02       		.uleb128 0x2
 3334 1082 C1510000 		.4byte	0x51c1
 3335 1086 01       		.uleb128 0x1
 3336 1087 91100000 		.4byte	0x1091
 3337 108b 01       		.uleb128 0x1
 3338 108c 4E3B0000 		.4byte	0x3b4e
 3339 1090 00       		.byte	0
 3340 1091 17       		.uleb128 0x17
 3341 1092 00000000 		.4byte	.LASF174
 3342 1096 0A       		.byte	0xa
 3343 1097 6C       		.byte	0x6c
 3344 1098 1E       		.byte	0x1e
 3345 1099 B4040000 		.4byte	0x4b4
 3346 109d 02       		.byte	0x2
 3347 109e 04       		.uleb128 0x4
 3348 109f 00000000 		.4byte	.LASF175
 3349 10a3 0A       		.byte	0xa
 3350 10a4 0E07     		.2byte	0x70e
 3351 10a6 07       		.byte	0x7
 3352 10a7 00000000 		.4byte	.LASF176
 3353 10ab F5510000 		.4byte	0x51f5
 3354 10af 01       		.byte	0x1
 3355 10b0 B8100000 		.4byte	0x10b8
 3356 10b4 C8100000 		.4byte	0x10c8
 3357 10b8 02       		.uleb128 0x2
 3358 10b9 C1510000 		.4byte	0x51c1
 3359 10bd 01       		.uleb128 0x1
 3360 10be 13010000 		.4byte	0x113
 3361 10c2 01       		.uleb128 0x1
 3362 10c3 13010000 		.4byte	0x113
 3363 10c7 00       		.byte	0
 3364 10c8 04       		.uleb128 0x4
 3365 10c9 00000000 		.4byte	.LASF175
 3366 10cd 0A       		.byte	0xa
 3367 10ce 2107     		.2byte	0x721
 3368 10d0 07       		.byte	0x7
 3369 10d1 00000000 		.4byte	.LASF177
 3370 10d5 86040000 		.4byte	0x486
 3371 10d9 01       		.byte	0x1
 3372 10da E2100000 		.4byte	0x10e2
 3373 10de ED100000 		.4byte	0x10ed
 3374 10e2 02       		.uleb128 0x2
 3375 10e3 C1510000 		.4byte	0x51c1
 3376 10e7 01       		.uleb128 0x1
 3377 10e8 91100000 		.4byte	0x1091
 3378 10ec 00       		.byte	0
 3379 10ed 04       		.uleb128 0x4
 3380 10ee 00000000 		.4byte	.LASF175
 3381 10f2 0A       		.byte	0xa
AARCH64 GAS  obj/extInstr.s 			page 269


 3382 10f3 3407     		.2byte	0x734
 3383 10f5 07       		.byte	0x7
 3384 10f6 00000000 		.4byte	.LASF178
 3385 10fa 86040000 		.4byte	0x486
 3386 10fe 01       		.byte	0x1
 3387 10ff 07110000 		.4byte	0x1107
 3388 1103 17110000 		.4byte	0x1117
 3389 1107 02       		.uleb128 0x2
 3390 1108 C1510000 		.4byte	0x51c1
 3391 110c 01       		.uleb128 0x1
 3392 110d 91100000 		.4byte	0x1091
 3393 1111 01       		.uleb128 0x1
 3394 1112 91100000 		.4byte	0x1091
 3395 1116 00       		.byte	0
 3396 1117 12       		.uleb128 0x12
 3397 1118 00000000 		.4byte	.LASF179
 3398 111c 0A       		.byte	0xa
 3399 111d 4707     		.2byte	0x747
 3400 111f 07       		.byte	0x7
 3401 1120 00000000 		.4byte	.LASF180
 3402 1124 01       		.byte	0x1
 3403 1125 2D110000 		.4byte	0x112d
 3404 1129 33110000 		.4byte	0x1133
 3405 112d 02       		.uleb128 0x2
 3406 112e C1510000 		.4byte	0x51c1
 3407 1132 00       		.byte	0
 3408 1133 04       		.uleb128 0x4
 3409 1134 00000000 		.4byte	.LASF181
 3410 1138 0A       		.byte	0xa
 3411 1139 6007     		.2byte	0x760
 3412 113b 07       		.byte	0x7
 3413 113c 00000000 		.4byte	.LASF182
 3414 1140 F5510000 		.4byte	0x51f5
 3415 1144 01       		.byte	0x1
 3416 1145 4D110000 		.4byte	0x114d
 3417 1149 62110000 		.4byte	0x1162
 3418 114d 02       		.uleb128 0x2
 3419 114e C1510000 		.4byte	0x51c1
 3420 1152 01       		.uleb128 0x1
 3421 1153 13010000 		.4byte	0x113
 3422 1157 01       		.uleb128 0x1
 3423 1158 13010000 		.4byte	0x113
 3424 115c 01       		.uleb128 0x1
 3425 115d E9510000 		.4byte	0x51e9
 3426 1161 00       		.byte	0
 3427 1162 04       		.uleb128 0x4
 3428 1163 00000000 		.4byte	.LASF181
 3429 1167 0A       		.byte	0xa
 3430 1168 7607     		.2byte	0x776
 3431 116a 07       		.byte	0x7
 3432 116b 00000000 		.4byte	.LASF183
 3433 116f F5510000 		.4byte	0x51f5
 3434 1173 01       		.byte	0x1
 3435 1174 7C110000 		.4byte	0x117c
 3436 1178 9B110000 		.4byte	0x119b
 3437 117c 02       		.uleb128 0x2
 3438 117d C1510000 		.4byte	0x51c1
AARCH64 GAS  obj/extInstr.s 			page 270


 3439 1181 01       		.uleb128 0x1
 3440 1182 13010000 		.4byte	0x113
 3441 1186 01       		.uleb128 0x1
 3442 1187 13010000 		.4byte	0x113
 3443 118b 01       		.uleb128 0x1
 3444 118c E9510000 		.4byte	0x51e9
 3445 1190 01       		.uleb128 0x1
 3446 1191 13010000 		.4byte	0x113
 3447 1195 01       		.uleb128 0x1
 3448 1196 13010000 		.4byte	0x113
 3449 119a 00       		.byte	0
 3450 119b 04       		.uleb128 0x4
 3451 119c 00000000 		.4byte	.LASF181
 3452 11a0 0A       		.byte	0xa
 3453 11a1 8F07     		.2byte	0x78f
 3454 11a3 07       		.byte	0x7
 3455 11a4 00000000 		.4byte	.LASF184
 3456 11a8 F5510000 		.4byte	0x51f5
 3457 11ac 01       		.byte	0x1
 3458 11ad B5110000 		.4byte	0x11b5
 3459 11b1 CF110000 		.4byte	0x11cf
 3460 11b5 02       		.uleb128 0x2
 3461 11b6 C1510000 		.4byte	0x51c1
 3462 11ba 01       		.uleb128 0x1
 3463 11bb 13010000 		.4byte	0x113
 3464 11bf 01       		.uleb128 0x1
 3465 11c0 13010000 		.4byte	0x113
 3466 11c4 01       		.uleb128 0x1
 3467 11c5 283D0000 		.4byte	0x3d28
 3468 11c9 01       		.uleb128 0x1
 3469 11ca 13010000 		.4byte	0x113
 3470 11ce 00       		.byte	0
 3471 11cf 04       		.uleb128 0x4
 3472 11d0 00000000 		.4byte	.LASF181
 3473 11d4 0A       		.byte	0xa
 3474 11d5 A807     		.2byte	0x7a8
 3475 11d7 07       		.byte	0x7
 3476 11d8 00000000 		.4byte	.LASF185
 3477 11dc F5510000 		.4byte	0x51f5
 3478 11e0 01       		.byte	0x1
 3479 11e1 E9110000 		.4byte	0x11e9
 3480 11e5 FE110000 		.4byte	0x11fe
 3481 11e9 02       		.uleb128 0x2
 3482 11ea C1510000 		.4byte	0x51c1
 3483 11ee 01       		.uleb128 0x1
 3484 11ef 13010000 		.4byte	0x113
 3485 11f3 01       		.uleb128 0x1
 3486 11f4 13010000 		.4byte	0x113
 3487 11f8 01       		.uleb128 0x1
 3488 11f9 283D0000 		.4byte	0x3d28
 3489 11fd 00       		.byte	0
 3490 11fe 04       		.uleb128 0x4
 3491 11ff 00000000 		.4byte	.LASF181
 3492 1203 0A       		.byte	0xa
 3493 1204 C007     		.2byte	0x7c0
 3494 1206 07       		.byte	0x7
 3495 1207 00000000 		.4byte	.LASF186
AARCH64 GAS  obj/extInstr.s 			page 271


 3496 120b F5510000 		.4byte	0x51f5
 3497 120f 01       		.byte	0x1
 3498 1210 18120000 		.4byte	0x1218
 3499 1214 32120000 		.4byte	0x1232
 3500 1218 02       		.uleb128 0x2
 3501 1219 C1510000 		.4byte	0x51c1
 3502 121d 01       		.uleb128 0x1
 3503 121e 13010000 		.4byte	0x113
 3504 1222 01       		.uleb128 0x1
 3505 1223 13010000 		.4byte	0x113
 3506 1227 01       		.uleb128 0x1
 3507 1228 13010000 		.4byte	0x113
 3508 122c 01       		.uleb128 0x1
 3509 122d 4E3B0000 		.4byte	0x3b4e
 3510 1231 00       		.byte	0
 3511 1232 04       		.uleb128 0x4
 3512 1233 00000000 		.4byte	.LASF181
 3513 1237 0A       		.byte	0xa
 3514 1238 D207     		.2byte	0x7d2
 3515 123a 07       		.byte	0x7
 3516 123b 00000000 		.4byte	.LASF187
 3517 123f F5510000 		.4byte	0x51f5
 3518 1243 01       		.byte	0x1
 3519 1244 4C120000 		.4byte	0x124c
 3520 1248 61120000 		.4byte	0x1261
 3521 124c 02       		.uleb128 0x2
 3522 124d C1510000 		.4byte	0x51c1
 3523 1251 01       		.uleb128 0x1
 3524 1252 91100000 		.4byte	0x1091
 3525 1256 01       		.uleb128 0x1
 3526 1257 91100000 		.4byte	0x1091
 3527 125b 01       		.uleb128 0x1
 3528 125c E9510000 		.4byte	0x51e9
 3529 1260 00       		.byte	0
 3530 1261 04       		.uleb128 0x4
 3531 1262 00000000 		.4byte	.LASF181
 3532 1266 0A       		.byte	0xa
 3533 1267 E607     		.2byte	0x7e6
 3534 1269 07       		.byte	0x7
 3535 126a 00000000 		.4byte	.LASF188
 3536 126e F5510000 		.4byte	0x51f5
 3537 1272 01       		.byte	0x1
 3538 1273 7B120000 		.4byte	0x127b
 3539 1277 95120000 		.4byte	0x1295
 3540 127b 02       		.uleb128 0x2
 3541 127c C1510000 		.4byte	0x51c1
 3542 1280 01       		.uleb128 0x1
 3543 1281 91100000 		.4byte	0x1091
 3544 1285 01       		.uleb128 0x1
 3545 1286 91100000 		.4byte	0x1091
 3546 128a 01       		.uleb128 0x1
 3547 128b 283D0000 		.4byte	0x3d28
 3548 128f 01       		.uleb128 0x1
 3549 1290 13010000 		.4byte	0x113
 3550 1294 00       		.byte	0
 3551 1295 04       		.uleb128 0x4
 3552 1296 00000000 		.4byte	.LASF181
AARCH64 GAS  obj/extInstr.s 			page 272


 3553 129a 0A       		.byte	0xa
 3554 129b FC07     		.2byte	0x7fc
 3555 129d 07       		.byte	0x7
 3556 129e 00000000 		.4byte	.LASF189
 3557 12a2 F5510000 		.4byte	0x51f5
 3558 12a6 01       		.byte	0x1
 3559 12a7 AF120000 		.4byte	0x12af
 3560 12ab C4120000 		.4byte	0x12c4
 3561 12af 02       		.uleb128 0x2
 3562 12b0 C1510000 		.4byte	0x51c1
 3563 12b4 01       		.uleb128 0x1
 3564 12b5 91100000 		.4byte	0x1091
 3565 12b9 01       		.uleb128 0x1
 3566 12ba 91100000 		.4byte	0x1091
 3567 12be 01       		.uleb128 0x1
 3568 12bf 283D0000 		.4byte	0x3d28
 3569 12c3 00       		.byte	0
 3570 12c4 04       		.uleb128 0x4
 3571 12c5 00000000 		.4byte	.LASF181
 3572 12c9 0A       		.byte	0xa
 3573 12ca 1108     		.2byte	0x811
 3574 12cc 07       		.byte	0x7
 3575 12cd 00000000 		.4byte	.LASF190
 3576 12d1 F5510000 		.4byte	0x51f5
 3577 12d5 01       		.byte	0x1
 3578 12d6 DE120000 		.4byte	0x12de
 3579 12da F8120000 		.4byte	0x12f8
 3580 12de 02       		.uleb128 0x2
 3581 12df C1510000 		.4byte	0x51c1
 3582 12e3 01       		.uleb128 0x1
 3583 12e4 91100000 		.4byte	0x1091
 3584 12e8 01       		.uleb128 0x1
 3585 12e9 91100000 		.4byte	0x1091
 3586 12ed 01       		.uleb128 0x1
 3587 12ee 13010000 		.4byte	0x113
 3588 12f2 01       		.uleb128 0x1
 3589 12f3 4E3B0000 		.4byte	0x3b4e
 3590 12f7 00       		.byte	0
 3591 12f8 04       		.uleb128 0x4
 3592 12f9 00000000 		.4byte	.LASF181
 3593 12fd 0A       		.byte	0xa
 3594 12fe 4A08     		.2byte	0x84a
 3595 1300 07       		.byte	0x7
 3596 1301 00000000 		.4byte	.LASF191
 3597 1305 F5510000 		.4byte	0x51f5
 3598 1309 01       		.byte	0x1
 3599 130a 12130000 		.4byte	0x1312
 3600 130e 2C130000 		.4byte	0x132c
 3601 1312 02       		.uleb128 0x2
 3602 1313 C1510000 		.4byte	0x51c1
 3603 1317 01       		.uleb128 0x1
 3604 1318 91100000 		.4byte	0x1091
 3605 131c 01       		.uleb128 0x1
 3606 131d 91100000 		.4byte	0x1091
 3607 1321 01       		.uleb128 0x1
 3608 1322 6C400000 		.4byte	0x406c
 3609 1326 01       		.uleb128 0x1
AARCH64 GAS  obj/extInstr.s 			page 273


 3610 1327 6C400000 		.4byte	0x406c
 3611 132b 00       		.byte	0
 3612 132c 04       		.uleb128 0x4
 3613 132d 00000000 		.4byte	.LASF181
 3614 1331 0A       		.byte	0xa
 3615 1332 5508     		.2byte	0x855
 3616 1334 07       		.byte	0x7
 3617 1335 00000000 		.4byte	.LASF192
 3618 1339 F5510000 		.4byte	0x51f5
 3619 133d 01       		.byte	0x1
 3620 133e 46130000 		.4byte	0x1346
 3621 1342 60130000 		.4byte	0x1360
 3622 1346 02       		.uleb128 0x2
 3623 1347 C1510000 		.4byte	0x51c1
 3624 134b 01       		.uleb128 0x1
 3625 134c 91100000 		.4byte	0x1091
 3626 1350 01       		.uleb128 0x1
 3627 1351 91100000 		.4byte	0x1091
 3628 1355 01       		.uleb128 0x1
 3629 1356 283D0000 		.4byte	0x3d28
 3630 135a 01       		.uleb128 0x1
 3631 135b 283D0000 		.4byte	0x3d28
 3632 135f 00       		.byte	0
 3633 1360 04       		.uleb128 0x4
 3634 1361 00000000 		.4byte	.LASF181
 3635 1365 0A       		.byte	0xa
 3636 1366 6008     		.2byte	0x860
 3637 1368 07       		.byte	0x7
 3638 1369 00000000 		.4byte	.LASF193
 3639 136d F5510000 		.4byte	0x51f5
 3640 1371 01       		.byte	0x1
 3641 1372 7A130000 		.4byte	0x137a
 3642 1376 94130000 		.4byte	0x1394
 3643 137a 02       		.uleb128 0x2
 3644 137b C1510000 		.4byte	0x51c1
 3645 137f 01       		.uleb128 0x1
 3646 1380 91100000 		.4byte	0x1091
 3647 1384 01       		.uleb128 0x1
 3648 1385 91100000 		.4byte	0x1091
 3649 1389 01       		.uleb128 0x1
 3650 138a 86040000 		.4byte	0x486
 3651 138e 01       		.uleb128 0x1
 3652 138f 86040000 		.4byte	0x486
 3653 1393 00       		.byte	0
 3654 1394 04       		.uleb128 0x4
 3655 1395 00000000 		.4byte	.LASF181
 3656 1399 0A       		.byte	0xa
 3657 139a 6B08     		.2byte	0x86b
 3658 139c 07       		.byte	0x7
 3659 139d 00000000 		.4byte	.LASF194
 3660 13a1 F5510000 		.4byte	0x51f5
 3661 13a5 01       		.byte	0x1
 3662 13a6 AE130000 		.4byte	0x13ae
 3663 13aa C8130000 		.4byte	0x13c8
 3664 13ae 02       		.uleb128 0x2
 3665 13af C1510000 		.4byte	0x51c1
 3666 13b3 01       		.uleb128 0x1
AARCH64 GAS  obj/extInstr.s 			page 274


 3667 13b4 91100000 		.4byte	0x1091
 3668 13b8 01       		.uleb128 0x1
 3669 13b9 91100000 		.4byte	0x1091
 3670 13bd 01       		.uleb128 0x1
 3671 13be B4040000 		.4byte	0x4b4
 3672 13c2 01       		.uleb128 0x1
 3673 13c3 B4040000 		.4byte	0x4b4
 3674 13c7 00       		.byte	0
 3675 13c8 04       		.uleb128 0x4
 3676 13c9 00000000 		.4byte	.LASF181
 3677 13cd 0A       		.byte	0xa
 3678 13ce 8408     		.2byte	0x884
 3679 13d0 15       		.byte	0x15
 3680 13d1 00000000 		.4byte	.LASF195
 3681 13d5 F5510000 		.4byte	0x51f5
 3682 13d9 01       		.byte	0x1
 3683 13da E2130000 		.4byte	0x13e2
 3684 13de F7130000 		.4byte	0x13f7
 3685 13e2 02       		.uleb128 0x2
 3686 13e3 C1510000 		.4byte	0x51c1
 3687 13e7 01       		.uleb128 0x1
 3688 13e8 B4040000 		.4byte	0x4b4
 3689 13ec 01       		.uleb128 0x1
 3690 13ed B4040000 		.4byte	0x4b4
 3691 13f1 01       		.uleb128 0x1
 3692 13f2 55270000 		.4byte	0x2755
 3693 13f6 00       		.byte	0
 3694 13f7 31       		.uleb128 0x31
 3695 13f8 00000000 		.4byte	.LASF196
 3696 13fc 0A       		.byte	0xa
 3697 13fd CE08     		.2byte	0x8ce
 3698 13ff 07       		.byte	0x7
 3699 1400 00000000 		.4byte	.LASF197
 3700 1404 F5510000 		.4byte	0x51f5
 3701 1408 10140000 		.4byte	0x1410
 3702 140c 2A140000 		.4byte	0x142a
 3703 1410 02       		.uleb128 0x2
 3704 1411 C1510000 		.4byte	0x51c1
 3705 1415 01       		.uleb128 0x1
 3706 1416 13010000 		.4byte	0x113
 3707 141a 01       		.uleb128 0x1
 3708 141b 13010000 		.4byte	0x113
 3709 141f 01       		.uleb128 0x1
 3710 1420 13010000 		.4byte	0x113
 3711 1424 01       		.uleb128 0x1
 3712 1425 4E3B0000 		.4byte	0x3b4e
 3713 1429 00       		.byte	0
 3714 142a 31       		.uleb128 0x31
 3715 142b 00000000 		.4byte	.LASF198
 3716 142f 0A       		.byte	0xa
 3717 1430 D208     		.2byte	0x8d2
 3718 1432 07       		.byte	0x7
 3719 1433 00000000 		.4byte	.LASF199
 3720 1437 F5510000 		.4byte	0x51f5
 3721 143b 43140000 		.4byte	0x1443
 3722 143f 5D140000 		.4byte	0x145d
 3723 1443 02       		.uleb128 0x2
AARCH64 GAS  obj/extInstr.s 			page 275


 3724 1444 C1510000 		.4byte	0x51c1
 3725 1448 01       		.uleb128 0x1
 3726 1449 13010000 		.4byte	0x113
 3727 144d 01       		.uleb128 0x1
 3728 144e 13010000 		.4byte	0x113
 3729 1452 01       		.uleb128 0x1
 3730 1453 283D0000 		.4byte	0x3d28
 3731 1457 01       		.uleb128 0x1
 3732 1458 13010000 		.4byte	0x113
 3733 145c 00       		.byte	0
 3734 145d 31       		.uleb128 0x31
 3735 145e 00000000 		.4byte	.LASF200
 3736 1462 0A       		.byte	0xa
 3737 1463 D608     		.2byte	0x8d6
 3738 1465 07       		.byte	0x7
 3739 1466 00000000 		.4byte	.LASF201
 3740 146a F5510000 		.4byte	0x51f5
 3741 146e 76140000 		.4byte	0x1476
 3742 1472 86140000 		.4byte	0x1486
 3743 1476 02       		.uleb128 0x2
 3744 1477 C1510000 		.4byte	0x51c1
 3745 147b 01       		.uleb128 0x1
 3746 147c 283D0000 		.4byte	0x3d28
 3747 1480 01       		.uleb128 0x1
 3748 1481 13010000 		.4byte	0x113
 3749 1485 00       		.byte	0
 3750 1486 04       		.uleb128 0x4
 3751 1487 00000000 		.4byte	.LASF202
 3752 148b 0A       		.byte	0xa
 3753 148c E708     		.2byte	0x8e7
 3754 148e 07       		.byte	0x7
 3755 148f 00000000 		.4byte	.LASF203
 3756 1493 13010000 		.4byte	0x113
 3757 1497 01       		.byte	0x1
 3758 1498 A0140000 		.4byte	0x14a0
 3759 149c B5140000 		.4byte	0x14b5
 3760 14a0 02       		.uleb128 0x2
 3761 14a1 CC510000 		.4byte	0x51cc
 3762 14a5 01       		.uleb128 0x1
 3763 14a6 6C400000 		.4byte	0x406c
 3764 14aa 01       		.uleb128 0x1
 3765 14ab 13010000 		.4byte	0x113
 3766 14af 01       		.uleb128 0x1
 3767 14b0 13010000 		.4byte	0x113
 3768 14b4 00       		.byte	0
 3769 14b5 12       		.uleb128 0x12
 3770 14b6 00000000 		.4byte	.LASF204
 3771 14ba 0A       		.byte	0xa
 3772 14bb F108     		.2byte	0x8f1
 3773 14bd 07       		.byte	0x7
 3774 14be 00000000 		.4byte	.LASF205
 3775 14c2 01       		.byte	0x1
 3776 14c3 CB140000 		.4byte	0x14cb
 3777 14c7 D6140000 		.4byte	0x14d6
 3778 14cb 02       		.uleb128 0x2
 3779 14cc C1510000 		.4byte	0x51c1
 3780 14d0 01       		.uleb128 0x1
AARCH64 GAS  obj/extInstr.s 			page 276


 3781 14d1 F5510000 		.4byte	0x51f5
 3782 14d5 00       		.byte	0
 3783 14d6 04       		.uleb128 0x4
 3784 14d7 00000000 		.4byte	.LASF206
 3785 14db 0A       		.byte	0xa
 3786 14dc FB08     		.2byte	0x8fb
 3787 14de 07       		.byte	0x7
 3788 14df 00000000 		.4byte	.LASF207
 3789 14e3 283D0000 		.4byte	0x3d28
 3790 14e7 01       		.byte	0x1
 3791 14e8 F0140000 		.4byte	0x14f0
 3792 14ec F6140000 		.4byte	0x14f6
 3793 14f0 02       		.uleb128 0x2
 3794 14f1 CC510000 		.4byte	0x51cc
 3795 14f5 00       		.byte	0
 3796 14f6 04       		.uleb128 0x4
 3797 14f7 00000000 		.4byte	.LASF208
 3798 14fb 0A       		.byte	0xa
 3799 14fc 0709     		.2byte	0x907
 3800 14fe 07       		.byte	0x7
 3801 14ff 00000000 		.4byte	.LASF209
 3802 1503 283D0000 		.4byte	0x3d28
 3803 1507 01       		.byte	0x1
 3804 1508 10150000 		.4byte	0x1510
 3805 150c 16150000 		.4byte	0x1516
 3806 1510 02       		.uleb128 0x2
 3807 1511 CC510000 		.4byte	0x51cc
 3808 1515 00       		.byte	0
 3809 1516 04       		.uleb128 0x4
 3810 1517 00000000 		.4byte	.LASF210
 3811 151b 0A       		.byte	0xa
 3812 151c 1A09     		.2byte	0x91a
 3813 151e 07       		.byte	0x7
 3814 151f 00000000 		.4byte	.LASF211
 3815 1523 06030000 		.4byte	0x306
 3816 1527 01       		.byte	0x1
 3817 1528 30150000 		.4byte	0x1530
 3818 152c 36150000 		.4byte	0x1536
 3819 1530 02       		.uleb128 0x2
 3820 1531 CC510000 		.4byte	0x51cc
 3821 1535 00       		.byte	0
 3822 1536 04       		.uleb128 0x4
 3823 1537 00000000 		.4byte	.LASF212
 3824 153b 0A       		.byte	0xa
 3825 153c 2A09     		.2byte	0x92a
 3826 153e 07       		.byte	0x7
 3827 153f 00000000 		.4byte	.LASF213
 3828 1543 13010000 		.4byte	0x113
 3829 1547 01       		.byte	0x1
 3830 1548 50150000 		.4byte	0x1550
 3831 154c 65150000 		.4byte	0x1565
 3832 1550 02       		.uleb128 0x2
 3833 1551 CC510000 		.4byte	0x51cc
 3834 1555 01       		.uleb128 0x1
 3835 1556 283D0000 		.4byte	0x3d28
 3836 155a 01       		.uleb128 0x1
 3837 155b 13010000 		.4byte	0x113
AARCH64 GAS  obj/extInstr.s 			page 277


 3838 155f 01       		.uleb128 0x1
 3839 1560 13010000 		.4byte	0x113
 3840 1564 00       		.byte	0
 3841 1565 04       		.uleb128 0x4
 3842 1566 00000000 		.4byte	.LASF212
 3843 156a 0A       		.byte	0xa
 3844 156b 3809     		.2byte	0x938
 3845 156d 07       		.byte	0x7
 3846 156e 00000000 		.4byte	.LASF214
 3847 1572 13010000 		.4byte	0x113
 3848 1576 01       		.byte	0x1
 3849 1577 7F150000 		.4byte	0x157f
 3850 157b 8F150000 		.4byte	0x158f
 3851 157f 02       		.uleb128 0x2
 3852 1580 CC510000 		.4byte	0x51cc
 3853 1584 01       		.uleb128 0x1
 3854 1585 E9510000 		.4byte	0x51e9
 3855 1589 01       		.uleb128 0x1
 3856 158a 13010000 		.4byte	0x113
 3857 158e 00       		.byte	0
 3858 158f 04       		.uleb128 0x4
 3859 1590 00000000 		.4byte	.LASF212
 3860 1594 0A       		.byte	0xa
 3861 1595 5809     		.2byte	0x958
 3862 1597 07       		.byte	0x7
 3863 1598 00000000 		.4byte	.LASF215
 3864 159c 13010000 		.4byte	0x113
 3865 15a0 01       		.byte	0x1
 3866 15a1 A9150000 		.4byte	0x15a9
 3867 15a5 B9150000 		.4byte	0x15b9
 3868 15a9 02       		.uleb128 0x2
 3869 15aa CC510000 		.4byte	0x51cc
 3870 15ae 01       		.uleb128 0x1
 3871 15af 283D0000 		.4byte	0x3d28
 3872 15b3 01       		.uleb128 0x1
 3873 15b4 13010000 		.4byte	0x113
 3874 15b8 00       		.byte	0
 3875 15b9 04       		.uleb128 0x4
 3876 15ba 00000000 		.4byte	.LASF212
 3877 15be 0A       		.byte	0xa
 3878 15bf 6909     		.2byte	0x969
 3879 15c1 07       		.byte	0x7
 3880 15c2 00000000 		.4byte	.LASF216
 3881 15c6 13010000 		.4byte	0x113
 3882 15ca 01       		.byte	0x1
 3883 15cb D3150000 		.4byte	0x15d3
 3884 15cf E3150000 		.4byte	0x15e3
 3885 15d3 02       		.uleb128 0x2
 3886 15d4 CC510000 		.4byte	0x51cc
 3887 15d8 01       		.uleb128 0x1
 3888 15d9 4E3B0000 		.4byte	0x3b4e
 3889 15dd 01       		.uleb128 0x1
 3890 15de 13010000 		.4byte	0x113
 3891 15e2 00       		.byte	0
 3892 15e3 04       		.uleb128 0x4
 3893 15e4 00000000 		.4byte	.LASF217
 3894 15e8 0A       		.byte	0xa
AARCH64 GAS  obj/extInstr.s 			page 278


 3895 15e9 7609     		.2byte	0x976
 3896 15eb 07       		.byte	0x7
 3897 15ec 00000000 		.4byte	.LASF218
 3898 15f0 13010000 		.4byte	0x113
 3899 15f4 01       		.byte	0x1
 3900 15f5 FD150000 		.4byte	0x15fd
 3901 15f9 0D160000 		.4byte	0x160d
 3902 15fd 02       		.uleb128 0x2
 3903 15fe CC510000 		.4byte	0x51cc
 3904 1602 01       		.uleb128 0x1
 3905 1603 E9510000 		.4byte	0x51e9
 3906 1607 01       		.uleb128 0x1
 3907 1608 13010000 		.4byte	0x113
 3908 160c 00       		.byte	0
 3909 160d 04       		.uleb128 0x4
 3910 160e 00000000 		.4byte	.LASF217
 3911 1612 0A       		.byte	0xa
 3912 1613 9809     		.2byte	0x998
 3913 1615 07       		.byte	0x7
 3914 1616 00000000 		.4byte	.LASF219
 3915 161a 13010000 		.4byte	0x113
 3916 161e 01       		.byte	0x1
 3917 161f 27160000 		.4byte	0x1627
 3918 1623 3C160000 		.4byte	0x163c
 3919 1627 02       		.uleb128 0x2
 3920 1628 CC510000 		.4byte	0x51cc
 3921 162c 01       		.uleb128 0x1
 3922 162d 283D0000 		.4byte	0x3d28
 3923 1631 01       		.uleb128 0x1
 3924 1632 13010000 		.4byte	0x113
 3925 1636 01       		.uleb128 0x1
 3926 1637 13010000 		.4byte	0x113
 3927 163b 00       		.byte	0
 3928 163c 04       		.uleb128 0x4
 3929 163d 00000000 		.4byte	.LASF217
 3930 1641 0A       		.byte	0xa
 3931 1642 A609     		.2byte	0x9a6
 3932 1644 07       		.byte	0x7
 3933 1645 00000000 		.4byte	.LASF220
 3934 1649 13010000 		.4byte	0x113
 3935 164d 01       		.byte	0x1
 3936 164e 56160000 		.4byte	0x1656
 3937 1652 66160000 		.4byte	0x1666
 3938 1656 02       		.uleb128 0x2
 3939 1657 CC510000 		.4byte	0x51cc
 3940 165b 01       		.uleb128 0x1
 3941 165c 283D0000 		.4byte	0x3d28
 3942 1660 01       		.uleb128 0x1
 3943 1661 13010000 		.4byte	0x113
 3944 1665 00       		.byte	0
 3945 1666 04       		.uleb128 0x4
 3946 1667 00000000 		.4byte	.LASF217
 3947 166b 0A       		.byte	0xa
 3948 166c B709     		.2byte	0x9b7
 3949 166e 07       		.byte	0x7
 3950 166f 00000000 		.4byte	.LASF221
 3951 1673 13010000 		.4byte	0x113
AARCH64 GAS  obj/extInstr.s 			page 279


 3952 1677 01       		.byte	0x1
 3953 1678 80160000 		.4byte	0x1680
 3954 167c 90160000 		.4byte	0x1690
 3955 1680 02       		.uleb128 0x2
 3956 1681 CC510000 		.4byte	0x51cc
 3957 1685 01       		.uleb128 0x1
 3958 1686 4E3B0000 		.4byte	0x3b4e
 3959 168a 01       		.uleb128 0x1
 3960 168b 13010000 		.4byte	0x113
 3961 168f 00       		.byte	0
 3962 1690 04       		.uleb128 0x4
 3963 1691 00000000 		.4byte	.LASF222
 3964 1695 0A       		.byte	0xa
 3965 1696 C509     		.2byte	0x9c5
 3966 1698 07       		.byte	0x7
 3967 1699 00000000 		.4byte	.LASF223
 3968 169d 13010000 		.4byte	0x113
 3969 16a1 01       		.byte	0x1
 3970 16a2 AA160000 		.4byte	0x16aa
 3971 16a6 BA160000 		.4byte	0x16ba
 3972 16aa 02       		.uleb128 0x2
 3973 16ab CC510000 		.4byte	0x51cc
 3974 16af 01       		.uleb128 0x1
 3975 16b0 E9510000 		.4byte	0x51e9
 3976 16b4 01       		.uleb128 0x1
 3977 16b5 13010000 		.4byte	0x113
 3978 16b9 00       		.byte	0
 3979 16ba 04       		.uleb128 0x4
 3980 16bb 00000000 		.4byte	.LASF222
 3981 16bf 0A       		.byte	0xa
 3982 16c0 E809     		.2byte	0x9e8
 3983 16c2 07       		.byte	0x7
 3984 16c3 00000000 		.4byte	.LASF224
 3985 16c7 13010000 		.4byte	0x113
 3986 16cb 01       		.byte	0x1
 3987 16cc D4160000 		.4byte	0x16d4
 3988 16d0 E9160000 		.4byte	0x16e9
 3989 16d4 02       		.uleb128 0x2
 3990 16d5 CC510000 		.4byte	0x51cc
 3991 16d9 01       		.uleb128 0x1
 3992 16da 283D0000 		.4byte	0x3d28
 3993 16de 01       		.uleb128 0x1
 3994 16df 13010000 		.4byte	0x113
 3995 16e3 01       		.uleb128 0x1
 3996 16e4 13010000 		.4byte	0x113
 3997 16e8 00       		.byte	0
 3998 16e9 04       		.uleb128 0x4
 3999 16ea 00000000 		.4byte	.LASF222
 4000 16ee 0A       		.byte	0xa
 4001 16ef F609     		.2byte	0x9f6
 4002 16f1 07       		.byte	0x7
 4003 16f2 00000000 		.4byte	.LASF225
 4004 16f6 13010000 		.4byte	0x113
 4005 16fa 01       		.byte	0x1
 4006 16fb 03170000 		.4byte	0x1703
 4007 16ff 13170000 		.4byte	0x1713
 4008 1703 02       		.uleb128 0x2
AARCH64 GAS  obj/extInstr.s 			page 280


 4009 1704 CC510000 		.4byte	0x51cc
 4010 1708 01       		.uleb128 0x1
 4011 1709 283D0000 		.4byte	0x3d28
 4012 170d 01       		.uleb128 0x1
 4013 170e 13010000 		.4byte	0x113
 4014 1712 00       		.byte	0
 4015 1713 04       		.uleb128 0x4
 4016 1714 00000000 		.4byte	.LASF222
 4017 1718 0A       		.byte	0xa
 4018 1719 0A0A     		.2byte	0xa0a
 4019 171b 07       		.byte	0x7
 4020 171c 00000000 		.4byte	.LASF226
 4021 1720 13010000 		.4byte	0x113
 4022 1724 01       		.byte	0x1
 4023 1725 2D170000 		.4byte	0x172d
 4024 1729 3D170000 		.4byte	0x173d
 4025 172d 02       		.uleb128 0x2
 4026 172e CC510000 		.4byte	0x51cc
 4027 1732 01       		.uleb128 0x1
 4028 1733 4E3B0000 		.4byte	0x3b4e
 4029 1737 01       		.uleb128 0x1
 4030 1738 13010000 		.4byte	0x113
 4031 173c 00       		.byte	0
 4032 173d 04       		.uleb128 0x4
 4033 173e 00000000 		.4byte	.LASF227
 4034 1742 0A       		.byte	0xa
 4035 1743 190A     		.2byte	0xa19
 4036 1745 07       		.byte	0x7
 4037 1746 00000000 		.4byte	.LASF228
 4038 174a 13010000 		.4byte	0x113
 4039 174e 01       		.byte	0x1
 4040 174f 57170000 		.4byte	0x1757
 4041 1753 67170000 		.4byte	0x1767
 4042 1757 02       		.uleb128 0x2
 4043 1758 CC510000 		.4byte	0x51cc
 4044 175c 01       		.uleb128 0x1
 4045 175d E9510000 		.4byte	0x51e9
 4046 1761 01       		.uleb128 0x1
 4047 1762 13010000 		.4byte	0x113
 4048 1766 00       		.byte	0
 4049 1767 04       		.uleb128 0x4
 4050 1768 00000000 		.4byte	.LASF227
 4051 176c 0A       		.byte	0xa
 4052 176d 3C0A     		.2byte	0xa3c
 4053 176f 07       		.byte	0x7
 4054 1770 00000000 		.4byte	.LASF229
 4055 1774 13010000 		.4byte	0x113
 4056 1778 01       		.byte	0x1
 4057 1779 81170000 		.4byte	0x1781
 4058 177d 96170000 		.4byte	0x1796
 4059 1781 02       		.uleb128 0x2
 4060 1782 CC510000 		.4byte	0x51cc
 4061 1786 01       		.uleb128 0x1
 4062 1787 283D0000 		.4byte	0x3d28
 4063 178b 01       		.uleb128 0x1
 4064 178c 13010000 		.4byte	0x113
 4065 1790 01       		.uleb128 0x1
AARCH64 GAS  obj/extInstr.s 			page 281


 4066 1791 13010000 		.4byte	0x113
 4067 1795 00       		.byte	0
 4068 1796 04       		.uleb128 0x4
 4069 1797 00000000 		.4byte	.LASF227
 4070 179b 0A       		.byte	0xa
 4071 179c 4A0A     		.2byte	0xa4a
 4072 179e 07       		.byte	0x7
 4073 179f 00000000 		.4byte	.LASF230
 4074 17a3 13010000 		.4byte	0x113
 4075 17a7 01       		.byte	0x1
 4076 17a8 B0170000 		.4byte	0x17b0
 4077 17ac C0170000 		.4byte	0x17c0
 4078 17b0 02       		.uleb128 0x2
 4079 17b1 CC510000 		.4byte	0x51cc
 4080 17b5 01       		.uleb128 0x1
 4081 17b6 283D0000 		.4byte	0x3d28
 4082 17ba 01       		.uleb128 0x1
 4083 17bb 13010000 		.4byte	0x113
 4084 17bf 00       		.byte	0
 4085 17c0 04       		.uleb128 0x4
 4086 17c1 00000000 		.4byte	.LASF227
 4087 17c5 0A       		.byte	0xa
 4088 17c6 5E0A     		.2byte	0xa5e
 4089 17c8 07       		.byte	0x7
 4090 17c9 00000000 		.4byte	.LASF231
 4091 17cd 13010000 		.4byte	0x113
 4092 17d1 01       		.byte	0x1
 4093 17d2 DA170000 		.4byte	0x17da
 4094 17d6 EA170000 		.4byte	0x17ea
 4095 17da 02       		.uleb128 0x2
 4096 17db CC510000 		.4byte	0x51cc
 4097 17df 01       		.uleb128 0x1
 4098 17e0 4E3B0000 		.4byte	0x3b4e
 4099 17e4 01       		.uleb128 0x1
 4100 17e5 13010000 		.4byte	0x113
 4101 17e9 00       		.byte	0
 4102 17ea 04       		.uleb128 0x4
 4103 17eb 00000000 		.4byte	.LASF232
 4104 17ef 0A       		.byte	0xa
 4105 17f0 6C0A     		.2byte	0xa6c
 4106 17f2 07       		.byte	0x7
 4107 17f3 00000000 		.4byte	.LASF233
 4108 17f7 13010000 		.4byte	0x113
 4109 17fb 01       		.byte	0x1
 4110 17fc 04180000 		.4byte	0x1804
 4111 1800 14180000 		.4byte	0x1814
 4112 1804 02       		.uleb128 0x2
 4113 1805 CC510000 		.4byte	0x51cc
 4114 1809 01       		.uleb128 0x1
 4115 180a E9510000 		.4byte	0x51e9
 4116 180e 01       		.uleb128 0x1
 4117 180f 13010000 		.4byte	0x113
 4118 1813 00       		.byte	0
 4119 1814 04       		.uleb128 0x4
 4120 1815 00000000 		.4byte	.LASF232
 4121 1819 0A       		.byte	0xa
 4122 181a 8F0A     		.2byte	0xa8f
AARCH64 GAS  obj/extInstr.s 			page 282


 4123 181c 07       		.byte	0x7
 4124 181d 00000000 		.4byte	.LASF234
 4125 1821 13010000 		.4byte	0x113
 4126 1825 01       		.byte	0x1
 4127 1826 2E180000 		.4byte	0x182e
 4128 182a 43180000 		.4byte	0x1843
 4129 182e 02       		.uleb128 0x2
 4130 182f CC510000 		.4byte	0x51cc
 4131 1833 01       		.uleb128 0x1
 4132 1834 283D0000 		.4byte	0x3d28
 4133 1838 01       		.uleb128 0x1
 4134 1839 13010000 		.4byte	0x113
 4135 183d 01       		.uleb128 0x1
 4136 183e 13010000 		.4byte	0x113
 4137 1842 00       		.byte	0
 4138 1843 04       		.uleb128 0x4
 4139 1844 00000000 		.4byte	.LASF232
 4140 1848 0A       		.byte	0xa
 4141 1849 9D0A     		.2byte	0xa9d
 4142 184b 07       		.byte	0x7
 4143 184c 00000000 		.4byte	.LASF235
 4144 1850 13010000 		.4byte	0x113
 4145 1854 01       		.byte	0x1
 4146 1855 5D180000 		.4byte	0x185d
 4147 1859 6D180000 		.4byte	0x186d
 4148 185d 02       		.uleb128 0x2
 4149 185e CC510000 		.4byte	0x51cc
 4150 1862 01       		.uleb128 0x1
 4151 1863 283D0000 		.4byte	0x3d28
 4152 1867 01       		.uleb128 0x1
 4153 1868 13010000 		.4byte	0x113
 4154 186c 00       		.byte	0
 4155 186d 04       		.uleb128 0x4
 4156 186e 00000000 		.4byte	.LASF232
 4157 1872 0A       		.byte	0xa
 4158 1873 AF0A     		.2byte	0xaaf
 4159 1875 07       		.byte	0x7
 4160 1876 00000000 		.4byte	.LASF236
 4161 187a 13010000 		.4byte	0x113
 4162 187e 01       		.byte	0x1
 4163 187f 87180000 		.4byte	0x1887
 4164 1883 97180000 		.4byte	0x1897
 4165 1887 02       		.uleb128 0x2
 4166 1888 CC510000 		.4byte	0x51cc
 4167 188c 01       		.uleb128 0x1
 4168 188d 4E3B0000 		.4byte	0x3b4e
 4169 1891 01       		.uleb128 0x1
 4170 1892 13010000 		.4byte	0x113
 4171 1896 00       		.byte	0
 4172 1897 04       		.uleb128 0x4
 4173 1898 00000000 		.4byte	.LASF237
 4174 189c 0A       		.byte	0xa
 4175 189d BE0A     		.2byte	0xabe
 4176 189f 07       		.byte	0x7
 4177 18a0 00000000 		.4byte	.LASF238
 4178 18a4 13010000 		.4byte	0x113
 4179 18a8 01       		.byte	0x1
AARCH64 GAS  obj/extInstr.s 			page 283


 4180 18a9 B1180000 		.4byte	0x18b1
 4181 18ad C1180000 		.4byte	0x18c1
 4182 18b1 02       		.uleb128 0x2
 4183 18b2 CC510000 		.4byte	0x51cc
 4184 18b6 01       		.uleb128 0x1
 4185 18b7 E9510000 		.4byte	0x51e9
 4186 18bb 01       		.uleb128 0x1
 4187 18bc 13010000 		.4byte	0x113
 4188 18c0 00       		.byte	0
 4189 18c1 04       		.uleb128 0x4
 4190 18c2 00000000 		.4byte	.LASF237
 4191 18c6 0A       		.byte	0xa
 4192 18c7 E10A     		.2byte	0xae1
 4193 18c9 07       		.byte	0x7
 4194 18ca 00000000 		.4byte	.LASF239
 4195 18ce 13010000 		.4byte	0x113
 4196 18d2 01       		.byte	0x1
 4197 18d3 DB180000 		.4byte	0x18db
 4198 18d7 F0180000 		.4byte	0x18f0
 4199 18db 02       		.uleb128 0x2
 4200 18dc CC510000 		.4byte	0x51cc
 4201 18e0 01       		.uleb128 0x1
 4202 18e1 283D0000 		.4byte	0x3d28
 4203 18e5 01       		.uleb128 0x1
 4204 18e6 13010000 		.4byte	0x113
 4205 18ea 01       		.uleb128 0x1
 4206 18eb 13010000 		.4byte	0x113
 4207 18ef 00       		.byte	0
 4208 18f0 04       		.uleb128 0x4
 4209 18f1 00000000 		.4byte	.LASF237
 4210 18f5 0A       		.byte	0xa
 4211 18f6 EF0A     		.2byte	0xaef
 4212 18f8 07       		.byte	0x7
 4213 18f9 00000000 		.4byte	.LASF240
 4214 18fd 13010000 		.4byte	0x113
 4215 1901 01       		.byte	0x1
 4216 1902 0A190000 		.4byte	0x190a
 4217 1906 1A190000 		.4byte	0x191a
 4218 190a 02       		.uleb128 0x2
 4219 190b CC510000 		.4byte	0x51cc
 4220 190f 01       		.uleb128 0x1
 4221 1910 283D0000 		.4byte	0x3d28
 4222 1914 01       		.uleb128 0x1
 4223 1915 13010000 		.4byte	0x113
 4224 1919 00       		.byte	0
 4225 191a 04       		.uleb128 0x4
 4226 191b 00000000 		.4byte	.LASF237
 4227 191f 0A       		.byte	0xa
 4228 1920 010B     		.2byte	0xb01
 4229 1922 07       		.byte	0x7
 4230 1923 00000000 		.4byte	.LASF241
 4231 1927 13010000 		.4byte	0x113
 4232 192b 01       		.byte	0x1
 4233 192c 34190000 		.4byte	0x1934
 4234 1930 44190000 		.4byte	0x1944
 4235 1934 02       		.uleb128 0x2
 4236 1935 CC510000 		.4byte	0x51cc
AARCH64 GAS  obj/extInstr.s 			page 284


 4237 1939 01       		.uleb128 0x1
 4238 193a 4E3B0000 		.4byte	0x3b4e
 4239 193e 01       		.uleb128 0x1
 4240 193f 13010000 		.4byte	0x113
 4241 1943 00       		.byte	0
 4242 1944 04       		.uleb128 0x4
 4243 1945 00000000 		.4byte	.LASF242
 4244 1949 0A       		.byte	0xa
 4245 194a 110B     		.2byte	0xb11
 4246 194c 07       		.byte	0x7
 4247 194d 00000000 		.4byte	.LASF243
 4248 1951 41000000 		.4byte	0x41
 4249 1955 01       		.byte	0x1
 4250 1956 5E190000 		.4byte	0x195e
 4251 195a 6E190000 		.4byte	0x196e
 4252 195e 02       		.uleb128 0x2
 4253 195f CC510000 		.4byte	0x51cc
 4254 1963 01       		.uleb128 0x1
 4255 1964 13010000 		.4byte	0x113
 4256 1968 01       		.uleb128 0x1
 4257 1969 13010000 		.4byte	0x113
 4258 196d 00       		.byte	0
 4259 196e 04       		.uleb128 0x4
 4260 196f 00000000 		.4byte	.LASF244
 4261 1973 0A       		.byte	0xa
 4262 1974 240B     		.2byte	0xb24
 4263 1976 07       		.byte	0x7
 4264 1977 00000000 		.4byte	.LASF245
 4265 197b D43A0000 		.4byte	0x3ad4
 4266 197f 01       		.byte	0x1
 4267 1980 88190000 		.4byte	0x1988
 4268 1984 93190000 		.4byte	0x1993
 4269 1988 02       		.uleb128 0x2
 4270 1989 CC510000 		.4byte	0x51cc
 4271 198d 01       		.uleb128 0x1
 4272 198e E9510000 		.4byte	0x51e9
 4273 1992 00       		.byte	0
 4274 1993 04       		.uleb128 0x4
 4275 1994 00000000 		.4byte	.LASF244
 4276 1998 0A       		.byte	0xa
 4277 1999 810B     		.2byte	0xb81
 4278 199b 07       		.byte	0x7
 4279 199c 00000000 		.4byte	.LASF246
 4280 19a0 D43A0000 		.4byte	0x3ad4
 4281 19a4 01       		.byte	0x1
 4282 19a5 AD190000 		.4byte	0x19ad
 4283 19a9 C2190000 		.4byte	0x19c2
 4284 19ad 02       		.uleb128 0x2
 4285 19ae CC510000 		.4byte	0x51cc
 4286 19b2 01       		.uleb128 0x1
 4287 19b3 13010000 		.4byte	0x113
 4288 19b7 01       		.uleb128 0x1
 4289 19b8 13010000 		.4byte	0x113
 4290 19bc 01       		.uleb128 0x1
 4291 19bd E9510000 		.4byte	0x51e9
 4292 19c1 00       		.byte	0
 4293 19c2 04       		.uleb128 0x4
AARCH64 GAS  obj/extInstr.s 			page 285


 4294 19c3 00000000 		.4byte	.LASF244
 4295 19c7 0A       		.byte	0xa
 4296 19c8 9B0B     		.2byte	0xb9b
 4297 19ca 07       		.byte	0x7
 4298 19cb 00000000 		.4byte	.LASF247
 4299 19cf D43A0000 		.4byte	0x3ad4
 4300 19d3 01       		.byte	0x1
 4301 19d4 DC190000 		.4byte	0x19dc
 4302 19d8 FB190000 		.4byte	0x19fb
 4303 19dc 02       		.uleb128 0x2
 4304 19dd CC510000 		.4byte	0x51cc
 4305 19e1 01       		.uleb128 0x1
 4306 19e2 13010000 		.4byte	0x113
 4307 19e6 01       		.uleb128 0x1
 4308 19e7 13010000 		.4byte	0x113
 4309 19eb 01       		.uleb128 0x1
 4310 19ec E9510000 		.4byte	0x51e9
 4311 19f0 01       		.uleb128 0x1
 4312 19f1 13010000 		.4byte	0x113
 4313 19f5 01       		.uleb128 0x1
 4314 19f6 13010000 		.4byte	0x113
 4315 19fa 00       		.byte	0
 4316 19fb 04       		.uleb128 0x4
 4317 19fc 00000000 		.4byte	.LASF244
 4318 1a00 0A       		.byte	0xa
 4319 1a01 AD0B     		.2byte	0xbad
 4320 1a03 07       		.byte	0x7
 4321 1a04 00000000 		.4byte	.LASF248
 4322 1a08 D43A0000 		.4byte	0x3ad4
 4323 1a0c 01       		.byte	0x1
 4324 1a0d 151A0000 		.4byte	0x1a15
 4325 1a11 201A0000 		.4byte	0x1a20
 4326 1a15 02       		.uleb128 0x2
 4327 1a16 CC510000 		.4byte	0x51cc
 4328 1a1a 01       		.uleb128 0x1
 4329 1a1b 283D0000 		.4byte	0x3d28
 4330 1a1f 00       		.byte	0
 4331 1a20 04       		.uleb128 0x4
 4332 1a21 00000000 		.4byte	.LASF244
 4333 1a25 0A       		.byte	0xa
 4334 1a26 C50B     		.2byte	0xbc5
 4335 1a28 07       		.byte	0x7
 4336 1a29 00000000 		.4byte	.LASF249
 4337 1a2d D43A0000 		.4byte	0x3ad4
 4338 1a31 01       		.byte	0x1
 4339 1a32 3A1A0000 		.4byte	0x1a3a
 4340 1a36 4F1A0000 		.4byte	0x1a4f
 4341 1a3a 02       		.uleb128 0x2
 4342 1a3b CC510000 		.4byte	0x51cc
 4343 1a3f 01       		.uleb128 0x1
 4344 1a40 13010000 		.4byte	0x113
 4345 1a44 01       		.uleb128 0x1
 4346 1a45 13010000 		.4byte	0x113
 4347 1a49 01       		.uleb128 0x1
 4348 1a4a 283D0000 		.4byte	0x3d28
 4349 1a4e 00       		.byte	0
 4350 1a4f 04       		.uleb128 0x4
AARCH64 GAS  obj/extInstr.s 			page 286


 4351 1a50 00000000 		.4byte	.LASF244
 4352 1a54 0A       		.byte	0xa
 4353 1a55 E00B     		.2byte	0xbe0
 4354 1a57 07       		.byte	0x7
 4355 1a58 00000000 		.4byte	.LASF250
 4356 1a5c D43A0000 		.4byte	0x3ad4
 4357 1a60 01       		.byte	0x1
 4358 1a61 691A0000 		.4byte	0x1a69
 4359 1a65 831A0000 		.4byte	0x1a83
 4360 1a69 02       		.uleb128 0x2
 4361 1a6a CC510000 		.4byte	0x51cc
 4362 1a6e 01       		.uleb128 0x1
 4363 1a6f 13010000 		.4byte	0x113
 4364 1a73 01       		.uleb128 0x1
 4365 1a74 13010000 		.4byte	0x113
 4366 1a78 01       		.uleb128 0x1
 4367 1a79 283D0000 		.4byte	0x3d28
 4368 1a7d 01       		.uleb128 0x1
 4369 1a7e 13010000 		.4byte	0x113
 4370 1a82 00       		.byte	0
 4371 1a83 04       		.uleb128 0x4
 4372 1a84 00000000 		.4byte	.LASF251
 4373 1a88 0A       		.byte	0xa
 4374 1a89 BE05     		.2byte	0x5be
 4375 1a8b 09       		.byte	0x9
 4376 1a8c 00000000 		.4byte	.LASF252
 4377 1a90 F5510000 		.4byte	0x51f5
 4378 1a94 01       		.byte	0x1
 4379 1a95 A61A0000 		.4byte	0x1aa6
 4380 1a99 B61A0000 		.4byte	0x1ab6
 4381 1a9d 0E       		.uleb128 0xe
 4382 1a9e 00000000 		.4byte	.LASF253
 4383 1aa2 6C400000 		.4byte	0x406c
 4384 1aa6 02       		.uleb128 0x2
 4385 1aa7 C1510000 		.4byte	0x51c1
 4386 1aab 01       		.uleb128 0x1
 4387 1aac 6C400000 		.4byte	0x406c
 4388 1ab0 01       		.uleb128 0x1
 4389 1ab1 6C400000 		.4byte	0x406c
 4390 1ab5 00       		.byte	0
 4391 1ab6 0E       		.uleb128 0xe
 4392 1ab7 00000000 		.4byte	.LASF254
 4393 1abb 4E3B0000 		.4byte	0x3b4e
 4394 1abf 30       		.uleb128 0x30
 4395 1ac0 00000000 		.4byte	.LASF255
 4396 1ac4 E2200000 		.4byte	0x20e2
 4397 1ac8 30       		.uleb128 0x30
 4398 1ac9 00000000 		.4byte	.LASF256
 4399 1acd D3230000 		.4byte	0x23d3
 4400 1ad1 00       		.byte	0
 4401 1ad2 0C       		.uleb128 0xc
 4402 1ad3 41000000 		.4byte	0x41
 4403 1ad7 34       		.uleb128 0x34
 4404 1ad8 00000000 		.4byte	.LASF260
 4405 1adc 6A1B0000 		.4byte	0x1b6a
 4406 1ae0 17       		.uleb128 0x17
 4407 1ae1 00000000 		.4byte	.LASF257
AARCH64 GAS  obj/extInstr.s 			page 287


 4408 1ae5 09       		.byte	0x9
 4409 1ae6 50       		.byte	0x50
 4410 1ae7 38       		.byte	0x38
 4411 1ae8 41000000 		.4byte	0x41
 4412 1aec 01       		.byte	0x1
 4413 1aed 57       		.uleb128 0x57
 4414 1aee 73747200 		.string	"str"
 4415 1af2 09       		.byte	0x9
 4416 1af3 B2       		.byte	0xb2
 4417 1af4 07       		.byte	0x7
 4418 1af5 00000000 		.4byte	.LASF348
 4419 1af9 E01A0000 		.4byte	0x1ae0
 4420 1afd 01       		.byte	0x1
 4421 1afe 061B0000 		.4byte	0x1b06
 4422 1b02 0C1B0000 		.4byte	0x1b0c
 4423 1b06 02       		.uleb128 0x2
 4424 1b07 CE5D0000 		.4byte	0x5dce
 4425 1b0b 00       		.byte	0
 4426 1b0c 72       		.uleb128 0x72
 4427 1b0d 00000000 		.4byte	.LASF258
 4428 1b11 09       		.byte	0x9
 4429 1b12 6F       		.byte	0x6f
 4430 1b13 07       		.byte	0x7
 4431 1b14 00000000 		.4byte	.LASF279
 4432 1b18 01       		.byte	0x1
 4433 1b19 211B0000 		.4byte	0x1b21
 4434 1b1d 2C1B0000 		.4byte	0x1b2c
 4435 1b21 02       		.uleb128 0x2
 4436 1b22 AF520000 		.4byte	0x52af
 4437 1b26 01       		.uleb128 0x1
 4438 1b27 012A0000 		.4byte	0x2a01
 4439 1b2b 00       		.byte	0
 4440 1b2c 73       		.uleb128 0x73
 4441 1b2d 00000000 		.4byte	.LASF259
 4442 1b31 00000000 		.4byte	.LASF993
 4443 1b35 01       		.byte	0x1
 4444 1b36 D71A0000 		.4byte	0x1ad7
 4445 1b3a 01       		.byte	0x1
 4446 1b3b 431B0000 		.4byte	0x1b43
 4447 1b3f 4E1B0000 		.4byte	0x1b4e
 4448 1b43 02       		.uleb128 0x2
 4449 1b44 AF520000 		.4byte	0x52af
 4450 1b48 02       		.uleb128 0x2
 4451 1b49 D43A0000 		.4byte	0x3ad4
 4452 1b4d 00       		.byte	0
 4453 1b4e 0E       		.uleb128 0xe
 4454 1b4f 00000000 		.4byte	.LASF254
 4455 1b53 4E3B0000 		.4byte	0x3b4e
 4456 1b57 30       		.uleb128 0x30
 4457 1b58 00000000 		.4byte	.LASF255
 4458 1b5c E2200000 		.4byte	0x20e2
 4459 1b60 30       		.uleb128 0x30
 4460 1b61 00000000 		.4byte	.LASF256
 4461 1b65 D3230000 		.4byte	0x23d3
 4462 1b69 00       		.byte	0
 4463 1b6a 0C       		.uleb128 0xc
 4464 1b6b D71A0000 		.4byte	0x1ad7
AARCH64 GAS  obj/extInstr.s 			page 288


 4465 1b6f 34       		.uleb128 0x34
 4466 1b70 00000000 		.4byte	.LASF261
 4467 1b74 131C0000 		.4byte	0x1c13
 4468 1b78 2D       		.uleb128 0x2d
 4469 1b79 00000000 		.4byte	.LASF257
 4470 1b7d 09       		.byte	0x9
 4471 1b7e 3402     		.2byte	0x234
 4472 1b80 35       		.byte	0x35
 4473 1b81 41000000 		.4byte	0x41
 4474 1b85 01       		.byte	0x1
 4475 1b86 3E       		.uleb128 0x3e
 4476 1b87 73747200 		.string	"str"
 4477 1b8b 09       		.byte	0x9
 4478 1b8c A502     		.2byte	0x2a5
 4479 1b8e 07       		.byte	0x7
 4480 1b8f 00000000 		.4byte	.LASF262
 4481 1b93 781B0000 		.4byte	0x1b78
 4482 1b97 01       		.byte	0x1
 4483 1b98 A01B0000 		.4byte	0x1ba0
 4484 1b9c A61B0000 		.4byte	0x1ba6
 4485 1ba0 02       		.uleb128 0x2
 4486 1ba1 4A610000 		.4byte	0x614a
 4487 1ba5 00       		.byte	0
 4488 1ba6 58       		.uleb128 0x58
 4489 1ba7 00000000 		.4byte	.LASF285
 4490 1bab 09       		.byte	0x9
 4491 1bac 7502     		.2byte	0x275
 4492 1bae 07       		.byte	0x7
 4493 1baf 00000000 		.4byte	.LASF382
 4494 1bb3 01       		.byte	0x1
 4495 1bb4 6F1B0000 		.4byte	0x1b6f
 4496 1bb8 01       		.byte	0x1
 4497 1bb9 C11B0000 		.4byte	0x1bc1
 4498 1bbd D11B0000 		.4byte	0x1bd1
 4499 1bc1 02       		.uleb128 0x2
 4500 1bc2 A2610000 		.4byte	0x61a2
 4501 1bc6 02       		.uleb128 0x2
 4502 1bc7 D43A0000 		.4byte	0x3ad4
 4503 1bcb 02       		.uleb128 0x2
 4504 1bcc 975E0000 		.4byte	0x5e97
 4505 1bd0 00       		.byte	0
 4506 1bd1 12       		.uleb128 0x12
 4507 1bd2 00000000 		.4byte	.LASF263
 4508 1bd6 09       		.byte	0x9
 4509 1bd7 4702     		.2byte	0x247
 4510 1bd9 07       		.byte	0x7
 4511 1bda 00000000 		.4byte	.LASF264
 4512 1bde 01       		.byte	0x1
 4513 1bdf E71B0000 		.4byte	0x1be7
 4514 1be3 F71B0000 		.4byte	0x1bf7
 4515 1be7 02       		.uleb128 0x2
 4516 1be8 A2610000 		.4byte	0x61a2
 4517 1bec 02       		.uleb128 0x2
 4518 1bed D43A0000 		.4byte	0x3ad4
 4519 1bf1 02       		.uleb128 0x2
 4520 1bf2 975E0000 		.4byte	0x5e97
 4521 1bf6 00       		.byte	0
AARCH64 GAS  obj/extInstr.s 			page 289


 4522 1bf7 0E       		.uleb128 0xe
 4523 1bf8 00000000 		.4byte	.LASF254
 4524 1bfc 4E3B0000 		.4byte	0x3b4e
 4525 1c00 30       		.uleb128 0x30
 4526 1c01 00000000 		.4byte	.LASF255
 4527 1c05 E2200000 		.4byte	0x20e2
 4528 1c09 30       		.uleb128 0x30
 4529 1c0a 00000000 		.4byte	.LASF256
 4530 1c0e D3230000 		.4byte	0x23d3
 4531 1c12 00       		.byte	0
 4532 1c13 0C       		.uleb128 0xc
 4533 1c14 6F1B0000 		.4byte	0x1b6f
 4534 1c18 00       		.byte	0
 4535 1c19 43       		.uleb128 0x43
 4536 1c1a 11       		.byte	0x11
 4537 1c1b 1E01     		.2byte	0x11e
 4538 1c1d 41       		.byte	0x41
 4539 1c1e 34000000 		.4byte	0x34
 4540 1c22 03       		.uleb128 0x3
 4541 1c23 0F       		.byte	0xf
 4542 1c24 40       		.byte	0x40
 4543 1c25 0B       		.byte	0xb
 4544 1c26 663B0000 		.4byte	0x3b66
 4545 1c2a 03       		.uleb128 0x3
 4546 1c2b 0F       		.byte	0xf
 4547 1c2c 8D       		.byte	0x8d
 4548 1c2d 0B       		.byte	0xb
 4549 1c2e E13A0000 		.4byte	0x3ae1
 4550 1c32 03       		.uleb128 0x3
 4551 1c33 0F       		.byte	0xf
 4552 1c34 8F       		.byte	0x8f
 4553 1c35 0B       		.byte	0xb
 4554 1c36 333D0000 		.4byte	0x3d33
 4555 1c3a 03       		.uleb128 0x3
 4556 1c3b 0F       		.byte	0xf
 4557 1c3c 90       		.byte	0x90
 4558 1c3d 0B       		.byte	0xb
 4559 1c3e 4A3D0000 		.4byte	0x3d4a
 4560 1c42 03       		.uleb128 0x3
 4561 1c43 0F       		.byte	0xf
 4562 1c44 91       		.byte	0x91
 4563 1c45 0B       		.byte	0xb
 4564 1c46 673D0000 		.4byte	0x3d67
 4565 1c4a 03       		.uleb128 0x3
 4566 1c4b 0F       		.byte	0xf
 4567 1c4c 92       		.byte	0x92
 4568 1c4d 0B       		.byte	0xb
 4569 1c4e 9A3D0000 		.4byte	0x3d9a
 4570 1c52 03       		.uleb128 0x3
 4571 1c53 0F       		.byte	0xf
 4572 1c54 93       		.byte	0x93
 4573 1c55 0B       		.byte	0xb
 4574 1c56 B63D0000 		.4byte	0x3db6
 4575 1c5a 03       		.uleb128 0x3
 4576 1c5b 0F       		.byte	0xf
 4577 1c5c 94       		.byte	0x94
 4578 1c5d 0B       		.byte	0xb
AARCH64 GAS  obj/extInstr.s 			page 290


 4579 1c5e D83D0000 		.4byte	0x3dd8
 4580 1c62 03       		.uleb128 0x3
 4581 1c63 0F       		.byte	0xf
 4582 1c64 95       		.byte	0x95
 4583 1c65 0B       		.byte	0xb
 4584 1c66 F43D0000 		.4byte	0x3df4
 4585 1c6a 03       		.uleb128 0x3
 4586 1c6b 0F       		.byte	0xf
 4587 1c6c 96       		.byte	0x96
 4588 1c6d 0B       		.byte	0xb
 4589 1c6e 113E0000 		.4byte	0x3e11
 4590 1c72 03       		.uleb128 0x3
 4591 1c73 0F       		.byte	0xf
 4592 1c74 97       		.byte	0x97
 4593 1c75 0B       		.byte	0xb
 4594 1c76 323E0000 		.4byte	0x3e32
 4595 1c7a 03       		.uleb128 0x3
 4596 1c7b 0F       		.byte	0xf
 4597 1c7c 98       		.byte	0x98
 4598 1c7d 0B       		.byte	0xb
 4599 1c7e 493E0000 		.4byte	0x3e49
 4600 1c82 03       		.uleb128 0x3
 4601 1c83 0F       		.byte	0xf
 4602 1c84 99       		.byte	0x99
 4603 1c85 0B       		.byte	0xb
 4604 1c86 563E0000 		.4byte	0x3e56
 4605 1c8a 03       		.uleb128 0x3
 4606 1c8b 0F       		.byte	0xf
 4607 1c8c 9A       		.byte	0x9a
 4608 1c8d 0B       		.byte	0xb
 4609 1c8e 7D3E0000 		.4byte	0x3e7d
 4610 1c92 03       		.uleb128 0x3
 4611 1c93 0F       		.byte	0xf
 4612 1c94 9B       		.byte	0x9b
 4613 1c95 0B       		.byte	0xb
 4614 1c96 A33E0000 		.4byte	0x3ea3
 4615 1c9a 03       		.uleb128 0x3
 4616 1c9b 0F       		.byte	0xf
 4617 1c9c 9C       		.byte	0x9c
 4618 1c9d 0B       		.byte	0xb
 4619 1c9e C03E0000 		.4byte	0x3ec0
 4620 1ca2 03       		.uleb128 0x3
 4621 1ca3 0F       		.byte	0xf
 4622 1ca4 9D       		.byte	0x9d
 4623 1ca5 0B       		.byte	0xb
 4624 1ca6 EC3E0000 		.4byte	0x3eec
 4625 1caa 03       		.uleb128 0x3
 4626 1cab 0F       		.byte	0xf
 4627 1cac 9E       		.byte	0x9e
 4628 1cad 0B       		.byte	0xb
 4629 1cae 083F0000 		.4byte	0x3f08
 4630 1cb2 03       		.uleb128 0x3
 4631 1cb3 0F       		.byte	0xf
 4632 1cb4 A0       		.byte	0xa0
 4633 1cb5 0B       		.byte	0xb
 4634 1cb6 1F3F0000 		.4byte	0x3f1f
 4635 1cba 03       		.uleb128 0x3
AARCH64 GAS  obj/extInstr.s 			page 291


 4636 1cbb 0F       		.byte	0xf
 4637 1cbc A2       		.byte	0xa2
 4638 1cbd 0B       		.byte	0xb
 4639 1cbe 413F0000 		.4byte	0x3f41
 4640 1cc2 03       		.uleb128 0x3
 4641 1cc3 0F       		.byte	0xf
 4642 1cc4 A3       		.byte	0xa3
 4643 1cc5 0B       		.byte	0xb
 4644 1cc6 623F0000 		.4byte	0x3f62
 4645 1cca 03       		.uleb128 0x3
 4646 1ccb 0F       		.byte	0xf
 4647 1ccc A4       		.byte	0xa4
 4648 1ccd 0B       		.byte	0xb
 4649 1cce 7E3F0000 		.4byte	0x3f7e
 4650 1cd2 03       		.uleb128 0x3
 4651 1cd3 0F       		.byte	0xf
 4652 1cd4 A6       		.byte	0xa6
 4653 1cd5 0B       		.byte	0xb
 4654 1cd6 9F3F0000 		.4byte	0x3f9f
 4655 1cda 03       		.uleb128 0x3
 4656 1cdb 0F       		.byte	0xf
 4657 1cdc A9       		.byte	0xa9
 4658 1cdd 0B       		.byte	0xb
 4659 1cde C43F0000 		.4byte	0x3fc4
 4660 1ce2 03       		.uleb128 0x3
 4661 1ce3 0F       		.byte	0xf
 4662 1ce4 AC       		.byte	0xac
 4663 1ce5 0B       		.byte	0xb
 4664 1ce6 EA3F0000 		.4byte	0x3fea
 4665 1cea 03       		.uleb128 0x3
 4666 1ceb 0F       		.byte	0xf
 4667 1cec AE       		.byte	0xae
 4668 1ced 0B       		.byte	0xb
 4669 1cee 0F400000 		.4byte	0x400f
 4670 1cf2 03       		.uleb128 0x3
 4671 1cf3 0F       		.byte	0xf
 4672 1cf4 B0       		.byte	0xb0
 4673 1cf5 0B       		.byte	0xb
 4674 1cf6 2B400000 		.4byte	0x402b
 4675 1cfa 03       		.uleb128 0x3
 4676 1cfb 0F       		.byte	0xf
 4677 1cfc B2       		.byte	0xb2
 4678 1cfd 0B       		.byte	0xb
 4679 1cfe 4B400000 		.4byte	0x404b
 4680 1d02 03       		.uleb128 0x3
 4681 1d03 0F       		.byte	0xf
 4682 1d04 B3       		.byte	0xb3
 4683 1d05 0B       		.byte	0xb
 4684 1d06 77400000 		.4byte	0x4077
 4685 1d0a 03       		.uleb128 0x3
 4686 1d0b 0F       		.byte	0xf
 4687 1d0c B4       		.byte	0xb4
 4688 1d0d 0B       		.byte	0xb
 4689 1d0e 92400000 		.4byte	0x4092
 4690 1d12 03       		.uleb128 0x3
 4691 1d13 0F       		.byte	0xf
 4692 1d14 B5       		.byte	0xb5
AARCH64 GAS  obj/extInstr.s 			page 292


 4693 1d15 0B       		.byte	0xb
 4694 1d16 AD400000 		.4byte	0x40ad
 4695 1d1a 03       		.uleb128 0x3
 4696 1d1b 0F       		.byte	0xf
 4697 1d1c B6       		.byte	0xb6
 4698 1d1d 0B       		.byte	0xb
 4699 1d1e C8400000 		.4byte	0x40c8
 4700 1d22 03       		.uleb128 0x3
 4701 1d23 0F       		.byte	0xf
 4702 1d24 B7       		.byte	0xb7
 4703 1d25 0B       		.byte	0xb
 4704 1d26 E3400000 		.4byte	0x40e3
 4705 1d2a 03       		.uleb128 0x3
 4706 1d2b 0F       		.byte	0xf
 4707 1d2c B8       		.byte	0xb8
 4708 1d2d 0B       		.byte	0xb
 4709 1d2e FE400000 		.4byte	0x40fe
 4710 1d32 03       		.uleb128 0x3
 4711 1d33 0F       		.byte	0xf
 4712 1d34 B9       		.byte	0xb9
 4713 1d35 0B       		.byte	0xb
 4714 1d36 CC410000 		.4byte	0x41cc
 4715 1d3a 03       		.uleb128 0x3
 4716 1d3b 0F       		.byte	0xf
 4717 1d3c BA       		.byte	0xba
 4718 1d3d 0B       		.byte	0xb
 4719 1d3e E2410000 		.4byte	0x41e2
 4720 1d42 03       		.uleb128 0x3
 4721 1d43 0F       		.byte	0xf
 4722 1d44 BB       		.byte	0xbb
 4723 1d45 0B       		.byte	0xb
 4724 1d46 02420000 		.4byte	0x4202
 4725 1d4a 03       		.uleb128 0x3
 4726 1d4b 0F       		.byte	0xf
 4727 1d4c BC       		.byte	0xbc
 4728 1d4d 0B       		.byte	0xb
 4729 1d4e 22420000 		.4byte	0x4222
 4730 1d52 03       		.uleb128 0x3
 4731 1d53 0F       		.byte	0xf
 4732 1d54 BD       		.byte	0xbd
 4733 1d55 0B       		.byte	0xb
 4734 1d56 42420000 		.4byte	0x4242
 4735 1d5a 03       		.uleb128 0x3
 4736 1d5b 0F       		.byte	0xf
 4737 1d5c BE       		.byte	0xbe
 4738 1d5d 0B       		.byte	0xb
 4739 1d5e 6E420000 		.4byte	0x426e
 4740 1d62 03       		.uleb128 0x3
 4741 1d63 0F       		.byte	0xf
 4742 1d64 BF       		.byte	0xbf
 4743 1d65 0B       		.byte	0xb
 4744 1d66 89420000 		.4byte	0x4289
 4745 1d6a 03       		.uleb128 0x3
 4746 1d6b 0F       		.byte	0xf
 4747 1d6c C1       		.byte	0xc1
 4748 1d6d 0B       		.byte	0xb
 4749 1d6e AB420000 		.4byte	0x42ab
AARCH64 GAS  obj/extInstr.s 			page 293


 4750 1d72 03       		.uleb128 0x3
 4751 1d73 0F       		.byte	0xf
 4752 1d74 C3       		.byte	0xc3
 4753 1d75 0B       		.byte	0xb
 4754 1d76 C7420000 		.4byte	0x42c7
 4755 1d7a 03       		.uleb128 0x3
 4756 1d7b 0F       		.byte	0xf
 4757 1d7c C4       		.byte	0xc4
 4758 1d7d 0B       		.byte	0xb
 4759 1d7e E7420000 		.4byte	0x42e7
 4760 1d82 03       		.uleb128 0x3
 4761 1d83 0F       		.byte	0xf
 4762 1d84 C5       		.byte	0xc5
 4763 1d85 0B       		.byte	0xb
 4764 1d86 0F430000 		.4byte	0x430f
 4765 1d8a 03       		.uleb128 0x3
 4766 1d8b 0F       		.byte	0xf
 4767 1d8c C6       		.byte	0xc6
 4768 1d8d 0B       		.byte	0xb
 4769 1d8e 30430000 		.4byte	0x4330
 4770 1d92 03       		.uleb128 0x3
 4771 1d93 0F       		.byte	0xf
 4772 1d94 C7       		.byte	0xc7
 4773 1d95 0B       		.byte	0xb
 4774 1d96 50430000 		.4byte	0x4350
 4775 1d9a 03       		.uleb128 0x3
 4776 1d9b 0F       		.byte	0xf
 4777 1d9c C8       		.byte	0xc8
 4778 1d9d 0B       		.byte	0xb
 4779 1d9e 67430000 		.4byte	0x4367
 4780 1da2 03       		.uleb128 0x3
 4781 1da3 0F       		.byte	0xf
 4782 1da4 C9       		.byte	0xc9
 4783 1da5 0B       		.byte	0xb
 4784 1da6 88430000 		.4byte	0x4388
 4785 1daa 03       		.uleb128 0x3
 4786 1dab 0F       		.byte	0xf
 4787 1dac CA       		.byte	0xca
 4788 1dad 0B       		.byte	0xb
 4789 1dae A9430000 		.4byte	0x43a9
 4790 1db2 03       		.uleb128 0x3
 4791 1db3 0F       		.byte	0xf
 4792 1db4 CB       		.byte	0xcb
 4793 1db5 0B       		.byte	0xb
 4794 1db6 CA430000 		.4byte	0x43ca
 4795 1dba 03       		.uleb128 0x3
 4796 1dbb 0F       		.byte	0xf
 4797 1dbc CC       		.byte	0xcc
 4798 1dbd 0B       		.byte	0xb
 4799 1dbe EB430000 		.4byte	0x43eb
 4800 1dc2 03       		.uleb128 0x3
 4801 1dc3 0F       		.byte	0xf
 4802 1dc4 CD       		.byte	0xcd
 4803 1dc5 0B       		.byte	0xb
 4804 1dc6 03440000 		.4byte	0x4403
 4805 1dca 03       		.uleb128 0x3
 4806 1dcb 0F       		.byte	0xf
AARCH64 GAS  obj/extInstr.s 			page 294


 4807 1dcc CE       		.byte	0xce
 4808 1dcd 0B       		.byte	0xb
 4809 1dce 1F440000 		.4byte	0x441f
 4810 1dd2 03       		.uleb128 0x3
 4811 1dd3 0F       		.byte	0xf
 4812 1dd4 CE       		.byte	0xce
 4813 1dd5 0B       		.byte	0xb
 4814 1dd6 3E440000 		.4byte	0x443e
 4815 1dda 03       		.uleb128 0x3
 4816 1ddb 0F       		.byte	0xf
 4817 1ddc CF       		.byte	0xcf
 4818 1ddd 0B       		.byte	0xb
 4819 1dde 5D440000 		.4byte	0x445d
 4820 1de2 03       		.uleb128 0x3
 4821 1de3 0F       		.byte	0xf
 4822 1de4 CF       		.byte	0xcf
 4823 1de5 0B       		.byte	0xb
 4824 1de6 7C440000 		.4byte	0x447c
 4825 1dea 03       		.uleb128 0x3
 4826 1deb 0F       		.byte	0xf
 4827 1dec D0       		.byte	0xd0
 4828 1ded 0B       		.byte	0xb
 4829 1dee 9B440000 		.4byte	0x449b
 4830 1df2 03       		.uleb128 0x3
 4831 1df3 0F       		.byte	0xf
 4832 1df4 D0       		.byte	0xd0
 4833 1df5 0B       		.byte	0xb
 4834 1df6 BA440000 		.4byte	0x44ba
 4835 1dfa 03       		.uleb128 0x3
 4836 1dfb 0F       		.byte	0xf
 4837 1dfc D1       		.byte	0xd1
 4838 1dfd 0B       		.byte	0xb
 4839 1dfe D9440000 		.4byte	0x44d9
 4840 1e02 03       		.uleb128 0x3
 4841 1e03 0F       		.byte	0xf
 4842 1e04 D1       		.byte	0xd1
 4843 1e05 0B       		.byte	0xb
 4844 1e06 F8440000 		.4byte	0x44f8
 4845 1e0a 03       		.uleb128 0x3
 4846 1e0b 0F       		.byte	0xf
 4847 1e0c D2       		.byte	0xd2
 4848 1e0d 0B       		.byte	0xb
 4849 1e0e 17450000 		.4byte	0x4517
 4850 1e12 03       		.uleb128 0x3
 4851 1e13 0F       		.byte	0xf
 4852 1e14 D2       		.byte	0xd2
 4853 1e15 0B       		.byte	0xb
 4854 1e16 3B450000 		.4byte	0x453b
 4855 1e1a 27       		.uleb128 0x27
 4856 1e1b 0F       		.byte	0xf
 4857 1e1c 0B01     		.2byte	0x10b
 4858 1e1e 16       		.byte	0x16
 4859 1e1f 5F450000 		.4byte	0x455f
 4860 1e23 27       		.uleb128 0x27
 4861 1e24 0F       		.byte	0xf
 4862 1e25 0C01     		.2byte	0x10c
 4863 1e27 16       		.byte	0x16
AARCH64 GAS  obj/extInstr.s 			page 295


 4864 1e28 7B450000 		.4byte	0x457b
 4865 1e2c 27       		.uleb128 0x27
 4866 1e2d 0F       		.byte	0xf
 4867 1e2e 0D01     		.2byte	0x10d
 4868 1e30 16       		.byte	0x16
 4869 1e31 A3450000 		.4byte	0x45a3
 4870 1e35 27       		.uleb128 0x27
 4871 1e36 0F       		.byte	0xf
 4872 1e37 1B01     		.2byte	0x11b
 4873 1e39 0E       		.byte	0xe
 4874 1e3a AB420000 		.4byte	0x42ab
 4875 1e3e 27       		.uleb128 0x27
 4876 1e3f 0F       		.byte	0xf
 4877 1e40 1E01     		.2byte	0x11e
 4878 1e42 0E       		.byte	0xe
 4879 1e43 9F3F0000 		.4byte	0x3f9f
 4880 1e47 27       		.uleb128 0x27
 4881 1e48 0F       		.byte	0xf
 4882 1e49 2101     		.2byte	0x121
 4883 1e4b 0E       		.byte	0xe
 4884 1e4c EA3F0000 		.4byte	0x3fea
 4885 1e50 27       		.uleb128 0x27
 4886 1e51 0F       		.byte	0xf
 4887 1e52 2401     		.2byte	0x124
 4888 1e54 0E       		.byte	0xe
 4889 1e55 2B400000 		.4byte	0x402b
 4890 1e59 27       		.uleb128 0x27
 4891 1e5a 0F       		.byte	0xf
 4892 1e5b 2801     		.2byte	0x128
 4893 1e5d 0E       		.byte	0xe
 4894 1e5e 5F450000 		.4byte	0x455f
 4895 1e62 27       		.uleb128 0x27
 4896 1e63 0F       		.byte	0xf
 4897 1e64 2901     		.2byte	0x129
 4898 1e66 0E       		.byte	0xe
 4899 1e67 7B450000 		.4byte	0x457b
 4900 1e6b 27       		.uleb128 0x27
 4901 1e6c 0F       		.byte	0xf
 4902 1e6d 2A01     		.2byte	0x12a
 4903 1e6f 0E       		.byte	0xe
 4904 1e70 A3450000 		.4byte	0x45a3
 4905 1e74 59       		.uleb128 0x59
 4906 1e75 00000000 		.4byte	.LASF486
 4907 1e79 10       		.byte	0x10
 4908 1e7a 35       		.byte	0x35
 4909 1e7b 0D       		.byte	0xd
 4910 1e7c 57200000 		.4byte	0x2057
 4911 1e80 3D       		.uleb128 0x3d
 4912 1e81 00000000 		.4byte	.LASF266
 4913 1e85 08       		.byte	0x8
 4914 1e86 10       		.byte	0x10
 4915 1e87 50       		.byte	0x50
 4916 1e88 0B       		.byte	0xb
 4917 1e89 49200000 		.4byte	0x2049
 4918 1e8d 08       		.uleb128 0x8
 4919 1e8e 00000000 		.4byte	.LASF267
 4920 1e92 10       		.byte	0x10
AARCH64 GAS  obj/extInstr.s 			page 296


 4921 1e93 52       		.byte	0x52
 4922 1e94 0D       		.byte	0xd
 4923 1e95 D13A0000 		.4byte	0x3ad1
 4924 1e99 00       		.byte	0
 4925 1e9a 74       		.uleb128 0x74
 4926 1e9b 00000000 		.4byte	.LASF266
 4927 1e9f 10       		.byte	0x10
 4928 1ea0 54       		.byte	0x54
 4929 1ea1 10       		.byte	0x10
 4930 1ea2 00000000 		.4byte	.LASF268
 4931 1ea6 AE1E0000 		.4byte	0x1eae
 4932 1eaa B91E0000 		.4byte	0x1eb9
 4933 1eae 02       		.uleb128 0x2
 4934 1eaf D1450000 		.4byte	0x45d1
 4935 1eb3 01       		.uleb128 0x1
 4936 1eb4 D13A0000 		.4byte	0x3ad1
 4937 1eb8 00       		.byte	0
 4938 1eb9 2B       		.uleb128 0x2b
 4939 1eba 00000000 		.4byte	.LASF269
 4940 1ebe 10       		.byte	0x10
 4941 1ebf 56       		.byte	0x56
 4942 1ec0 0C       		.byte	0xc
 4943 1ec1 00000000 		.4byte	.LASF270
 4944 1ec5 CD1E0000 		.4byte	0x1ecd
 4945 1ec9 D31E0000 		.4byte	0x1ed3
 4946 1ecd 02       		.uleb128 0x2
 4947 1ece D1450000 		.4byte	0x45d1
 4948 1ed2 00       		.byte	0
 4949 1ed3 2B       		.uleb128 0x2b
 4950 1ed4 00000000 		.4byte	.LASF271
 4951 1ed8 10       		.byte	0x10
 4952 1ed9 57       		.byte	0x57
 4953 1eda 0C       		.byte	0xc
 4954 1edb 00000000 		.4byte	.LASF272
 4955 1edf E71E0000 		.4byte	0x1ee7
 4956 1ee3 ED1E0000 		.4byte	0x1eed
 4957 1ee7 02       		.uleb128 0x2
 4958 1ee8 D1450000 		.4byte	0x45d1
 4959 1eec 00       		.byte	0
 4960 1eed 19       		.uleb128 0x19
 4961 1eee 00000000 		.4byte	.LASF273
 4962 1ef2 10       		.byte	0x10
 4963 1ef3 59       		.byte	0x59
 4964 1ef4 0D       		.byte	0xd
 4965 1ef5 00000000 		.4byte	.LASF274
 4966 1ef9 D13A0000 		.4byte	0x3ad1
 4967 1efd 051F0000 		.4byte	0x1f05
 4968 1f01 0B1F0000 		.4byte	0x1f0b
 4969 1f05 02       		.uleb128 0x2
 4970 1f06 D7450000 		.4byte	0x45d7
 4971 1f0a 00       		.byte	0
 4972 1f0b 20       		.uleb128 0x20
 4973 1f0c 00000000 		.4byte	.LASF266
 4974 1f10 10       		.byte	0x10
 4975 1f11 61       		.byte	0x61
 4976 1f12 07       		.byte	0x7
 4977 1f13 00000000 		.4byte	.LASF275
AARCH64 GAS  obj/extInstr.s 			page 297


 4978 1f17 01       		.byte	0x1
 4979 1f18 201F0000 		.4byte	0x1f20
 4980 1f1c 261F0000 		.4byte	0x1f26
 4981 1f20 02       		.uleb128 0x2
 4982 1f21 D1450000 		.4byte	0x45d1
 4983 1f25 00       		.byte	0
 4984 1f26 20       		.uleb128 0x20
 4985 1f27 00000000 		.4byte	.LASF266
 4986 1f2b 10       		.byte	0x10
 4987 1f2c 63       		.byte	0x63
 4988 1f2d 07       		.byte	0x7
 4989 1f2e 00000000 		.4byte	.LASF276
 4990 1f32 01       		.byte	0x1
 4991 1f33 3B1F0000 		.4byte	0x1f3b
 4992 1f37 461F0000 		.4byte	0x1f46
 4993 1f3b 02       		.uleb128 0x2
 4994 1f3c D1450000 		.4byte	0x45d1
 4995 1f40 01       		.uleb128 0x1
 4996 1f41 DD450000 		.4byte	0x45dd
 4997 1f45 00       		.byte	0
 4998 1f46 20       		.uleb128 0x20
 4999 1f47 00000000 		.4byte	.LASF266
 5000 1f4b 10       		.byte	0x10
 5001 1f4c 66       		.byte	0x66
 5002 1f4d 07       		.byte	0x7
 5003 1f4e 00000000 		.4byte	.LASF277
 5004 1f52 01       		.byte	0x1
 5005 1f53 5B1F0000 		.4byte	0x1f5b
 5006 1f57 661F0000 		.4byte	0x1f66
 5007 1f5b 02       		.uleb128 0x2
 5008 1f5c D1450000 		.4byte	0x45d1
 5009 1f60 01       		.uleb128 0x1
 5010 1f61 75200000 		.4byte	0x2075
 5011 1f65 00       		.byte	0
 5012 1f66 20       		.uleb128 0x20
 5013 1f67 00000000 		.4byte	.LASF266
 5014 1f6b 10       		.byte	0x10
 5015 1f6c 6A       		.byte	0x6a
 5016 1f6d 07       		.byte	0x7
 5017 1f6e 00000000 		.4byte	.LASF278
 5018 1f72 01       		.byte	0x1
 5019 1f73 7B1F0000 		.4byte	0x1f7b
 5020 1f77 861F0000 		.4byte	0x1f86
 5021 1f7b 02       		.uleb128 0x2
 5022 1f7c D1450000 		.4byte	0x45d1
 5023 1f80 01       		.uleb128 0x1
 5024 1f81 E3450000 		.4byte	0x45e3
 5025 1f85 00       		.byte	0
 5026 1f86 28       		.uleb128 0x28
 5027 1f87 00000000 		.4byte	.LASF83
 5028 1f8b 10       		.byte	0x10
 5029 1f8c 77       		.byte	0x77
 5030 1f8d 07       		.byte	0x7
 5031 1f8e 00000000 		.4byte	.LASF280
 5032 1f92 E9450000 		.4byte	0x45e9
 5033 1f96 01       		.byte	0x1
 5034 1f97 9F1F0000 		.4byte	0x1f9f
AARCH64 GAS  obj/extInstr.s 			page 298


 5035 1f9b AA1F0000 		.4byte	0x1faa
 5036 1f9f 02       		.uleb128 0x2
 5037 1fa0 D1450000 		.4byte	0x45d1
 5038 1fa4 01       		.uleb128 0x1
 5039 1fa5 DD450000 		.4byte	0x45dd
 5040 1fa9 00       		.byte	0
 5041 1faa 28       		.uleb128 0x28
 5042 1fab 00000000 		.4byte	.LASF83
 5043 1faf 10       		.byte	0x10
 5044 1fb0 7B       		.byte	0x7b
 5045 1fb1 07       		.byte	0x7
 5046 1fb2 00000000 		.4byte	.LASF281
 5047 1fb6 E9450000 		.4byte	0x45e9
 5048 1fba 01       		.byte	0x1
 5049 1fbb C31F0000 		.4byte	0x1fc3
 5050 1fbf CE1F0000 		.4byte	0x1fce
 5051 1fc3 02       		.uleb128 0x2
 5052 1fc4 D1450000 		.4byte	0x45d1
 5053 1fc8 01       		.uleb128 0x1
 5054 1fc9 E3450000 		.4byte	0x45e3
 5055 1fcd 00       		.byte	0
 5056 1fce 20       		.uleb128 0x20
 5057 1fcf 00000000 		.4byte	.LASF282
 5058 1fd3 10       		.byte	0x10
 5059 1fd4 82       		.byte	0x82
 5060 1fd5 07       		.byte	0x7
 5061 1fd6 00000000 		.4byte	.LASF283
 5062 1fda 01       		.byte	0x1
 5063 1fdb E31F0000 		.4byte	0x1fe3
 5064 1fdf EE1F0000 		.4byte	0x1fee
 5065 1fe3 02       		.uleb128 0x2
 5066 1fe4 D1450000 		.4byte	0x45d1
 5067 1fe8 02       		.uleb128 0x2
 5068 1fe9 D43A0000 		.4byte	0x3ad4
 5069 1fed 00       		.byte	0
 5070 1fee 20       		.uleb128 0x20
 5071 1fef 00000000 		.4byte	.LASF204
 5072 1ff3 10       		.byte	0x10
 5073 1ff4 85       		.byte	0x85
 5074 1ff5 07       		.byte	0x7
 5075 1ff6 00000000 		.4byte	.LASF284
 5076 1ffa 01       		.byte	0x1
 5077 1ffb 03200000 		.4byte	0x2003
 5078 1fff 0E200000 		.4byte	0x200e
 5079 2003 02       		.uleb128 0x2
 5080 2004 D1450000 		.4byte	0x45d1
 5081 2008 01       		.uleb128 0x1
 5082 2009 E9450000 		.4byte	0x45e9
 5083 200d 00       		.byte	0
 5084 200e 75       		.uleb128 0x75
 5085 200f 00000000 		.4byte	.LASF286
 5086 2013 10       		.byte	0x10
 5087 2014 91       		.byte	0x91
 5088 2015 10       		.byte	0x10
 5089 2016 00000000 		.4byte	.LASF324
 5090 201a EF450000 		.4byte	0x45ef
 5091 201e 01       		.byte	0x1
AARCH64 GAS  obj/extInstr.s 			page 299


 5092 201f 27200000 		.4byte	0x2027
 5093 2023 2D200000 		.4byte	0x202d
 5094 2027 02       		.uleb128 0x2
 5095 2028 D7450000 		.4byte	0x45d7
 5096 202c 00       		.byte	0
 5097 202d 5A       		.uleb128 0x5a
 5098 202e 00000000 		.4byte	.LASF287
 5099 2032 10       		.byte	0x10
 5100 2033 9A       		.byte	0x9a
 5101 2034 07       		.byte	0x7
 5102 2035 00000000 		.4byte	.LASF288
 5103 2039 FB450000 		.4byte	0x45fb
 5104 203d 01       		.byte	0x1
 5105 203e 42200000 		.4byte	0x2042
 5106 2042 02       		.uleb128 0x2
 5107 2043 D7450000 		.4byte	0x45d7
 5108 2047 00       		.byte	0
 5109 2048 00       		.byte	0
 5110 2049 0C       		.uleb128 0xc
 5111 204a 801E0000 		.4byte	0x1e80
 5112 204e 03       		.uleb128 0x3
 5113 204f 10       		.byte	0x10
 5114 2050 4A       		.byte	0x4a
 5115 2051 10       		.byte	0x10
 5116 2052 5F200000 		.4byte	0x205f
 5117 2056 00       		.byte	0
 5118 2057 03       		.uleb128 0x3
 5119 2058 10       		.byte	0x10
 5120 2059 3A       		.byte	0x3a
 5121 205a 1A       		.byte	0x1a
 5122 205b 801E0000 		.4byte	0x1e80
 5123 205f 76       		.uleb128 0x76
 5124 2060 00000000 		.4byte	.LASF289
 5125 2064 10       		.byte	0x10
 5126 2065 46       		.byte	0x46
 5127 2066 08       		.byte	0x8
 5128 2067 00000000 		.4byte	.LASF290
 5129 206b 75200000 		.4byte	0x2075
 5130 206f 01       		.uleb128 0x1
 5131 2070 801E0000 		.4byte	0x1e80
 5132 2074 00       		.byte	0
 5133 2075 1D       		.uleb128 0x1d
 5134 2076 00000000 		.4byte	.LASF292
 5135 207a 11       		.byte	0x11
 5136 207b 0C01     		.2byte	0x10c
 5137 207d 1D       		.byte	0x1d
 5138 207e CB450000 		.4byte	0x45cb
 5139 2082 4D       		.uleb128 0x4d
 5140 2083 00000000 		.4byte	.LASF350
 5141 2087 0C       		.uleb128 0xc
 5142 2088 82200000 		.4byte	0x2082
 5143 208c 1D       		.uleb128 0x1d
 5144 208d 00000000 		.4byte	.LASF293
 5145 2091 11       		.byte	0x11
 5146 2092 0801     		.2byte	0x108
 5147 2094 1D       		.byte	0x1d
 5148 2095 793A0000 		.4byte	0x3a79
AARCH64 GAS  obj/extInstr.s 			page 300


 5149 2099 77       		.uleb128 0x77
 5150 209a 00000000 		.4byte	.LASF296
 5151 209e 13       		.byte	0x13
 5152 209f 680A     		.2byte	0xa68
 5153 20a1 0D       		.byte	0xd
 5154 20a2 24       		.uleb128 0x24
 5155 20a3 00000000 		.4byte	.LASF294
 5156 20a7 01       		.byte	0x1
 5157 20a8 12       		.byte	0x12
 5158 20a9 50       		.byte	0x50
 5159 20aa 0A       		.byte	0xa
 5160 20ab C7200000 		.4byte	0x20c7
 5161 20af 5B       		.uleb128 0x5b
 5162 20b0 00000000 		.4byte	.LASF294
 5163 20b4 12       		.byte	0x12
 5164 20b5 50       		.byte	0x50
 5165 20b6 2B       		.byte	0x2b
 5166 20b7 00000000 		.4byte	.LASF295
 5167 20bb 01       		.byte	0x1
 5168 20bc C0200000 		.4byte	0x20c0
 5169 20c0 02       		.uleb128 0x2
 5170 20c1 29460000 		.4byte	0x4629
 5171 20c5 00       		.byte	0
 5172 20c6 00       		.byte	0
 5173 20c7 0C       		.uleb128 0xc
 5174 20c8 A2200000 		.4byte	0x20a2
 5175 20cc 5C       		.uleb128 0x5c
 5176 20cd 00000000 		.4byte	.LASF421
 5177 20d1 12       		.byte	0x12
 5178 20d2 53       		.byte	0x53
 5179 20d3 23       		.byte	0x23
 5180 20d4 C7200000 		.4byte	0x20c7
 5181 20d8 01       		.byte	0x1
 5182 20d9 00       		.byte	0
 5183 20da 5D       		.uleb128 0x5d
 5184 20db 00000000 		.4byte	.LASF297
 5185 20df 14       		.byte	0x14
 5186 20e0 32       		.byte	0x32
 5187 20e1 0D       		.byte	0xd
 5188 20e2 3F       		.uleb128 0x3f
 5189 20e3 00000000 		.4byte	.LASF298
 5190 20e7 01       		.byte	0x1
 5191 20e8 07       		.byte	0x7
 5192 20e9 3C01     		.2byte	0x13c
 5193 20eb 0C       		.byte	0xc
 5194 20ec CE220000 		.4byte	0x22ce
 5195 20f0 2F       		.uleb128 0x2f
 5196 20f1 00000000 		.4byte	.LASF157
 5197 20f5 07       		.byte	0x7
 5198 20f6 4801     		.2byte	0x148
 5199 20f8 07       		.byte	0x7
 5200 20f9 00000000 		.4byte	.LASF299
 5201 20fd 0C210000 		.4byte	0x210c
 5202 2101 01       		.uleb128 0x1
 5203 2102 49460000 		.4byte	0x4649
 5204 2106 01       		.uleb128 0x1
 5205 2107 4F460000 		.4byte	0x464f
AARCH64 GAS  obj/extInstr.s 			page 301


 5206 210b 00       		.byte	0
 5207 210c 1D       		.uleb128 0x1d
 5208 210d 00000000 		.4byte	.LASF300
 5209 2111 07       		.byte	0x7
 5210 2112 3E01     		.2byte	0x13e
 5211 2114 14       		.byte	0x14
 5212 2115 4E3B0000 		.4byte	0x3b4e
 5213 2119 0C       		.uleb128 0xc
 5214 211a 0C210000 		.4byte	0x210c
 5215 211e 5E       		.uleb128 0x5e
 5216 211f 657100   		.string	"eq"
 5217 2122 07       		.byte	0x7
 5218 2123 4C01     		.2byte	0x14c
 5219 2125 07       		.byte	0x7
 5220 2126 00000000 		.4byte	.LASF301
 5221 212a EF450000 		.4byte	0x45ef
 5222 212e 3D210000 		.4byte	0x213d
 5223 2132 01       		.uleb128 0x1
 5224 2133 4F460000 		.4byte	0x464f
 5225 2137 01       		.uleb128 0x1
 5226 2138 4F460000 		.4byte	0x464f
 5227 213c 00       		.byte	0
 5228 213d 5E       		.uleb128 0x5e
 5229 213e 6C7400   		.string	"lt"
 5230 2141 07       		.byte	0x7
 5231 2142 5001     		.2byte	0x150
 5232 2144 07       		.byte	0x7
 5233 2145 00000000 		.4byte	.LASF302
 5234 2149 EF450000 		.4byte	0x45ef
 5235 214d 5C210000 		.4byte	0x215c
 5236 2151 01       		.uleb128 0x1
 5237 2152 4F460000 		.4byte	0x464f
 5238 2156 01       		.uleb128 0x1
 5239 2157 4F460000 		.4byte	0x464f
 5240 215b 00       		.byte	0
 5241 215c 14       		.uleb128 0x14
 5242 215d 00000000 		.4byte	.LASF244
 5243 2161 07       		.byte	0x7
 5244 2162 5801     		.2byte	0x158
 5245 2164 07       		.byte	0x7
 5246 2165 00000000 		.4byte	.LASF303
 5247 2169 D43A0000 		.4byte	0x3ad4
 5248 216d 81210000 		.4byte	0x2181
 5249 2171 01       		.uleb128 0x1
 5250 2172 55460000 		.4byte	0x4655
 5251 2176 01       		.uleb128 0x1
 5252 2177 55460000 		.4byte	0x4655
 5253 217b 01       		.uleb128 0x1
 5254 217c 8C200000 		.4byte	0x208c
 5255 2180 00       		.byte	0
 5256 2181 14       		.uleb128 0x14
 5257 2182 00000000 		.4byte	.LASF113
 5258 2186 07       		.byte	0x7
 5259 2187 6601     		.2byte	0x166
 5260 2189 07       		.byte	0x7
 5261 218a 00000000 		.4byte	.LASF304
 5262 218e 8C200000 		.4byte	0x208c
AARCH64 GAS  obj/extInstr.s 			page 302


 5263 2192 9C210000 		.4byte	0x219c
 5264 2196 01       		.uleb128 0x1
 5265 2197 55460000 		.4byte	0x4655
 5266 219b 00       		.byte	0
 5267 219c 14       		.uleb128 0x14
 5268 219d 00000000 		.4byte	.LASF212
 5269 21a1 07       		.byte	0x7
 5270 21a2 7001     		.2byte	0x170
 5271 21a4 07       		.byte	0x7
 5272 21a5 00000000 		.4byte	.LASF305
 5273 21a9 55460000 		.4byte	0x4655
 5274 21ad C1210000 		.4byte	0x21c1
 5275 21b1 01       		.uleb128 0x1
 5276 21b2 55460000 		.4byte	0x4655
 5277 21b6 01       		.uleb128 0x1
 5278 21b7 8C200000 		.4byte	0x208c
 5279 21bb 01       		.uleb128 0x1
 5280 21bc 4F460000 		.4byte	0x464f
 5281 21c0 00       		.byte	0
 5282 21c1 14       		.uleb128 0x14
 5283 21c2 00000000 		.4byte	.LASF306
 5284 21c6 07       		.byte	0x7
 5285 21c7 7E01     		.2byte	0x17e
 5286 21c9 07       		.byte	0x7
 5287 21ca 00000000 		.4byte	.LASF307
 5288 21ce 5B460000 		.4byte	0x465b
 5289 21d2 E6210000 		.4byte	0x21e6
 5290 21d6 01       		.uleb128 0x1
 5291 21d7 5B460000 		.4byte	0x465b
 5292 21db 01       		.uleb128 0x1
 5293 21dc 55460000 		.4byte	0x4655
 5294 21e0 01       		.uleb128 0x1
 5295 21e1 8C200000 		.4byte	0x208c
 5296 21e5 00       		.byte	0
 5297 21e6 14       		.uleb128 0x14
 5298 21e7 00000000 		.4byte	.LASF202
 5299 21eb 07       		.byte	0x7
 5300 21ec 8A01     		.2byte	0x18a
 5301 21ee 07       		.byte	0x7
 5302 21ef 00000000 		.4byte	.LASF308
 5303 21f3 5B460000 		.4byte	0x465b
 5304 21f7 0B220000 		.4byte	0x220b
 5305 21fb 01       		.uleb128 0x1
 5306 21fc 5B460000 		.4byte	0x465b
 5307 2200 01       		.uleb128 0x1
 5308 2201 55460000 		.4byte	0x4655
 5309 2205 01       		.uleb128 0x1
 5310 2206 8C200000 		.4byte	0x208c
 5311 220a 00       		.byte	0
 5312 220b 14       		.uleb128 0x14
 5313 220c 00000000 		.4byte	.LASF157
 5314 2210 07       		.byte	0x7
 5315 2211 9601     		.2byte	0x196
 5316 2213 07       		.byte	0x7
 5317 2214 00000000 		.4byte	.LASF309
 5318 2218 5B460000 		.4byte	0x465b
 5319 221c 30220000 		.4byte	0x2230
AARCH64 GAS  obj/extInstr.s 			page 303


 5320 2220 01       		.uleb128 0x1
 5321 2221 5B460000 		.4byte	0x465b
 5322 2225 01       		.uleb128 0x1
 5323 2226 8C200000 		.4byte	0x208c
 5324 222a 01       		.uleb128 0x1
 5325 222b 0C210000 		.4byte	0x210c
 5326 222f 00       		.byte	0
 5327 2230 14       		.uleb128 0x14
 5328 2231 00000000 		.4byte	.LASF310
 5329 2235 07       		.byte	0x7
 5330 2236 A201     		.2byte	0x1a2
 5331 2238 07       		.byte	0x7
 5332 2239 00000000 		.4byte	.LASF311
 5333 223d 0C210000 		.4byte	0x210c
 5334 2241 4B220000 		.4byte	0x224b
 5335 2245 01       		.uleb128 0x1
 5336 2246 61460000 		.4byte	0x4661
 5337 224a 00       		.byte	0
 5338 224b 1D       		.uleb128 0x1d
 5339 224c 00000000 		.4byte	.LASF312
 5340 2250 07       		.byte	0x7
 5341 2251 3F01     		.2byte	0x13f
 5342 2253 13       		.byte	0x13
 5343 2254 D43A0000 		.4byte	0x3ad4
 5344 2258 0C       		.uleb128 0xc
 5345 2259 4B220000 		.4byte	0x224b
 5346 225d 14       		.uleb128 0x14
 5347 225e 00000000 		.4byte	.LASF313
 5348 2262 07       		.byte	0x7
 5349 2263 A801     		.2byte	0x1a8
 5350 2265 07       		.byte	0x7
 5351 2266 00000000 		.4byte	.LASF314
 5352 226a 4B220000 		.4byte	0x224b
 5353 226e 78220000 		.4byte	0x2278
 5354 2272 01       		.uleb128 0x1
 5355 2273 4F460000 		.4byte	0x464f
 5356 2277 00       		.byte	0
 5357 2278 14       		.uleb128 0x14
 5358 2279 00000000 		.4byte	.LASF315
 5359 227d 07       		.byte	0x7
 5360 227e AC01     		.2byte	0x1ac
 5361 2280 07       		.byte	0x7
 5362 2281 00000000 		.4byte	.LASF316
 5363 2285 EF450000 		.4byte	0x45ef
 5364 2289 98220000 		.4byte	0x2298
 5365 228d 01       		.uleb128 0x1
 5366 228e 61460000 		.4byte	0x4661
 5367 2292 01       		.uleb128 0x1
 5368 2293 61460000 		.4byte	0x4661
 5369 2297 00       		.byte	0
 5370 2298 78       		.uleb128 0x78
 5371 2299 656F6600 		.string	"eof"
 5372 229d 07       		.byte	0x7
 5373 229e B001     		.2byte	0x1b0
 5374 22a0 07       		.byte	0x7
 5375 22a1 00000000 		.4byte	.LASF994
 5376 22a5 4B220000 		.4byte	0x224b
AARCH64 GAS  obj/extInstr.s 			page 304


 5377 22a9 14       		.uleb128 0x14
 5378 22aa 00000000 		.4byte	.LASF317
 5379 22ae 07       		.byte	0x7
 5380 22af B401     		.2byte	0x1b4
 5381 22b1 07       		.byte	0x7
 5382 22b2 00000000 		.4byte	.LASF318
 5383 22b6 4B220000 		.4byte	0x224b
 5384 22ba C4220000 		.4byte	0x22c4
 5385 22be 01       		.uleb128 0x1
 5386 22bf 61460000 		.4byte	0x4661
 5387 22c3 00       		.byte	0
 5388 22c4 0E       		.uleb128 0xe
 5389 22c5 00000000 		.4byte	.LASF254
 5390 22c9 4E3B0000 		.4byte	0x3b4e
 5391 22cd 00       		.byte	0
 5392 22ce 03       		.uleb128 0x3
 5393 22cf 15       		.byte	0x15
 5394 22d0 2F       		.byte	0x2f
 5395 22d1 0B       		.byte	0xb
 5396 22d2 74470000 		.4byte	0x4774
 5397 22d6 03       		.uleb128 0x3
 5398 22d7 15       		.byte	0x15
 5399 22d8 30       		.byte	0x30
 5400 22d9 0B       		.byte	0xb
 5401 22da 80470000 		.4byte	0x4780
 5402 22de 03       		.uleb128 0x3
 5403 22df 15       		.byte	0x15
 5404 22e0 31       		.byte	0x31
 5405 22e1 0B       		.byte	0xb
 5406 22e2 8C470000 		.4byte	0x478c
 5407 22e6 03       		.uleb128 0x3
 5408 22e7 15       		.byte	0x15
 5409 22e8 32       		.byte	0x32
 5410 22e9 0B       		.byte	0xb
 5411 22ea 98470000 		.4byte	0x4798
 5412 22ee 03       		.uleb128 0x3
 5413 22ef 15       		.byte	0x15
 5414 22f0 34       		.byte	0x34
 5415 22f1 0B       		.byte	0xb
 5416 22f2 34480000 		.4byte	0x4834
 5417 22f6 03       		.uleb128 0x3
 5418 22f7 15       		.byte	0x15
 5419 22f8 35       		.byte	0x35
 5420 22f9 0B       		.byte	0xb
 5421 22fa 40480000 		.4byte	0x4840
 5422 22fe 03       		.uleb128 0x3
 5423 22ff 15       		.byte	0x15
 5424 2300 36       		.byte	0x36
 5425 2301 0B       		.byte	0xb
 5426 2302 4C480000 		.4byte	0x484c
 5427 2306 03       		.uleb128 0x3
 5428 2307 15       		.byte	0x15
 5429 2308 37       		.byte	0x37
 5430 2309 0B       		.byte	0xb
 5431 230a 58480000 		.4byte	0x4858
 5432 230e 03       		.uleb128 0x3
 5433 230f 15       		.byte	0x15
AARCH64 GAS  obj/extInstr.s 			page 305


 5434 2310 39       		.byte	0x39
 5435 2311 0B       		.byte	0xb
 5436 2312 D4470000 		.4byte	0x47d4
 5437 2316 03       		.uleb128 0x3
 5438 2317 15       		.byte	0x15
 5439 2318 3A       		.byte	0x3a
 5440 2319 0B       		.byte	0xb
 5441 231a E0470000 		.4byte	0x47e0
 5442 231e 03       		.uleb128 0x3
 5443 231f 15       		.byte	0x15
 5444 2320 3B       		.byte	0x3b
 5445 2321 0B       		.byte	0xb
 5446 2322 EC470000 		.4byte	0x47ec
 5447 2326 03       		.uleb128 0x3
 5448 2327 15       		.byte	0x15
 5449 2328 3C       		.byte	0x3c
 5450 2329 0B       		.byte	0xb
 5451 232a F8470000 		.4byte	0x47f8
 5452 232e 03       		.uleb128 0x3
 5453 232f 15       		.byte	0x15
 5454 2330 3E       		.byte	0x3e
 5455 2331 0B       		.byte	0xb
 5456 2332 AC480000 		.4byte	0x48ac
 5457 2336 03       		.uleb128 0x3
 5458 2337 15       		.byte	0x15
 5459 2338 3F       		.byte	0x3f
 5460 2339 0B       		.byte	0xb
 5461 233a 94480000 		.4byte	0x4894
 5462 233e 03       		.uleb128 0x3
 5463 233f 15       		.byte	0x15
 5464 2340 41       		.byte	0x41
 5465 2341 0B       		.byte	0xb
 5466 2342 A4470000 		.4byte	0x47a4
 5467 2346 03       		.uleb128 0x3
 5468 2347 15       		.byte	0x15
 5469 2348 42       		.byte	0x42
 5470 2349 0B       		.byte	0xb
 5471 234a B0470000 		.4byte	0x47b0
 5472 234e 03       		.uleb128 0x3
 5473 234f 15       		.byte	0x15
 5474 2350 43       		.byte	0x43
 5475 2351 0B       		.byte	0xb
 5476 2352 BC470000 		.4byte	0x47bc
 5477 2356 03       		.uleb128 0x3
 5478 2357 15       		.byte	0x15
 5479 2358 44       		.byte	0x44
 5480 2359 0B       		.byte	0xb
 5481 235a C8470000 		.4byte	0x47c8
 5482 235e 03       		.uleb128 0x3
 5483 235f 15       		.byte	0x15
 5484 2360 46       		.byte	0x46
 5485 2361 0B       		.byte	0xb
 5486 2362 64480000 		.4byte	0x4864
 5487 2366 03       		.uleb128 0x3
 5488 2367 15       		.byte	0x15
 5489 2368 47       		.byte	0x47
 5490 2369 0B       		.byte	0xb
AARCH64 GAS  obj/extInstr.s 			page 306


 5491 236a 70480000 		.4byte	0x4870
 5492 236e 03       		.uleb128 0x3
 5493 236f 15       		.byte	0x15
 5494 2370 48       		.byte	0x48
 5495 2371 0B       		.byte	0xb
 5496 2372 7C480000 		.4byte	0x487c
 5497 2376 03       		.uleb128 0x3
 5498 2377 15       		.byte	0x15
 5499 2378 49       		.byte	0x49
 5500 2379 0B       		.byte	0xb
 5501 237a 88480000 		.4byte	0x4888
 5502 237e 03       		.uleb128 0x3
 5503 237f 15       		.byte	0x15
 5504 2380 4B       		.byte	0x4b
 5505 2381 0B       		.byte	0xb
 5506 2382 04480000 		.4byte	0x4804
 5507 2386 03       		.uleb128 0x3
 5508 2387 15       		.byte	0x15
 5509 2388 4C       		.byte	0x4c
 5510 2389 0B       		.byte	0xb
 5511 238a 10480000 		.4byte	0x4810
 5512 238e 03       		.uleb128 0x3
 5513 238f 15       		.byte	0x15
 5514 2390 4D       		.byte	0x4d
 5515 2391 0B       		.byte	0xb
 5516 2392 1C480000 		.4byte	0x481c
 5517 2396 03       		.uleb128 0x3
 5518 2397 15       		.byte	0x15
 5519 2398 4E       		.byte	0x4e
 5520 2399 0B       		.byte	0xb
 5521 239a 28480000 		.4byte	0x4828
 5522 239e 03       		.uleb128 0x3
 5523 239f 15       		.byte	0x15
 5524 23a0 50       		.byte	0x50
 5525 23a1 0B       		.byte	0xb
 5526 23a2 B8480000 		.4byte	0x48b8
 5527 23a6 03       		.uleb128 0x3
 5528 23a7 15       		.byte	0x15
 5529 23a8 51       		.byte	0x51
 5530 23a9 0B       		.byte	0xb
 5531 23aa A0480000 		.4byte	0x48a0
 5532 23ae 03       		.uleb128 0x3
 5533 23af 16       		.byte	0x16
 5534 23b0 35       		.byte	0x35
 5535 23b1 0B       		.byte	0xb
 5536 23b2 C4480000 		.4byte	0x48c4
 5537 23b6 03       		.uleb128 0x3
 5538 23b7 16       		.byte	0x16
 5539 23b8 36       		.byte	0x36
 5540 23b9 0B       		.byte	0xb
 5541 23ba 0A4A0000 		.4byte	0x4a0a
 5542 23be 03       		.uleb128 0x3
 5543 23bf 16       		.byte	0x16
 5544 23c0 37       		.byte	0x37
 5545 23c1 0B       		.byte	0xb
 5546 23c2 254A0000 		.4byte	0x4a25
 5547 23c6 1D       		.uleb128 0x1d
AARCH64 GAS  obj/extInstr.s 			page 307


 5548 23c7 00000000 		.4byte	.LASF319
 5549 23cb 11       		.byte	0x11
 5550 23cc 0901     		.2byte	0x109
 5551 23ce 14       		.byte	0x14
 5552 23cf 08430000 		.4byte	0x4308
 5553 23d3 3D       		.uleb128 0x3d
 5554 23d4 00000000 		.4byte	.LASF320
 5555 23d8 01       		.byte	0x1
 5556 23d9 0D       		.byte	0xd
 5557 23da 74       		.byte	0x74
 5558 23db 0B       		.byte	0xb
 5559 23dc 64240000 		.4byte	0x2464
 5560 23e0 79       		.uleb128 0x79
 5561 23e1 2F320000 		.4byte	0x322f
 5562 23e5 00       		.byte	0
 5563 23e6 01       		.byte	0x1
 5564 23e7 20       		.uleb128 0x20
 5565 23e8 00000000 		.4byte	.LASF321
 5566 23ec 0D       		.byte	0xd
 5567 23ed 90       		.byte	0x90
 5568 23ee 07       		.byte	0x7
 5569 23ef 00000000 		.4byte	.LASF322
 5570 23f3 01       		.byte	0x1
 5571 23f4 FC230000 		.4byte	0x23fc
 5572 23f8 02240000 		.4byte	0x2402
 5573 23fc 02       		.uleb128 0x2
 5574 23fd 8B4A0000 		.4byte	0x4a8b
 5575 2401 00       		.byte	0
 5576 2402 20       		.uleb128 0x20
 5577 2403 00000000 		.4byte	.LASF321
 5578 2407 0D       		.byte	0xd
 5579 2408 93       		.byte	0x93
 5580 2409 07       		.byte	0x7
 5581 240a 00000000 		.4byte	.LASF323
 5582 240e 01       		.byte	0x1
 5583 240f 17240000 		.4byte	0x2417
 5584 2413 22240000 		.4byte	0x2422
 5585 2417 02       		.uleb128 0x2
 5586 2418 8B4A0000 		.4byte	0x4a8b
 5587 241c 01       		.uleb128 0x1
 5588 241d 964A0000 		.4byte	0x4a96
 5589 2421 00       		.byte	0
 5590 2422 7A       		.uleb128 0x7a
 5591 2423 00000000 		.4byte	.LASF83
 5592 2427 0D       		.byte	0xd
 5593 2428 98       		.byte	0x98
 5594 2429 12       		.byte	0x12
 5595 242a 00000000 		.4byte	.LASF325
 5596 242e 9C4A0000 		.4byte	0x4a9c
 5597 2432 01       		.byte	0x1
 5598 2433 01       		.byte	0x1
 5599 2434 3C240000 		.4byte	0x243c
 5600 2438 47240000 		.4byte	0x2447
 5601 243c 02       		.uleb128 0x2
 5602 243d 8B4A0000 		.4byte	0x4a8b
 5603 2441 01       		.uleb128 0x1
 5604 2442 964A0000 		.4byte	0x4a96
AARCH64 GAS  obj/extInstr.s 			page 308


 5605 2446 00       		.byte	0
 5606 2447 7B       		.uleb128 0x7b
 5607 2448 00000000 		.4byte	.LASF326
 5608 244c 0D       		.byte	0xd
 5609 244d A2       		.byte	0xa2
 5610 244e 07       		.byte	0x7
 5611 244f 00000000 		.4byte	.LASF327
 5612 2453 01       		.byte	0x1
 5613 2454 58240000 		.4byte	0x2458
 5614 2458 02       		.uleb128 0x2
 5615 2459 8B4A0000 		.4byte	0x4a8b
 5616 245d 02       		.uleb128 0x2
 5617 245e D43A0000 		.4byte	0x3ad4
 5618 2462 00       		.byte	0
 5619 2463 00       		.byte	0
 5620 2464 0C       		.uleb128 0xc
 5621 2465 D3230000 		.4byte	0x23d3
 5622 2469 03       		.uleb128 0x3
 5623 246a 17       		.byte	0x17
 5624 246b 7F       		.byte	0x7f
 5625 246c 0B       		.byte	0xb
 5626 246d CA4A0000 		.4byte	0x4aca
 5627 2471 03       		.uleb128 0x3
 5628 2472 17       		.byte	0x17
 5629 2473 80       		.byte	0x80
 5630 2474 0B       		.byte	0xb
 5631 2475 FE4A0000 		.4byte	0x4afe
 5632 2479 03       		.uleb128 0x3
 5633 247a 17       		.byte	0x17
 5634 247b 86       		.byte	0x86
 5635 247c 0B       		.byte	0xb
 5636 247d 654B0000 		.4byte	0x4b65
 5637 2481 03       		.uleb128 0x3
 5638 2482 17       		.byte	0x17
 5639 2483 89       		.byte	0x89
 5640 2484 0B       		.byte	0xb
 5641 2485 844B0000 		.4byte	0x4b84
 5642 2489 03       		.uleb128 0x3
 5643 248a 17       		.byte	0x17
 5644 248b 8C       		.byte	0x8c
 5645 248c 0B       		.byte	0xb
 5646 248d 9F4B0000 		.4byte	0x4b9f
 5647 2491 03       		.uleb128 0x3
 5648 2492 17       		.byte	0x17
 5649 2493 8D       		.byte	0x8d
 5650 2494 0B       		.byte	0xb
 5651 2495 B54B0000 		.4byte	0x4bb5
 5652 2499 03       		.uleb128 0x3
 5653 249a 17       		.byte	0x17
 5654 249b 8E       		.byte	0x8e
 5655 249c 0B       		.byte	0xb
 5656 249d CC4B0000 		.4byte	0x4bcc
 5657 24a1 03       		.uleb128 0x3
 5658 24a2 17       		.byte	0x17
 5659 24a3 8F       		.byte	0x8f
 5660 24a4 0B       		.byte	0xb
 5661 24a5 E34B0000 		.4byte	0x4be3
AARCH64 GAS  obj/extInstr.s 			page 309


 5662 24a9 03       		.uleb128 0x3
 5663 24aa 17       		.byte	0x17
 5664 24ab 91       		.byte	0x91
 5665 24ac 0B       		.byte	0xb
 5666 24ad 0D4C0000 		.4byte	0x4c0d
 5667 24b1 03       		.uleb128 0x3
 5668 24b2 17       		.byte	0x17
 5669 24b3 94       		.byte	0x94
 5670 24b4 0B       		.byte	0xb
 5671 24b5 2A4C0000 		.4byte	0x4c2a
 5672 24b9 03       		.uleb128 0x3
 5673 24ba 17       		.byte	0x17
 5674 24bb 96       		.byte	0x96
 5675 24bc 0B       		.byte	0xb
 5676 24bd 414C0000 		.4byte	0x4c41
 5677 24c1 03       		.uleb128 0x3
 5678 24c2 17       		.byte	0x17
 5679 24c3 99       		.byte	0x99
 5680 24c4 0B       		.byte	0xb
 5681 24c5 5D4C0000 		.4byte	0x4c5d
 5682 24c9 03       		.uleb128 0x3
 5683 24ca 17       		.byte	0x17
 5684 24cb 9A       		.byte	0x9a
 5685 24cc 0B       		.byte	0xb
 5686 24cd 794C0000 		.4byte	0x4c79
 5687 24d1 03       		.uleb128 0x3
 5688 24d2 17       		.byte	0x17
 5689 24d3 9B       		.byte	0x9b
 5690 24d4 0B       		.byte	0xb
 5691 24d5 9A4C0000 		.4byte	0x4c9a
 5692 24d9 03       		.uleb128 0x3
 5693 24da 17       		.byte	0x17
 5694 24db 9D       		.byte	0x9d
 5695 24dc 0B       		.byte	0xb
 5696 24dd BB4C0000 		.4byte	0x4cbb
 5697 24e1 03       		.uleb128 0x3
 5698 24e2 17       		.byte	0x17
 5699 24e3 A0       		.byte	0xa0
 5700 24e4 0B       		.byte	0xb
 5701 24e5 DD4C0000 		.4byte	0x4cdd
 5702 24e9 03       		.uleb128 0x3
 5703 24ea 17       		.byte	0x17
 5704 24eb A3       		.byte	0xa3
 5705 24ec 0B       		.byte	0xb
 5706 24ed F14C0000 		.4byte	0x4cf1
 5707 24f1 03       		.uleb128 0x3
 5708 24f2 17       		.byte	0x17
 5709 24f3 A5       		.byte	0xa5
 5710 24f4 0B       		.byte	0xb
 5711 24f5 FE4C0000 		.4byte	0x4cfe
 5712 24f9 03       		.uleb128 0x3
 5713 24fa 17       		.byte	0x17
 5714 24fb A6       		.byte	0xa6
 5715 24fc 0B       		.byte	0xb
 5716 24fd 114D0000 		.4byte	0x4d11
 5717 2501 03       		.uleb128 0x3
 5718 2502 17       		.byte	0x17
AARCH64 GAS  obj/extInstr.s 			page 310


 5719 2503 A7       		.byte	0xa7
 5720 2504 0B       		.byte	0xb
 5721 2505 324D0000 		.4byte	0x4d32
 5722 2509 03       		.uleb128 0x3
 5723 250a 17       		.byte	0x17
 5724 250b A8       		.byte	0xa8
 5725 250c 0B       		.byte	0xb
 5726 250d 524D0000 		.4byte	0x4d52
 5727 2511 03       		.uleb128 0x3
 5728 2512 17       		.byte	0x17
 5729 2513 A9       		.byte	0xa9
 5730 2514 0B       		.byte	0xb
 5731 2515 724D0000 		.4byte	0x4d72
 5732 2519 03       		.uleb128 0x3
 5733 251a 17       		.byte	0x17
 5734 251b AB       		.byte	0xab
 5735 251c 0B       		.byte	0xb
 5736 251d 894D0000 		.4byte	0x4d89
 5737 2521 03       		.uleb128 0x3
 5738 2522 17       		.byte	0x17
 5739 2523 AC       		.byte	0xac
 5740 2524 0B       		.byte	0xb
 5741 2525 AA4D0000 		.4byte	0x4daa
 5742 2529 03       		.uleb128 0x3
 5743 252a 17       		.byte	0x17
 5744 252b F0       		.byte	0xf0
 5745 252c 16       		.byte	0x16
 5746 252d 324B0000 		.4byte	0x4b32
 5747 2531 03       		.uleb128 0x3
 5748 2532 17       		.byte	0x17
 5749 2533 F5       		.byte	0xf5
 5750 2534 16       		.byte	0x16
 5751 2535 F2330000 		.4byte	0x33f2
 5752 2539 03       		.uleb128 0x3
 5753 253a 17       		.byte	0x17
 5754 253b F6       		.byte	0xf6
 5755 253c 16       		.byte	0x16
 5756 253d C64D0000 		.4byte	0x4dc6
 5757 2541 03       		.uleb128 0x3
 5758 2542 17       		.byte	0x17
 5759 2543 F8       		.byte	0xf8
 5760 2544 16       		.byte	0x16
 5761 2545 E24D0000 		.4byte	0x4de2
 5762 2549 03       		.uleb128 0x3
 5763 254a 17       		.byte	0x17
 5764 254b F9       		.byte	0xf9
 5765 254c 16       		.byte	0x16
 5766 254d 394E0000 		.4byte	0x4e39
 5767 2551 03       		.uleb128 0x3
 5768 2552 17       		.byte	0x17
 5769 2553 FA       		.byte	0xfa
 5770 2554 16       		.byte	0x16
 5771 2555 F94D0000 		.4byte	0x4df9
 5772 2559 03       		.uleb128 0x3
 5773 255a 17       		.byte	0x17
 5774 255b FB       		.byte	0xfb
 5775 255c 16       		.byte	0x16
AARCH64 GAS  obj/extInstr.s 			page 311


 5776 255d 194E0000 		.4byte	0x4e19
 5777 2561 03       		.uleb128 0x3
 5778 2562 17       		.byte	0x17
 5779 2563 FC       		.byte	0xfc
 5780 2564 16       		.byte	0x16
 5781 2565 544E0000 		.4byte	0x4e54
 5782 2569 03       		.uleb128 0x3
 5783 256a 18       		.byte	0x18
 5784 256b 62       		.byte	0x62
 5785 256c 0B       		.byte	0xb
 5786 256d 0A3D0000 		.4byte	0x3d0a
 5787 2571 03       		.uleb128 0x3
 5788 2572 18       		.byte	0x18
 5789 2573 63       		.byte	0x63
 5790 2574 0B       		.byte	0xb
 5791 2575 F94E0000 		.4byte	0x4ef9
 5792 2579 03       		.uleb128 0x3
 5793 257a 18       		.byte	0x18
 5794 257b 65       		.byte	0x65
 5795 257c 0B       		.byte	0xb
 5796 257d 104F0000 		.4byte	0x4f10
 5797 2581 03       		.uleb128 0x3
 5798 2582 18       		.byte	0x18
 5799 2583 66       		.byte	0x66
 5800 2584 0B       		.byte	0xb
 5801 2585 234F0000 		.4byte	0x4f23
 5802 2589 03       		.uleb128 0x3
 5803 258a 18       		.byte	0x18
 5804 258b 67       		.byte	0x67
 5805 258c 0B       		.byte	0xb
 5806 258d 394F0000 		.4byte	0x4f39
 5807 2591 03       		.uleb128 0x3
 5808 2592 18       		.byte	0x18
 5809 2593 68       		.byte	0x68
 5810 2594 0B       		.byte	0xb
 5811 2595 504F0000 		.4byte	0x4f50
 5812 2599 03       		.uleb128 0x3
 5813 259a 18       		.byte	0x18
 5814 259b 69       		.byte	0x69
 5815 259c 0B       		.byte	0xb
 5816 259d 674F0000 		.4byte	0x4f67
 5817 25a1 03       		.uleb128 0x3
 5818 25a2 18       		.byte	0x18
 5819 25a3 6A       		.byte	0x6a
 5820 25a4 0B       		.byte	0xb
 5821 25a5 7D4F0000 		.4byte	0x4f7d
 5822 25a9 03       		.uleb128 0x3
 5823 25aa 18       		.byte	0x18
 5824 25ab 6B       		.byte	0x6b
 5825 25ac 0B       		.byte	0xb
 5826 25ad 944F0000 		.4byte	0x4f94
 5827 25b1 03       		.uleb128 0x3
 5828 25b2 18       		.byte	0x18
 5829 25b3 6C       		.byte	0x6c
 5830 25b4 0B       		.byte	0xb
 5831 25b5 B64F0000 		.4byte	0x4fb6
 5832 25b9 03       		.uleb128 0x3
AARCH64 GAS  obj/extInstr.s 			page 312


 5833 25ba 18       		.byte	0x18
 5834 25bb 6D       		.byte	0x6d
 5835 25bc 0B       		.byte	0xb
 5836 25bd D74F0000 		.4byte	0x4fd7
 5837 25c1 03       		.uleb128 0x3
 5838 25c2 18       		.byte	0x18
 5839 25c3 71       		.byte	0x71
 5840 25c4 0B       		.byte	0xb
 5841 25c5 F24F0000 		.4byte	0x4ff2
 5842 25c9 03       		.uleb128 0x3
 5843 25ca 18       		.byte	0x18
 5844 25cb 72       		.byte	0x72
 5845 25cc 0B       		.byte	0xb
 5846 25cd 18500000 		.4byte	0x5018
 5847 25d1 03       		.uleb128 0x3
 5848 25d2 18       		.byte	0x18
 5849 25d3 74       		.byte	0x74
 5850 25d4 0B       		.byte	0xb
 5851 25d5 38500000 		.4byte	0x5038
 5852 25d9 03       		.uleb128 0x3
 5853 25da 18       		.byte	0x18
 5854 25db 75       		.byte	0x75
 5855 25dc 0B       		.byte	0xb
 5856 25dd 59500000 		.4byte	0x5059
 5857 25e1 03       		.uleb128 0x3
 5858 25e2 18       		.byte	0x18
 5859 25e3 76       		.byte	0x76
 5860 25e4 0B       		.byte	0xb
 5861 25e5 7B500000 		.4byte	0x507b
 5862 25e9 03       		.uleb128 0x3
 5863 25ea 18       		.byte	0x18
 5864 25eb 78       		.byte	0x78
 5865 25ec 0B       		.byte	0xb
 5866 25ed 92500000 		.4byte	0x5092
 5867 25f1 03       		.uleb128 0x3
 5868 25f2 18       		.byte	0x18
 5869 25f3 79       		.byte	0x79
 5870 25f4 0B       		.byte	0xb
 5871 25f5 A9500000 		.4byte	0x50a9
 5872 25f9 03       		.uleb128 0x3
 5873 25fa 18       		.byte	0x18
 5874 25fb 7E       		.byte	0x7e
 5875 25fc 0B       		.byte	0xb
 5876 25fd B5500000 		.4byte	0x50b5
 5877 2601 03       		.uleb128 0x3
 5878 2602 18       		.byte	0x18
 5879 2603 83       		.byte	0x83
 5880 2604 0B       		.byte	0xb
 5881 2605 C8500000 		.4byte	0x50c8
 5882 2609 03       		.uleb128 0x3
 5883 260a 18       		.byte	0x18
 5884 260b 84       		.byte	0x84
 5885 260c 0B       		.byte	0xb
 5886 260d DE500000 		.4byte	0x50de
 5887 2611 03       		.uleb128 0x3
 5888 2612 18       		.byte	0x18
 5889 2613 85       		.byte	0x85
AARCH64 GAS  obj/extInstr.s 			page 313


 5890 2614 0B       		.byte	0xb
 5891 2615 F9500000 		.4byte	0x50f9
 5892 2619 03       		.uleb128 0x3
 5893 261a 18       		.byte	0x18
 5894 261b 87       		.byte	0x87
 5895 261c 0B       		.byte	0xb
 5896 261d 0C510000 		.4byte	0x510c
 5897 2621 03       		.uleb128 0x3
 5898 2622 18       		.byte	0x18
 5899 2623 88       		.byte	0x88
 5900 2624 0B       		.byte	0xb
 5901 2625 24510000 		.4byte	0x5124
 5902 2629 03       		.uleb128 0x3
 5903 262a 18       		.byte	0x18
 5904 262b 8B       		.byte	0x8b
 5905 262c 0B       		.byte	0xb
 5906 262d 4A510000 		.4byte	0x514a
 5907 2631 03       		.uleb128 0x3
 5908 2632 18       		.byte	0x18
 5909 2633 8D       		.byte	0x8d
 5910 2634 0B       		.byte	0xb
 5911 2635 56510000 		.4byte	0x5156
 5912 2639 03       		.uleb128 0x3
 5913 263a 18       		.byte	0x18
 5914 263b 8F       		.byte	0x8f
 5915 263c 0B       		.byte	0xb
 5916 263d 6C510000 		.4byte	0x516c
 5917 2641 3F       		.uleb128 0x3f
 5918 2642 00000000 		.4byte	.LASF328
 5919 2646 01       		.byte	0x1
 5920 2647 0B       		.byte	0xb
 5921 2648 9701     		.2byte	0x197
 5922 264a 0C       		.byte	0xc
 5923 264b 55270000 		.4byte	0x2755
 5924 264f 1D       		.uleb128 0x1d
 5925 2650 00000000 		.4byte	.LASF5
 5926 2654 0B       		.byte	0xb
 5927 2655 A001     		.2byte	0x1a0
 5928 2657 0D       		.byte	0xd
 5929 2658 6C400000 		.4byte	0x406c
 5930 265c 14       		.uleb128 0x14
 5931 265d 00000000 		.4byte	.LASF329
 5932 2661 0B       		.byte	0xb
 5933 2662 CB01     		.2byte	0x1cb
 5934 2664 07       		.byte	0x7
 5935 2665 00000000 		.4byte	.LASF330
 5936 2669 4F260000 		.4byte	0x264f
 5937 266d 7C260000 		.4byte	0x267c
 5938 2671 01       		.uleb128 0x1
 5939 2672 88510000 		.4byte	0x5188
 5940 2676 01       		.uleb128 0x1
 5941 2677 8E260000 		.4byte	0x268e
 5942 267b 00       		.byte	0
 5943 267c 1D       		.uleb128 0x1d
 5944 267d 00000000 		.4byte	.LASF35
 5945 2681 0B       		.byte	0xb
 5946 2682 9A01     		.2byte	0x19a
AARCH64 GAS  obj/extInstr.s 			page 314


 5947 2684 0D       		.byte	0xd
 5948 2685 D3230000 		.4byte	0x23d3
 5949 2689 0C       		.uleb128 0xc
 5950 268a 7C260000 		.4byte	0x267c
 5951 268e 1D       		.uleb128 0x1d
 5952 268f 00000000 		.4byte	.LASF6
 5953 2693 0B       		.byte	0xb
 5954 2694 AF01     		.2byte	0x1af
 5955 2696 0D       		.byte	0xd
 5956 2697 8C200000 		.4byte	0x208c
 5957 269b 14       		.uleb128 0x14
 5958 269c 00000000 		.4byte	.LASF329
 5959 26a0 0B       		.byte	0xb
 5960 26a1 D901     		.2byte	0x1d9
 5961 26a3 07       		.byte	0x7
 5962 26a4 00000000 		.4byte	.LASF331
 5963 26a8 4F260000 		.4byte	0x264f
 5964 26ac C0260000 		.4byte	0x26c0
 5965 26b0 01       		.uleb128 0x1
 5966 26b1 88510000 		.4byte	0x5188
 5967 26b5 01       		.uleb128 0x1
 5968 26b6 8E260000 		.4byte	0x268e
 5969 26ba 01       		.uleb128 0x1
 5970 26bb C0260000 		.4byte	0x26c0
 5971 26bf 00       		.byte	0
 5972 26c0 1D       		.uleb128 0x1d
 5973 26c1 00000000 		.4byte	.LASF332
 5974 26c5 0B       		.byte	0xb
 5975 26c6 A901     		.2byte	0x1a9
 5976 26c8 0D       		.byte	0xd
 5977 26c9 604A0000 		.4byte	0x4a60
 5978 26cd 2F       		.uleb128 0x2f
 5979 26ce 00000000 		.4byte	.LASF333
 5980 26d2 0B       		.byte	0xb
 5981 26d3 EB01     		.2byte	0x1eb
 5982 26d5 07       		.byte	0x7
 5983 26d6 00000000 		.4byte	.LASF334
 5984 26da EE260000 		.4byte	0x26ee
 5985 26de 01       		.uleb128 0x1
 5986 26df 88510000 		.4byte	0x5188
 5987 26e3 01       		.uleb128 0x1
 5988 26e4 4F260000 		.4byte	0x264f
 5989 26e8 01       		.uleb128 0x1
 5990 26e9 8E260000 		.4byte	0x268e
 5991 26ed 00       		.byte	0
 5992 26ee 14       		.uleb128 0x14
 5993 26ef 00000000 		.4byte	.LASF115
 5994 26f3 0B       		.byte	0xb
 5995 26f4 1F02     		.2byte	0x21f
 5996 26f6 07       		.byte	0x7
 5997 26f7 00000000 		.4byte	.LASF335
 5998 26fb 8E260000 		.4byte	0x268e
 5999 26ff 09270000 		.4byte	0x2709
 6000 2703 01       		.uleb128 0x1
 6001 2704 8E510000 		.4byte	0x518e
 6002 2708 00       		.byte	0
 6003 2709 14       		.uleb128 0x14
AARCH64 GAS  obj/extInstr.s 			page 315


 6004 270a 00000000 		.4byte	.LASF336
 6005 270e 0B       		.byte	0xb
 6006 270f 2E02     		.2byte	0x22e
 6007 2711 07       		.byte	0x7
 6008 2712 00000000 		.4byte	.LASF337
 6009 2716 7C260000 		.4byte	0x267c
 6010 271a 24270000 		.4byte	0x2724
 6011 271e 01       		.uleb128 0x1
 6012 271f 8E510000 		.4byte	0x518e
 6013 2723 00       		.byte	0
 6014 2724 1D       		.uleb128 0x1d
 6015 2725 00000000 		.4byte	.LASF338
 6016 2729 0B       		.byte	0xb
 6017 272a 9D01     		.2byte	0x19d
 6018 272c 0D       		.byte	0xd
 6019 272d 4E3B0000 		.4byte	0x3b4e
 6020 2731 1D       		.uleb128 0x1d
 6021 2732 00000000 		.4byte	.LASF17
 6022 2736 0B       		.byte	0xb
 6023 2737 A301     		.2byte	0x1a3
 6024 2739 0D       		.byte	0xd
 6025 273a 283D0000 		.4byte	0x3d28
 6026 273e 1D       		.uleb128 0x1d
 6027 273f 00000000 		.4byte	.LASF339
 6028 2743 0B       		.byte	0xb
 6029 2744 BE01     		.2byte	0x1be
 6030 2746 08       		.byte	0x8
 6031 2747 D3230000 		.4byte	0x23d3
 6032 274b 0E       		.uleb128 0xe
 6033 274c 00000000 		.4byte	.LASF256
 6034 2750 D3230000 		.4byte	0x23d3
 6035 2754 00       		.byte	0
 6036 2755 3D       		.uleb128 0x3d
 6037 2756 00000000 		.4byte	.LASF340
 6038 275a 10       		.byte	0x10
 6039 275b 19       		.byte	0x19
 6040 275c 2F       		.byte	0x2f
 6041 275d 0B       		.byte	0xb
 6042 275e 48280000 		.4byte	0x2848
 6043 2762 17       		.uleb128 0x17
 6044 2763 00000000 		.4byte	.LASF55
 6045 2767 19       		.byte	0x19
 6046 2768 36       		.byte	0x36
 6047 2769 19       		.byte	0x19
 6048 276a 283D0000 		.4byte	0x3d28
 6049 276e 01       		.byte	0x1
 6050 276f 08       		.uleb128 0x8
 6051 2770 00000000 		.4byte	.LASF341
 6052 2774 19       		.byte	0x19
 6053 2775 3A       		.byte	0x3a
 6054 2776 10       		.byte	0x10
 6055 2777 62270000 		.4byte	0x2762
 6056 277b 00       		.byte	0
 6057 277c 17       		.uleb128 0x17
 6058 277d 00000000 		.4byte	.LASF6
 6059 2781 19       		.byte	0x19
 6060 2782 35       		.byte	0x35
AARCH64 GAS  obj/extInstr.s 			page 316


 6061 2783 16       		.byte	0x16
 6062 2784 8C200000 		.4byte	0x208c
 6063 2788 01       		.byte	0x1
 6064 2789 08       		.uleb128 0x8
 6065 278a 00000000 		.4byte	.LASF342
 6066 278e 19       		.byte	0x19
 6067 278f 3B       		.byte	0x3b
 6068 2790 11       		.byte	0x11
 6069 2791 7C270000 		.4byte	0x277c
 6070 2795 08       		.byte	0x8
 6071 2796 2B       		.uleb128 0x2b
 6072 2797 00000000 		.4byte	.LASF343
 6073 279b 19       		.byte	0x19
 6074 279c 3E       		.byte	0x3e
 6075 279d 11       		.byte	0x11
 6076 279e 00000000 		.4byte	.LASF344
 6077 27a2 AA270000 		.4byte	0x27aa
 6078 27a6 BA270000 		.4byte	0x27ba
 6079 27aa 02       		.uleb128 0x2
 6080 27ab FB510000 		.4byte	0x51fb
 6081 27af 01       		.uleb128 0x1
 6082 27b0 BA270000 		.4byte	0x27ba
 6083 27b4 01       		.uleb128 0x1
 6084 27b5 7C270000 		.4byte	0x277c
 6085 27b9 00       		.byte	0
 6086 27ba 17       		.uleb128 0x17
 6087 27bb 00000000 		.4byte	.LASF57
 6088 27bf 19       		.byte	0x19
 6089 27c0 37       		.byte	0x37
 6090 27c1 19       		.byte	0x19
 6091 27c2 283D0000 		.4byte	0x3d28
 6092 27c6 01       		.byte	0x1
 6093 27c7 20       		.uleb128 0x20
 6094 27c8 00000000 		.4byte	.LASF343
 6095 27cc 19       		.byte	0x19
 6096 27cd 42       		.byte	0x42
 6097 27ce 11       		.byte	0x11
 6098 27cf 00000000 		.4byte	.LASF345
 6099 27d3 01       		.byte	0x1
 6100 27d4 DC270000 		.4byte	0x27dc
 6101 27d8 E2270000 		.4byte	0x27e2
 6102 27dc 02       		.uleb128 0x2
 6103 27dd FB510000 		.4byte	0x51fb
 6104 27e1 00       		.byte	0
 6105 27e2 28       		.uleb128 0x28
 6106 27e3 00000000 		.4byte	.LASF111
 6107 27e7 19       		.byte	0x19
 6108 27e8 47       		.byte	0x47
 6109 27e9 07       		.byte	0x7
 6110 27ea 00000000 		.4byte	.LASF346
 6111 27ee 7C270000 		.4byte	0x277c
 6112 27f2 01       		.byte	0x1
 6113 27f3 FB270000 		.4byte	0x27fb
 6114 27f7 01280000 		.4byte	0x2801
 6115 27fb 02       		.uleb128 0x2
 6116 27fc 01520000 		.4byte	0x5201
 6117 2800 00       		.byte	0
AARCH64 GAS  obj/extInstr.s 			page 317


 6118 2801 28       		.uleb128 0x28
 6119 2802 00000000 		.4byte	.LASF90
 6120 2806 19       		.byte	0x19
 6121 2807 4B       		.byte	0x4b
 6122 2808 07       		.byte	0x7
 6123 2809 00000000 		.4byte	.LASF347
 6124 280d BA270000 		.4byte	0x27ba
 6125 2811 01       		.byte	0x1
 6126 2812 1A280000 		.4byte	0x281a
 6127 2816 20280000 		.4byte	0x2820
 6128 281a 02       		.uleb128 0x2
 6129 281b 01520000 		.4byte	0x5201
 6130 281f 00       		.byte	0
 6131 2820 57       		.uleb128 0x57
 6132 2821 656E6400 		.string	"end"
 6133 2825 19       		.byte	0x19
 6134 2826 4F       		.byte	0x4f
 6135 2827 07       		.byte	0x7
 6136 2828 00000000 		.4byte	.LASF349
 6137 282c BA270000 		.4byte	0x27ba
 6138 2830 01       		.byte	0x1
 6139 2831 39280000 		.4byte	0x2839
 6140 2835 3F280000 		.4byte	0x283f
 6141 2839 02       		.uleb128 0x2
 6142 283a 01520000 		.4byte	0x5201
 6143 283e 00       		.byte	0
 6144 283f 1C       		.uleb128 0x1c
 6145 2840 5F4500   		.string	"_E"
 6146 2843 4E3B0000 		.4byte	0x3b4e
 6147 2847 00       		.byte	0
 6148 2848 0C       		.uleb128 0xc
 6149 2849 55270000 		.4byte	0x2755
 6150 284d 4D       		.uleb128 0x4d
 6151 284e 00000000 		.4byte	.LASF351
 6152 2852 4D       		.uleb128 0x4d
 6153 2853 00000000 		.4byte	.LASF352
 6154 2857 06       		.uleb128 0x6
 6155 2858 00000000 		.4byte	.LASF353
 6156 285c 1A       		.byte	0x1a
 6157 285d 4F       		.byte	0x4f
 6158 285e 1E       		.byte	0x1e
 6159 285f 41000000 		.4byte	0x41
 6160 2863 54       		.uleb128 0x54
 6161 2864 00000000 		.4byte	.LASF355
 6162 2868 0A       		.byte	0xa
 6163 2869 E91A     		.2byte	0x1ae9
 6164 286b 14       		.byte	0x14
 6165 286c 83280000 		.4byte	0x2883
 6166 2870 5F       		.uleb128 0x5f
 6167 2871 00000000 		.4byte	.LASF356
 6168 2875 0A       		.byte	0xa
 6169 2876 EB1A     		.2byte	0x1aeb
 6170 2878 14       		.byte	0x14
 6171 2879 43       		.uleb128 0x43
 6172 287a 0A       		.byte	0xa
 6173 287b EB1A     		.2byte	0x1aeb
 6174 287d 14       		.byte	0x14
AARCH64 GAS  obj/extInstr.s 			page 318


 6175 287e 70280000 		.4byte	0x2870
 6176 2882 00       		.byte	0
 6177 2883 43       		.uleb128 0x43
 6178 2884 0A       		.byte	0xa
 6179 2885 E91A     		.2byte	0x1ae9
 6180 2887 14       		.byte	0x14
 6181 2888 63280000 		.4byte	0x2863
 6182 288c 7C       		.uleb128 0x7c
 6183 288d 5F563200 		.string	"_V2"
 6184 2891 1B       		.byte	0x1b
 6185 2892 4E       		.byte	0x4e
 6186 2893 14       		.byte	0x14
 6187 2894 4E       		.uleb128 0x4e
 6188 2895 1B       		.byte	0x1b
 6189 2896 4E       		.byte	0x4e
 6190 2897 14       		.byte	0x14
 6191 2898 8C280000 		.4byte	0x288c
 6192 289c 60       		.uleb128 0x60
 6193 289d 00000000 		.4byte	.LASF367
 6194 28a1 05       		.byte	0x5
 6195 28a2 04       		.byte	0x4
 6196 28a3 D43A0000 		.4byte	0x3ad4
 6197 28a7 06       		.byte	0x6
 6198 28a8 6F       		.byte	0x6f
 6199 28a9 08       		.byte	0x8
 6200 28aa EF280000 		.4byte	0x28ef
 6201 28ae 2C       		.uleb128 0x2c
 6202 28af 00000000 		.4byte	.LASF358
 6203 28b3 01       		.byte	0x1
 6204 28b4 2C       		.uleb128 0x2c
 6205 28b5 00000000 		.4byte	.LASF359
 6206 28b9 02       		.byte	0x2
 6207 28ba 2C       		.uleb128 0x2c
 6208 28bb 00000000 		.4byte	.LASF360
 6209 28bf 04       		.byte	0x4
 6210 28c0 2C       		.uleb128 0x2c
 6211 28c1 00000000 		.4byte	.LASF361
 6212 28c5 08       		.byte	0x8
 6213 28c6 2C       		.uleb128 0x2c
 6214 28c7 00000000 		.4byte	.LASF362
 6215 28cb 10       		.byte	0x10
 6216 28cc 2C       		.uleb128 0x2c
 6217 28cd 00000000 		.4byte	.LASF363
 6218 28d1 20       		.byte	0x20
 6219 28d2 44       		.uleb128 0x44
 6220 28d3 00000000 		.4byte	.LASF364
 6221 28d7 00000100 		.4byte	0x10000
 6222 28db 44       		.uleb128 0x44
 6223 28dc 00000000 		.4byte	.LASF365
 6224 28e0 FFFFFF7F 		.4byte	0x7fffffff
 6225 28e4 61       		.uleb128 0x61
 6226 28e5 00000000 		.4byte	.LASF366
 6227 28e9 80808080 		.sleb128 -2147483648
 6227      78
 6228 28ee 00       		.byte	0
 6229 28ef 60       		.uleb128 0x60
 6230 28f0 00000000 		.4byte	.LASF368
AARCH64 GAS  obj/extInstr.s 			page 319


 6231 28f4 05       		.byte	0x5
 6232 28f5 04       		.byte	0x4
 6233 28f6 D43A0000 		.4byte	0x3ad4
 6234 28fa 06       		.byte	0x6
 6235 28fb 99       		.byte	0x99
 6236 28fc 08       		.byte	0x8
 6237 28fd 36290000 		.4byte	0x2936
 6238 2901 2C       		.uleb128 0x2c
 6239 2902 00000000 		.4byte	.LASF369
 6240 2906 00       		.byte	0
 6241 2907 2C       		.uleb128 0x2c
 6242 2908 00000000 		.4byte	.LASF370
 6243 290c 01       		.byte	0x1
 6244 290d 2C       		.uleb128 0x2c
 6245 290e 00000000 		.4byte	.LASF371
 6246 2912 02       		.byte	0x2
 6247 2913 2C       		.uleb128 0x2c
 6248 2914 00000000 		.4byte	.LASF372
 6249 2918 04       		.byte	0x4
 6250 2919 44       		.uleb128 0x44
 6251 291a 00000000 		.4byte	.LASF373
 6252 291e 00000100 		.4byte	0x10000
 6253 2922 44       		.uleb128 0x44
 6254 2923 00000000 		.4byte	.LASF374
 6255 2927 FFFFFF7F 		.4byte	0x7fffffff
 6256 292b 61       		.uleb128 0x61
 6257 292c 00000000 		.4byte	.LASF375
 6258 2930 80808080 		.sleb128 -2147483648
 6258      78
 6259 2935 00       		.byte	0
 6260 2936 34       		.uleb128 0x34
 6261 2937 00000000 		.4byte	.LASF376
 6262 293b 322A0000 		.4byte	0x2a32
 6263 293f 7D       		.uleb128 0x7d
 6264 2940 00000000 		.4byte	.LASF377
 6265 2944 01       		.byte	0x1
 6266 2945 06       		.byte	0x6
 6267 2946 7202     		.2byte	0x272
 6268 2948 0B       		.byte	0xb
 6269 2949 01       		.byte	0x1
 6270 294a EE290000 		.4byte	0x29ee
 6271 294e 12       		.uleb128 0x12
 6272 294f 00000000 		.4byte	.LASF377
 6273 2953 06       		.byte	0x6
 6274 2954 7602     		.2byte	0x276
 6275 2956 07       		.byte	0x7
 6276 2957 00000000 		.4byte	.LASF378
 6277 295b 01       		.byte	0x1
 6278 295c 64290000 		.4byte	0x2964
 6279 2960 6A290000 		.4byte	0x296a
 6280 2964 02       		.uleb128 0x2
 6281 2965 07520000 		.4byte	0x5207
 6282 2969 00       		.byte	0
 6283 296a 12       		.uleb128 0x12
 6284 296b 00000000 		.4byte	.LASF379
 6285 296f 06       		.byte	0x6
 6286 2970 7702     		.2byte	0x277
AARCH64 GAS  obj/extInstr.s 			page 320


 6287 2972 07       		.byte	0x7
 6288 2973 00000000 		.4byte	.LASF380
 6289 2977 01       		.byte	0x1
 6290 2978 80290000 		.4byte	0x2980
 6291 297c 8B290000 		.4byte	0x298b
 6292 2980 02       		.uleb128 0x2
 6293 2981 07520000 		.4byte	0x5207
 6294 2985 02       		.uleb128 0x2
 6295 2986 D43A0000 		.4byte	0x3ad4
 6296 298a 00       		.byte	0
 6297 298b 7E       		.uleb128 0x7e
 6298 298c 00000000 		.4byte	.LASF377
 6299 2990 06       		.byte	0x6
 6300 2991 7A02     		.2byte	0x27a
 6301 2993 07       		.byte	0x7
 6302 2994 00000000 		.4byte	.LASF381
 6303 2998 01       		.byte	0x1
 6304 2999 01       		.byte	0x1
 6305 299a A2290000 		.4byte	0x29a2
 6306 299e AD290000 		.4byte	0x29ad
 6307 29a2 02       		.uleb128 0x2
 6308 29a3 07520000 		.4byte	0x5207
 6309 29a7 01       		.uleb128 0x1
 6310 29a8 0D520000 		.4byte	0x520d
 6311 29ac 00       		.byte	0
 6312 29ad 7F       		.uleb128 0x7f
 6313 29ae 00000000 		.4byte	.LASF83
 6314 29b2 06       		.byte	0x6
 6315 29b3 7B02     		.2byte	0x27b
 6316 29b5 0D       		.byte	0xd
 6317 29b6 00000000 		.4byte	.LASF383
 6318 29ba 13520000 		.4byte	0x5213
 6319 29be 01       		.byte	0x1
 6320 29bf 01       		.byte	0x1
 6321 29c0 C8290000 		.4byte	0x29c8
 6322 29c4 D3290000 		.4byte	0x29d3
 6323 29c8 02       		.uleb128 0x2
 6324 29c9 07520000 		.4byte	0x5207
 6325 29cd 01       		.uleb128 0x1
 6326 29ce 0D520000 		.4byte	0x520d
 6327 29d2 00       		.byte	0
 6328 29d3 62       		.uleb128 0x62
 6329 29d4 00000000 		.4byte	.LASF384
 6330 29d8 06       		.byte	0x6
 6331 29d9 7F02     		.2byte	0x27f
 6332 29db 1B       		.byte	0x1b
 6333 29dc 544A0000 		.4byte	0x4a54
 6334 29e0 62       		.uleb128 0x62
 6335 29e1 00000000 		.4byte	.LASF385
 6336 29e5 06       		.byte	0x6
 6337 29e6 8002     		.2byte	0x280
 6338 29e8 13       		.byte	0x13
 6339 29e9 EF450000 		.4byte	0x45ef
 6340 29ed 00       		.byte	0
 6341 29ee 0C       		.uleb128 0xc
 6342 29ef 3F290000 		.4byte	0x293f
 6343 29f3 2D       		.uleb128 0x2d
AARCH64 GAS  obj/extInstr.s 			page 321


 6344 29f4 00000000 		.4byte	.LASF386
 6345 29f8 06       		.byte	0x6
 6346 29f9 A001     		.2byte	0x1a0
 6347 29fb 1A       		.byte	0x1a
 6348 29fc EF280000 		.4byte	0x28ef
 6349 2a00 01       		.byte	0x1
 6350 2a01 2D       		.uleb128 0x2d
 6351 2a02 00000000 		.4byte	.LASF387
 6352 2a06 06       		.byte	0x6
 6353 2a07 BF01     		.2byte	0x1bf
 6354 2a09 1B       		.byte	0x1b
 6355 2a0a 9C280000 		.4byte	0x289c
 6356 2a0e 01       		.byte	0x1
 6357 2a0f 8001     		.uleb128 0x80
 6358 2a11 00000000 		.4byte	.LASF388
 6359 2a15 06       		.byte	0x6
 6360 2a16 EF02     		.2byte	0x2ef
 6361 2a18 05       		.byte	0x5
 6362 2a19 00000000 		.4byte	.LASF389
 6363 2a1d A9310000 		.4byte	0x31a9
 6364 2a21 01       		.byte	0x1
 6365 2a22 262A0000 		.4byte	0x2a26
 6366 2a26 02       		.uleb128 0x2
 6367 2a27 6B780000 		.4byte	0x786b
 6368 2a2b 01       		.uleb128 0x1
 6369 2a2c A9310000 		.4byte	0x31a9
 6370 2a30 00       		.byte	0
 6371 2a31 00       		.byte	0
 6372 2a32 03       		.uleb128 0x3
 6373 2a33 1C       		.byte	0x1c
 6374 2a34 52       		.byte	0x52
 6375 2a35 0B       		.byte	0xb
 6376 2a36 25520000 		.4byte	0x5225
 6377 2a3a 03       		.uleb128 0x3
 6378 2a3b 1C       		.byte	0x1c
 6379 2a3c 53       		.byte	0x53
 6380 2a3d 0B       		.byte	0xb
 6381 2a3e 19520000 		.4byte	0x5219
 6382 2a42 03       		.uleb128 0x3
 6383 2a43 1C       		.byte	0x1c
 6384 2a44 54       		.byte	0x54
 6385 2a45 0B       		.byte	0xb
 6386 2a46 E13A0000 		.4byte	0x3ae1
 6387 2a4a 03       		.uleb128 0x3
 6388 2a4b 1C       		.byte	0x1c
 6389 2a4c 5C       		.byte	0x5c
 6390 2a4d 0B       		.byte	0xb
 6391 2a4e 37520000 		.4byte	0x5237
 6392 2a52 03       		.uleb128 0x3
 6393 2a53 1C       		.byte	0x1c
 6394 2a54 65       		.byte	0x65
 6395 2a55 0B       		.byte	0xb
 6396 2a56 52520000 		.4byte	0x5252
 6397 2a5a 03       		.uleb128 0x3
 6398 2a5b 1C       		.byte	0x1c
 6399 2a5c 68       		.byte	0x68
 6400 2a5d 0B       		.byte	0xb
AARCH64 GAS  obj/extInstr.s 			page 322


 6401 2a5e 6D520000 		.4byte	0x526d
 6402 2a62 03       		.uleb128 0x3
 6403 2a63 1C       		.byte	0x1c
 6404 2a64 69       		.byte	0x69
 6405 2a65 0B       		.byte	0xb
 6406 2a66 83520000 		.4byte	0x5283
 6407 2a6a 34       		.uleb128 0x34
 6408 2a6b 00000000 		.4byte	.LASF390
 6409 2a6f 502B0000 		.4byte	0x2b50
 6410 2a73 63       		.uleb128 0x63
 6411 2a74 00000000 		.4byte	.LASF391
 6412 2a78 01       		.byte	0x1
 6413 2a79 5D       		.byte	0x5d
 6414 2a7a 07       		.byte	0x7
 6415 2a7b 00000000 		.4byte	.LASF392
 6416 2a7f 01       		.byte	0x1
 6417 2a80 6A2A0000 		.4byte	0x2a6a
 6418 2a84 01       		.byte	0x1
 6419 2a85 8D2A0000 		.4byte	0x2a8d
 6420 2a89 9D2A0000 		.4byte	0x2a9d
 6421 2a8d 02       		.uleb128 0x2
 6422 2a8e 8C5E0000 		.4byte	0x5e8c
 6423 2a92 02       		.uleb128 0x2
 6424 2a93 D43A0000 		.4byte	0x3ad4
 6425 2a97 02       		.uleb128 0x2
 6426 2a98 975E0000 		.4byte	0x5e97
 6427 2a9c 00       		.byte	0
 6428 2a9d 12       		.uleb128 0x12
 6429 2a9e 00000000 		.4byte	.LASF393
 6430 2aa2 01       		.byte	0x1
 6431 2aa3 8601     		.2byte	0x186
 6432 2aa5 07       		.byte	0x7
 6433 2aa6 00000000 		.4byte	.LASF394
 6434 2aaa 02       		.byte	0x2
 6435 2aab B32A0000 		.4byte	0x2ab3
 6436 2aaf C32A0000 		.4byte	0x2ac3
 6437 2ab3 02       		.uleb128 0x2
 6438 2ab4 8C5E0000 		.4byte	0x5e8c
 6439 2ab8 02       		.uleb128 0x2
 6440 2ab9 D43A0000 		.4byte	0x3ad4
 6441 2abd 02       		.uleb128 0x2
 6442 2abe 975E0000 		.4byte	0x5e97
 6443 2ac2 00       		.byte	0
 6444 2ac3 17       		.uleb128 0x17
 6445 2ac4 00000000 		.4byte	.LASF395
 6446 2ac8 01       		.byte	0x1
 6447 2ac9 47       		.byte	0x47
 6448 2aca 2E       		.byte	0x2e
 6449 2acb 6A2A0000 		.4byte	0x2a6a
 6450 2acf 01       		.byte	0x1
 6451 2ad0 28       		.uleb128 0x28
 6452 2ad1 00000000 		.4byte	.LASF396
 6453 2ad5 01       		.byte	0x1
 6454 2ad6 AA       		.byte	0xaa
 6455 2ad7 07       		.byte	0x7
 6456 2ad8 00000000 		.4byte	.LASF397
 6457 2adc 20610000 		.4byte	0x6120
AARCH64 GAS  obj/extInstr.s 			page 323


 6458 2ae0 01       		.byte	0x1
 6459 2ae1 E92A0000 		.4byte	0x2ae9
 6460 2ae5 F42A0000 		.4byte	0x2af4
 6461 2ae9 02       		.uleb128 0x2
 6462 2aea 8C5E0000 		.4byte	0x5e8c
 6463 2aee 01       		.uleb128 0x1
 6464 2aef 793A0000 		.4byte	0x3a79
 6465 2af3 00       		.byte	0
 6466 2af4 28       		.uleb128 0x28
 6467 2af5 00000000 		.4byte	.LASF396
 6468 2af9 01       		.byte	0x1
 6469 2afa 6C       		.byte	0x6c
 6470 2afb 07       		.byte	0x7
 6471 2afc 00000000 		.4byte	.LASF398
 6472 2b00 20610000 		.4byte	0x6120
 6473 2b04 01       		.byte	0x1
 6474 2b05 0D2B0000 		.4byte	0x2b0d
 6475 2b09 182B0000 		.4byte	0x2b18
 6476 2b0d 02       		.uleb128 0x2
 6477 2b0e 8C5E0000 		.4byte	0x5e8c
 6478 2b12 01       		.uleb128 0x1
 6479 2b13 DF640000 		.4byte	0x64df
 6480 2b17 00       		.byte	0
 6481 2b18 0E       		.uleb128 0xe
 6482 2b19 00000000 		.4byte	.LASF254
 6483 2b1d 4E3B0000 		.4byte	0x3b4e
 6484 2b21 30       		.uleb128 0x30
 6485 2b22 00000000 		.4byte	.LASF255
 6486 2b26 E2200000 		.4byte	0x20e2
 6487 2b2a 35       		.uleb128 0x35
 6488 2b2b 00000000 		.4byte	.LASF399
 6489 2b2f 00000000 		.4byte	.LASF401
 6490 2b33 1D       		.byte	0x1d
 6491 2b34 3F       		.byte	0x3f
 6492 2b35 07       		.byte	0x7
 6493 2b36 8101     		.uleb128 0x81
 6494 2b38 00000000 		.4byte	.LASF400
 6495 2b3c 70757400 		.string	"put"
 6496 2b40 1D       		.byte	0x1d
 6497 2b41 94       		.byte	0x94
 6498 2b42 05       		.byte	0x5
 6499 2b43 35       		.uleb128 0x35
 6500 2b44 00000000 		.4byte	.LASF402
 6501 2b48 00000000 		.4byte	.LASF403
 6502 2b4c 1D       		.byte	0x1d
 6503 2b4d D2       		.byte	0xd2
 6504 2b4e 05       		.byte	0x5
 6505 2b4f 00       		.byte	0
 6506 2b50 34       		.uleb128 0x34
 6507 2b51 00000000 		.4byte	.LASF404
 6508 2b55 1A2C0000 		.4byte	0x2c1a
 6509 2b59 17       		.uleb128 0x17
 6510 2b5a 00000000 		.4byte	.LASF300
 6511 2b5e 1E       		.byte	0x1e
 6512 2b5f 83       		.byte	0x83
 6513 2b60 16       		.byte	0x16
 6514 2b61 4E3B0000 		.4byte	0x3b4e
AARCH64 GAS  obj/extInstr.s 			page 324


 6515 2b65 01       		.byte	0x1
 6516 2b66 04       		.uleb128 0x4
 6517 2b67 00000000 		.4byte	.LASF405
 6518 2b6b 1E       		.byte	0x1e
 6519 2b6c 1802     		.2byte	0x218
 6520 2b6e 07       		.byte	0x7
 6521 2b6f 00000000 		.4byte	.LASF406
 6522 2b73 445B0000 		.4byte	0x5b44
 6523 2b77 02       		.byte	0x2
 6524 2b78 802B0000 		.4byte	0x2b80
 6525 2b7c 862B0000 		.4byte	0x2b86
 6526 2b80 02       		.uleb128 0x2
 6527 2b81 4A5B0000 		.4byte	0x5b4a
 6528 2b85 00       		.byte	0
 6529 2b86 04       		.uleb128 0x4
 6530 2b87 00000000 		.4byte	.LASF407
 6531 2b8b 1E       		.byte	0x1e
 6532 2b8c EF01     		.2byte	0x1ef
 6533 2b8e 07       		.byte	0x7
 6534 2b8f 00000000 		.4byte	.LASF408
 6535 2b93 445B0000 		.4byte	0x5b44
 6536 2b97 02       		.byte	0x2
 6537 2b98 A02B0000 		.4byte	0x2ba0
 6538 2b9c A62B0000 		.4byte	0x2ba6
 6539 2ba0 02       		.uleb128 0x2
 6540 2ba1 4A5B0000 		.4byte	0x5b4a
 6541 2ba5 00       		.byte	0
 6542 2ba6 04       		.uleb128 0x4
 6543 2ba7 00000000 		.4byte	.LASF409
 6544 2bab 1E       		.byte	0x1e
 6545 2bac 1B02     		.2byte	0x21b
 6546 2bae 07       		.byte	0x7
 6547 2baf 00000000 		.4byte	.LASF410
 6548 2bb3 445B0000 		.4byte	0x5b44
 6549 2bb7 02       		.byte	0x2
 6550 2bb8 C02B0000 		.4byte	0x2bc0
 6551 2bbc C62B0000 		.4byte	0x2bc6
 6552 2bc0 02       		.uleb128 0x2
 6553 2bc1 4A5B0000 		.4byte	0x5b4a
 6554 2bc5 00       		.byte	0
 6555 2bc6 12       		.uleb128 0x12
 6556 2bc7 00000000 		.4byte	.LASF411
 6557 2bcb 1E       		.byte	0x1e
 6558 2bcc D601     		.2byte	0x1d6
 6559 2bce 07       		.byte	0x7
 6560 2bcf 00000000 		.4byte	.LASF412
 6561 2bd3 02       		.byte	0x2
 6562 2bd4 DC2B0000 		.4byte	0x2bdc
 6563 2bd8 E22B0000 		.4byte	0x2be2
 6564 2bdc 02       		.uleb128 0x2
 6565 2bdd 0D5C0000 		.4byte	0x5c0d
 6566 2be1 00       		.byte	0
 6567 2be2 63       		.uleb128 0x63
 6568 2be3 00000000 		.4byte	.LASF413
 6569 2be7 1E       		.byte	0x1e
 6570 2be8 CC       		.byte	0xcc
 6571 2be9 07       		.byte	0x7
AARCH64 GAS  obj/extInstr.s 			page 325


 6572 2bea 00000000 		.4byte	.LASF414
 6573 2bee 01       		.byte	0x1
 6574 2bef 502B0000 		.4byte	0x2b50
 6575 2bf3 01       		.byte	0x1
 6576 2bf4 FC2B0000 		.4byte	0x2bfc
 6577 2bf8 072C0000 		.4byte	0x2c07
 6578 2bfc 02       		.uleb128 0x2
 6579 2bfd 0D5C0000 		.4byte	0x5c0d
 6580 2c01 02       		.uleb128 0x2
 6581 2c02 D43A0000 		.4byte	0x3ad4
 6582 2c06 00       		.byte	0
 6583 2c07 0E       		.uleb128 0xe
 6584 2c08 00000000 		.4byte	.LASF254
 6585 2c0c 4E3B0000 		.4byte	0x3b4e
 6586 2c10 30       		.uleb128 0x30
 6587 2c11 00000000 		.4byte	.LASF255
 6588 2c15 E2200000 		.4byte	0x20e2
 6589 2c19 00       		.byte	0
 6590 2c1a 0C       		.uleb128 0xc
 6591 2c1b 502B0000 		.4byte	0x2b50
 6592 2c1f 34       		.uleb128 0x34
 6593 2c20 00000000 		.4byte	.LASF415
 6594 2c24 A12C0000 		.4byte	0x2ca1
 6595 2c28 2D       		.uleb128 0x2d
 6596 2c29 00000000 		.4byte	.LASF300
 6597 2c2d 03       		.byte	0x3
 6598 2c2e AE02     		.2byte	0x2ae
 6599 2c30 14       		.byte	0x14
 6600 2c31 4E3B0000 		.4byte	0x3b4e
 6601 2c35 01       		.byte	0x1
 6602 2c36 8201     		.uleb128 0x82
 6603 2c38 00000000 		.4byte	.LASF995
 6604 2c3c 03       		.byte	0x3
 6605 2c3d 3C04     		.2byte	0x43c
 6606 2c3f 07       		.byte	0x7
 6607 2c40 00000000 		.4byte	.LASF996
 6608 2c44 282C0000 		.4byte	0x2c28
 6609 2c48 01       		.byte	0x1
 6610 2c49 02       		.uleb128 0x2
 6611 2c4a 10       		.byte	0x10
 6612 2c4b 06       		.uleb128 0x6
 6613 2c4c 1F2C0000 		.4byte	0x2c1f
 6614 2c50 02       		.byte	0x2
 6615 2c51 592C0000 		.4byte	0x2c59
 6616 2c55 642C0000 		.4byte	0x2c64
 6617 2c59 02       		.uleb128 0x2
 6618 2c5a 4E5D0000 		.4byte	0x5d4e
 6619 2c5e 01       		.uleb128 0x1
 6620 2c5f 4E3B0000 		.4byte	0x3b4e
 6621 2c63 00       		.byte	0
 6622 2c64 04       		.uleb128 0x4
 6623 2c65 00000000 		.4byte	.LASF416
 6624 2c69 03       		.byte	0x3
 6625 2c6a 6803     		.2byte	0x368
 6626 2c6c 07       		.byte	0x7
 6627 2c6d 00000000 		.4byte	.LASF417
 6628 2c71 282C0000 		.4byte	0x2c28
AARCH64 GAS  obj/extInstr.s 			page 326


 6629 2c75 01       		.byte	0x1
 6630 2c76 7E2C0000 		.4byte	0x2c7e
 6631 2c7a 892C0000 		.4byte	0x2c89
 6632 2c7e 02       		.uleb128 0x2
 6633 2c7f 4E5D0000 		.4byte	0x5d4e
 6634 2c83 01       		.uleb128 0x1
 6635 2c84 4E3B0000 		.4byte	0x3b4e
 6636 2c88 00       		.byte	0
 6637 2c89 0E       		.uleb128 0xe
 6638 2c8a 00000000 		.4byte	.LASF254
 6639 2c8e 4E3B0000 		.4byte	0x3b4e
 6640 2c92 8301     		.uleb128 0x83
 6641 2c94 00000000 		.4byte	.LASF418
 6642 2c98 00000000 		.4byte	.LASF419
 6643 2c9c 03       		.byte	0x3
 6644 2c9d 9204     		.2byte	0x492
 6645 2c9f 0C       		.byte	0xc
 6646 2ca0 00       		.byte	0
 6647 2ca1 0C       		.uleb128 0xc
 6648 2ca2 1F2C0000 		.4byte	0x2c1f
 6649 2ca6 06       		.uleb128 0x6
 6650 2ca7 00000000 		.4byte	.LASF420
 6651 2cab 1F       		.byte	0x1f
 6652 2cac 8D       		.byte	0x8d
 6653 2cad 1F       		.byte	0x1f
 6654 2cae 6A2A0000 		.4byte	0x2a6a
 6655 2cb2 8401     		.uleb128 0x84
 6656 2cb4 00000000 		.4byte	.LASF422
 6657 2cb8 0E       		.byte	0xe
 6658 2cb9 3D       		.byte	0x3d
 6659 2cba 12       		.byte	0x12
 6660 2cbb 00000000 		.4byte	.LASF997
 6661 2cbf A62C0000 		.4byte	0x2ca6
 6662 2cc3 8501     		.uleb128 0x85
 6663 2cc5 00000000 		.4byte	.LASF998
 6664 2cc9 0E       		.byte	0xe
 6665 2cca 4A       		.byte	0x4a
 6666 2ccb 19       		.byte	0x19
 6667 2ccc 3F290000 		.4byte	0x293f
 6668 2cd0 03       		.uleb128 0x3
 6669 2cd1 20       		.byte	0x20
 6670 2cd2 3C       		.byte	0x3c
 6671 2cd3 0B       		.byte	0xb
 6672 2cd4 484A0000 		.4byte	0x4a48
 6673 2cd8 03       		.uleb128 0x3
 6674 2cd9 20       		.byte	0x20
 6675 2cda 3D       		.byte	0x3d
 6676 2cdb 0B       		.byte	0xb
 6677 2cdc 374A0000 		.4byte	0x4a37
 6678 2ce0 03       		.uleb128 0x3
 6679 2ce1 20       		.byte	0x20
 6680 2ce2 3E       		.byte	0x3e
 6681 2ce3 0B       		.byte	0xb
 6682 2ce4 2A410000 		.4byte	0x412a
 6683 2ce8 03       		.uleb128 0x3
 6684 2ce9 20       		.byte	0x20
 6685 2cea 40       		.byte	0x40
AARCH64 GAS  obj/extInstr.s 			page 327


 6686 2ceb 0B       		.byte	0xb
 6687 2cec BA520000 		.4byte	0x52ba
 6688 2cf0 03       		.uleb128 0x3
 6689 2cf1 20       		.byte	0x20
 6690 2cf2 41       		.byte	0x41
 6691 2cf3 0B       		.byte	0xb
 6692 2cf4 C6520000 		.4byte	0x52c6
 6693 2cf8 03       		.uleb128 0x3
 6694 2cf9 20       		.byte	0x20
 6695 2cfa 42       		.byte	0x42
 6696 2cfb 0B       		.byte	0xb
 6697 2cfc E1520000 		.4byte	0x52e1
 6698 2d00 03       		.uleb128 0x3
 6699 2d01 20       		.byte	0x20
 6700 2d02 43       		.byte	0x43
 6701 2d03 0B       		.byte	0xb
 6702 2d04 FD520000 		.4byte	0x52fd
 6703 2d08 03       		.uleb128 0x3
 6704 2d09 20       		.byte	0x20
 6705 2d0a 44       		.byte	0x44
 6706 2d0b 0B       		.byte	0xb
 6707 2d0c 19530000 		.4byte	0x5319
 6708 2d10 03       		.uleb128 0x3
 6709 2d11 20       		.byte	0x20
 6710 2d12 45       		.byte	0x45
 6711 2d13 0B       		.byte	0xb
 6712 2d14 2F530000 		.4byte	0x532f
 6713 2d18 03       		.uleb128 0x3
 6714 2d19 20       		.byte	0x20
 6715 2d1a 46       		.byte	0x46
 6716 2d1b 0B       		.byte	0xb
 6717 2d1c 4B530000 		.4byte	0x534b
 6718 2d20 03       		.uleb128 0x3
 6719 2d21 20       		.byte	0x20
 6720 2d22 47       		.byte	0x47
 6721 2d23 0B       		.byte	0xb
 6722 2d24 61530000 		.4byte	0x5361
 6723 2d28 24       		.uleb128 0x24
 6724 2d29 00000000 		.4byte	.LASF423
 6725 2d2d 01       		.byte	0x1
 6726 2d2e 21       		.byte	0x21
 6727 2d2f D2       		.byte	0xd2
 6728 2d30 0C       		.byte	0xc
 6729 2d31 5A2D0000 		.4byte	0x2d5a
 6730 2d35 06       		.uleb128 0x6
 6731 2d36 00000000 		.4byte	.LASF424
 6732 2d3a 21       		.byte	0x21
 6733 2d3b D6       		.byte	0xd6
 6734 2d3c 19       		.byte	0x19
 6735 2d3d C6230000 		.4byte	0x23c6
 6736 2d41 06       		.uleb128 0x6
 6737 2d42 00000000 		.4byte	.LASF5
 6738 2d46 21       		.byte	0x21
 6739 2d47 D7       		.byte	0xd7
 6740 2d48 14       		.byte	0x14
 6741 2d49 6C400000 		.4byte	0x406c
 6742 2d4d 06       		.uleb128 0x6
AARCH64 GAS  obj/extInstr.s 			page 328


 6743 2d4e 00000000 		.4byte	.LASF133
 6744 2d52 21       		.byte	0x21
 6745 2d53 D8       		.byte	0xd8
 6746 2d54 14       		.byte	0x14
 6747 2d55 7F4A0000 		.4byte	0x4a7f
 6748 2d59 00       		.byte	0
 6749 2d5a 24       		.uleb128 0x24
 6750 2d5b 00000000 		.4byte	.LASF425
 6751 2d5f 01       		.byte	0x1
 6752 2d60 21       		.byte	0x21
 6753 2d61 DD       		.byte	0xdd
 6754 2d62 0C       		.byte	0xc
 6755 2d63 8C2D0000 		.4byte	0x2d8c
 6756 2d67 06       		.uleb128 0x6
 6757 2d68 00000000 		.4byte	.LASF424
 6758 2d6c 21       		.byte	0x21
 6759 2d6d E1       		.byte	0xe1
 6760 2d6e 19       		.byte	0x19
 6761 2d6f C6230000 		.4byte	0x23c6
 6762 2d73 06       		.uleb128 0x6
 6763 2d74 00000000 		.4byte	.LASF5
 6764 2d78 21       		.byte	0x21
 6765 2d79 E2       		.byte	0xe2
 6766 2d7a 1A       		.byte	0x1a
 6767 2d7b 283D0000 		.4byte	0x3d28
 6768 2d7f 06       		.uleb128 0x6
 6769 2d80 00000000 		.4byte	.LASF133
 6770 2d84 21       		.byte	0x21
 6771 2d85 E3       		.byte	0xe3
 6772 2d86 1A       		.byte	0x1a
 6773 2d87 854A0000 		.4byte	0x4a85
 6774 2d8b 00       		.byte	0
 6775 2d8c 24       		.uleb128 0x24
 6776 2d8d 00000000 		.4byte	.LASF426
 6777 2d91 01       		.byte	0x1
 6778 2d92 22       		.byte	0x22
 6779 2d93 32       		.byte	0x32
 6780 2d94 0A       		.byte	0xa
 6781 2d95 B12D0000 		.4byte	0x2db1
 6782 2d99 5B       		.uleb128 0x5b
 6783 2d9a 00000000 		.4byte	.LASF426
 6784 2d9e 22       		.byte	0x22
 6785 2d9f 32       		.byte	0x32
 6786 2da0 25       		.byte	0x25
 6787 2da1 00000000 		.4byte	.LASF427
 6788 2da5 01       		.byte	0x1
 6789 2da6 AA2D0000 		.4byte	0x2daa
 6790 2daa 02       		.uleb128 0x2
 6791 2dab BB530000 		.4byte	0x53bb
 6792 2daf 00       		.byte	0
 6793 2db0 00       		.byte	0
 6794 2db1 0C       		.uleb128 0xc
 6795 2db2 8C2D0000 		.4byte	0x2d8c
 6796 2db6 5C       		.uleb128 0x5c
 6797 2db7 00000000 		.4byte	.LASF428
 6798 2dbb 22       		.byte	0x22
 6799 2dbc 34       		.byte	0x34
AARCH64 GAS  obj/extInstr.s 			page 329


 6800 2dbd 1D       		.byte	0x1d
 6801 2dbe B12D0000 		.4byte	0x2db1
 6802 2dc2 01       		.byte	0x1
 6803 2dc3 00       		.byte	0
 6804 2dc4 8601     		.uleb128 0x86
 6805 2dc6 00000000 		.4byte	.LASF999
 6806 2dca 01       		.byte	0x1
 6807 2dcb 23       		.byte	0x23
 6808 2dcc 6C06     		.2byte	0x66c
 6809 2dce 0A       		.byte	0xa
 6810 2dcf 0C       		.uleb128 0xc
 6811 2dd0 C42D0000 		.4byte	0x2dc4
 6812 2dd4 8701     		.uleb128 0x87
 6813 2dd6 00000000 		.4byte	.LASF429
 6814 2dda 23       		.byte	0x23
 6815 2ddb 7606     		.2byte	0x676
 6816 2ddd 1D       		.byte	0x1d
 6817 2dde CF2D0000 		.4byte	0x2dcf
 6818 2de2 01       		.byte	0x1
 6819 2de3 00       		.byte	0
 6820 2de4 24       		.uleb128 0x24
 6821 2de5 00000000 		.4byte	.LASF430
 6822 2de9 04       		.byte	0x4
 6823 2dea 08       		.byte	0x8
 6824 2deb D7       		.byte	0xd7
 6825 2dec 0A       		.byte	0xa
 6826 2ded FF2D0000 		.4byte	0x2dff
 6827 2df1 08       		.uleb128 0x8
 6828 2df2 00000000 		.4byte	.LASF431
 6829 2df6 08       		.byte	0x8
 6830 2df7 D7       		.byte	0xd7
 6831 2df8 16       		.byte	0x16
 6832 2df9 D43A0000 		.4byte	0x3ad4
 6833 2dfd 00       		.byte	0
 6834 2dfe 00       		.byte	0
 6835 2dff 3F       		.uleb128 0x3f
 6836 2e00 00000000 		.4byte	.LASF432
 6837 2e04 01       		.byte	0x1
 6838 2e05 13       		.byte	0x13
 6839 2e06 3D06     		.2byte	0x63d
 6840 2e08 0C       		.byte	0xc
 6841 2e09 242E0000 		.4byte	0x2e24
 6842 2e0d 1D       		.uleb128 0x1d
 6843 2e0e 00000000 		.4byte	.LASF433
 6844 2e12 13       		.byte	0x13
 6845 2e13 3E06     		.2byte	0x63e
 6846 2e15 13       		.byte	0x13
 6847 2e16 D3230000 		.4byte	0x23d3
 6848 2e1a 1C       		.uleb128 0x1c
 6849 2e1b 5F547000 		.string	"_Tp"
 6850 2e1f 9C4A0000 		.4byte	0x4a9c
 6851 2e23 00       		.byte	0
 6852 2e24 3F       		.uleb128 0x3f
 6853 2e25 00000000 		.4byte	.LASF434
 6854 2e29 01       		.byte	0x1
 6855 2e2a 13       		.byte	0x13
 6856 2e2b 9D08     		.2byte	0x89d
AARCH64 GAS  obj/extInstr.s 			page 330


 6857 2e2d 0C       		.byte	0xc
 6858 2e2e 402E0000 		.4byte	0x2e40
 6859 2e32 1D       		.uleb128 0x1d
 6860 2e33 00000000 		.4byte	.LASF433
 6861 2e37 13       		.byte	0x13
 6862 2e38 9E08     		.2byte	0x89e
 6863 2e3a 18       		.byte	0x18
 6864 2e3b 4E3B0000 		.4byte	0x3b4e
 6865 2e3f 00       		.byte	0
 6866 2e40 24       		.uleb128 0x24
 6867 2e41 00000000 		.4byte	.LASF435
 6868 2e45 01       		.byte	0x1
 6869 2e46 24       		.byte	0x24
 6870 2e47 80       		.byte	0x80
 6871 2e48 0C       		.byte	0xc
 6872 2e49 7D2E0000 		.4byte	0x2e7d
 6873 2e4d 06       		.uleb128 0x6
 6874 2e4e 00000000 		.4byte	.LASF5
 6875 2e52 24       		.byte	0x24
 6876 2e53 83       		.byte	0x83
 6877 2e54 14       		.byte	0x14
 6878 2e55 6C400000 		.4byte	0x406c
 6879 2e59 18       		.uleb128 0x18
 6880 2e5a 00000000 		.4byte	.LASF436
 6881 2e5e 24       		.byte	0x24
 6882 2e5f 92       		.byte	0x92
 6883 2e60 07       		.byte	0x7
 6884 2e61 00000000 		.4byte	.LASF437
 6885 2e65 4D2E0000 		.4byte	0x2e4d
 6886 2e69 732E0000 		.4byte	0x2e73
 6887 2e6d 01       		.uleb128 0x1
 6888 2e6e B1570000 		.4byte	0x57b1
 6889 2e72 00       		.byte	0
 6890 2e73 0E       		.uleb128 0xe
 6891 2e74 00000000 		.4byte	.LASF438
 6892 2e78 6C400000 		.4byte	0x406c
 6893 2e7c 00       		.byte	0
 6894 2e7d 06       		.uleb128 0x6
 6895 2e7e 00000000 		.4byte	.LASF439
 6896 2e82 24       		.byte	0x24
 6897 2e83 4B       		.byte	0x4b
 6898 2e84 0B       		.byte	0xb
 6899 2e85 322E0000 		.4byte	0x2e32
 6900 2e89 3F       		.uleb128 0x3f
 6901 2e8a 00000000 		.4byte	.LASF440
 6902 2e8e 01       		.byte	0x1
 6903 2e8f 13       		.byte	0x13
 6904 2e90 9D08     		.2byte	0x89d
 6905 2e92 0C       		.byte	0xc
 6906 2e93 A52E0000 		.4byte	0x2ea5
 6907 2e97 1D       		.uleb128 0x1d
 6908 2e98 00000000 		.4byte	.LASF433
 6909 2e9c 13       		.byte	0x13
 6910 2e9d 9E08     		.2byte	0x89e
 6911 2e9f 18       		.byte	0x18
 6912 2ea0 553B0000 		.4byte	0x3b55
 6913 2ea4 00       		.byte	0
AARCH64 GAS  obj/extInstr.s 			page 331


 6914 2ea5 24       		.uleb128 0x24
 6915 2ea6 00000000 		.4byte	.LASF441
 6916 2eaa 01       		.byte	0x1
 6917 2eab 24       		.byte	0x24
 6918 2eac 80       		.byte	0x80
 6919 2ead 0C       		.byte	0xc
 6920 2eae E22E0000 		.4byte	0x2ee2
 6921 2eb2 06       		.uleb128 0x6
 6922 2eb3 00000000 		.4byte	.LASF5
 6923 2eb7 24       		.byte	0x24
 6924 2eb8 83       		.byte	0x83
 6925 2eb9 14       		.byte	0x14
 6926 2eba 283D0000 		.4byte	0x3d28
 6927 2ebe 18       		.uleb128 0x18
 6928 2ebf 00000000 		.4byte	.LASF436
 6929 2ec3 24       		.byte	0x24
 6930 2ec4 92       		.byte	0x92
 6931 2ec5 07       		.byte	0x7
 6932 2ec6 00000000 		.4byte	.LASF442
 6933 2eca B22E0000 		.4byte	0x2eb2
 6934 2ece D82E0000 		.4byte	0x2ed8
 6935 2ed2 01       		.uleb128 0x1
 6936 2ed3 B7570000 		.4byte	0x57b7
 6937 2ed7 00       		.byte	0
 6938 2ed8 0E       		.uleb128 0xe
 6939 2ed9 00000000 		.4byte	.LASF438
 6940 2edd 283D0000 		.4byte	0x3d28
 6941 2ee1 00       		.byte	0
 6942 2ee2 06       		.uleb128 0x6
 6943 2ee3 00000000 		.4byte	.LASF439
 6944 2ee7 24       		.byte	0x24
 6945 2ee8 4B       		.byte	0x4b
 6946 2ee9 0B       		.byte	0xb
 6947 2eea 972E0000 		.4byte	0x2e97
 6948 2eee 18       		.uleb128 0x18
 6949 2eef 00000000 		.4byte	.LASF443
 6950 2ef3 25       		.byte	0x25
 6951 2ef4 8C       		.byte	0x8c
 6952 2ef5 05       		.byte	0x5
 6953 2ef6 00000000 		.4byte	.LASF444
 6954 2efa 283D0000 		.4byte	0x3d28
 6955 2efe 112F0000 		.4byte	0x2f11
 6956 2f02 1C       		.uleb128 0x1c
 6957 2f03 5F547000 		.string	"_Tp"
 6958 2f07 553B0000 		.4byte	0x3b55
 6959 2f0b 01       		.uleb128 0x1
 6960 2f0c 854A0000 		.4byte	0x4a85
 6961 2f10 00       		.byte	0
 6962 2f11 18       		.uleb128 0x18
 6963 2f12 00000000 		.4byte	.LASF445
 6964 2f16 25       		.byte	0x25
 6965 2f17 31       		.byte	0x31
 6966 2f18 05       		.byte	0x5
 6967 2f19 00000000 		.4byte	.LASF446
 6968 2f1d 283D0000 		.4byte	0x3d28
 6969 2f21 342F0000 		.4byte	0x2f34
 6970 2f25 1C       		.uleb128 0x1c
AARCH64 GAS  obj/extInstr.s 			page 332


 6971 2f26 5F547000 		.string	"_Tp"
 6972 2f2a 553B0000 		.4byte	0x3b55
 6973 2f2e 01       		.uleb128 0x1
 6974 2f2f 854A0000 		.4byte	0x4a85
 6975 2f33 00       		.byte	0
 6976 2f34 18       		.uleb128 0x18
 6977 2f35 00000000 		.4byte	.LASF447
 6978 2f39 25       		.byte	0x25
 6979 2f3a 8C       		.byte	0x8c
 6980 2f3b 05       		.byte	0x5
 6981 2f3c 00000000 		.4byte	.LASF448
 6982 2f40 6C400000 		.4byte	0x406c
 6983 2f44 572F0000 		.4byte	0x2f57
 6984 2f48 1C       		.uleb128 0x1c
 6985 2f49 5F547000 		.string	"_Tp"
 6986 2f4d 4E3B0000 		.4byte	0x3b4e
 6987 2f51 01       		.uleb128 0x1
 6988 2f52 7F4A0000 		.4byte	0x4a7f
 6989 2f56 00       		.byte	0
 6990 2f57 18       		.uleb128 0x18
 6991 2f58 00000000 		.4byte	.LASF449
 6992 2f5c 25       		.byte	0x25
 6993 2f5d 31       		.byte	0x31
 6994 2f5e 05       		.byte	0x5
 6995 2f5f 00000000 		.4byte	.LASF450
 6996 2f63 6C400000 		.4byte	0x406c
 6997 2f67 7A2F0000 		.4byte	0x2f7a
 6998 2f6b 1C       		.uleb128 0x1c
 6999 2f6c 5F547000 		.string	"_Tp"
 7000 2f70 4E3B0000 		.4byte	0x3b4e
 7001 2f74 01       		.uleb128 0x1
 7002 2f75 7F4A0000 		.4byte	0x4a7f
 7003 2f79 00       		.byte	0
 7004 2f7a 18       		.uleb128 0x18
 7005 2f7b 00000000 		.4byte	.LASF451
 7006 2f7f 02       		.byte	0x2
 7007 2f80 2F       		.byte	0x2f
 7008 2f81 05       		.byte	0x5
 7009 2f82 00000000 		.4byte	.LASF452
 7010 2f86 485D0000 		.4byte	0x5d48
 7011 2f8a 9D2F0000 		.4byte	0x2f9d
 7012 2f8e 0E       		.uleb128 0xe
 7013 2f8f 00000000 		.4byte	.LASF453
 7014 2f93 1F2C0000 		.4byte	0x2c1f
 7015 2f97 01       		.uleb128 0x1
 7016 2f98 4E5D0000 		.4byte	0x5d4e
 7017 2f9c 00       		.byte	0
 7018 2f9d 34       		.uleb128 0x34
 7019 2f9e 00000000 		.4byte	.LASF454
 7020 2fa2 6C300000 		.4byte	0x306c
 7021 2fa6 28       		.uleb128 0x28
 7022 2fa7 00000000 		.4byte	.LASF455
 7023 2fab 02       		.byte	0x2
 7024 2fac 89       		.byte	0x89
 7025 2fad 07       		.byte	0x7
 7026 2fae 00000000 		.4byte	.LASF456
 7027 2fb2 F3290000 		.4byte	0x29f3
AARCH64 GAS  obj/extInstr.s 			page 333


 7028 2fb6 01       		.byte	0x1
 7029 2fb7 BF2F0000 		.4byte	0x2fbf
 7030 2fbb C52F0000 		.4byte	0x2fc5
 7031 2fbf 02       		.uleb128 0x2
 7032 2fc0 795D0000 		.4byte	0x5d79
 7033 2fc4 00       		.byte	0
 7034 2fc5 58       		.uleb128 0x58
 7035 2fc6 00000000 		.4byte	.LASF457
 7036 2fca 02       		.byte	0x2
 7037 2fcb 1A01     		.2byte	0x11a
 7038 2fcd 07       		.byte	0x7
 7039 2fce 00000000 		.4byte	.LASF458
 7040 2fd2 01       		.byte	0x1
 7041 2fd3 9D2F0000 		.4byte	0x2f9d
 7042 2fd7 01       		.byte	0x1
 7043 2fd8 E02F0000 		.4byte	0x2fe0
 7044 2fdc EB2F0000 		.4byte	0x2feb
 7045 2fe0 02       		.uleb128 0x2
 7046 2fe1 2E5F0000 		.4byte	0x5f2e
 7047 2fe5 02       		.uleb128 0x2
 7048 2fe6 D43A0000 		.4byte	0x3ad4
 7049 2fea 00       		.byte	0
 7050 2feb 12       		.uleb128 0x12
 7051 2fec 00000000 		.4byte	.LASF459
 7052 2ff0 02       		.byte	0x2
 7053 2ff1 CC01     		.2byte	0x1cc
 7054 2ff3 07       		.byte	0x7
 7055 2ff4 00000000 		.4byte	.LASF460
 7056 2ff8 02       		.byte	0x2
 7057 2ff9 01300000 		.4byte	0x3001
 7058 2ffd 07300000 		.4byte	0x3007
 7059 3001 02       		.uleb128 0x2
 7060 3002 2E5F0000 		.4byte	0x5f2e
 7061 3006 00       		.byte	0
 7062 3007 17       		.uleb128 0x17
 7063 3008 00000000 		.4byte	.LASF300
 7064 300c 02       		.byte	0x2
 7065 300d 4C       		.byte	0x4c
 7066 300e 16       		.byte	0x16
 7067 300f 4E3B0000 		.4byte	0x3b4e
 7068 3013 01       		.byte	0x1
 7069 3014 04       		.uleb128 0x4
 7070 3015 00000000 		.4byte	.LASF416
 7071 3019 02       		.byte	0x2
 7072 301a C101     		.2byte	0x1c1
 7073 301c 07       		.byte	0x7
 7074 301d 00000000 		.4byte	.LASF461
 7075 3021 07300000 		.4byte	0x3007
 7076 3025 01       		.byte	0x1
 7077 3026 2E300000 		.4byte	0x302e
 7078 302a 39300000 		.4byte	0x3039
 7079 302e 02       		.uleb128 0x2
 7080 302f 795D0000 		.4byte	0x5d79
 7081 3033 01       		.uleb128 0x1
 7082 3034 4E3B0000 		.4byte	0x3b4e
 7083 3038 00       		.byte	0
 7084 3039 20       		.uleb128 0x20
AARCH64 GAS  obj/extInstr.s 			page 334


 7085 303a 00000000 		.4byte	.LASF462
 7086 303e 02       		.byte	0x2
 7087 303f 9D       		.byte	0x9d
 7088 3040 07       		.byte	0x7
 7089 3041 00000000 		.4byte	.LASF463
 7090 3045 01       		.byte	0x1
 7091 3046 4E300000 		.4byte	0x304e
 7092 304a 59300000 		.4byte	0x3059
 7093 304e 02       		.uleb128 0x2
 7094 304f 2E5F0000 		.4byte	0x5f2e
 7095 3053 01       		.uleb128 0x1
 7096 3054 F3290000 		.4byte	0x29f3
 7097 3058 00       		.byte	0
 7098 3059 0E       		.uleb128 0xe
 7099 305a 00000000 		.4byte	.LASF254
 7100 305e 4E3B0000 		.4byte	0x3b4e
 7101 3062 30       		.uleb128 0x30
 7102 3063 00000000 		.4byte	.LASF255
 7103 3067 E2200000 		.4byte	0x20e2
 7104 306b 00       		.byte	0
 7105 306c 0C       		.uleb128 0xc
 7106 306d 9D2F0000 		.4byte	0x2f9d
 7107 3071 14       		.uleb128 0x14
 7108 3072 00000000 		.4byte	.LASF464
 7109 3076 01       		.byte	0x1
 7110 3077 BF02     		.2byte	0x2bf
 7111 3079 05       		.byte	0x5
 7112 307a 00000000 		.4byte	.LASF465
 7113 307e 99520000 		.4byte	0x5299
 7114 3082 9E300000 		.4byte	0x309e
 7115 3086 0E       		.uleb128 0xe
 7116 3087 00000000 		.4byte	.LASF254
 7117 308b 4E3B0000 		.4byte	0x3b4e
 7118 308f 0E       		.uleb128 0xe
 7119 3090 00000000 		.4byte	.LASF255
 7120 3094 E2200000 		.4byte	0x20e2
 7121 3098 01       		.uleb128 0x1
 7122 3099 99520000 		.4byte	0x5299
 7123 309d 00       		.byte	0
 7124 309e 18       		.uleb128 0x18
 7125 309f 00000000 		.4byte	.LASF466
 7126 30a3 08       		.byte	0x8
 7127 30a4 EE       		.byte	0xee
 7128 30a5 05       		.byte	0x5
 7129 30a6 00000000 		.4byte	.LASF467
 7130 30aa 99520000 		.4byte	0x5299
 7131 30ae CF300000 		.4byte	0x30cf
 7132 30b2 0E       		.uleb128 0xe
 7133 30b3 00000000 		.4byte	.LASF254
 7134 30b7 4E3B0000 		.4byte	0x3b4e
 7135 30bb 0E       		.uleb128 0xe
 7136 30bc 00000000 		.4byte	.LASF255
 7137 30c0 E2200000 		.4byte	0x20e2
 7138 30c4 01       		.uleb128 0x1
 7139 30c5 99520000 		.4byte	0x5299
 7140 30c9 01       		.uleb128 0x1
 7141 30ca E42D0000 		.4byte	0x2de4
AARCH64 GAS  obj/extInstr.s 			page 335


 7142 30ce 00       		.byte	0
 7143 30cf 18       		.uleb128 0x18
 7144 30d0 00000000 		.4byte	.LASF468
 7145 30d4 25       		.byte	0x25
 7146 30d5 65       		.byte	0x65
 7147 30d6 05       		.byte	0x5
 7148 30d7 00000000 		.4byte	.LASF469
 7149 30db 61630000 		.4byte	0x6361
 7150 30df F2300000 		.4byte	0x30f2
 7151 30e3 1C       		.uleb128 0x1c
 7152 30e4 5F547000 		.string	"_Tp"
 7153 30e8 9C4A0000 		.4byte	0x4a9c
 7154 30ec 01       		.uleb128 0x1
 7155 30ed 9C4A0000 		.4byte	0x4a9c
 7156 30f1 00       		.byte	0
 7157 30f2 14       		.uleb128 0x14
 7158 30f3 00000000 		.4byte	.LASF470
 7159 30f7 0A       		.byte	0xa
 7160 30f8 4419     		.2byte	0x1944
 7161 30fa 05       		.byte	0x5
 7162 30fb 00000000 		.4byte	.LASF471
 7163 30ff 99520000 		.4byte	0x5299
 7164 3103 2D310000 		.4byte	0x312d
 7165 3107 0E       		.uleb128 0xe
 7166 3108 00000000 		.4byte	.LASF254
 7167 310c 4E3B0000 		.4byte	0x3b4e
 7168 3110 0E       		.uleb128 0xe
 7169 3111 00000000 		.4byte	.LASF255
 7170 3115 E2200000 		.4byte	0x20e2
 7171 3119 0E       		.uleb128 0xe
 7172 311a 00000000 		.4byte	.LASF256
 7173 311e D3230000 		.4byte	0x23d3
 7174 3122 01       		.uleb128 0x1
 7175 3123 99520000 		.4byte	0x5299
 7176 3127 01       		.uleb128 0x1
 7177 3128 E9510000 		.4byte	0x51e9
 7178 312c 00       		.byte	0
 7179 312d 14       		.uleb128 0x14
 7180 312e 00000000 		.4byte	.LASF472
 7181 3132 01       		.byte	0x1
 7182 3133 A902     		.2byte	0x2a9
 7183 3135 05       		.byte	0x5
 7184 3136 00000000 		.4byte	.LASF473
 7185 313a 99520000 		.4byte	0x5299
 7186 313e 5A310000 		.4byte	0x315a
 7187 3142 0E       		.uleb128 0xe
 7188 3143 00000000 		.4byte	.LASF254
 7189 3147 4E3B0000 		.4byte	0x3b4e
 7190 314b 0E       		.uleb128 0xe
 7191 314c 00000000 		.4byte	.LASF255
 7192 3150 E2200000 		.4byte	0x20e2
 7193 3154 01       		.uleb128 0x1
 7194 3155 99520000 		.4byte	0x5299
 7195 3159 00       		.byte	0
 7196 315a 14       		.uleb128 0x14
 7197 315b 00000000 		.4byte	.LASF474
 7198 315f 01       		.byte	0x1
AARCH64 GAS  obj/extInstr.s 			page 336


 7199 3160 5E02     		.2byte	0x25e
 7200 3162 05       		.byte	0x5
 7201 3163 00000000 		.4byte	.LASF475
 7202 3167 99520000 		.4byte	0x5299
 7203 316b 83310000 		.4byte	0x3183
 7204 316f 0E       		.uleb128 0xe
 7205 3170 00000000 		.4byte	.LASF255
 7206 3174 E2200000 		.4byte	0x20e2
 7207 3178 01       		.uleb128 0x1
 7208 3179 99520000 		.4byte	0x5299
 7209 317d 01       		.uleb128 0x1
 7210 317e 283D0000 		.4byte	0x3d28
 7211 3182 00       		.byte	0
 7212 3183 06       		.uleb128 0x6
 7213 3184 00000000 		.4byte	.LASF476
 7214 3188 1F       		.byte	0x1f
 7215 3189 99       		.byte	0x99
 7216 318a 25       		.byte	0x25
 7217 318b 6F1B0000 		.4byte	0x1b6f
 7218 318f 18       		.uleb128 0x18
 7219 3190 00000000 		.4byte	.LASF477
 7220 3194 08       		.byte	0x8
 7221 3195 E1       		.byte	0xe1
 7222 3196 03       		.byte	0x3
 7223 3197 00000000 		.4byte	.LASF478
 7224 319b E42D0000 		.4byte	0x2de4
 7225 319f A9310000 		.4byte	0x31a9
 7226 31a3 01       		.uleb128 0x1
 7227 31a4 D43A0000 		.4byte	0x3ad4
 7228 31a8 00       		.byte	0
 7229 31a9 06       		.uleb128 0x6
 7230 31aa 00000000 		.4byte	.LASF479
 7231 31ae 26       		.byte	0x26
 7232 31af 62       		.byte	0x62
 7233 31b0 15       		.byte	0x15
 7234 31b1 C6230000 		.4byte	0x23c6
 7235 31b5 18       		.uleb128 0x18
 7236 31b6 00000000 		.4byte	.LASF480
 7237 31ba 06       		.byte	0x6
 7238 31bb A9       		.byte	0xa9
 7239 31bc 03       		.byte	0x3
 7240 31bd 00000000 		.4byte	.LASF481
 7241 31c1 EF280000 		.4byte	0x28ef
 7242 31c5 D4310000 		.4byte	0x31d4
 7243 31c9 01       		.uleb128 0x1
 7244 31ca EF280000 		.4byte	0x28ef
 7245 31ce 01       		.uleb128 0x1
 7246 31cf EF280000 		.4byte	0x28ef
 7247 31d3 00       		.byte	0
 7248 31d4 35       		.uleb128 0x35
 7249 31d5 00000000 		.4byte	.LASF482
 7250 31d9 00000000 		.4byte	.LASF483
 7251 31dd 27       		.byte	0x27
 7252 31de 4C       		.byte	0x4c
 7253 31df 05       		.byte	0x5
 7254 31e0 35       		.uleb128 0x35
 7255 31e1 00000000 		.4byte	.LASF484
AARCH64 GAS  obj/extInstr.s 			page 337


 7256 31e5 00000000 		.4byte	.LASF485
 7257 31e9 28       		.byte	0x28
 7258 31ea 38       		.byte	0x38
 7259 31eb 03       		.byte	0x3
 7260 31ec 00       		.byte	0
 7261 31ed 8801     		.uleb128 0x88
 7262 31ef 00000000 		.4byte	.LASF487
 7263 31f3 11       		.byte	0x11
 7264 31f4 2001     		.2byte	0x120
 7265 31f6 0B       		.byte	0xb
 7266 31f7 583A0000 		.4byte	0x3a58
 7267 31fb 5F       		.uleb128 0x5f
 7268 31fc 00000000 		.4byte	.LASF354
 7269 3200 11       		.byte	0x11
 7270 3201 2201     		.2byte	0x122
 7271 3203 41       		.byte	0x41
 7272 3204 43       		.uleb128 0x43
 7273 3205 11       		.byte	0x11
 7274 3206 2201     		.2byte	0x122
 7275 3208 41       		.byte	0x41
 7276 3209 FB310000 		.4byte	0x31fb
 7277 320d 03       		.uleb128 0x3
 7278 320e 0F       		.byte	0xf
 7279 320f FB       		.byte	0xfb
 7280 3210 0B       		.byte	0xb
 7281 3211 5F450000 		.4byte	0x455f
 7282 3215 27       		.uleb128 0x27
 7283 3216 0F       		.byte	0xf
 7284 3217 0401     		.2byte	0x104
 7285 3219 0B       		.byte	0xb
 7286 321a 7B450000 		.4byte	0x457b
 7287 321e 27       		.uleb128 0x27
 7288 321f 0F       		.byte	0xf
 7289 3220 0501     		.2byte	0x105
 7290 3222 0B       		.byte	0xb
 7291 3223 A3450000 		.4byte	0x45a3
 7292 3227 5D       		.uleb128 0x5d
 7293 3228 00000000 		.4byte	.LASF488
 7294 322c 29       		.byte	0x29
 7295 322d 23       		.byte	0x23
 7296 322e 0B       		.byte	0xb
 7297 322f 3D       		.uleb128 0x3d
 7298 3230 00000000 		.4byte	.LASF489
 7299 3234 01       		.byte	0x1
 7300 3235 0C       		.byte	0xc
 7301 3236 37       		.byte	0x37
 7302 3237 0B       		.byte	0xb
 7303 3238 B5330000 		.4byte	0x33b5
 7304 323c 20       		.uleb128 0x20
 7305 323d 00000000 		.4byte	.LASF490
 7306 3241 0C       		.byte	0xc
 7307 3242 4F       		.byte	0x4f
 7308 3243 07       		.byte	0x7
 7309 3244 00000000 		.4byte	.LASF491
 7310 3248 01       		.byte	0x1
 7311 3249 51320000 		.4byte	0x3251
 7312 324d 57320000 		.4byte	0x3257
AARCH64 GAS  obj/extInstr.s 			page 338


 7313 3251 02       		.uleb128 0x2
 7314 3252 684A0000 		.4byte	0x4a68
 7315 3256 00       		.byte	0
 7316 3257 20       		.uleb128 0x20
 7317 3258 00000000 		.4byte	.LASF490
 7318 325c 0C       		.byte	0xc
 7319 325d 52       		.byte	0x52
 7320 325e 07       		.byte	0x7
 7321 325f 00000000 		.4byte	.LASF492
 7322 3263 01       		.byte	0x1
 7323 3264 6C320000 		.4byte	0x326c
 7324 3268 77320000 		.4byte	0x3277
 7325 326c 02       		.uleb128 0x2
 7326 326d 684A0000 		.4byte	0x4a68
 7327 3271 01       		.uleb128 0x1
 7328 3272 734A0000 		.4byte	0x4a73
 7329 3276 00       		.byte	0
 7330 3277 20       		.uleb128 0x20
 7331 3278 00000000 		.4byte	.LASF493
 7332 327c 0C       		.byte	0xc
 7333 327d 59       		.byte	0x59
 7334 327e 07       		.byte	0x7
 7335 327f 00000000 		.4byte	.LASF494
 7336 3283 01       		.byte	0x1
 7337 3284 8C320000 		.4byte	0x328c
 7338 3288 97320000 		.4byte	0x3297
 7339 328c 02       		.uleb128 0x2
 7340 328d 684A0000 		.4byte	0x4a68
 7341 3291 02       		.uleb128 0x2
 7342 3292 D43A0000 		.4byte	0x3ad4
 7343 3296 00       		.byte	0
 7344 3297 17       		.uleb128 0x17
 7345 3298 00000000 		.4byte	.LASF5
 7346 329c 0C       		.byte	0xc
 7347 329d 3E       		.byte	0x3e
 7348 329e 14       		.byte	0x14
 7349 329f 6C400000 		.4byte	0x406c
 7350 32a3 01       		.byte	0x1
 7351 32a4 28       		.uleb128 0x28
 7352 32a5 00000000 		.4byte	.LASF495
 7353 32a9 0C       		.byte	0xc
 7354 32aa 5C       		.byte	0x5c
 7355 32ab 07       		.byte	0x7
 7356 32ac 00000000 		.4byte	.LASF496
 7357 32b0 97320000 		.4byte	0x3297
 7358 32b4 01       		.byte	0x1
 7359 32b5 BD320000 		.4byte	0x32bd
 7360 32b9 C8320000 		.4byte	0x32c8
 7361 32bd 02       		.uleb128 0x2
 7362 32be 794A0000 		.4byte	0x4a79
 7363 32c2 01       		.uleb128 0x1
 7364 32c3 C8320000 		.4byte	0x32c8
 7365 32c7 00       		.byte	0
 7366 32c8 17       		.uleb128 0x17
 7367 32c9 00000000 		.4byte	.LASF133
 7368 32cd 0C       		.byte	0xc
 7369 32ce 40       		.byte	0x40
AARCH64 GAS  obj/extInstr.s 			page 339


 7370 32cf 14       		.byte	0x14
 7371 32d0 7F4A0000 		.4byte	0x4a7f
 7372 32d4 01       		.byte	0x1
 7373 32d5 17       		.uleb128 0x17
 7374 32d6 00000000 		.4byte	.LASF17
 7375 32da 0C       		.byte	0xc
 7376 32db 3F       		.byte	0x3f
 7377 32dc 1A       		.byte	0x1a
 7378 32dd 283D0000 		.4byte	0x3d28
 7379 32e1 01       		.byte	0x1
 7380 32e2 28       		.uleb128 0x28
 7381 32e3 00000000 		.4byte	.LASF495
 7382 32e7 0C       		.byte	0xc
 7383 32e8 60       		.byte	0x60
 7384 32e9 07       		.byte	0x7
 7385 32ea 00000000 		.4byte	.LASF497
 7386 32ee D5320000 		.4byte	0x32d5
 7387 32f2 01       		.byte	0x1
 7388 32f3 FB320000 		.4byte	0x32fb
 7389 32f7 06330000 		.4byte	0x3306
 7390 32fb 02       		.uleb128 0x2
 7391 32fc 794A0000 		.4byte	0x4a79
 7392 3300 01       		.uleb128 0x1
 7393 3301 06330000 		.4byte	0x3306
 7394 3305 00       		.byte	0
 7395 3306 17       		.uleb128 0x17
 7396 3307 00000000 		.4byte	.LASF130
 7397 330b 0C       		.byte	0xc
 7398 330c 41       		.byte	0x41
 7399 330d 1A       		.byte	0x1a
 7400 330e 854A0000 		.4byte	0x4a85
 7401 3312 01       		.byte	0x1
 7402 3313 28       		.uleb128 0x28
 7403 3314 00000000 		.4byte	.LASF329
 7404 3318 0C       		.byte	0xc
 7405 3319 67       		.byte	0x67
 7406 331a 07       		.byte	0x7
 7407 331b 00000000 		.4byte	.LASF498
 7408 331f 6C400000 		.4byte	0x406c
 7409 3323 01       		.byte	0x1
 7410 3324 2C330000 		.4byte	0x332c
 7411 3328 3C330000 		.4byte	0x333c
 7412 332c 02       		.uleb128 0x2
 7413 332d 684A0000 		.4byte	0x4a68
 7414 3331 01       		.uleb128 0x1
 7415 3332 3C330000 		.4byte	0x333c
 7416 3336 01       		.uleb128 0x1
 7417 3337 604A0000 		.4byte	0x4a60
 7418 333b 00       		.byte	0
 7419 333c 17       		.uleb128 0x17
 7420 333d 00000000 		.4byte	.LASF6
 7421 3341 0C       		.byte	0xc
 7422 3342 3B       		.byte	0x3b
 7423 3343 1B       		.byte	0x1b
 7424 3344 8C200000 		.4byte	0x208c
 7425 3348 01       		.byte	0x1
 7426 3349 20       		.uleb128 0x20
AARCH64 GAS  obj/extInstr.s 			page 340


 7427 334a 00000000 		.4byte	.LASF333
 7428 334e 0C       		.byte	0xc
 7429 334f 78       		.byte	0x78
 7430 3350 07       		.byte	0x7
 7431 3351 00000000 		.4byte	.LASF499
 7432 3355 01       		.byte	0x1
 7433 3356 5E330000 		.4byte	0x335e
 7434 335a 6E330000 		.4byte	0x336e
 7435 335e 02       		.uleb128 0x2
 7436 335f 684A0000 		.4byte	0x4a68
 7437 3363 01       		.uleb128 0x1
 7438 3364 6C400000 		.4byte	0x406c
 7439 3368 01       		.uleb128 0x1
 7440 3369 3C330000 		.4byte	0x333c
 7441 336d 00       		.byte	0
 7442 336e 28       		.uleb128 0x28
 7443 336f 00000000 		.4byte	.LASF115
 7444 3373 0C       		.byte	0xc
 7445 3374 8E       		.byte	0x8e
 7446 3375 07       		.byte	0x7
 7447 3376 00000000 		.4byte	.LASF500
 7448 337a 3C330000 		.4byte	0x333c
 7449 337e 01       		.byte	0x1
 7450 337f 87330000 		.4byte	0x3387
 7451 3383 8D330000 		.4byte	0x338d
 7452 3387 02       		.uleb128 0x2
 7453 3388 794A0000 		.4byte	0x4a79
 7454 338c 00       		.byte	0
 7455 338d 19       		.uleb128 0x19
 7456 338e 00000000 		.4byte	.LASF501
 7457 3392 0C       		.byte	0xc
 7458 3393 B9       		.byte	0xb9
 7459 3394 07       		.byte	0x7
 7460 3395 00000000 		.4byte	.LASF502
 7461 3399 3C330000 		.4byte	0x333c
 7462 339d A5330000 		.4byte	0x33a5
 7463 33a1 AB330000 		.4byte	0x33ab
 7464 33a5 02       		.uleb128 0x2
 7465 33a6 794A0000 		.4byte	0x4a79
 7466 33aa 00       		.byte	0
 7467 33ab 1C       		.uleb128 0x1c
 7468 33ac 5F547000 		.string	"_Tp"
 7469 33b0 4E3B0000 		.4byte	0x3b4e
 7470 33b4 00       		.byte	0
 7471 33b5 0C       		.uleb128 0xc
 7472 33b6 2F320000 		.4byte	0x322f
 7473 33ba 03       		.uleb128 0x3
 7474 33bb 17       		.byte	0x17
 7475 33bc C8       		.byte	0xc8
 7476 33bd 0B       		.byte	0xb
 7477 33be 324B0000 		.4byte	0x4b32
 7478 33c2 03       		.uleb128 0x3
 7479 33c3 17       		.byte	0x17
 7480 33c4 D8       		.byte	0xd8
 7481 33c5 0B       		.byte	0xb
 7482 33c6 C64D0000 		.4byte	0x4dc6
 7483 33ca 03       		.uleb128 0x3
AARCH64 GAS  obj/extInstr.s 			page 341


 7484 33cb 17       		.byte	0x17
 7485 33cc E3       		.byte	0xe3
 7486 33cd 0B       		.byte	0xb
 7487 33ce E24D0000 		.4byte	0x4de2
 7488 33d2 03       		.uleb128 0x3
 7489 33d3 17       		.byte	0x17
 7490 33d4 E4       		.byte	0xe4
 7491 33d5 0B       		.byte	0xb
 7492 33d6 F94D0000 		.4byte	0x4df9
 7493 33da 03       		.uleb128 0x3
 7494 33db 17       		.byte	0x17
 7495 33dc E5       		.byte	0xe5
 7496 33dd 0B       		.byte	0xb
 7497 33de 194E0000 		.4byte	0x4e19
 7498 33e2 03       		.uleb128 0x3
 7499 33e3 17       		.byte	0x17
 7500 33e4 E7       		.byte	0xe7
 7501 33e5 0B       		.byte	0xb
 7502 33e6 394E0000 		.4byte	0x4e39
 7503 33ea 03       		.uleb128 0x3
 7504 33eb 17       		.byte	0x17
 7505 33ec E8       		.byte	0xe8
 7506 33ed 0B       		.byte	0xb
 7507 33ee 544E0000 		.4byte	0x4e54
 7508 33f2 8901     		.uleb128 0x89
 7509 33f4 64697600 		.string	"div"
 7510 33f8 17       		.byte	0x17
 7511 33f9 D5       		.byte	0xd5
 7512 33fa 03       		.byte	0x3
 7513 33fb 00000000 		.4byte	.LASF1000
 7514 33ff 324B0000 		.4byte	0x4b32
 7515 3403 12340000 		.4byte	0x3412
 7516 3407 01       		.uleb128 0x1
 7517 3408 9C450000 		.4byte	0x459c
 7518 340c 01       		.uleb128 0x1
 7519 340d 9C450000 		.4byte	0x459c
 7520 3411 00       		.byte	0
 7521 3412 24       		.uleb128 0x24
 7522 3413 00000000 		.4byte	.LASF503
 7523 3417 01       		.byte	0x1
 7524 3418 2A       		.byte	0x2a
 7525 3419 30       		.byte	0x30
 7526 341a 0A       		.byte	0xa
 7527 341b 45350000 		.4byte	0x3545
 7528 341f 03       		.uleb128 0x3
 7529 3420 2A       		.byte	0x2a
 7530 3421 30       		.byte	0x30
 7531 3422 0A       		.byte	0xa
 7532 3423 9B260000 		.4byte	0x269b
 7533 3427 03       		.uleb128 0x3
 7534 3428 2A       		.byte	0x2a
 7535 3429 30       		.byte	0x30
 7536 342a 0A       		.byte	0xa
 7537 342b 5C260000 		.4byte	0x265c
 7538 342f 03       		.uleb128 0x3
 7539 3430 2A       		.byte	0x2a
 7540 3431 30       		.byte	0x30
AARCH64 GAS  obj/extInstr.s 			page 342


 7541 3432 0A       		.byte	0xa
 7542 3433 CD260000 		.4byte	0x26cd
 7543 3437 03       		.uleb128 0x3
 7544 3438 2A       		.byte	0x2a
 7545 3439 30       		.byte	0x30
 7546 343a 0A       		.byte	0xa
 7547 343b EE260000 		.4byte	0x26ee
 7548 343f 55       		.uleb128 0x55
 7549 3440 41260000 		.4byte	0x2641
 7550 3444 00       		.byte	0
 7551 3445 18       		.uleb128 0x18
 7552 3446 00000000 		.4byte	.LASF504
 7553 344a 2A       		.byte	0x2a
 7554 344b 61       		.byte	0x61
 7555 344c 1D       		.byte	0x1d
 7556 344d 00000000 		.4byte	.LASF505
 7557 3451 D3230000 		.4byte	0x23d3
 7558 3455 5F340000 		.4byte	0x345f
 7559 3459 01       		.uleb128 0x1
 7560 345a 964A0000 		.4byte	0x4a96
 7561 345e 00       		.byte	0
 7562 345f 8A01     		.uleb128 0x8a
 7563 3461 00000000 		.4byte	.LASF506
 7564 3465 2A       		.byte	0x2a
 7565 3466 64       		.byte	0x64
 7566 3467 1B       		.byte	0x1b
 7567 3468 00000000 		.4byte	.LASF1001
 7568 346c 7B340000 		.4byte	0x347b
 7569 3470 01       		.uleb128 0x1
 7570 3471 9C4A0000 		.4byte	0x4a9c
 7571 3475 01       		.uleb128 0x1
 7572 3476 9C4A0000 		.4byte	0x4a9c
 7573 347a 00       		.byte	0
 7574 347b 40       		.uleb128 0x40
 7575 347c 00000000 		.4byte	.LASF507
 7576 3480 2A       		.byte	0x2a
 7577 3481 67       		.byte	0x67
 7578 3482 1B       		.byte	0x1b
 7579 3483 00000000 		.4byte	.LASF509
 7580 3487 EF450000 		.4byte	0x45ef
 7581 348b 40       		.uleb128 0x40
 7582 348c 00000000 		.4byte	.LASF508
 7583 3490 2A       		.byte	0x2a
 7584 3491 6A       		.byte	0x6a
 7585 3492 1B       		.byte	0x1b
 7586 3493 00000000 		.4byte	.LASF510
 7587 3497 EF450000 		.4byte	0x45ef
 7588 349b 40       		.uleb128 0x40
 7589 349c 00000000 		.4byte	.LASF511
 7590 34a0 2A       		.byte	0x2a
 7591 34a1 6D       		.byte	0x6d
 7592 34a2 1B       		.byte	0x1b
 7593 34a3 00000000 		.4byte	.LASF512
 7594 34a7 EF450000 		.4byte	0x45ef
 7595 34ab 40       		.uleb128 0x40
 7596 34ac 00000000 		.4byte	.LASF513
 7597 34b0 2A       		.byte	0x2a
AARCH64 GAS  obj/extInstr.s 			page 343


 7598 34b1 70       		.byte	0x70
 7599 34b2 1B       		.byte	0x1b
 7600 34b3 00000000 		.4byte	.LASF514
 7601 34b7 EF450000 		.4byte	0x45ef
 7602 34bb 40       		.uleb128 0x40
 7603 34bc 00000000 		.4byte	.LASF515
 7604 34c0 2A       		.byte	0x2a
 7605 34c1 73       		.byte	0x73
 7606 34c2 1B       		.byte	0x1b
 7607 34c3 00000000 		.4byte	.LASF516
 7608 34c7 EF450000 		.4byte	0x45ef
 7609 34cb 06       		.uleb128 0x6
 7610 34cc 00000000 		.4byte	.LASF338
 7611 34d0 2A       		.byte	0x2a
 7612 34d1 38       		.byte	0x38
 7613 34d2 2D       		.byte	0x2d
 7614 34d3 24270000 		.4byte	0x2724
 7615 34d7 0C       		.uleb128 0xc
 7616 34d8 CB340000 		.4byte	0x34cb
 7617 34dc 06       		.uleb128 0x6
 7618 34dd 00000000 		.4byte	.LASF5
 7619 34e1 2A       		.byte	0x2a
 7620 34e2 39       		.byte	0x39
 7621 34e3 2A       		.byte	0x2a
 7622 34e4 4F260000 		.4byte	0x264f
 7623 34e8 06       		.uleb128 0x6
 7624 34e9 00000000 		.4byte	.LASF17
 7625 34ed 2A       		.byte	0x2a
 7626 34ee 3A       		.byte	0x3a
 7627 34ef 30       		.byte	0x30
 7628 34f0 31270000 		.4byte	0x2731
 7629 34f4 06       		.uleb128 0x6
 7630 34f5 00000000 		.4byte	.LASF6
 7631 34f9 2A       		.byte	0x2a
 7632 34fa 3B       		.byte	0x3b
 7633 34fb 2C       		.byte	0x2c
 7634 34fc 8E260000 		.4byte	0x268e
 7635 3500 06       		.uleb128 0x6
 7636 3501 00000000 		.4byte	.LASF133
 7637 3505 2A       		.byte	0x2a
 7638 3506 3E       		.byte	0x3e
 7639 3507 19       		.byte	0x19
 7640 3508 94510000 		.4byte	0x5194
 7641 350c 06       		.uleb128 0x6
 7642 350d 00000000 		.4byte	.LASF130
 7643 3511 2A       		.byte	0x2a
 7644 3512 3F       		.byte	0x3f
 7645 3513 1F       		.byte	0x1f
 7646 3514 9A510000 		.4byte	0x519a
 7647 3518 24       		.uleb128 0x24
 7648 3519 00000000 		.4byte	.LASF517
 7649 351d 01       		.byte	0x1
 7650 351e 2A       		.byte	0x2a
 7651 351f 77       		.byte	0x77
 7652 3520 0E       		.byte	0xe
 7653 3521 3B350000 		.4byte	0x353b
 7654 3525 06       		.uleb128 0x6
AARCH64 GAS  obj/extInstr.s 			page 344


 7655 3526 00000000 		.4byte	.LASF518
 7656 352a 2A       		.byte	0x2a
 7657 352b 78       		.byte	0x78
 7658 352c 41       		.byte	0x41
 7659 352d 3E270000 		.4byte	0x273e
 7660 3531 1C       		.uleb128 0x1c
 7661 3532 5F547000 		.string	"_Tp"
 7662 3536 4E3B0000 		.4byte	0x3b4e
 7663 353a 00       		.byte	0
 7664 353b 0E       		.uleb128 0xe
 7665 353c 00000000 		.4byte	.LASF256
 7666 3540 D3230000 		.4byte	0x23d3
 7667 3544 00       		.byte	0
 7668 3545 64       		.uleb128 0x64
 7669 3546 00000000 		.4byte	.LASF519
 7670 354a 08       		.byte	0x8
 7671 354b 2B       		.byte	0x2b
 7672 354c BB03     		.2byte	0x3bb
 7673 354e 0B       		.byte	0xb
 7674 354f 7F370000 		.4byte	0x377f
 7675 3553 65       		.uleb128 0x65
 7676 3554 00000000 		.4byte	.LASF520
 7677 3558 2B       		.byte	0x2b
 7678 3559 BE03     		.2byte	0x3be
 7679 355b 11       		.byte	0x11
 7680 355c 6C400000 		.4byte	0x406c
 7681 3560 00       		.byte	0
 7682 3561 02       		.byte	0x2
 7683 3562 12       		.uleb128 0x12
 7684 3563 00000000 		.4byte	.LASF521
 7685 3567 2B       		.byte	0x2b
 7686 3568 CE03     		.2byte	0x3ce
 7687 356a 11       		.byte	0x11
 7688 356b 00000000 		.4byte	.LASF522
 7689 356f 01       		.byte	0x1
 7690 3570 78350000 		.4byte	0x3578
 7691 3574 7E350000 		.4byte	0x357e
 7692 3578 02       		.uleb128 0x2
 7693 3579 77530000 		.4byte	0x5377
 7694 357d 00       		.byte	0
 7695 357e 4C       		.uleb128 0x4c
 7696 357f 00000000 		.4byte	.LASF521
 7697 3583 2B       		.byte	0x2b
 7698 3584 D203     		.2byte	0x3d2
 7699 3586 07       		.byte	0x7
 7700 3587 00000000 		.4byte	.LASF523
 7701 358b 01       		.byte	0x1
 7702 358c 94350000 		.4byte	0x3594
 7703 3590 9F350000 		.4byte	0x359f
 7704 3594 02       		.uleb128 0x2
 7705 3595 77530000 		.4byte	0x5377
 7706 3599 01       		.uleb128 0x1
 7707 359a 82530000 		.4byte	0x5382
 7708 359e 00       		.byte	0
 7709 359f 2D       		.uleb128 0x2d
 7710 35a0 00000000 		.4byte	.LASF133
 7711 35a4 2B       		.byte	0x2b
AARCH64 GAS  obj/extInstr.s 			page 345


 7712 35a5 C703     		.2byte	0x3c7
 7713 35a7 31       		.byte	0x31
 7714 35a8 4D2D0000 		.4byte	0x2d4d
 7715 35ac 01       		.byte	0x1
 7716 35ad 04       		.uleb128 0x4
 7717 35ae 00000000 		.4byte	.LASF524
 7718 35b2 2B       		.byte	0x2b
 7719 35b3 E103     		.2byte	0x3e1
 7720 35b5 07       		.byte	0x7
 7721 35b6 00000000 		.4byte	.LASF525
 7722 35ba 9F350000 		.4byte	0x359f
 7723 35be 01       		.byte	0x1
 7724 35bf C7350000 		.4byte	0x35c7
 7725 35c3 CD350000 		.4byte	0x35cd
 7726 35c7 02       		.uleb128 0x2
 7727 35c8 88530000 		.4byte	0x5388
 7728 35cc 00       		.byte	0
 7729 35cd 2D       		.uleb128 0x2d
 7730 35ce 00000000 		.4byte	.LASF5
 7731 35d2 2B       		.byte	0x2b
 7732 35d3 C803     		.2byte	0x3c8
 7733 35d5 2F       		.byte	0x2f
 7734 35d6 412D0000 		.4byte	0x2d41
 7735 35da 01       		.byte	0x1
 7736 35db 04       		.uleb128 0x4
 7737 35dc 00000000 		.4byte	.LASF526
 7738 35e0 2B       		.byte	0x2b
 7739 35e1 E603     		.2byte	0x3e6
 7740 35e3 07       		.byte	0x7
 7741 35e4 00000000 		.4byte	.LASF527
 7742 35e8 CD350000 		.4byte	0x35cd
 7743 35ec 01       		.byte	0x1
 7744 35ed F5350000 		.4byte	0x35f5
 7745 35f1 FB350000 		.4byte	0x35fb
 7746 35f5 02       		.uleb128 0x2
 7747 35f6 88530000 		.4byte	0x5388
 7748 35fa 00       		.byte	0
 7749 35fb 04       		.uleb128 0x4
 7750 35fc 00000000 		.4byte	.LASF528
 7751 3600 2B       		.byte	0x2b
 7752 3601 EB03     		.2byte	0x3eb
 7753 3603 07       		.byte	0x7
 7754 3604 00000000 		.4byte	.LASF529
 7755 3608 93530000 		.4byte	0x5393
 7756 360c 01       		.byte	0x1
 7757 360d 15360000 		.4byte	0x3615
 7758 3611 1B360000 		.4byte	0x361b
 7759 3615 02       		.uleb128 0x2
 7760 3616 77530000 		.4byte	0x5377
 7761 361a 00       		.byte	0
 7762 361b 04       		.uleb128 0x4
 7763 361c 00000000 		.4byte	.LASF528
 7764 3620 2B       		.byte	0x2b
 7765 3621 F303     		.2byte	0x3f3
 7766 3623 07       		.byte	0x7
 7767 3624 00000000 		.4byte	.LASF530
 7768 3628 45350000 		.4byte	0x3545
AARCH64 GAS  obj/extInstr.s 			page 346


 7769 362c 01       		.byte	0x1
 7770 362d 35360000 		.4byte	0x3635
 7771 3631 40360000 		.4byte	0x3640
 7772 3635 02       		.uleb128 0x2
 7773 3636 77530000 		.4byte	0x5377
 7774 363a 01       		.uleb128 0x1
 7775 363b D43A0000 		.4byte	0x3ad4
 7776 363f 00       		.byte	0
 7777 3640 04       		.uleb128 0x4
 7778 3641 00000000 		.4byte	.LASF531
 7779 3645 2B       		.byte	0x2b
 7780 3646 F903     		.2byte	0x3f9
 7781 3648 07       		.byte	0x7
 7782 3649 00000000 		.4byte	.LASF532
 7783 364d 93530000 		.4byte	0x5393
 7784 3651 01       		.byte	0x1
 7785 3652 5A360000 		.4byte	0x365a
 7786 3656 60360000 		.4byte	0x3660
 7787 365a 02       		.uleb128 0x2
 7788 365b 77530000 		.4byte	0x5377
 7789 365f 00       		.byte	0
 7790 3660 04       		.uleb128 0x4
 7791 3661 00000000 		.4byte	.LASF531
 7792 3665 2B       		.byte	0x2b
 7793 3666 0104     		.2byte	0x401
 7794 3668 07       		.byte	0x7
 7795 3669 00000000 		.4byte	.LASF533
 7796 366d 45350000 		.4byte	0x3545
 7797 3671 01       		.byte	0x1
 7798 3672 7A360000 		.4byte	0x367a
 7799 3676 85360000 		.4byte	0x3685
 7800 367a 02       		.uleb128 0x2
 7801 367b 77530000 		.4byte	0x5377
 7802 367f 01       		.uleb128 0x1
 7803 3680 D43A0000 		.4byte	0x3ad4
 7804 3684 00       		.byte	0
 7805 3685 04       		.uleb128 0x4
 7806 3686 00000000 		.4byte	.LASF131
 7807 368a 2B       		.byte	0x2b
 7808 368b 0704     		.2byte	0x407
 7809 368d 07       		.byte	0x7
 7810 368e 00000000 		.4byte	.LASF534
 7811 3692 9F350000 		.4byte	0x359f
 7812 3696 01       		.byte	0x1
 7813 3697 9F360000 		.4byte	0x369f
 7814 369b AA360000 		.4byte	0x36aa
 7815 369f 02       		.uleb128 0x2
 7816 36a0 88530000 		.4byte	0x5388
 7817 36a4 01       		.uleb128 0x1
 7818 36a5 AA360000 		.4byte	0x36aa
 7819 36a9 00       		.byte	0
 7820 36aa 2D       		.uleb128 0x2d
 7821 36ab 00000000 		.4byte	.LASF424
 7822 36af 2B       		.byte	0x2b
 7823 36b0 C603     		.2byte	0x3c6
 7824 36b2 37       		.byte	0x37
 7825 36b3 352D0000 		.4byte	0x2d35
AARCH64 GAS  obj/extInstr.s 			page 347


 7826 36b7 01       		.byte	0x1
 7827 36b8 04       		.uleb128 0x4
 7828 36b9 00000000 		.4byte	.LASF143
 7829 36bd 2B       		.byte	0x2b
 7830 36be 0C04     		.2byte	0x40c
 7831 36c0 07       		.byte	0x7
 7832 36c1 00000000 		.4byte	.LASF535
 7833 36c5 93530000 		.4byte	0x5393
 7834 36c9 01       		.byte	0x1
 7835 36ca D2360000 		.4byte	0x36d2
 7836 36ce DD360000 		.4byte	0x36dd
 7837 36d2 02       		.uleb128 0x2
 7838 36d3 77530000 		.4byte	0x5377
 7839 36d7 01       		.uleb128 0x1
 7840 36d8 AA360000 		.4byte	0x36aa
 7841 36dc 00       		.byte	0
 7842 36dd 04       		.uleb128 0x4
 7843 36de 00000000 		.4byte	.LASF536
 7844 36e2 2B       		.byte	0x2b
 7845 36e3 1104     		.2byte	0x411
 7846 36e5 07       		.byte	0x7
 7847 36e6 00000000 		.4byte	.LASF537
 7848 36ea 45350000 		.4byte	0x3545
 7849 36ee 01       		.byte	0x1
 7850 36ef F7360000 		.4byte	0x36f7
 7851 36f3 02370000 		.4byte	0x3702
 7852 36f7 02       		.uleb128 0x2
 7853 36f8 88530000 		.4byte	0x5388
 7854 36fc 01       		.uleb128 0x1
 7855 36fd AA360000 		.4byte	0x36aa
 7856 3701 00       		.byte	0
 7857 3702 04       		.uleb128 0x4
 7858 3703 00000000 		.4byte	.LASF538
 7859 3707 2B       		.byte	0x2b
 7860 3708 1604     		.2byte	0x416
 7861 370a 07       		.byte	0x7
 7862 370b 00000000 		.4byte	.LASF539
 7863 370f 93530000 		.4byte	0x5393
 7864 3713 01       		.byte	0x1
 7865 3714 1C370000 		.4byte	0x371c
 7866 3718 27370000 		.4byte	0x3727
 7867 371c 02       		.uleb128 0x2
 7868 371d 77530000 		.4byte	0x5377
 7869 3721 01       		.uleb128 0x1
 7870 3722 AA360000 		.4byte	0x36aa
 7871 3726 00       		.byte	0
 7872 3727 04       		.uleb128 0x4
 7873 3728 00000000 		.4byte	.LASF540
 7874 372c 2B       		.byte	0x2b
 7875 372d 1B04     		.2byte	0x41b
 7876 372f 07       		.byte	0x7
 7877 3730 00000000 		.4byte	.LASF541
 7878 3734 45350000 		.4byte	0x3545
 7879 3738 01       		.byte	0x1
 7880 3739 41370000 		.4byte	0x3741
 7881 373d 4C370000 		.4byte	0x374c
 7882 3741 02       		.uleb128 0x2
AARCH64 GAS  obj/extInstr.s 			page 348


 7883 3742 88530000 		.4byte	0x5388
 7884 3746 01       		.uleb128 0x1
 7885 3747 AA360000 		.4byte	0x36aa
 7886 374b 00       		.byte	0
 7887 374c 04       		.uleb128 0x4
 7888 374d 00000000 		.4byte	.LASF542
 7889 3751 2B       		.byte	0x2b
 7890 3752 2004     		.2byte	0x420
 7891 3754 07       		.byte	0x7
 7892 3755 00000000 		.4byte	.LASF543
 7893 3759 82530000 		.4byte	0x5382
 7894 375d 01       		.byte	0x1
 7895 375e 66370000 		.4byte	0x3766
 7896 3762 6C370000 		.4byte	0x376c
 7897 3766 02       		.uleb128 0x2
 7898 3767 88530000 		.4byte	0x5388
 7899 376b 00       		.byte	0
 7900 376c 0E       		.uleb128 0xe
 7901 376d 00000000 		.4byte	.LASF544
 7902 3771 6C400000 		.4byte	0x406c
 7903 3775 0E       		.uleb128 0xe
 7904 3776 00000000 		.4byte	.LASF545
 7905 377a 41000000 		.4byte	0x41
 7906 377e 00       		.byte	0
 7907 377f 0C       		.uleb128 0xc
 7908 3780 45350000 		.4byte	0x3545
 7909 3784 64       		.uleb128 0x64
 7910 3785 00000000 		.4byte	.LASF546
 7911 3789 08       		.byte	0x8
 7912 378a 2B       		.byte	0x2b
 7913 378b BB03     		.2byte	0x3bb
 7914 378d 0B       		.byte	0xb
 7915 378e E8390000 		.4byte	0x39e8
 7916 3792 65       		.uleb128 0x65
 7917 3793 00000000 		.4byte	.LASF520
 7918 3797 2B       		.byte	0x2b
 7919 3798 BE03     		.2byte	0x3be
 7920 379a 11       		.byte	0x11
 7921 379b 283D0000 		.4byte	0x3d28
 7922 379f 00       		.byte	0
 7923 37a0 02       		.byte	0x2
 7924 37a1 12       		.uleb128 0x12
 7925 37a2 00000000 		.4byte	.LASF521
 7926 37a6 2B       		.byte	0x2b
 7927 37a7 CE03     		.2byte	0x3ce
 7928 37a9 11       		.byte	0x11
 7929 37aa 00000000 		.4byte	.LASF547
 7930 37ae 01       		.byte	0x1
 7931 37af B7370000 		.4byte	0x37b7
 7932 37b3 BD370000 		.4byte	0x37bd
 7933 37b7 02       		.uleb128 0x2
 7934 37b8 99530000 		.4byte	0x5399
 7935 37bc 00       		.byte	0
 7936 37bd 4C       		.uleb128 0x4c
 7937 37be 00000000 		.4byte	.LASF521
 7938 37c2 2B       		.byte	0x2b
 7939 37c3 D203     		.2byte	0x3d2
AARCH64 GAS  obj/extInstr.s 			page 349


 7940 37c5 07       		.byte	0x7
 7941 37c6 00000000 		.4byte	.LASF548
 7942 37ca 01       		.byte	0x1
 7943 37cb D3370000 		.4byte	0x37d3
 7944 37cf DE370000 		.4byte	0x37de
 7945 37d3 02       		.uleb128 0x2
 7946 37d4 99530000 		.4byte	0x5399
 7947 37d8 01       		.uleb128 0x1
 7948 37d9 A4530000 		.4byte	0x53a4
 7949 37dd 00       		.byte	0
 7950 37de 2D       		.uleb128 0x2d
 7951 37df 00000000 		.4byte	.LASF133
 7952 37e3 2B       		.byte	0x2b
 7953 37e4 C703     		.2byte	0x3c7
 7954 37e6 31       		.byte	0x31
 7955 37e7 7F2D0000 		.4byte	0x2d7f
 7956 37eb 01       		.byte	0x1
 7957 37ec 04       		.uleb128 0x4
 7958 37ed 00000000 		.4byte	.LASF524
 7959 37f1 2B       		.byte	0x2b
 7960 37f2 E103     		.2byte	0x3e1
 7961 37f4 07       		.byte	0x7
 7962 37f5 00000000 		.4byte	.LASF549
 7963 37f9 DE370000 		.4byte	0x37de
 7964 37fd 01       		.byte	0x1
 7965 37fe 06380000 		.4byte	0x3806
 7966 3802 0C380000 		.4byte	0x380c
 7967 3806 02       		.uleb128 0x2
 7968 3807 AA530000 		.4byte	0x53aa
 7969 380b 00       		.byte	0
 7970 380c 2D       		.uleb128 0x2d
 7971 380d 00000000 		.4byte	.LASF5
 7972 3811 2B       		.byte	0x2b
 7973 3812 C803     		.2byte	0x3c8
 7974 3814 2F       		.byte	0x2f
 7975 3815 732D0000 		.4byte	0x2d73
 7976 3819 01       		.byte	0x1
 7977 381a 04       		.uleb128 0x4
 7978 381b 00000000 		.4byte	.LASF526
 7979 381f 2B       		.byte	0x2b
 7980 3820 E603     		.2byte	0x3e6
 7981 3822 07       		.byte	0x7
 7982 3823 00000000 		.4byte	.LASF550
 7983 3827 0C380000 		.4byte	0x380c
 7984 382b 01       		.byte	0x1
 7985 382c 34380000 		.4byte	0x3834
 7986 3830 3A380000 		.4byte	0x383a
 7987 3834 02       		.uleb128 0x2
 7988 3835 AA530000 		.4byte	0x53aa
 7989 3839 00       		.byte	0
 7990 383a 04       		.uleb128 0x4
 7991 383b 00000000 		.4byte	.LASF528
 7992 383f 2B       		.byte	0x2b
 7993 3840 EB03     		.2byte	0x3eb
 7994 3842 07       		.byte	0x7
 7995 3843 00000000 		.4byte	.LASF551
 7996 3847 B5530000 		.4byte	0x53b5
AARCH64 GAS  obj/extInstr.s 			page 350


 7997 384b 01       		.byte	0x1
 7998 384c 54380000 		.4byte	0x3854
 7999 3850 5A380000 		.4byte	0x385a
 8000 3854 02       		.uleb128 0x2
 8001 3855 99530000 		.4byte	0x5399
 8002 3859 00       		.byte	0
 8003 385a 04       		.uleb128 0x4
 8004 385b 00000000 		.4byte	.LASF528
 8005 385f 2B       		.byte	0x2b
 8006 3860 F303     		.2byte	0x3f3
 8007 3862 07       		.byte	0x7
 8008 3863 00000000 		.4byte	.LASF552
 8009 3867 84370000 		.4byte	0x3784
 8010 386b 01       		.byte	0x1
 8011 386c 74380000 		.4byte	0x3874
 8012 3870 7F380000 		.4byte	0x387f
 8013 3874 02       		.uleb128 0x2
 8014 3875 99530000 		.4byte	0x5399
 8015 3879 01       		.uleb128 0x1
 8016 387a D43A0000 		.4byte	0x3ad4
 8017 387e 00       		.byte	0
 8018 387f 04       		.uleb128 0x4
 8019 3880 00000000 		.4byte	.LASF531
 8020 3884 2B       		.byte	0x2b
 8021 3885 F903     		.2byte	0x3f9
 8022 3887 07       		.byte	0x7
 8023 3888 00000000 		.4byte	.LASF553
 8024 388c B5530000 		.4byte	0x53b5
 8025 3890 01       		.byte	0x1
 8026 3891 99380000 		.4byte	0x3899
 8027 3895 9F380000 		.4byte	0x389f
 8028 3899 02       		.uleb128 0x2
 8029 389a 99530000 		.4byte	0x5399
 8030 389e 00       		.byte	0
 8031 389f 04       		.uleb128 0x4
 8032 38a0 00000000 		.4byte	.LASF531
 8033 38a4 2B       		.byte	0x2b
 8034 38a5 0104     		.2byte	0x401
 8035 38a7 07       		.byte	0x7
 8036 38a8 00000000 		.4byte	.LASF554
 8037 38ac 84370000 		.4byte	0x3784
 8038 38b0 01       		.byte	0x1
 8039 38b1 B9380000 		.4byte	0x38b9
 8040 38b5 C4380000 		.4byte	0x38c4
 8041 38b9 02       		.uleb128 0x2
 8042 38ba 99530000 		.4byte	0x5399
 8043 38be 01       		.uleb128 0x1
 8044 38bf D43A0000 		.4byte	0x3ad4
 8045 38c3 00       		.byte	0
 8046 38c4 04       		.uleb128 0x4
 8047 38c5 00000000 		.4byte	.LASF131
 8048 38c9 2B       		.byte	0x2b
 8049 38ca 0704     		.2byte	0x407
 8050 38cc 07       		.byte	0x7
 8051 38cd 00000000 		.4byte	.LASF555
 8052 38d1 DE370000 		.4byte	0x37de
 8053 38d5 01       		.byte	0x1
AARCH64 GAS  obj/extInstr.s 			page 351


 8054 38d6 DE380000 		.4byte	0x38de
 8055 38da E9380000 		.4byte	0x38e9
 8056 38de 02       		.uleb128 0x2
 8057 38df AA530000 		.4byte	0x53aa
 8058 38e3 01       		.uleb128 0x1
 8059 38e4 E9380000 		.4byte	0x38e9
 8060 38e8 00       		.byte	0
 8061 38e9 2D       		.uleb128 0x2d
 8062 38ea 00000000 		.4byte	.LASF424
 8063 38ee 2B       		.byte	0x2b
 8064 38ef C603     		.2byte	0x3c6
 8065 38f1 37       		.byte	0x37
 8066 38f2 672D0000 		.4byte	0x2d67
 8067 38f6 01       		.byte	0x1
 8068 38f7 04       		.uleb128 0x4
 8069 38f8 00000000 		.4byte	.LASF143
 8070 38fc 2B       		.byte	0x2b
 8071 38fd 0C04     		.2byte	0x40c
 8072 38ff 07       		.byte	0x7
 8073 3900 00000000 		.4byte	.LASF556
 8074 3904 B5530000 		.4byte	0x53b5
 8075 3908 01       		.byte	0x1
 8076 3909 11390000 		.4byte	0x3911
 8077 390d 1C390000 		.4byte	0x391c
 8078 3911 02       		.uleb128 0x2
 8079 3912 99530000 		.4byte	0x5399
 8080 3916 01       		.uleb128 0x1
 8081 3917 E9380000 		.4byte	0x38e9
 8082 391b 00       		.byte	0
 8083 391c 04       		.uleb128 0x4
 8084 391d 00000000 		.4byte	.LASF536
 8085 3921 2B       		.byte	0x2b
 8086 3922 1104     		.2byte	0x411
 8087 3924 07       		.byte	0x7
 8088 3925 00000000 		.4byte	.LASF557
 8089 3929 84370000 		.4byte	0x3784
 8090 392d 01       		.byte	0x1
 8091 392e 36390000 		.4byte	0x3936
 8092 3932 41390000 		.4byte	0x3941
 8093 3936 02       		.uleb128 0x2
 8094 3937 AA530000 		.4byte	0x53aa
 8095 393b 01       		.uleb128 0x1
 8096 393c E9380000 		.4byte	0x38e9
 8097 3940 00       		.byte	0
 8098 3941 04       		.uleb128 0x4
 8099 3942 00000000 		.4byte	.LASF538
 8100 3946 2B       		.byte	0x2b
 8101 3947 1604     		.2byte	0x416
 8102 3949 07       		.byte	0x7
 8103 394a 00000000 		.4byte	.LASF558
 8104 394e B5530000 		.4byte	0x53b5
 8105 3952 01       		.byte	0x1
 8106 3953 5B390000 		.4byte	0x395b
 8107 3957 66390000 		.4byte	0x3966
 8108 395b 02       		.uleb128 0x2
 8109 395c 99530000 		.4byte	0x5399
 8110 3960 01       		.uleb128 0x1
AARCH64 GAS  obj/extInstr.s 			page 352


 8111 3961 E9380000 		.4byte	0x38e9
 8112 3965 00       		.byte	0
 8113 3966 04       		.uleb128 0x4
 8114 3967 00000000 		.4byte	.LASF540
 8115 396b 2B       		.byte	0x2b
 8116 396c 1B04     		.2byte	0x41b
 8117 396e 07       		.byte	0x7
 8118 396f 00000000 		.4byte	.LASF559
 8119 3973 84370000 		.4byte	0x3784
 8120 3977 01       		.byte	0x1
 8121 3978 80390000 		.4byte	0x3980
 8122 397c 8B390000 		.4byte	0x398b
 8123 3980 02       		.uleb128 0x2
 8124 3981 AA530000 		.4byte	0x53aa
 8125 3985 01       		.uleb128 0x1
 8126 3986 E9380000 		.4byte	0x38e9
 8127 398a 00       		.byte	0
 8128 398b 04       		.uleb128 0x4
 8129 398c 00000000 		.4byte	.LASF542
 8130 3990 2B       		.byte	0x2b
 8131 3991 2004     		.2byte	0x420
 8132 3993 07       		.byte	0x7
 8133 3994 00000000 		.4byte	.LASF560
 8134 3998 A4530000 		.4byte	0x53a4
 8135 399c 01       		.byte	0x1
 8136 399d A5390000 		.4byte	0x39a5
 8137 39a1 AB390000 		.4byte	0x39ab
 8138 39a5 02       		.uleb128 0x2
 8139 39a6 AA530000 		.4byte	0x53aa
 8140 39aa 00       		.byte	0
 8141 39ab 12       		.uleb128 0x12
 8142 39ac 00000000 		.4byte	.LASF561
 8143 39b0 2B       		.byte	0x2b
 8144 39b1 D803     		.2byte	0x3d8
 8145 39b3 09       		.byte	0x9
 8146 39b4 00000000 		.4byte	.LASF562
 8147 39b8 01       		.byte	0x1
 8148 39b9 CA390000 		.4byte	0x39ca
 8149 39bd D5390000 		.4byte	0x39d5
 8150 39c1 0E       		.uleb128 0xe
 8151 39c2 00000000 		.4byte	.LASF563
 8152 39c6 6C400000 		.4byte	0x406c
 8153 39ca 02       		.uleb128 0x2
 8154 39cb 99530000 		.4byte	0x5399
 8155 39cf 01       		.uleb128 0x1
 8156 39d0 B8580000 		.4byte	0x58b8
 8157 39d4 00       		.byte	0
 8158 39d5 0E       		.uleb128 0xe
 8159 39d6 00000000 		.4byte	.LASF544
 8160 39da 283D0000 		.4byte	0x3d28
 8161 39de 0E       		.uleb128 0xe
 8162 39df 00000000 		.4byte	.LASF545
 8163 39e3 41000000 		.4byte	0x41
 8164 39e7 00       		.byte	0
 8165 39e8 0C       		.uleb128 0xc
 8166 39e9 84370000 		.4byte	0x3784
 8167 39ed 14       		.uleb128 0x14
AARCH64 GAS  obj/extInstr.s 			page 353


 8168 39ee 00000000 		.4byte	.LASF564
 8169 39f2 2B       		.byte	0x2b
 8170 39f3 B204     		.2byte	0x4b2
 8171 39f5 05       		.byte	0x5
 8172 39f6 00000000 		.4byte	.LASF565
 8173 39fa E9380000 		.4byte	0x38e9
 8174 39fe 1F3A0000 		.4byte	0x3a1f
 8175 3a02 0E       		.uleb128 0xe
 8176 3a03 00000000 		.4byte	.LASF544
 8177 3a07 283D0000 		.4byte	0x3d28
 8178 3a0b 0E       		.uleb128 0xe
 8179 3a0c 00000000 		.4byte	.LASF545
 8180 3a10 41000000 		.4byte	0x41
 8181 3a14 01       		.uleb128 0x1
 8182 3a15 7B580000 		.4byte	0x587b
 8183 3a19 01       		.uleb128 0x1
 8184 3a1a 7B580000 		.4byte	0x587b
 8185 3a1e 00       		.byte	0
 8186 3a1f 8B01     		.uleb128 0x8b
 8187 3a21 00000000 		.4byte	.LASF566
 8188 3a25 2B       		.byte	0x2b
 8189 3a26 A504     		.2byte	0x4a5
 8190 3a28 05       		.byte	0x5
 8191 3a29 00000000 		.4byte	.LASF567
 8192 3a2d 08430000 		.4byte	0x4308
 8193 3a31 0E       		.uleb128 0xe
 8194 3a32 00000000 		.4byte	.LASF568
 8195 3a36 283D0000 		.4byte	0x3d28
 8196 3a3a 0E       		.uleb128 0xe
 8197 3a3b 00000000 		.4byte	.LASF569
 8198 3a3f 6C400000 		.4byte	0x406c
 8199 3a43 0E       		.uleb128 0xe
 8200 3a44 00000000 		.4byte	.LASF545
 8201 3a48 41000000 		.4byte	0x41
 8202 3a4c 01       		.uleb128 0x1
 8203 3a4d 7B580000 		.4byte	0x587b
 8204 3a51 01       		.uleb128 0x1
 8205 3a52 B8580000 		.4byte	0x58b8
 8206 3a56 00       		.byte	0
 8207 3a57 00       		.byte	0
 8208 3a58 1B       		.uleb128 0x1b
 8209 3a59 10       		.byte	0x10
 8210 3a5a 04       		.byte	0x4
 8211 3a5b 00000000 		.4byte	.LASF570
 8212 3a5f 1B       		.uleb128 0x1b
 8213 3a60 04       		.byte	0x4
 8214 3a61 04       		.byte	0x4
 8215 3a62 00000000 		.4byte	.LASF571
 8216 3a66 1B       		.uleb128 0x1b
 8217 3a67 08       		.byte	0x8
 8218 3a68 04       		.byte	0x4
 8219 3a69 00000000 		.4byte	.LASF572
 8220 3a6d 06       		.uleb128 0x6
 8221 3a6e 00000000 		.4byte	.LASF293
 8222 3a72 2C       		.byte	0x2c
 8223 3a73 D1       		.byte	0xd1
 8224 3a74 1B       		.byte	0x1b
AARCH64 GAS  obj/extInstr.s 			page 354


 8225 3a75 793A0000 		.4byte	0x3a79
 8226 3a79 1B       		.uleb128 0x1b
 8227 3a7a 08       		.byte	0x8
 8228 3a7b 07       		.byte	0x7
 8229 3a7c 00000000 		.4byte	.LASF573
 8230 3a80 0C       		.uleb128 0xc
 8231 3a81 793A0000 		.4byte	0x3a79
 8232 3a85 06       		.uleb128 0x6
 8233 3a86 00000000 		.4byte	.LASF574
 8234 3a8a 2D       		.byte	0x2d
 8235 3a8b 28       		.byte	0x28
 8236 3a8c 1B       		.byte	0x1b
 8237 3a8d 913A0000 		.4byte	0x3a91
 8238 3a91 8C01     		.uleb128 0x8c
 8239 3a93 00000000 		.4byte	.LASF1002
 8240 3a97 20       		.byte	0x20
 8241 3a98 48       		.byte	0x48
 8242 3a99 00       		.byte	0
 8243 3a9a D13A0000 		.4byte	0x3ad1
 8244 3a9e 41       		.uleb128 0x41
 8245 3a9f 00000000 		.4byte	.LASF575
 8246 3aa3 D13A0000 		.4byte	0x3ad1
 8247 3aa7 00       		.byte	0
 8248 3aa8 41       		.uleb128 0x41
 8249 3aa9 00000000 		.4byte	.LASF576
 8250 3aad D13A0000 		.4byte	0x3ad1
 8251 3ab1 08       		.byte	0x8
 8252 3ab2 41       		.uleb128 0x41
 8253 3ab3 00000000 		.4byte	.LASF577
 8254 3ab7 D13A0000 		.4byte	0x3ad1
 8255 3abb 10       		.byte	0x10
 8256 3abc 41       		.uleb128 0x41
 8257 3abd 00000000 		.4byte	.LASF578
 8258 3ac1 D43A0000 		.4byte	0x3ad4
 8259 3ac5 18       		.byte	0x18
 8260 3ac6 41       		.uleb128 0x41
 8261 3ac7 00000000 		.4byte	.LASF579
 8262 3acb D43A0000 		.4byte	0x3ad4
 8263 3acf 1C       		.byte	0x1c
 8264 3ad0 00       		.byte	0
 8265 3ad1 8D01     		.uleb128 0x8d
 8266 3ad3 08       		.byte	0x8
 8267 3ad4 8E01     		.uleb128 0x8e
 8268 3ad6 04       		.byte	0x4
 8269 3ad7 05       		.byte	0x5
 8270 3ad8 696E7400 		.string	"int"
 8271 3adc 0C       		.uleb128 0xc
 8272 3add D43A0000 		.4byte	0x3ad4
 8273 3ae1 06       		.uleb128 0x6
 8274 3ae2 00000000 		.4byte	.LASF580
 8275 3ae6 2E       		.byte	0x2e
 8276 3ae7 14       		.byte	0x14
 8277 3ae8 16       		.byte	0x16
 8278 3ae9 ED3A0000 		.4byte	0x3aed
 8279 3aed 1B       		.uleb128 0x1b
 8280 3aee 04       		.byte	0x4
 8281 3aef 07       		.byte	0x7
AARCH64 GAS  obj/extInstr.s 			page 355


 8282 3af0 00000000 		.4byte	.LASF581
 8283 3af4 45       		.uleb128 0x45
 8284 3af5 08       		.byte	0x8
 8285 3af6 2F       		.byte	0x2f
 8286 3af7 0E       		.byte	0xe
 8287 3af8 01       		.byte	0x1
 8288 3af9 00000000 		.4byte	.LASF789
 8289 3afd 3E3B0000 		.4byte	0x3b3e
 8290 3b01 4B       		.uleb128 0x4b
 8291 3b02 04       		.byte	0x4
 8292 3b03 2F       		.byte	0x2f
 8293 3b04 11       		.byte	0x11
 8294 3b05 03       		.byte	0x3
 8295 3b06 233B0000 		.4byte	0x3b23
 8296 3b0a 1F       		.uleb128 0x1f
 8297 3b0b 00000000 		.4byte	.LASF582
 8298 3b0f 2F       		.byte	0x2f
 8299 3b10 12       		.byte	0x12
 8300 3b11 12       		.byte	0x12
 8301 3b12 ED3A0000 		.4byte	0x3aed
 8302 3b16 1F       		.uleb128 0x1f
 8303 3b17 00000000 		.4byte	.LASF583
 8304 3b1b 2F       		.byte	0x2f
 8305 3b1c 13       		.byte	0x13
 8306 3b1d 0A       		.byte	0xa
 8307 3b1e 3E3B0000 		.4byte	0x3b3e
 8308 3b22 00       		.byte	0
 8309 3b23 08       		.uleb128 0x8
 8310 3b24 00000000 		.4byte	.LASF584
 8311 3b28 2F       		.byte	0x2f
 8312 3b29 0F       		.byte	0xf
 8313 3b2a 07       		.byte	0x7
 8314 3b2b D43A0000 		.4byte	0x3ad4
 8315 3b2f 00       		.byte	0
 8316 3b30 08       		.uleb128 0x8
 8317 3b31 00000000 		.4byte	.LASF585
 8318 3b35 2F       		.byte	0x2f
 8319 3b36 14       		.byte	0x14
 8320 3b37 05       		.byte	0x5
 8321 3b38 013B0000 		.4byte	0x3b01
 8322 3b3c 04       		.byte	0x4
 8323 3b3d 00       		.byte	0
 8324 3b3e 21       		.uleb128 0x21
 8325 3b3f 4E3B0000 		.4byte	0x3b4e
 8326 3b43 4E3B0000 		.4byte	0x3b4e
 8327 3b47 22       		.uleb128 0x22
 8328 3b48 793A0000 		.4byte	0x3a79
 8329 3b4c 03       		.byte	0x3
 8330 3b4d 00       		.byte	0
 8331 3b4e 1B       		.uleb128 0x1b
 8332 3b4f 01       		.byte	0x1
 8333 3b50 08       		.byte	0x8
 8334 3b51 00000000 		.4byte	.LASF586
 8335 3b55 0C       		.uleb128 0xc
 8336 3b56 4E3B0000 		.4byte	0x3b4e
 8337 3b5a 06       		.uleb128 0x6
 8338 3b5b 00000000 		.4byte	.LASF587
AARCH64 GAS  obj/extInstr.s 			page 356


 8339 3b5f 2F       		.byte	0x2f
 8340 3b60 15       		.byte	0x15
 8341 3b61 03       		.byte	0x3
 8342 3b62 F43A0000 		.4byte	0x3af4
 8343 3b66 06       		.uleb128 0x6
 8344 3b67 00000000 		.4byte	.LASF588
 8345 3b6b 30       		.byte	0x30
 8346 3b6c 06       		.byte	0x6
 8347 3b6d 15       		.byte	0x15
 8348 3b6e 5A3B0000 		.4byte	0x3b5a
 8349 3b72 0C       		.uleb128 0xc
 8350 3b73 663B0000 		.4byte	0x3b66
 8351 3b77 06       		.uleb128 0x6
 8352 3b78 00000000 		.4byte	.LASF589
 8353 3b7c 31       		.byte	0x31
 8354 3b7d 05       		.byte	0x5
 8355 3b7e 19       		.byte	0x19
 8356 3b7f 833B0000 		.4byte	0x3b83
 8357 3b83 24       		.uleb128 0x24
 8358 3b84 00000000 		.4byte	.LASF590
 8359 3b88 D8       		.byte	0xd8
 8360 3b89 32       		.byte	0x32
 8361 3b8a 31       		.byte	0x31
 8362 3b8b 08       		.byte	0x8
 8363 3b8c 0A3D0000 		.4byte	0x3d0a
 8364 3b90 08       		.uleb128 0x8
 8365 3b91 00000000 		.4byte	.LASF591
 8366 3b95 32       		.byte	0x32
 8367 3b96 33       		.byte	0x33
 8368 3b97 07       		.byte	0x7
 8369 3b98 D43A0000 		.4byte	0x3ad4
 8370 3b9c 00       		.byte	0
 8371 3b9d 08       		.uleb128 0x8
 8372 3b9e 00000000 		.4byte	.LASF592
 8373 3ba2 32       		.byte	0x32
 8374 3ba3 36       		.byte	0x36
 8375 3ba4 09       		.byte	0x9
 8376 3ba5 6C400000 		.4byte	0x406c
 8377 3ba9 08       		.byte	0x8
 8378 3baa 08       		.uleb128 0x8
 8379 3bab 00000000 		.4byte	.LASF593
 8380 3baf 32       		.byte	0x32
 8381 3bb0 37       		.byte	0x37
 8382 3bb1 09       		.byte	0x9
 8383 3bb2 6C400000 		.4byte	0x406c
 8384 3bb6 10       		.byte	0x10
 8385 3bb7 08       		.uleb128 0x8
 8386 3bb8 00000000 		.4byte	.LASF594
 8387 3bbc 32       		.byte	0x32
 8388 3bbd 38       		.byte	0x38
 8389 3bbe 09       		.byte	0x9
 8390 3bbf 6C400000 		.4byte	0x406c
 8391 3bc3 18       		.byte	0x18
 8392 3bc4 08       		.uleb128 0x8
 8393 3bc5 00000000 		.4byte	.LASF595
 8394 3bc9 32       		.byte	0x32
 8395 3bca 39       		.byte	0x39
AARCH64 GAS  obj/extInstr.s 			page 357


 8396 3bcb 09       		.byte	0x9
 8397 3bcc 6C400000 		.4byte	0x406c
 8398 3bd0 20       		.byte	0x20
 8399 3bd1 08       		.uleb128 0x8
 8400 3bd2 00000000 		.4byte	.LASF596
 8401 3bd6 32       		.byte	0x32
 8402 3bd7 3A       		.byte	0x3a
 8403 3bd8 09       		.byte	0x9
 8404 3bd9 6C400000 		.4byte	0x406c
 8405 3bdd 28       		.byte	0x28
 8406 3bde 08       		.uleb128 0x8
 8407 3bdf 00000000 		.4byte	.LASF597
 8408 3be3 32       		.byte	0x32
 8409 3be4 3B       		.byte	0x3b
 8410 3be5 09       		.byte	0x9
 8411 3be6 6C400000 		.4byte	0x406c
 8412 3bea 30       		.byte	0x30
 8413 3beb 08       		.uleb128 0x8
 8414 3bec 00000000 		.4byte	.LASF598
 8415 3bf0 32       		.byte	0x32
 8416 3bf1 3C       		.byte	0x3c
 8417 3bf2 09       		.byte	0x9
 8418 3bf3 6C400000 		.4byte	0x406c
 8419 3bf7 38       		.byte	0x38
 8420 3bf8 08       		.uleb128 0x8
 8421 3bf9 00000000 		.4byte	.LASF599
 8422 3bfd 32       		.byte	0x32
 8423 3bfe 3D       		.byte	0x3d
 8424 3bff 09       		.byte	0x9
 8425 3c00 6C400000 		.4byte	0x406c
 8426 3c04 40       		.byte	0x40
 8427 3c05 08       		.uleb128 0x8
 8428 3c06 00000000 		.4byte	.LASF600
 8429 3c0a 32       		.byte	0x32
 8430 3c0b 40       		.byte	0x40
 8431 3c0c 09       		.byte	0x9
 8432 3c0d 6C400000 		.4byte	0x406c
 8433 3c11 48       		.byte	0x48
 8434 3c12 08       		.uleb128 0x8
 8435 3c13 00000000 		.4byte	.LASF601
 8436 3c17 32       		.byte	0x32
 8437 3c18 41       		.byte	0x41
 8438 3c19 09       		.byte	0x9
 8439 3c1a 6C400000 		.4byte	0x406c
 8440 3c1e 50       		.byte	0x50
 8441 3c1f 08       		.uleb128 0x8
 8442 3c20 00000000 		.4byte	.LASF602
 8443 3c24 32       		.byte	0x32
 8444 3c25 42       		.byte	0x42
 8445 3c26 09       		.byte	0x9
 8446 3c27 6C400000 		.4byte	0x406c
 8447 3c2b 58       		.byte	0x58
 8448 3c2c 08       		.uleb128 0x8
 8449 3c2d 00000000 		.4byte	.LASF603
 8450 3c31 32       		.byte	0x32
 8451 3c32 44       		.byte	0x44
 8452 3c33 16       		.byte	0x16
AARCH64 GAS  obj/extInstr.s 			page 358


 8453 3c34 B14E0000 		.4byte	0x4eb1
 8454 3c38 60       		.byte	0x60
 8455 3c39 08       		.uleb128 0x8
 8456 3c3a 00000000 		.4byte	.LASF604
 8457 3c3e 32       		.byte	0x32
 8458 3c3f 46       		.byte	0x46
 8459 3c40 14       		.byte	0x14
 8460 3c41 B74E0000 		.4byte	0x4eb7
 8461 3c45 68       		.byte	0x68
 8462 3c46 08       		.uleb128 0x8
 8463 3c47 00000000 		.4byte	.LASF605
 8464 3c4b 32       		.byte	0x32
 8465 3c4c 48       		.byte	0x48
 8466 3c4d 07       		.byte	0x7
 8467 3c4e D43A0000 		.4byte	0x3ad4
 8468 3c52 70       		.byte	0x70
 8469 3c53 08       		.uleb128 0x8
 8470 3c54 00000000 		.4byte	.LASF606
 8471 3c58 32       		.byte	0x32
 8472 3c59 49       		.byte	0x49
 8473 3c5a 07       		.byte	0x7
 8474 3c5b D43A0000 		.4byte	0x3ad4
 8475 3c5f 74       		.byte	0x74
 8476 3c60 08       		.uleb128 0x8
 8477 3c61 00000000 		.4byte	.LASF607
 8478 3c65 32       		.byte	0x32
 8479 3c66 4A       		.byte	0x4a
 8480 3c67 0B       		.byte	0xb
 8481 3c68 44470000 		.4byte	0x4744
 8482 3c6c 78       		.byte	0x78
 8483 3c6d 08       		.uleb128 0x8
 8484 3c6e 00000000 		.4byte	.LASF608
 8485 3c72 32       		.byte	0x32
 8486 3c73 4D       		.byte	0x4d
 8487 3c74 12       		.byte	0x12
 8488 3c75 1C3D0000 		.4byte	0x3d1c
 8489 3c79 80       		.byte	0x80
 8490 3c7a 08       		.uleb128 0x8
 8491 3c7b 00000000 		.4byte	.LASF609
 8492 3c7f 32       		.byte	0x32
 8493 3c80 4E       		.byte	0x4e
 8494 3c81 0F       		.byte	0xf
 8495 3c82 0D460000 		.4byte	0x460d
 8496 3c86 82       		.byte	0x82
 8497 3c87 08       		.uleb128 0x8
 8498 3c88 00000000 		.4byte	.LASF610
 8499 3c8c 32       		.byte	0x32
 8500 3c8d 4F       		.byte	0x4f
 8501 3c8e 08       		.byte	0x8
 8502 3c8f BD4E0000 		.4byte	0x4ebd
 8503 3c93 83       		.byte	0x83
 8504 3c94 08       		.uleb128 0x8
 8505 3c95 00000000 		.4byte	.LASF611
 8506 3c99 32       		.byte	0x32
 8507 3c9a 51       		.byte	0x51
 8508 3c9b 0F       		.byte	0xf
 8509 3c9c CD4E0000 		.4byte	0x4ecd
AARCH64 GAS  obj/extInstr.s 			page 359


 8510 3ca0 88       		.byte	0x88
 8511 3ca1 08       		.uleb128 0x8
 8512 3ca2 00000000 		.4byte	.LASF612
 8513 3ca6 32       		.byte	0x32
 8514 3ca7 59       		.byte	0x59
 8515 3ca8 0D       		.byte	0xd
 8516 3ca9 50470000 		.4byte	0x4750
 8517 3cad 90       		.byte	0x90
 8518 3cae 08       		.uleb128 0x8
 8519 3caf 00000000 		.4byte	.LASF613
 8520 3cb3 32       		.byte	0x32
 8521 3cb4 5B       		.byte	0x5b
 8522 3cb5 17       		.byte	0x17
 8523 3cb6 D84E0000 		.4byte	0x4ed8
 8524 3cba 98       		.byte	0x98
 8525 3cbb 08       		.uleb128 0x8
 8526 3cbc 00000000 		.4byte	.LASF614
 8527 3cc0 32       		.byte	0x32
 8528 3cc1 5C       		.byte	0x5c
 8529 3cc2 19       		.byte	0x19
 8530 3cc3 E34E0000 		.4byte	0x4ee3
 8531 3cc7 A0       		.byte	0xa0
 8532 3cc8 08       		.uleb128 0x8
 8533 3cc9 00000000 		.4byte	.LASF615
 8534 3ccd 32       		.byte	0x32
 8535 3cce 5D       		.byte	0x5d
 8536 3ccf 14       		.byte	0x14
 8537 3cd0 B74E0000 		.4byte	0x4eb7
 8538 3cd4 A8       		.byte	0xa8
 8539 3cd5 08       		.uleb128 0x8
 8540 3cd6 00000000 		.4byte	.LASF616
 8541 3cda 32       		.byte	0x32
 8542 3cdb 5E       		.byte	0x5e
 8543 3cdc 09       		.byte	0x9
 8544 3cdd D13A0000 		.4byte	0x3ad1
 8545 3ce1 B0       		.byte	0xb0
 8546 3ce2 08       		.uleb128 0x8
 8547 3ce3 00000000 		.4byte	.LASF617
 8548 3ce7 32       		.byte	0x32
 8549 3ce8 5F       		.byte	0x5f
 8550 3ce9 0A       		.byte	0xa
 8551 3cea 6D3A0000 		.4byte	0x3a6d
 8552 3cee B8       		.byte	0xb8
 8553 3cef 08       		.uleb128 0x8
 8554 3cf0 00000000 		.4byte	.LASF618
 8555 3cf4 32       		.byte	0x32
 8556 3cf5 60       		.byte	0x60
 8557 3cf6 07       		.byte	0x7
 8558 3cf7 D43A0000 		.4byte	0x3ad4
 8559 3cfb C0       		.byte	0xc0
 8560 3cfc 08       		.uleb128 0x8
 8561 3cfd 00000000 		.4byte	.LASF619
 8562 3d01 32       		.byte	0x32
 8563 3d02 62       		.byte	0x62
 8564 3d03 08       		.byte	0x8
 8565 3d04 E94E0000 		.4byte	0x4ee9
 8566 3d08 C4       		.byte	0xc4
AARCH64 GAS  obj/extInstr.s 			page 360


 8567 3d09 00       		.byte	0
 8568 3d0a 06       		.uleb128 0x6
 8569 3d0b 00000000 		.4byte	.LASF620
 8570 3d0f 33       		.byte	0x33
 8571 3d10 07       		.byte	0x7
 8572 3d11 19       		.byte	0x19
 8573 3d12 833B0000 		.4byte	0x3b83
 8574 3d16 09       		.uleb128 0x9
 8575 3d17 08       		.byte	0x8
 8576 3d18 233D0000 		.4byte	0x3d23
 8577 3d1c 1B       		.uleb128 0x1b
 8578 3d1d 02       		.byte	0x2
 8579 3d1e 07       		.byte	0x7
 8580 3d1f 00000000 		.4byte	.LASF621
 8581 3d23 0C       		.uleb128 0xc
 8582 3d24 1C3D0000 		.4byte	0x3d1c
 8583 3d28 09       		.uleb128 0x9
 8584 3d29 08       		.byte	0x8
 8585 3d2a 553B0000 		.4byte	0x3b55
 8586 3d2e 0C       		.uleb128 0xc
 8587 3d2f 283D0000 		.4byte	0x3d28
 8588 3d33 0B       		.uleb128 0xb
 8589 3d34 00000000 		.4byte	.LASF622
 8590 3d38 34       		.byte	0x34
 8591 3d39 3E01     		.2byte	0x13e
 8592 3d3b 1C       		.byte	0x1c
 8593 3d3c E13A0000 		.4byte	0x3ae1
 8594 3d40 4A3D0000 		.4byte	0x3d4a
 8595 3d44 01       		.uleb128 0x1
 8596 3d45 D43A0000 		.4byte	0x3ad4
 8597 3d49 00       		.byte	0
 8598 3d4a 0B       		.uleb128 0xb
 8599 3d4b 00000000 		.4byte	.LASF623
 8600 3d4f 34       		.byte	0x34
 8601 3d50 D602     		.2byte	0x2d6
 8602 3d52 0F       		.byte	0xf
 8603 3d53 E13A0000 		.4byte	0x3ae1
 8604 3d57 613D0000 		.4byte	0x3d61
 8605 3d5b 01       		.uleb128 0x1
 8606 3d5c 613D0000 		.4byte	0x3d61
 8607 3d60 00       		.byte	0
 8608 3d61 09       		.uleb128 0x9
 8609 3d62 08       		.byte	0x8
 8610 3d63 773B0000 		.4byte	0x3b77
 8611 3d67 0B       		.uleb128 0xb
 8612 3d68 00000000 		.4byte	.LASF624
 8613 3d6c 34       		.byte	0x34
 8614 3d6d F302     		.2byte	0x2f3
 8615 3d6f 11       		.byte	0x11
 8616 3d70 883D0000 		.4byte	0x3d88
 8617 3d74 883D0000 		.4byte	0x3d88
 8618 3d78 01       		.uleb128 0x1
 8619 3d79 883D0000 		.4byte	0x3d88
 8620 3d7d 01       		.uleb128 0x1
 8621 3d7e D43A0000 		.4byte	0x3ad4
 8622 3d82 01       		.uleb128 0x1
 8623 3d83 613D0000 		.4byte	0x3d61
AARCH64 GAS  obj/extInstr.s 			page 361


 8624 3d87 00       		.byte	0
 8625 3d88 09       		.uleb128 0x9
 8626 3d89 08       		.byte	0x8
 8627 3d8a 8E3D0000 		.4byte	0x3d8e
 8628 3d8e 1B       		.uleb128 0x1b
 8629 3d8f 04       		.byte	0x4
 8630 3d90 07       		.byte	0x7
 8631 3d91 00000000 		.4byte	.LASF625
 8632 3d95 0C       		.uleb128 0xc
 8633 3d96 8E3D0000 		.4byte	0x3d8e
 8634 3d9a 0B       		.uleb128 0xb
 8635 3d9b 00000000 		.4byte	.LASF626
 8636 3d9f 34       		.byte	0x34
 8637 3da0 E402     		.2byte	0x2e4
 8638 3da2 0F       		.byte	0xf
 8639 3da3 E13A0000 		.4byte	0x3ae1
 8640 3da7 B63D0000 		.4byte	0x3db6
 8641 3dab 01       		.uleb128 0x1
 8642 3dac 8E3D0000 		.4byte	0x3d8e
 8643 3db0 01       		.uleb128 0x1
 8644 3db1 613D0000 		.4byte	0x3d61
 8645 3db5 00       		.byte	0
 8646 3db6 0B       		.uleb128 0xb
 8647 3db7 00000000 		.4byte	.LASF627
 8648 3dbb 34       		.byte	0x34
 8649 3dbc FA02     		.2byte	0x2fa
 8650 3dbe 0C       		.byte	0xc
 8651 3dbf D43A0000 		.4byte	0x3ad4
 8652 3dc3 D23D0000 		.4byte	0x3dd2
 8653 3dc7 01       		.uleb128 0x1
 8654 3dc8 D23D0000 		.4byte	0x3dd2
 8655 3dcc 01       		.uleb128 0x1
 8656 3dcd 613D0000 		.4byte	0x3d61
 8657 3dd1 00       		.byte	0
 8658 3dd2 09       		.uleb128 0x9
 8659 3dd3 08       		.byte	0x8
 8660 3dd4 953D0000 		.4byte	0x3d95
 8661 3dd8 0B       		.uleb128 0xb
 8662 3dd9 00000000 		.4byte	.LASF628
 8663 3ddd 34       		.byte	0x34
 8664 3dde 3D02     		.2byte	0x23d
 8665 3de0 0C       		.byte	0xc
 8666 3de1 D43A0000 		.4byte	0x3ad4
 8667 3de5 F43D0000 		.4byte	0x3df4
 8668 3de9 01       		.uleb128 0x1
 8669 3dea 613D0000 		.4byte	0x3d61
 8670 3dee 01       		.uleb128 0x1
 8671 3def D43A0000 		.4byte	0x3ad4
 8672 3df3 00       		.byte	0
 8673 3df4 0B       		.uleb128 0xb
 8674 3df5 00000000 		.4byte	.LASF629
 8675 3df9 34       		.byte	0x34
 8676 3dfa 4402     		.2byte	0x244
 8677 3dfc 0C       		.byte	0xc
 8678 3dfd D43A0000 		.4byte	0x3ad4
 8679 3e01 113E0000 		.4byte	0x3e11
 8680 3e05 01       		.uleb128 0x1
AARCH64 GAS  obj/extInstr.s 			page 362


 8681 3e06 613D0000 		.4byte	0x3d61
 8682 3e0a 01       		.uleb128 0x1
 8683 3e0b D23D0000 		.4byte	0x3dd2
 8684 3e0f 38       		.uleb128 0x38
 8685 3e10 00       		.byte	0
 8686 3e11 14       		.uleb128 0x14
 8687 3e12 00000000 		.4byte	.LASF630
 8688 3e16 34       		.byte	0x34
 8689 3e17 8002     		.2byte	0x280
 8690 3e19 0C       		.byte	0xc
 8691 3e1a 00000000 		.4byte	.LASF631
 8692 3e1e D43A0000 		.4byte	0x3ad4
 8693 3e22 323E0000 		.4byte	0x3e32
 8694 3e26 01       		.uleb128 0x1
 8695 3e27 613D0000 		.4byte	0x3d61
 8696 3e2b 01       		.uleb128 0x1
 8697 3e2c D23D0000 		.4byte	0x3dd2
 8698 3e30 38       		.uleb128 0x38
 8699 3e31 00       		.byte	0
 8700 3e32 0B       		.uleb128 0xb
 8701 3e33 00000000 		.4byte	.LASF632
 8702 3e37 34       		.byte	0x34
 8703 3e38 D702     		.2byte	0x2d7
 8704 3e3a 0F       		.byte	0xf
 8705 3e3b E13A0000 		.4byte	0x3ae1
 8706 3e3f 493E0000 		.4byte	0x3e49
 8707 3e43 01       		.uleb128 0x1
 8708 3e44 613D0000 		.4byte	0x3d61
 8709 3e48 00       		.byte	0
 8710 3e49 66       		.uleb128 0x66
 8711 3e4a 00000000 		.4byte	.LASF784
 8712 3e4e 34       		.byte	0x34
 8713 3e4f DD02     		.2byte	0x2dd
 8714 3e51 0F       		.byte	0xf
 8715 3e52 E13A0000 		.4byte	0x3ae1
 8716 3e56 0B       		.uleb128 0xb
 8717 3e57 00000000 		.4byte	.LASF633
 8718 3e5b 34       		.byte	0x34
 8719 3e5c 4901     		.2byte	0x149
 8720 3e5e 1C       		.byte	0x1c
 8721 3e5f 6D3A0000 		.4byte	0x3a6d
 8722 3e63 773E0000 		.4byte	0x3e77
 8723 3e67 01       		.uleb128 0x1
 8724 3e68 283D0000 		.4byte	0x3d28
 8725 3e6c 01       		.uleb128 0x1
 8726 3e6d 6D3A0000 		.4byte	0x3a6d
 8727 3e71 01       		.uleb128 0x1
 8728 3e72 773E0000 		.4byte	0x3e77
 8729 3e76 00       		.byte	0
 8730 3e77 09       		.uleb128 0x9
 8731 3e78 08       		.byte	0x8
 8732 3e79 663B0000 		.4byte	0x3b66
 8733 3e7d 0B       		.uleb128 0xb
 8734 3e7e 00000000 		.4byte	.LASF634
 8735 3e82 34       		.byte	0x34
 8736 3e83 2801     		.2byte	0x128
 8737 3e85 0F       		.byte	0xf
AARCH64 GAS  obj/extInstr.s 			page 363


 8738 3e86 6D3A0000 		.4byte	0x3a6d
 8739 3e8a A33E0000 		.4byte	0x3ea3
 8740 3e8e 01       		.uleb128 0x1
 8741 3e8f 883D0000 		.4byte	0x3d88
 8742 3e93 01       		.uleb128 0x1
 8743 3e94 283D0000 		.4byte	0x3d28
 8744 3e98 01       		.uleb128 0x1
 8745 3e99 6D3A0000 		.4byte	0x3a6d
 8746 3e9d 01       		.uleb128 0x1
 8747 3e9e 773E0000 		.4byte	0x3e77
 8748 3ea2 00       		.byte	0
 8749 3ea3 0B       		.uleb128 0xb
 8750 3ea4 00000000 		.4byte	.LASF635
 8751 3ea8 34       		.byte	0x34
 8752 3ea9 2401     		.2byte	0x124
 8753 3eab 0C       		.byte	0xc
 8754 3eac D43A0000 		.4byte	0x3ad4
 8755 3eb0 BA3E0000 		.4byte	0x3eba
 8756 3eb4 01       		.uleb128 0x1
 8757 3eb5 BA3E0000 		.4byte	0x3eba
 8758 3eb9 00       		.byte	0
 8759 3eba 09       		.uleb128 0x9
 8760 3ebb 08       		.byte	0x8
 8761 3ebc 723B0000 		.4byte	0x3b72
 8762 3ec0 0B       		.uleb128 0xb
 8763 3ec1 00000000 		.4byte	.LASF636
 8764 3ec5 34       		.byte	0x34
 8765 3ec6 5101     		.2byte	0x151
 8766 3ec8 0F       		.byte	0xf
 8767 3ec9 6D3A0000 		.4byte	0x3a6d
 8768 3ecd E63E0000 		.4byte	0x3ee6
 8769 3ed1 01       		.uleb128 0x1
 8770 3ed2 883D0000 		.4byte	0x3d88
 8771 3ed6 01       		.uleb128 0x1
 8772 3ed7 E63E0000 		.4byte	0x3ee6
 8773 3edb 01       		.uleb128 0x1
 8774 3edc 6D3A0000 		.4byte	0x3a6d
 8775 3ee0 01       		.uleb128 0x1
 8776 3ee1 773E0000 		.4byte	0x3e77
 8777 3ee5 00       		.byte	0
 8778 3ee6 09       		.uleb128 0x9
 8779 3ee7 08       		.byte	0x8
 8780 3ee8 283D0000 		.4byte	0x3d28
 8781 3eec 0B       		.uleb128 0xb
 8782 3eed 00000000 		.4byte	.LASF637
 8783 3ef1 34       		.byte	0x34
 8784 3ef2 E502     		.2byte	0x2e5
 8785 3ef4 0F       		.byte	0xf
 8786 3ef5 E13A0000 		.4byte	0x3ae1
 8787 3ef9 083F0000 		.4byte	0x3f08
 8788 3efd 01       		.uleb128 0x1
 8789 3efe 8E3D0000 		.4byte	0x3d8e
 8790 3f02 01       		.uleb128 0x1
 8791 3f03 613D0000 		.4byte	0x3d61
 8792 3f07 00       		.byte	0
 8793 3f08 0B       		.uleb128 0xb
 8794 3f09 00000000 		.4byte	.LASF638
AARCH64 GAS  obj/extInstr.s 			page 364


 8795 3f0d 34       		.byte	0x34
 8796 3f0e EB02     		.2byte	0x2eb
 8797 3f10 0F       		.byte	0xf
 8798 3f11 E13A0000 		.4byte	0x3ae1
 8799 3f15 1F3F0000 		.4byte	0x3f1f
 8800 3f19 01       		.uleb128 0x1
 8801 3f1a 8E3D0000 		.4byte	0x3d8e
 8802 3f1e 00       		.byte	0
 8803 3f1f 0B       		.uleb128 0xb
 8804 3f20 00000000 		.4byte	.LASF639
 8805 3f24 34       		.byte	0x34
 8806 3f25 4E02     		.2byte	0x24e
 8807 3f27 0C       		.byte	0xc
 8808 3f28 D43A0000 		.4byte	0x3ad4
 8809 3f2c 413F0000 		.4byte	0x3f41
 8810 3f30 01       		.uleb128 0x1
 8811 3f31 883D0000 		.4byte	0x3d88
 8812 3f35 01       		.uleb128 0x1
 8813 3f36 6D3A0000 		.4byte	0x3a6d
 8814 3f3a 01       		.uleb128 0x1
 8815 3f3b D23D0000 		.4byte	0x3dd2
 8816 3f3f 38       		.uleb128 0x38
 8817 3f40 00       		.byte	0
 8818 3f41 14       		.uleb128 0x14
 8819 3f42 00000000 		.4byte	.LASF640
 8820 3f46 34       		.byte	0x34
 8821 3f47 8702     		.2byte	0x287
 8822 3f49 0C       		.byte	0xc
 8823 3f4a 00000000 		.4byte	.LASF641
 8824 3f4e D43A0000 		.4byte	0x3ad4
 8825 3f52 623F0000 		.4byte	0x3f62
 8826 3f56 01       		.uleb128 0x1
 8827 3f57 D23D0000 		.4byte	0x3dd2
 8828 3f5b 01       		.uleb128 0x1
 8829 3f5c D23D0000 		.4byte	0x3dd2
 8830 3f60 38       		.uleb128 0x38
 8831 3f61 00       		.byte	0
 8832 3f62 0B       		.uleb128 0xb
 8833 3f63 00000000 		.4byte	.LASF642
 8834 3f67 34       		.byte	0x34
 8835 3f68 0203     		.2byte	0x302
 8836 3f6a 0F       		.byte	0xf
 8837 3f6b E13A0000 		.4byte	0x3ae1
 8838 3f6f 7E3F0000 		.4byte	0x3f7e
 8839 3f73 01       		.uleb128 0x1
 8840 3f74 E13A0000 		.4byte	0x3ae1
 8841 3f78 01       		.uleb128 0x1
 8842 3f79 613D0000 		.4byte	0x3d61
 8843 3f7d 00       		.byte	0
 8844 3f7e 0B       		.uleb128 0xb
 8845 3f7f 00000000 		.4byte	.LASF643
 8846 3f83 34       		.byte	0x34
 8847 3f84 5602     		.2byte	0x256
 8848 3f86 0C       		.byte	0xc
 8849 3f87 D43A0000 		.4byte	0x3ad4
 8850 3f8b 9F3F0000 		.4byte	0x3f9f
 8851 3f8f 01       		.uleb128 0x1
AARCH64 GAS  obj/extInstr.s 			page 365


 8852 3f90 613D0000 		.4byte	0x3d61
 8853 3f94 01       		.uleb128 0x1
 8854 3f95 D23D0000 		.4byte	0x3dd2
 8855 3f99 01       		.uleb128 0x1
 8856 3f9a 853A0000 		.4byte	0x3a85
 8857 3f9e 00       		.byte	0
 8858 3f9f 14       		.uleb128 0x14
 8859 3fa0 00000000 		.4byte	.LASF644
 8860 3fa4 34       		.byte	0x34
 8861 3fa5 B502     		.2byte	0x2b5
 8862 3fa7 0C       		.byte	0xc
 8863 3fa8 00000000 		.4byte	.LASF645
 8864 3fac D43A0000 		.4byte	0x3ad4
 8865 3fb0 C43F0000 		.4byte	0x3fc4
 8866 3fb4 01       		.uleb128 0x1
 8867 3fb5 613D0000 		.4byte	0x3d61
 8868 3fb9 01       		.uleb128 0x1
 8869 3fba D23D0000 		.4byte	0x3dd2
 8870 3fbe 01       		.uleb128 0x1
 8871 3fbf 853A0000 		.4byte	0x3a85
 8872 3fc3 00       		.byte	0
 8873 3fc4 0B       		.uleb128 0xb
 8874 3fc5 00000000 		.4byte	.LASF646
 8875 3fc9 34       		.byte	0x34
 8876 3fca 6302     		.2byte	0x263
 8877 3fcc 0C       		.byte	0xc
 8878 3fcd D43A0000 		.4byte	0x3ad4
 8879 3fd1 EA3F0000 		.4byte	0x3fea
 8880 3fd5 01       		.uleb128 0x1
 8881 3fd6 883D0000 		.4byte	0x3d88
 8882 3fda 01       		.uleb128 0x1
 8883 3fdb 6D3A0000 		.4byte	0x3a6d
 8884 3fdf 01       		.uleb128 0x1
 8885 3fe0 D23D0000 		.4byte	0x3dd2
 8886 3fe4 01       		.uleb128 0x1
 8887 3fe5 853A0000 		.4byte	0x3a85
 8888 3fe9 00       		.byte	0
 8889 3fea 14       		.uleb128 0x14
 8890 3feb 00000000 		.4byte	.LASF647
 8891 3fef 34       		.byte	0x34
 8892 3ff0 BC02     		.2byte	0x2bc
 8893 3ff2 0C       		.byte	0xc
 8894 3ff3 00000000 		.4byte	.LASF648
 8895 3ff7 D43A0000 		.4byte	0x3ad4
 8896 3ffb 0F400000 		.4byte	0x400f
 8897 3fff 01       		.uleb128 0x1
 8898 4000 D23D0000 		.4byte	0x3dd2
 8899 4004 01       		.uleb128 0x1
 8900 4005 D23D0000 		.4byte	0x3dd2
 8901 4009 01       		.uleb128 0x1
 8902 400a 853A0000 		.4byte	0x3a85
 8903 400e 00       		.byte	0
 8904 400f 0B       		.uleb128 0xb
 8905 4010 00000000 		.4byte	.LASF649
 8906 4014 34       		.byte	0x34
 8907 4015 5E02     		.2byte	0x25e
 8908 4017 0C       		.byte	0xc
AARCH64 GAS  obj/extInstr.s 			page 366


 8909 4018 D43A0000 		.4byte	0x3ad4
 8910 401c 2B400000 		.4byte	0x402b
 8911 4020 01       		.uleb128 0x1
 8912 4021 D23D0000 		.4byte	0x3dd2
 8913 4025 01       		.uleb128 0x1
 8914 4026 853A0000 		.4byte	0x3a85
 8915 402a 00       		.byte	0
 8916 402b 14       		.uleb128 0x14
 8917 402c 00000000 		.4byte	.LASF650
 8918 4030 34       		.byte	0x34
 8919 4031 B902     		.2byte	0x2b9
 8920 4033 0C       		.byte	0xc
 8921 4034 00000000 		.4byte	.LASF651
 8922 4038 D43A0000 		.4byte	0x3ad4
 8923 403c 4B400000 		.4byte	0x404b
 8924 4040 01       		.uleb128 0x1
 8925 4041 D23D0000 		.4byte	0x3dd2
 8926 4045 01       		.uleb128 0x1
 8927 4046 853A0000 		.4byte	0x3a85
 8928 404a 00       		.byte	0
 8929 404b 0B       		.uleb128 0xb
 8930 404c 00000000 		.4byte	.LASF652
 8931 4050 34       		.byte	0x34
 8932 4051 2D01     		.2byte	0x12d
 8933 4053 0F       		.byte	0xf
 8934 4054 6D3A0000 		.4byte	0x3a6d
 8935 4058 6C400000 		.4byte	0x406c
 8936 405c 01       		.uleb128 0x1
 8937 405d 6C400000 		.4byte	0x406c
 8938 4061 01       		.uleb128 0x1
 8939 4062 8E3D0000 		.4byte	0x3d8e
 8940 4066 01       		.uleb128 0x1
 8941 4067 773E0000 		.4byte	0x3e77
 8942 406b 00       		.byte	0
 8943 406c 09       		.uleb128 0x9
 8944 406d 08       		.byte	0x8
 8945 406e 4E3B0000 		.4byte	0x3b4e
 8946 4072 0C       		.uleb128 0xc
 8947 4073 6C400000 		.4byte	0x406c
 8948 4077 10       		.uleb128 0x10
 8949 4078 00000000 		.4byte	.LASF653
 8950 407c 34       		.byte	0x34
 8951 407d 61       		.byte	0x61
 8952 407e 11       		.byte	0x11
 8953 407f 883D0000 		.4byte	0x3d88
 8954 4083 92400000 		.4byte	0x4092
 8955 4087 01       		.uleb128 0x1
 8956 4088 883D0000 		.4byte	0x3d88
 8957 408c 01       		.uleb128 0x1
 8958 408d D23D0000 		.4byte	0x3dd2
 8959 4091 00       		.byte	0
 8960 4092 10       		.uleb128 0x10
 8961 4093 00000000 		.4byte	.LASF654
 8962 4097 34       		.byte	0x34
 8963 4098 6A       		.byte	0x6a
 8964 4099 0C       		.byte	0xc
 8965 409a D43A0000 		.4byte	0x3ad4
AARCH64 GAS  obj/extInstr.s 			page 367


 8966 409e AD400000 		.4byte	0x40ad
 8967 40a2 01       		.uleb128 0x1
 8968 40a3 D23D0000 		.4byte	0x3dd2
 8969 40a7 01       		.uleb128 0x1
 8970 40a8 D23D0000 		.4byte	0x3dd2
 8971 40ac 00       		.byte	0
 8972 40ad 10       		.uleb128 0x10
 8973 40ae 00000000 		.4byte	.LASF655
 8974 40b2 34       		.byte	0x34
 8975 40b3 83       		.byte	0x83
 8976 40b4 0C       		.byte	0xc
 8977 40b5 D43A0000 		.4byte	0x3ad4
 8978 40b9 C8400000 		.4byte	0x40c8
 8979 40bd 01       		.uleb128 0x1
 8980 40be D23D0000 		.4byte	0x3dd2
 8981 40c2 01       		.uleb128 0x1
 8982 40c3 D23D0000 		.4byte	0x3dd2
 8983 40c7 00       		.byte	0
 8984 40c8 10       		.uleb128 0x10
 8985 40c9 00000000 		.4byte	.LASF656
 8986 40cd 34       		.byte	0x34
 8987 40ce 57       		.byte	0x57
 8988 40cf 11       		.byte	0x11
 8989 40d0 883D0000 		.4byte	0x3d88
 8990 40d4 E3400000 		.4byte	0x40e3
 8991 40d8 01       		.uleb128 0x1
 8992 40d9 883D0000 		.4byte	0x3d88
 8993 40dd 01       		.uleb128 0x1
 8994 40de D23D0000 		.4byte	0x3dd2
 8995 40e2 00       		.byte	0
 8996 40e3 10       		.uleb128 0x10
 8997 40e4 00000000 		.4byte	.LASF657
 8998 40e8 34       		.byte	0x34
 8999 40e9 BB       		.byte	0xbb
 9000 40ea 0F       		.byte	0xf
 9001 40eb 6D3A0000 		.4byte	0x3a6d
 9002 40ef FE400000 		.4byte	0x40fe
 9003 40f3 01       		.uleb128 0x1
 9004 40f4 D23D0000 		.4byte	0x3dd2
 9005 40f8 01       		.uleb128 0x1
 9006 40f9 D23D0000 		.4byte	0x3dd2
 9007 40fd 00       		.byte	0
 9008 40fe 0B       		.uleb128 0xb
 9009 40ff 00000000 		.4byte	.LASF658
 9010 4103 34       		.byte	0x34
 9011 4104 4203     		.2byte	0x342
 9012 4106 0F       		.byte	0xf
 9013 4107 6D3A0000 		.4byte	0x3a6d
 9014 410b 24410000 		.4byte	0x4124
 9015 410f 01       		.uleb128 0x1
 9016 4110 883D0000 		.4byte	0x3d88
 9017 4114 01       		.uleb128 0x1
 9018 4115 6D3A0000 		.4byte	0x3a6d
 9019 4119 01       		.uleb128 0x1
 9020 411a D23D0000 		.4byte	0x3dd2
 9021 411e 01       		.uleb128 0x1
 9022 411f 24410000 		.4byte	0x4124
AARCH64 GAS  obj/extInstr.s 			page 368


 9023 4123 00       		.byte	0
 9024 4124 09       		.uleb128 0x9
 9025 4125 08       		.byte	0x8
 9026 4126 C7410000 		.4byte	0x41c7
 9027 412a 8F01     		.uleb128 0x8f
 9028 412c 746D00   		.string	"tm"
 9029 412f 38       		.byte	0x38
 9030 4130 35       		.byte	0x35
 9031 4131 07       		.byte	0x7
 9032 4132 08       		.byte	0x8
 9033 4133 C7410000 		.4byte	0x41c7
 9034 4137 08       		.uleb128 0x8
 9035 4138 00000000 		.4byte	.LASF659
 9036 413c 35       		.byte	0x35
 9037 413d 09       		.byte	0x9
 9038 413e 07       		.byte	0x7
 9039 413f D43A0000 		.4byte	0x3ad4
 9040 4143 00       		.byte	0
 9041 4144 08       		.uleb128 0x8
 9042 4145 00000000 		.4byte	.LASF660
 9043 4149 35       		.byte	0x35
 9044 414a 0A       		.byte	0xa
 9045 414b 07       		.byte	0x7
 9046 414c D43A0000 		.4byte	0x3ad4
 9047 4150 04       		.byte	0x4
 9048 4151 08       		.uleb128 0x8
 9049 4152 00000000 		.4byte	.LASF661
 9050 4156 35       		.byte	0x35
 9051 4157 0B       		.byte	0xb
 9052 4158 07       		.byte	0x7
 9053 4159 D43A0000 		.4byte	0x3ad4
 9054 415d 08       		.byte	0x8
 9055 415e 08       		.uleb128 0x8
 9056 415f 00000000 		.4byte	.LASF662
 9057 4163 35       		.byte	0x35
 9058 4164 0C       		.byte	0xc
 9059 4165 07       		.byte	0x7
 9060 4166 D43A0000 		.4byte	0x3ad4
 9061 416a 0C       		.byte	0xc
 9062 416b 08       		.uleb128 0x8
 9063 416c 00000000 		.4byte	.LASF663
 9064 4170 35       		.byte	0x35
 9065 4171 0D       		.byte	0xd
 9066 4172 07       		.byte	0x7
 9067 4173 D43A0000 		.4byte	0x3ad4
 9068 4177 10       		.byte	0x10
 9069 4178 08       		.uleb128 0x8
 9070 4179 00000000 		.4byte	.LASF664
 9071 417d 35       		.byte	0x35
 9072 417e 0E       		.byte	0xe
 9073 417f 07       		.byte	0x7
 9074 4180 D43A0000 		.4byte	0x3ad4
 9075 4184 14       		.byte	0x14
 9076 4185 08       		.uleb128 0x8
 9077 4186 00000000 		.4byte	.LASF665
 9078 418a 35       		.byte	0x35
 9079 418b 0F       		.byte	0xf
AARCH64 GAS  obj/extInstr.s 			page 369


 9080 418c 07       		.byte	0x7
 9081 418d D43A0000 		.4byte	0x3ad4
 9082 4191 18       		.byte	0x18
 9083 4192 08       		.uleb128 0x8
 9084 4193 00000000 		.4byte	.LASF666
 9085 4197 35       		.byte	0x35
 9086 4198 10       		.byte	0x10
 9087 4199 07       		.byte	0x7
 9088 419a D43A0000 		.4byte	0x3ad4
 9089 419e 1C       		.byte	0x1c
 9090 419f 08       		.uleb128 0x8
 9091 41a0 00000000 		.4byte	.LASF667
 9092 41a4 35       		.byte	0x35
 9093 41a5 11       		.byte	0x11
 9094 41a6 07       		.byte	0x7
 9095 41a7 D43A0000 		.4byte	0x3ad4
 9096 41ab 20       		.byte	0x20
 9097 41ac 08       		.uleb128 0x8
 9098 41ad 00000000 		.4byte	.LASF668
 9099 41b1 35       		.byte	0x35
 9100 41b2 14       		.byte	0x14
 9101 41b3 0C       		.byte	0xc
 9102 41b4 08430000 		.4byte	0x4308
 9103 41b8 28       		.byte	0x28
 9104 41b9 08       		.uleb128 0x8
 9105 41ba 00000000 		.4byte	.LASF669
 9106 41be 35       		.byte	0x35
 9107 41bf 15       		.byte	0x15
 9108 41c0 0F       		.byte	0xf
 9109 41c1 283D0000 		.4byte	0x3d28
 9110 41c5 30       		.byte	0x30
 9111 41c6 00       		.byte	0
 9112 41c7 0C       		.uleb128 0xc
 9113 41c8 2A410000 		.4byte	0x412a
 9114 41cc 10       		.uleb128 0x10
 9115 41cd 00000000 		.4byte	.LASF670
 9116 41d1 34       		.byte	0x34
 9117 41d2 DE       		.byte	0xde
 9118 41d3 0F       		.byte	0xf
 9119 41d4 6D3A0000 		.4byte	0x3a6d
 9120 41d8 E2410000 		.4byte	0x41e2
 9121 41dc 01       		.uleb128 0x1
 9122 41dd D23D0000 		.4byte	0x3dd2
 9123 41e1 00       		.byte	0
 9124 41e2 10       		.uleb128 0x10
 9125 41e3 00000000 		.4byte	.LASF671
 9126 41e7 34       		.byte	0x34
 9127 41e8 65       		.byte	0x65
 9128 41e9 11       		.byte	0x11
 9129 41ea 883D0000 		.4byte	0x3d88
 9130 41ee 02420000 		.4byte	0x4202
 9131 41f2 01       		.uleb128 0x1
 9132 41f3 883D0000 		.4byte	0x3d88
 9133 41f7 01       		.uleb128 0x1
 9134 41f8 D23D0000 		.4byte	0x3dd2
 9135 41fc 01       		.uleb128 0x1
 9136 41fd 6D3A0000 		.4byte	0x3a6d
AARCH64 GAS  obj/extInstr.s 			page 370


 9137 4201 00       		.byte	0
 9138 4202 10       		.uleb128 0x10
 9139 4203 00000000 		.4byte	.LASF672
 9140 4207 34       		.byte	0x34
 9141 4208 6D       		.byte	0x6d
 9142 4209 0C       		.byte	0xc
 9143 420a D43A0000 		.4byte	0x3ad4
 9144 420e 22420000 		.4byte	0x4222
 9145 4212 01       		.uleb128 0x1
 9146 4213 D23D0000 		.4byte	0x3dd2
 9147 4217 01       		.uleb128 0x1
 9148 4218 D23D0000 		.4byte	0x3dd2
 9149 421c 01       		.uleb128 0x1
 9150 421d 6D3A0000 		.4byte	0x3a6d
 9151 4221 00       		.byte	0
 9152 4222 10       		.uleb128 0x10
 9153 4223 00000000 		.4byte	.LASF673
 9154 4227 34       		.byte	0x34
 9155 4228 5C       		.byte	0x5c
 9156 4229 11       		.byte	0x11
 9157 422a 883D0000 		.4byte	0x3d88
 9158 422e 42420000 		.4byte	0x4242
 9159 4232 01       		.uleb128 0x1
 9160 4233 883D0000 		.4byte	0x3d88
 9161 4237 01       		.uleb128 0x1
 9162 4238 D23D0000 		.4byte	0x3dd2
 9163 423c 01       		.uleb128 0x1
 9164 423d 6D3A0000 		.4byte	0x3a6d
 9165 4241 00       		.byte	0
 9166 4242 0B       		.uleb128 0xb
 9167 4243 00000000 		.4byte	.LASF674
 9168 4247 34       		.byte	0x34
 9169 4248 5701     		.2byte	0x157
 9170 424a 0F       		.byte	0xf
 9171 424b 6D3A0000 		.4byte	0x3a6d
 9172 424f 68420000 		.4byte	0x4268
 9173 4253 01       		.uleb128 0x1
 9174 4254 6C400000 		.4byte	0x406c
 9175 4258 01       		.uleb128 0x1
 9176 4259 68420000 		.4byte	0x4268
 9177 425d 01       		.uleb128 0x1
 9178 425e 6D3A0000 		.4byte	0x3a6d
 9179 4262 01       		.uleb128 0x1
 9180 4263 773E0000 		.4byte	0x3e77
 9181 4267 00       		.byte	0
 9182 4268 09       		.uleb128 0x9
 9183 4269 08       		.byte	0x8
 9184 426a D23D0000 		.4byte	0x3dd2
 9185 426e 10       		.uleb128 0x10
 9186 426f 00000000 		.4byte	.LASF675
 9187 4273 34       		.byte	0x34
 9188 4274 BF       		.byte	0xbf
 9189 4275 0F       		.byte	0xf
 9190 4276 6D3A0000 		.4byte	0x3a6d
 9191 427a 89420000 		.4byte	0x4289
 9192 427e 01       		.uleb128 0x1
 9193 427f D23D0000 		.4byte	0x3dd2
AARCH64 GAS  obj/extInstr.s 			page 371


 9194 4283 01       		.uleb128 0x1
 9195 4284 D23D0000 		.4byte	0x3dd2
 9196 4288 00       		.byte	0
 9197 4289 0B       		.uleb128 0xb
 9198 428a 00000000 		.4byte	.LASF676
 9199 428e 34       		.byte	0x34
 9200 428f 7901     		.2byte	0x179
 9201 4291 0F       		.byte	0xf
 9202 4292 663A0000 		.4byte	0x3a66
 9203 4296 A5420000 		.4byte	0x42a5
 9204 429a 01       		.uleb128 0x1
 9205 429b D23D0000 		.4byte	0x3dd2
 9206 429f 01       		.uleb128 0x1
 9207 42a0 A5420000 		.4byte	0x42a5
 9208 42a4 00       		.byte	0
 9209 42a5 09       		.uleb128 0x9
 9210 42a6 08       		.byte	0x8
 9211 42a7 883D0000 		.4byte	0x3d88
 9212 42ab 0B       		.uleb128 0xb
 9213 42ac 00000000 		.4byte	.LASF677
 9214 42b0 34       		.byte	0x34
 9215 42b1 7E01     		.2byte	0x17e
 9216 42b3 0E       		.byte	0xe
 9217 42b4 5F3A0000 		.4byte	0x3a5f
 9218 42b8 C7420000 		.4byte	0x42c7
 9219 42bc 01       		.uleb128 0x1
 9220 42bd D23D0000 		.4byte	0x3dd2
 9221 42c1 01       		.uleb128 0x1
 9222 42c2 A5420000 		.4byte	0x42a5
 9223 42c6 00       		.byte	0
 9224 42c7 10       		.uleb128 0x10
 9225 42c8 00000000 		.4byte	.LASF678
 9226 42cc 34       		.byte	0x34
 9227 42cd D9       		.byte	0xd9
 9228 42ce 11       		.byte	0x11
 9229 42cf 883D0000 		.4byte	0x3d88
 9230 42d3 E7420000 		.4byte	0x42e7
 9231 42d7 01       		.uleb128 0x1
 9232 42d8 883D0000 		.4byte	0x3d88
 9233 42dc 01       		.uleb128 0x1
 9234 42dd D23D0000 		.4byte	0x3dd2
 9235 42e1 01       		.uleb128 0x1
 9236 42e2 A5420000 		.4byte	0x42a5
 9237 42e6 00       		.byte	0
 9238 42e7 0B       		.uleb128 0xb
 9239 42e8 00000000 		.4byte	.LASF679
 9240 42ec 34       		.byte	0x34
 9241 42ed AC01     		.2byte	0x1ac
 9242 42ef 11       		.byte	0x11
 9243 42f0 08430000 		.4byte	0x4308
 9244 42f4 08430000 		.4byte	0x4308
 9245 42f8 01       		.uleb128 0x1
 9246 42f9 D23D0000 		.4byte	0x3dd2
 9247 42fd 01       		.uleb128 0x1
 9248 42fe A5420000 		.4byte	0x42a5
 9249 4302 01       		.uleb128 0x1
 9250 4303 D43A0000 		.4byte	0x3ad4
AARCH64 GAS  obj/extInstr.s 			page 372


 9251 4307 00       		.byte	0
 9252 4308 1B       		.uleb128 0x1b
 9253 4309 08       		.byte	0x8
 9254 430a 05       		.byte	0x5
 9255 430b 00000000 		.4byte	.LASF680
 9256 430f 0B       		.uleb128 0xb
 9257 4310 00000000 		.4byte	.LASF681
 9258 4314 34       		.byte	0x34
 9259 4315 B101     		.2byte	0x1b1
 9260 4317 1A       		.byte	0x1a
 9261 4318 793A0000 		.4byte	0x3a79
 9262 431c 30430000 		.4byte	0x4330
 9263 4320 01       		.uleb128 0x1
 9264 4321 D23D0000 		.4byte	0x3dd2
 9265 4325 01       		.uleb128 0x1
 9266 4326 A5420000 		.4byte	0x42a5
 9267 432a 01       		.uleb128 0x1
 9268 432b D43A0000 		.4byte	0x3ad4
 9269 432f 00       		.byte	0
 9270 4330 10       		.uleb128 0x10
 9271 4331 00000000 		.4byte	.LASF682
 9272 4335 34       		.byte	0x34
 9273 4336 87       		.byte	0x87
 9274 4337 0F       		.byte	0xf
 9275 4338 6D3A0000 		.4byte	0x3a6d
 9276 433c 50430000 		.4byte	0x4350
 9277 4340 01       		.uleb128 0x1
 9278 4341 883D0000 		.4byte	0x3d88
 9279 4345 01       		.uleb128 0x1
 9280 4346 D23D0000 		.4byte	0x3dd2
 9281 434a 01       		.uleb128 0x1
 9282 434b 6D3A0000 		.4byte	0x3a6d
 9283 434f 00       		.byte	0
 9284 4350 0B       		.uleb128 0xb
 9285 4351 00000000 		.4byte	.LASF683
 9286 4355 34       		.byte	0x34
 9287 4356 4401     		.2byte	0x144
 9288 4358 1C       		.byte	0x1c
 9289 4359 D43A0000 		.4byte	0x3ad4
 9290 435d 67430000 		.4byte	0x4367
 9291 4361 01       		.uleb128 0x1
 9292 4362 E13A0000 		.4byte	0x3ae1
 9293 4366 00       		.byte	0
 9294 4367 0B       		.uleb128 0xb
 9295 4368 00000000 		.4byte	.LASF684
 9296 436c 34       		.byte	0x34
 9297 436d 0201     		.2byte	0x102
 9298 436f 0C       		.byte	0xc
 9299 4370 D43A0000 		.4byte	0x3ad4
 9300 4374 88430000 		.4byte	0x4388
 9301 4378 01       		.uleb128 0x1
 9302 4379 D23D0000 		.4byte	0x3dd2
 9303 437d 01       		.uleb128 0x1
 9304 437e D23D0000 		.4byte	0x3dd2
 9305 4382 01       		.uleb128 0x1
 9306 4383 6D3A0000 		.4byte	0x3a6d
 9307 4387 00       		.byte	0
AARCH64 GAS  obj/extInstr.s 			page 373


 9308 4388 0B       		.uleb128 0xb
 9309 4389 00000000 		.4byte	.LASF685
 9310 438d 34       		.byte	0x34
 9311 438e 0601     		.2byte	0x106
 9312 4390 11       		.byte	0x11
 9313 4391 883D0000 		.4byte	0x3d88
 9314 4395 A9430000 		.4byte	0x43a9
 9315 4399 01       		.uleb128 0x1
 9316 439a 883D0000 		.4byte	0x3d88
 9317 439e 01       		.uleb128 0x1
 9318 439f D23D0000 		.4byte	0x3dd2
 9319 43a3 01       		.uleb128 0x1
 9320 43a4 6D3A0000 		.4byte	0x3a6d
 9321 43a8 00       		.byte	0
 9322 43a9 0B       		.uleb128 0xb
 9323 43aa 00000000 		.4byte	.LASF686
 9324 43ae 34       		.byte	0x34
 9325 43af 0B01     		.2byte	0x10b
 9326 43b1 11       		.byte	0x11
 9327 43b2 883D0000 		.4byte	0x3d88
 9328 43b6 CA430000 		.4byte	0x43ca
 9329 43ba 01       		.uleb128 0x1
 9330 43bb 883D0000 		.4byte	0x3d88
 9331 43bf 01       		.uleb128 0x1
 9332 43c0 D23D0000 		.4byte	0x3dd2
 9333 43c4 01       		.uleb128 0x1
 9334 43c5 6D3A0000 		.4byte	0x3a6d
 9335 43c9 00       		.byte	0
 9336 43ca 0B       		.uleb128 0xb
 9337 43cb 00000000 		.4byte	.LASF687
 9338 43cf 34       		.byte	0x34
 9339 43d0 0F01     		.2byte	0x10f
 9340 43d2 11       		.byte	0x11
 9341 43d3 883D0000 		.4byte	0x3d88
 9342 43d7 EB430000 		.4byte	0x43eb
 9343 43db 01       		.uleb128 0x1
 9344 43dc 883D0000 		.4byte	0x3d88
 9345 43e0 01       		.uleb128 0x1
 9346 43e1 8E3D0000 		.4byte	0x3d8e
 9347 43e5 01       		.uleb128 0x1
 9348 43e6 6D3A0000 		.4byte	0x3a6d
 9349 43ea 00       		.byte	0
 9350 43eb 0B       		.uleb128 0xb
 9351 43ec 00000000 		.4byte	.LASF688
 9352 43f0 34       		.byte	0x34
 9353 43f1 4B02     		.2byte	0x24b
 9354 43f3 0C       		.byte	0xc
 9355 43f4 D43A0000 		.4byte	0x3ad4
 9356 43f8 03440000 		.4byte	0x4403
 9357 43fc 01       		.uleb128 0x1
 9358 43fd D23D0000 		.4byte	0x3dd2
 9359 4401 38       		.uleb128 0x38
 9360 4402 00       		.byte	0
 9361 4403 14       		.uleb128 0x14
 9362 4404 00000000 		.4byte	.LASF689
 9363 4408 34       		.byte	0x34
 9364 4409 8402     		.2byte	0x284
AARCH64 GAS  obj/extInstr.s 			page 374


 9365 440b 0C       		.byte	0xc
 9366 440c 00000000 		.4byte	.LASF690
 9367 4410 D43A0000 		.4byte	0x3ad4
 9368 4414 1F440000 		.4byte	0x441f
 9369 4418 01       		.uleb128 0x1
 9370 4419 D23D0000 		.4byte	0x3dd2
 9371 441d 38       		.uleb128 0x38
 9372 441e 00       		.byte	0
 9373 441f 18       		.uleb128 0x18
 9374 4420 00000000 		.4byte	.LASF691
 9375 4424 34       		.byte	0x34
 9376 4425 A1       		.byte	0xa1
 9377 4426 1D       		.byte	0x1d
 9378 4427 00000000 		.4byte	.LASF691
 9379 442b D23D0000 		.4byte	0x3dd2
 9380 442f 3E440000 		.4byte	0x443e
 9381 4433 01       		.uleb128 0x1
 9382 4434 D23D0000 		.4byte	0x3dd2
 9383 4438 01       		.uleb128 0x1
 9384 4439 8E3D0000 		.4byte	0x3d8e
 9385 443d 00       		.byte	0
 9386 443e 18       		.uleb128 0x18
 9387 443f 00000000 		.4byte	.LASF691
 9388 4443 34       		.byte	0x34
 9389 4444 9F       		.byte	0x9f
 9390 4445 17       		.byte	0x17
 9391 4446 00000000 		.4byte	.LASF691
 9392 444a 883D0000 		.4byte	0x3d88
 9393 444e 5D440000 		.4byte	0x445d
 9394 4452 01       		.uleb128 0x1
 9395 4453 883D0000 		.4byte	0x3d88
 9396 4457 01       		.uleb128 0x1
 9397 4458 8E3D0000 		.4byte	0x3d8e
 9398 445c 00       		.byte	0
 9399 445d 18       		.uleb128 0x18
 9400 445e 00000000 		.4byte	.LASF692
 9401 4462 34       		.byte	0x34
 9402 4463 C5       		.byte	0xc5
 9403 4464 1D       		.byte	0x1d
 9404 4465 00000000 		.4byte	.LASF692
 9405 4469 D23D0000 		.4byte	0x3dd2
 9406 446d 7C440000 		.4byte	0x447c
 9407 4471 01       		.uleb128 0x1
 9408 4472 D23D0000 		.4byte	0x3dd2
 9409 4476 01       		.uleb128 0x1
 9410 4477 D23D0000 		.4byte	0x3dd2
 9411 447b 00       		.byte	0
 9412 447c 18       		.uleb128 0x18
 9413 447d 00000000 		.4byte	.LASF692
 9414 4481 34       		.byte	0x34
 9415 4482 C3       		.byte	0xc3
 9416 4483 17       		.byte	0x17
 9417 4484 00000000 		.4byte	.LASF692
 9418 4488 883D0000 		.4byte	0x3d88
 9419 448c 9B440000 		.4byte	0x449b
 9420 4490 01       		.uleb128 0x1
 9421 4491 883D0000 		.4byte	0x3d88
AARCH64 GAS  obj/extInstr.s 			page 375


 9422 4495 01       		.uleb128 0x1
 9423 4496 D23D0000 		.4byte	0x3dd2
 9424 449a 00       		.byte	0
 9425 449b 18       		.uleb128 0x18
 9426 449c 00000000 		.4byte	.LASF693
 9427 44a0 34       		.byte	0x34
 9428 44a1 AB       		.byte	0xab
 9429 44a2 1D       		.byte	0x1d
 9430 44a3 00000000 		.4byte	.LASF693
 9431 44a7 D23D0000 		.4byte	0x3dd2
 9432 44ab BA440000 		.4byte	0x44ba
 9433 44af 01       		.uleb128 0x1
 9434 44b0 D23D0000 		.4byte	0x3dd2
 9435 44b4 01       		.uleb128 0x1
 9436 44b5 8E3D0000 		.4byte	0x3d8e
 9437 44b9 00       		.byte	0
 9438 44ba 18       		.uleb128 0x18
 9439 44bb 00000000 		.4byte	.LASF693
 9440 44bf 34       		.byte	0x34
 9441 44c0 A9       		.byte	0xa9
 9442 44c1 17       		.byte	0x17
 9443 44c2 00000000 		.4byte	.LASF693
 9444 44c6 883D0000 		.4byte	0x3d88
 9445 44ca D9440000 		.4byte	0x44d9
 9446 44ce 01       		.uleb128 0x1
 9447 44cf 883D0000 		.4byte	0x3d88
 9448 44d3 01       		.uleb128 0x1
 9449 44d4 8E3D0000 		.4byte	0x3d8e
 9450 44d8 00       		.byte	0
 9451 44d9 18       		.uleb128 0x18
 9452 44da 00000000 		.4byte	.LASF694
 9453 44de 34       		.byte	0x34
 9454 44df D0       		.byte	0xd0
 9455 44e0 1D       		.byte	0x1d
 9456 44e1 00000000 		.4byte	.LASF694
 9457 44e5 D23D0000 		.4byte	0x3dd2
 9458 44e9 F8440000 		.4byte	0x44f8
 9459 44ed 01       		.uleb128 0x1
 9460 44ee D23D0000 		.4byte	0x3dd2
 9461 44f2 01       		.uleb128 0x1
 9462 44f3 D23D0000 		.4byte	0x3dd2
 9463 44f7 00       		.byte	0
 9464 44f8 18       		.uleb128 0x18
 9465 44f9 00000000 		.4byte	.LASF694
 9466 44fd 34       		.byte	0x34
 9467 44fe CE       		.byte	0xce
 9468 44ff 17       		.byte	0x17
 9469 4500 00000000 		.4byte	.LASF694
 9470 4504 883D0000 		.4byte	0x3d88
 9471 4508 17450000 		.4byte	0x4517
 9472 450c 01       		.uleb128 0x1
 9473 450d 883D0000 		.4byte	0x3d88
 9474 4511 01       		.uleb128 0x1
 9475 4512 D23D0000 		.4byte	0x3dd2
 9476 4516 00       		.byte	0
 9477 4517 18       		.uleb128 0x18
 9478 4518 00000000 		.4byte	.LASF695
AARCH64 GAS  obj/extInstr.s 			page 376


 9479 451c 34       		.byte	0x34
 9480 451d F9       		.byte	0xf9
 9481 451e 1D       		.byte	0x1d
 9482 451f 00000000 		.4byte	.LASF695
 9483 4523 D23D0000 		.4byte	0x3dd2
 9484 4527 3B450000 		.4byte	0x453b
 9485 452b 01       		.uleb128 0x1
 9486 452c D23D0000 		.4byte	0x3dd2
 9487 4530 01       		.uleb128 0x1
 9488 4531 8E3D0000 		.4byte	0x3d8e
 9489 4535 01       		.uleb128 0x1
 9490 4536 6D3A0000 		.4byte	0x3a6d
 9491 453a 00       		.byte	0
 9492 453b 18       		.uleb128 0x18
 9493 453c 00000000 		.4byte	.LASF695
 9494 4540 34       		.byte	0x34
 9495 4541 F7       		.byte	0xf7
 9496 4542 17       		.byte	0x17
 9497 4543 00000000 		.4byte	.LASF695
 9498 4547 883D0000 		.4byte	0x3d88
 9499 454b 5F450000 		.4byte	0x455f
 9500 454f 01       		.uleb128 0x1
 9501 4550 883D0000 		.4byte	0x3d88
 9502 4554 01       		.uleb128 0x1
 9503 4555 8E3D0000 		.4byte	0x3d8e
 9504 4559 01       		.uleb128 0x1
 9505 455a 6D3A0000 		.4byte	0x3a6d
 9506 455e 00       		.byte	0
 9507 455f 0B       		.uleb128 0xb
 9508 4560 00000000 		.4byte	.LASF696
 9509 4564 34       		.byte	0x34
 9510 4565 8001     		.2byte	0x180
 9511 4567 14       		.byte	0x14
 9512 4568 583A0000 		.4byte	0x3a58
 9513 456c 7B450000 		.4byte	0x457b
 9514 4570 01       		.uleb128 0x1
 9515 4571 D23D0000 		.4byte	0x3dd2
 9516 4575 01       		.uleb128 0x1
 9517 4576 A5420000 		.4byte	0x42a5
 9518 457a 00       		.byte	0
 9519 457b 0B       		.uleb128 0xb
 9520 457c 00000000 		.4byte	.LASF697
 9521 4580 34       		.byte	0x34
 9522 4581 B901     		.2byte	0x1b9
 9523 4583 16       		.byte	0x16
 9524 4584 9C450000 		.4byte	0x459c
 9525 4588 9C450000 		.4byte	0x459c
 9526 458c 01       		.uleb128 0x1
 9527 458d D23D0000 		.4byte	0x3dd2
 9528 4591 01       		.uleb128 0x1
 9529 4592 A5420000 		.4byte	0x42a5
 9530 4596 01       		.uleb128 0x1
 9531 4597 D43A0000 		.4byte	0x3ad4
 9532 459b 00       		.byte	0
 9533 459c 1B       		.uleb128 0x1b
 9534 459d 08       		.byte	0x8
 9535 459e 05       		.byte	0x5
AARCH64 GAS  obj/extInstr.s 			page 377


 9536 459f 00000000 		.4byte	.LASF698
 9537 45a3 0B       		.uleb128 0xb
 9538 45a4 00000000 		.4byte	.LASF699
 9539 45a8 34       		.byte	0x34
 9540 45a9 C001     		.2byte	0x1c0
 9541 45ab 1F       		.byte	0x1f
 9542 45ac C4450000 		.4byte	0x45c4
 9543 45b0 C4450000 		.4byte	0x45c4
 9544 45b4 01       		.uleb128 0x1
 9545 45b5 D23D0000 		.4byte	0x3dd2
 9546 45b9 01       		.uleb128 0x1
 9547 45ba A5420000 		.4byte	0x42a5
 9548 45be 01       		.uleb128 0x1
 9549 45bf D43A0000 		.4byte	0x3ad4
 9550 45c3 00       		.byte	0
 9551 45c4 1B       		.uleb128 0x1b
 9552 45c5 08       		.byte	0x8
 9553 45c6 07       		.byte	0x7
 9554 45c7 00000000 		.4byte	.LASF700
 9555 45cb 9001     		.uleb128 0x90
 9556 45cd 00000000 		.4byte	.LASF1003
 9557 45d1 09       		.uleb128 0x9
 9558 45d2 08       		.byte	0x8
 9559 45d3 801E0000 		.4byte	0x1e80
 9560 45d7 09       		.uleb128 0x9
 9561 45d8 08       		.byte	0x8
 9562 45d9 49200000 		.4byte	0x2049
 9563 45dd 11       		.uleb128 0x11
 9564 45de 08       		.byte	0x8
 9565 45df 49200000 		.4byte	0x2049
 9566 45e3 46       		.uleb128 0x46
 9567 45e4 08       		.byte	0x8
 9568 45e5 801E0000 		.4byte	0x1e80
 9569 45e9 11       		.uleb128 0x11
 9570 45ea 08       		.byte	0x8
 9571 45eb 801E0000 		.4byte	0x1e80
 9572 45ef 1B       		.uleb128 0x1b
 9573 45f0 01       		.byte	0x1
 9574 45f1 02       		.byte	0x2
 9575 45f2 00000000 		.4byte	.LASF701
 9576 45f6 0C       		.uleb128 0xc
 9577 45f7 EF450000 		.4byte	0x45ef
 9578 45fb 09       		.uleb128 0x9
 9579 45fc 08       		.byte	0x8
 9580 45fd 87200000 		.4byte	0x2087
 9581 4601 1B       		.uleb128 0x1b
 9582 4602 01       		.byte	0x1
 9583 4603 08       		.byte	0x8
 9584 4604 00000000 		.4byte	.LASF702
 9585 4608 0C       		.uleb128 0xc
 9586 4609 01460000 		.4byte	0x4601
 9587 460d 1B       		.uleb128 0x1b
 9588 460e 01       		.byte	0x1
 9589 460f 06       		.byte	0x6
 9590 4610 00000000 		.4byte	.LASF703
 9591 4614 1B       		.uleb128 0x1b
 9592 4615 02       		.byte	0x2
AARCH64 GAS  obj/extInstr.s 			page 378


 9593 4616 05       		.byte	0x5
 9594 4617 00000000 		.4byte	.LASF704
 9595 461b 1B       		.uleb128 0x1b
 9596 461c 02       		.byte	0x2
 9597 461d 10       		.byte	0x10
 9598 461e 00000000 		.4byte	.LASF705
 9599 4622 1B       		.uleb128 0x1b
 9600 4623 04       		.byte	0x4
 9601 4624 10       		.byte	0x10
 9602 4625 00000000 		.4byte	.LASF706
 9603 4629 09       		.uleb128 0x9
 9604 462a 08       		.byte	0x8
 9605 462b A2200000 		.4byte	0x20a2
 9606 462f 4F       		.uleb128 0x4f
 9607 4630 CC200000 		.4byte	0x20cc
 9608 4634 59       		.uleb128 0x59
 9609 4635 00000000 		.4byte	.LASF707
 9610 4639 14       		.byte	0x14
 9611 463a 38       		.byte	0x38
 9612 463b 0B       		.byte	0xb
 9613 463c 49460000 		.4byte	0x4649
 9614 4640 4E       		.uleb128 0x4e
 9615 4641 14       		.byte	0x14
 9616 4642 3A       		.byte	0x3a
 9617 4643 18       		.byte	0x18
 9618 4644 DA200000 		.4byte	0x20da
 9619 4648 00       		.byte	0
 9620 4649 11       		.uleb128 0x11
 9621 464a 08       		.byte	0x8
 9622 464b 0C210000 		.4byte	0x210c
 9623 464f 11       		.uleb128 0x11
 9624 4650 08       		.byte	0x8
 9625 4651 19210000 		.4byte	0x2119
 9626 4655 09       		.uleb128 0x9
 9627 4656 08       		.byte	0x8
 9628 4657 19210000 		.4byte	0x2119
 9629 465b 09       		.uleb128 0x9
 9630 465c 08       		.byte	0x8
 9631 465d 0C210000 		.4byte	0x210c
 9632 4661 11       		.uleb128 0x11
 9633 4662 08       		.byte	0x8
 9634 4663 58220000 		.4byte	0x2258
 9635 4667 06       		.uleb128 0x6
 9636 4668 00000000 		.4byte	.LASF708
 9637 466c 36       		.byte	0x36
 9638 466d 25       		.byte	0x25
 9639 466e 15       		.byte	0x15
 9640 466f 0D460000 		.4byte	0x460d
 9641 4673 06       		.uleb128 0x6
 9642 4674 00000000 		.4byte	.LASF709
 9643 4678 36       		.byte	0x36
 9644 4679 26       		.byte	0x26
 9645 467a 17       		.byte	0x17
 9646 467b 01460000 		.4byte	0x4601
 9647 467f 06       		.uleb128 0x6
 9648 4680 00000000 		.4byte	.LASF710
 9649 4684 36       		.byte	0x36
AARCH64 GAS  obj/extInstr.s 			page 379


 9650 4685 27       		.byte	0x27
 9651 4686 1A       		.byte	0x1a
 9652 4687 14460000 		.4byte	0x4614
 9653 468b 06       		.uleb128 0x6
 9654 468c 00000000 		.4byte	.LASF711
 9655 4690 36       		.byte	0x36
 9656 4691 28       		.byte	0x28
 9657 4692 1C       		.byte	0x1c
 9658 4693 1C3D0000 		.4byte	0x3d1c
 9659 4697 06       		.uleb128 0x6
 9660 4698 00000000 		.4byte	.LASF712
 9661 469c 36       		.byte	0x36
 9662 469d 29       		.byte	0x29
 9663 469e 14       		.byte	0x14
 9664 469f D43A0000 		.4byte	0x3ad4
 9665 46a3 0C       		.uleb128 0xc
 9666 46a4 97460000 		.4byte	0x4697
 9667 46a8 06       		.uleb128 0x6
 9668 46a9 00000000 		.4byte	.LASF713
 9669 46ad 36       		.byte	0x36
 9670 46ae 2A       		.byte	0x2a
 9671 46af 16       		.byte	0x16
 9672 46b0 ED3A0000 		.4byte	0x3aed
 9673 46b4 06       		.uleb128 0x6
 9674 46b5 00000000 		.4byte	.LASF714
 9675 46b9 36       		.byte	0x36
 9676 46ba 2C       		.byte	0x2c
 9677 46bb 19       		.byte	0x19
 9678 46bc 08430000 		.4byte	0x4308
 9679 46c0 06       		.uleb128 0x6
 9680 46c1 00000000 		.4byte	.LASF715
 9681 46c5 36       		.byte	0x36
 9682 46c6 2D       		.byte	0x2d
 9683 46c7 1B       		.byte	0x1b
 9684 46c8 793A0000 		.4byte	0x3a79
 9685 46cc 06       		.uleb128 0x6
 9686 46cd 00000000 		.4byte	.LASF716
 9687 46d1 36       		.byte	0x36
 9688 46d2 34       		.byte	0x34
 9689 46d3 12       		.byte	0x12
 9690 46d4 67460000 		.4byte	0x4667
 9691 46d8 06       		.uleb128 0x6
 9692 46d9 00000000 		.4byte	.LASF717
 9693 46dd 36       		.byte	0x36
 9694 46de 35       		.byte	0x35
 9695 46df 13       		.byte	0x13
 9696 46e0 73460000 		.4byte	0x4673
 9697 46e4 06       		.uleb128 0x6
 9698 46e5 00000000 		.4byte	.LASF718
 9699 46e9 36       		.byte	0x36
 9700 46ea 36       		.byte	0x36
 9701 46eb 13       		.byte	0x13
 9702 46ec 7F460000 		.4byte	0x467f
 9703 46f0 06       		.uleb128 0x6
 9704 46f1 00000000 		.4byte	.LASF719
 9705 46f5 36       		.byte	0x36
 9706 46f6 37       		.byte	0x37
AARCH64 GAS  obj/extInstr.s 			page 380


 9707 46f7 14       		.byte	0x14
 9708 46f8 8B460000 		.4byte	0x468b
 9709 46fc 06       		.uleb128 0x6
 9710 46fd 00000000 		.4byte	.LASF720
 9711 4701 36       		.byte	0x36
 9712 4702 38       		.byte	0x38
 9713 4703 13       		.byte	0x13
 9714 4704 97460000 		.4byte	0x4697
 9715 4708 06       		.uleb128 0x6
 9716 4709 00000000 		.4byte	.LASF721
 9717 470d 36       		.byte	0x36
 9718 470e 39       		.byte	0x39
 9719 470f 14       		.byte	0x14
 9720 4710 A8460000 		.4byte	0x46a8
 9721 4714 06       		.uleb128 0x6
 9722 4715 00000000 		.4byte	.LASF722
 9723 4719 36       		.byte	0x36
 9724 471a 3A       		.byte	0x3a
 9725 471b 13       		.byte	0x13
 9726 471c B4460000 		.4byte	0x46b4
 9727 4720 06       		.uleb128 0x6
 9728 4721 00000000 		.4byte	.LASF723
 9729 4725 36       		.byte	0x36
 9730 4726 3B       		.byte	0x3b
 9731 4727 14       		.byte	0x14
 9732 4728 C0460000 		.4byte	0x46c0
 9733 472c 06       		.uleb128 0x6
 9734 472d 00000000 		.4byte	.LASF724
 9735 4731 36       		.byte	0x36
 9736 4732 48       		.byte	0x48
 9737 4733 12       		.byte	0x12
 9738 4734 08430000 		.4byte	0x4308
 9739 4738 06       		.uleb128 0x6
 9740 4739 00000000 		.4byte	.LASF725
 9741 473d 36       		.byte	0x36
 9742 473e 49       		.byte	0x49
 9743 473f 1B       		.byte	0x1b
 9744 4740 793A0000 		.4byte	0x3a79
 9745 4744 06       		.uleb128 0x6
 9746 4745 00000000 		.4byte	.LASF726
 9747 4749 36       		.byte	0x36
 9748 474a 98       		.byte	0x98
 9749 474b 12       		.byte	0x12
 9750 474c 08430000 		.4byte	0x4308
 9751 4750 06       		.uleb128 0x6
 9752 4751 00000000 		.4byte	.LASF727
 9753 4755 36       		.byte	0x36
 9754 4756 99       		.byte	0x99
 9755 4757 12       		.byte	0x12
 9756 4758 08430000 		.4byte	0x4308
 9757 475c 06       		.uleb128 0x6
 9758 475d 00000000 		.4byte	.LASF728
 9759 4761 36       		.byte	0x36
 9760 4762 9C       		.byte	0x9c
 9761 4763 12       		.byte	0x12
 9762 4764 08430000 		.4byte	0x4308
 9763 4768 06       		.uleb128 0x6
AARCH64 GAS  obj/extInstr.s 			page 381


 9764 4769 00000000 		.4byte	.LASF729
 9765 476d 36       		.byte	0x36
 9766 476e A0       		.byte	0xa0
 9767 476f 12       		.byte	0x12
 9768 4770 08430000 		.4byte	0x4308
 9769 4774 06       		.uleb128 0x6
 9770 4775 00000000 		.4byte	.LASF730
 9771 4779 37       		.byte	0x37
 9772 477a 18       		.byte	0x18
 9773 477b 12       		.byte	0x12
 9774 477c 67460000 		.4byte	0x4667
 9775 4780 06       		.uleb128 0x6
 9776 4781 00000000 		.4byte	.LASF731
 9777 4785 37       		.byte	0x37
 9778 4786 19       		.byte	0x19
 9779 4787 13       		.byte	0x13
 9780 4788 7F460000 		.4byte	0x467f
 9781 478c 06       		.uleb128 0x6
 9782 478d 00000000 		.4byte	.LASF732
 9783 4791 37       		.byte	0x37
 9784 4792 1A       		.byte	0x1a
 9785 4793 13       		.byte	0x13
 9786 4794 97460000 		.4byte	0x4697
 9787 4798 06       		.uleb128 0x6
 9788 4799 00000000 		.4byte	.LASF733
 9789 479d 37       		.byte	0x37
 9790 479e 1B       		.byte	0x1b
 9791 479f 13       		.byte	0x13
 9792 47a0 B4460000 		.4byte	0x46b4
 9793 47a4 06       		.uleb128 0x6
 9794 47a5 00000000 		.4byte	.LASF734
 9795 47a9 38       		.byte	0x38
 9796 47aa 18       		.byte	0x18
 9797 47ab 13       		.byte	0x13
 9798 47ac 73460000 		.4byte	0x4673
 9799 47b0 06       		.uleb128 0x6
 9800 47b1 00000000 		.4byte	.LASF735
 9801 47b5 38       		.byte	0x38
 9802 47b6 19       		.byte	0x19
 9803 47b7 14       		.byte	0x14
 9804 47b8 8B460000 		.4byte	0x468b
 9805 47bc 06       		.uleb128 0x6
 9806 47bd 00000000 		.4byte	.LASF736
 9807 47c1 38       		.byte	0x38
 9808 47c2 1A       		.byte	0x1a
 9809 47c3 14       		.byte	0x14
 9810 47c4 A8460000 		.4byte	0x46a8
 9811 47c8 06       		.uleb128 0x6
 9812 47c9 00000000 		.4byte	.LASF737
 9813 47cd 38       		.byte	0x38
 9814 47ce 1B       		.byte	0x1b
 9815 47cf 14       		.byte	0x14
 9816 47d0 C0460000 		.4byte	0x46c0
 9817 47d4 06       		.uleb128 0x6
 9818 47d5 00000000 		.4byte	.LASF738
 9819 47d9 39       		.byte	0x39
 9820 47da 2B       		.byte	0x2b
AARCH64 GAS  obj/extInstr.s 			page 382


 9821 47db 18       		.byte	0x18
 9822 47dc CC460000 		.4byte	0x46cc
 9823 47e0 06       		.uleb128 0x6
 9824 47e1 00000000 		.4byte	.LASF739
 9825 47e5 39       		.byte	0x39
 9826 47e6 2C       		.byte	0x2c
 9827 47e7 19       		.byte	0x19
 9828 47e8 E4460000 		.4byte	0x46e4
 9829 47ec 06       		.uleb128 0x6
 9830 47ed 00000000 		.4byte	.LASF740
 9831 47f1 39       		.byte	0x39
 9832 47f2 2D       		.byte	0x2d
 9833 47f3 19       		.byte	0x19
 9834 47f4 FC460000 		.4byte	0x46fc
 9835 47f8 06       		.uleb128 0x6
 9836 47f9 00000000 		.4byte	.LASF741
 9837 47fd 39       		.byte	0x39
 9838 47fe 2E       		.byte	0x2e
 9839 47ff 19       		.byte	0x19
 9840 4800 14470000 		.4byte	0x4714
 9841 4804 06       		.uleb128 0x6
 9842 4805 00000000 		.4byte	.LASF742
 9843 4809 39       		.byte	0x39
 9844 480a 31       		.byte	0x31
 9845 480b 19       		.byte	0x19
 9846 480c D8460000 		.4byte	0x46d8
 9847 4810 06       		.uleb128 0x6
 9848 4811 00000000 		.4byte	.LASF743
 9849 4815 39       		.byte	0x39
 9850 4816 32       		.byte	0x32
 9851 4817 1A       		.byte	0x1a
 9852 4818 F0460000 		.4byte	0x46f0
 9853 481c 06       		.uleb128 0x6
 9854 481d 00000000 		.4byte	.LASF744
 9855 4821 39       		.byte	0x39
 9856 4822 33       		.byte	0x33
 9857 4823 1A       		.byte	0x1a
 9858 4824 08470000 		.4byte	0x4708
 9859 4828 06       		.uleb128 0x6
 9860 4829 00000000 		.4byte	.LASF745
 9861 482d 39       		.byte	0x39
 9862 482e 34       		.byte	0x34
 9863 482f 1A       		.byte	0x1a
 9864 4830 20470000 		.4byte	0x4720
 9865 4834 06       		.uleb128 0x6
 9866 4835 00000000 		.4byte	.LASF746
 9867 4839 39       		.byte	0x39
 9868 483a 3A       		.byte	0x3a
 9869 483b 15       		.byte	0x15
 9870 483c 0D460000 		.4byte	0x460d
 9871 4840 06       		.uleb128 0x6
 9872 4841 00000000 		.4byte	.LASF747
 9873 4845 39       		.byte	0x39
 9874 4846 3C       		.byte	0x3c
 9875 4847 12       		.byte	0x12
 9876 4848 08430000 		.4byte	0x4308
 9877 484c 06       		.uleb128 0x6
AARCH64 GAS  obj/extInstr.s 			page 383


 9878 484d 00000000 		.4byte	.LASF748
 9879 4851 39       		.byte	0x39
 9880 4852 3D       		.byte	0x3d
 9881 4853 12       		.byte	0x12
 9882 4854 08430000 		.4byte	0x4308
 9883 4858 06       		.uleb128 0x6
 9884 4859 00000000 		.4byte	.LASF749
 9885 485d 39       		.byte	0x39
 9886 485e 3E       		.byte	0x3e
 9887 485f 12       		.byte	0x12
 9888 4860 08430000 		.4byte	0x4308
 9889 4864 06       		.uleb128 0x6
 9890 4865 00000000 		.4byte	.LASF750
 9891 4869 39       		.byte	0x39
 9892 486a 47       		.byte	0x47
 9893 486b 17       		.byte	0x17
 9894 486c 01460000 		.4byte	0x4601
 9895 4870 06       		.uleb128 0x6
 9896 4871 00000000 		.4byte	.LASF751
 9897 4875 39       		.byte	0x39
 9898 4876 49       		.byte	0x49
 9899 4877 1B       		.byte	0x1b
 9900 4878 793A0000 		.4byte	0x3a79
 9901 487c 06       		.uleb128 0x6
 9902 487d 00000000 		.4byte	.LASF752
 9903 4881 39       		.byte	0x39
 9904 4882 4A       		.byte	0x4a
 9905 4883 1B       		.byte	0x1b
 9906 4884 793A0000 		.4byte	0x3a79
 9907 4888 06       		.uleb128 0x6
 9908 4889 00000000 		.4byte	.LASF753
 9909 488d 39       		.byte	0x39
 9910 488e 4B       		.byte	0x4b
 9911 488f 1B       		.byte	0x1b
 9912 4890 793A0000 		.4byte	0x3a79
 9913 4894 06       		.uleb128 0x6
 9914 4895 00000000 		.4byte	.LASF754
 9915 4899 39       		.byte	0x39
 9916 489a 57       		.byte	0x57
 9917 489b 12       		.byte	0x12
 9918 489c 08430000 		.4byte	0x4308
 9919 48a0 06       		.uleb128 0x6
 9920 48a1 00000000 		.4byte	.LASF755
 9921 48a5 39       		.byte	0x39
 9922 48a6 5A       		.byte	0x5a
 9923 48a7 1B       		.byte	0x1b
 9924 48a8 793A0000 		.4byte	0x3a79
 9925 48ac 06       		.uleb128 0x6
 9926 48ad 00000000 		.4byte	.LASF756
 9927 48b1 39       		.byte	0x39
 9928 48b2 65       		.byte	0x65
 9929 48b3 14       		.byte	0x14
 9930 48b4 2C470000 		.4byte	0x472c
 9931 48b8 06       		.uleb128 0x6
 9932 48b9 00000000 		.4byte	.LASF757
 9933 48bd 39       		.byte	0x39
 9934 48be 66       		.byte	0x66
AARCH64 GAS  obj/extInstr.s 			page 384


 9935 48bf 15       		.byte	0x15
 9936 48c0 38470000 		.4byte	0x4738
 9937 48c4 24       		.uleb128 0x24
 9938 48c5 00000000 		.4byte	.LASF758
 9939 48c9 60       		.byte	0x60
 9940 48ca 3A       		.byte	0x3a
 9941 48cb 33       		.byte	0x33
 9942 48cc 08       		.byte	0x8
 9943 48cd 0A4A0000 		.4byte	0x4a0a
 9944 48d1 08       		.uleb128 0x8
 9945 48d2 00000000 		.4byte	.LASF759
 9946 48d6 3A       		.byte	0x3a
 9947 48d7 37       		.byte	0x37
 9948 48d8 09       		.byte	0x9
 9949 48d9 6C400000 		.4byte	0x406c
 9950 48dd 00       		.byte	0
 9951 48de 08       		.uleb128 0x8
 9952 48df 00000000 		.4byte	.LASF760
 9953 48e3 3A       		.byte	0x3a
 9954 48e4 38       		.byte	0x38
 9955 48e5 09       		.byte	0x9
 9956 48e6 6C400000 		.4byte	0x406c
 9957 48ea 08       		.byte	0x8
 9958 48eb 08       		.uleb128 0x8
 9959 48ec 00000000 		.4byte	.LASF761
 9960 48f0 3A       		.byte	0x3a
 9961 48f1 3E       		.byte	0x3e
 9962 48f2 09       		.byte	0x9
 9963 48f3 6C400000 		.4byte	0x406c
 9964 48f7 10       		.byte	0x10
 9965 48f8 08       		.uleb128 0x8
 9966 48f9 00000000 		.4byte	.LASF762
 9967 48fd 3A       		.byte	0x3a
 9968 48fe 44       		.byte	0x44
 9969 48ff 09       		.byte	0x9
 9970 4900 6C400000 		.4byte	0x406c
 9971 4904 18       		.byte	0x18
 9972 4905 08       		.uleb128 0x8
 9973 4906 00000000 		.4byte	.LASF763
 9974 490a 3A       		.byte	0x3a
 9975 490b 45       		.byte	0x45
 9976 490c 09       		.byte	0x9
 9977 490d 6C400000 		.4byte	0x406c
 9978 4911 20       		.byte	0x20
 9979 4912 08       		.uleb128 0x8
 9980 4913 00000000 		.4byte	.LASF764
 9981 4917 3A       		.byte	0x3a
 9982 4918 46       		.byte	0x46
 9983 4919 09       		.byte	0x9
 9984 491a 6C400000 		.4byte	0x406c
 9985 491e 28       		.byte	0x28
 9986 491f 08       		.uleb128 0x8
 9987 4920 00000000 		.4byte	.LASF765
 9988 4924 3A       		.byte	0x3a
 9989 4925 47       		.byte	0x47
 9990 4926 09       		.byte	0x9
 9991 4927 6C400000 		.4byte	0x406c
AARCH64 GAS  obj/extInstr.s 			page 385


 9992 492b 30       		.byte	0x30
 9993 492c 08       		.uleb128 0x8
 9994 492d 00000000 		.4byte	.LASF766
 9995 4931 3A       		.byte	0x3a
 9996 4932 48       		.byte	0x48
 9997 4933 09       		.byte	0x9
 9998 4934 6C400000 		.4byte	0x406c
 9999 4938 38       		.byte	0x38
 10000 4939 08       		.uleb128 0x8
 10001 493a 00000000 		.4byte	.LASF767
 10002 493e 3A       		.byte	0x3a
 10003 493f 49       		.byte	0x49
 10004 4940 09       		.byte	0x9
 10005 4941 6C400000 		.4byte	0x406c
 10006 4945 40       		.byte	0x40
 10007 4946 08       		.uleb128 0x8
 10008 4947 00000000 		.4byte	.LASF768
 10009 494b 3A       		.byte	0x3a
 10010 494c 4A       		.byte	0x4a
 10011 494d 09       		.byte	0x9
 10012 494e 6C400000 		.4byte	0x406c
 10013 4952 48       		.byte	0x48
 10014 4953 08       		.uleb128 0x8
 10015 4954 00000000 		.4byte	.LASF769
 10016 4958 3A       		.byte	0x3a
 10017 4959 4B       		.byte	0x4b
 10018 495a 08       		.byte	0x8
 10019 495b 4E3B0000 		.4byte	0x3b4e
 10020 495f 50       		.byte	0x50
 10021 4960 08       		.uleb128 0x8
 10022 4961 00000000 		.4byte	.LASF770
 10023 4965 3A       		.byte	0x3a
 10024 4966 4C       		.byte	0x4c
 10025 4967 08       		.byte	0x8
 10026 4968 4E3B0000 		.4byte	0x3b4e
 10027 496c 51       		.byte	0x51
 10028 496d 08       		.uleb128 0x8
 10029 496e 00000000 		.4byte	.LASF771
 10030 4972 3A       		.byte	0x3a
 10031 4973 4E       		.byte	0x4e
 10032 4974 08       		.byte	0x8
 10033 4975 4E3B0000 		.4byte	0x3b4e
 10034 4979 52       		.byte	0x52
 10035 497a 08       		.uleb128 0x8
 10036 497b 00000000 		.4byte	.LASF772
 10037 497f 3A       		.byte	0x3a
 10038 4980 50       		.byte	0x50
 10039 4981 08       		.byte	0x8
 10040 4982 4E3B0000 		.4byte	0x3b4e
 10041 4986 53       		.byte	0x53
 10042 4987 08       		.uleb128 0x8
 10043 4988 00000000 		.4byte	.LASF773
 10044 498c 3A       		.byte	0x3a
 10045 498d 52       		.byte	0x52
 10046 498e 08       		.byte	0x8
 10047 498f 4E3B0000 		.4byte	0x3b4e
 10048 4993 54       		.byte	0x54
AARCH64 GAS  obj/extInstr.s 			page 386


 10049 4994 08       		.uleb128 0x8
 10050 4995 00000000 		.4byte	.LASF774
 10051 4999 3A       		.byte	0x3a
 10052 499a 54       		.byte	0x54
 10053 499b 08       		.byte	0x8
 10054 499c 4E3B0000 		.4byte	0x3b4e
 10055 49a0 55       		.byte	0x55
 10056 49a1 08       		.uleb128 0x8
 10057 49a2 00000000 		.4byte	.LASF775
 10058 49a6 3A       		.byte	0x3a
 10059 49a7 5B       		.byte	0x5b
 10060 49a8 08       		.byte	0x8
 10061 49a9 4E3B0000 		.4byte	0x3b4e
 10062 49ad 56       		.byte	0x56
 10063 49ae 08       		.uleb128 0x8
 10064 49af 00000000 		.4byte	.LASF776
 10065 49b3 3A       		.byte	0x3a
 10066 49b4 5C       		.byte	0x5c
 10067 49b5 08       		.byte	0x8
 10068 49b6 4E3B0000 		.4byte	0x3b4e
 10069 49ba 57       		.byte	0x57
 10070 49bb 08       		.uleb128 0x8
 10071 49bc 00000000 		.4byte	.LASF777
 10072 49c0 3A       		.byte	0x3a
 10073 49c1 5F       		.byte	0x5f
 10074 49c2 08       		.byte	0x8
 10075 49c3 4E3B0000 		.4byte	0x3b4e
 10076 49c7 58       		.byte	0x58
 10077 49c8 08       		.uleb128 0x8
 10078 49c9 00000000 		.4byte	.LASF778
 10079 49cd 3A       		.byte	0x3a
 10080 49ce 61       		.byte	0x61
 10081 49cf 08       		.byte	0x8
 10082 49d0 4E3B0000 		.4byte	0x3b4e
 10083 49d4 59       		.byte	0x59
 10084 49d5 08       		.uleb128 0x8
 10085 49d6 00000000 		.4byte	.LASF779
 10086 49da 3A       		.byte	0x3a
 10087 49db 63       		.byte	0x63
 10088 49dc 08       		.byte	0x8
 10089 49dd 4E3B0000 		.4byte	0x3b4e
 10090 49e1 5A       		.byte	0x5a
 10091 49e2 08       		.uleb128 0x8
 10092 49e3 00000000 		.4byte	.LASF780
 10093 49e7 3A       		.byte	0x3a
 10094 49e8 65       		.byte	0x65
 10095 49e9 08       		.byte	0x8
 10096 49ea 4E3B0000 		.4byte	0x3b4e
 10097 49ee 5B       		.byte	0x5b
 10098 49ef 08       		.uleb128 0x8
 10099 49f0 00000000 		.4byte	.LASF781
 10100 49f4 3A       		.byte	0x3a
 10101 49f5 6C       		.byte	0x6c
 10102 49f6 08       		.byte	0x8
 10103 49f7 4E3B0000 		.4byte	0x3b4e
 10104 49fb 5C       		.byte	0x5c
 10105 49fc 08       		.uleb128 0x8
AARCH64 GAS  obj/extInstr.s 			page 387


 10106 49fd 00000000 		.4byte	.LASF782
 10107 4a01 3A       		.byte	0x3a
 10108 4a02 6D       		.byte	0x6d
 10109 4a03 08       		.byte	0x8
 10110 4a04 4E3B0000 		.4byte	0x3b4e
 10111 4a08 5D       		.byte	0x5d
 10112 4a09 00       		.byte	0
 10113 4a0a 10       		.uleb128 0x10
 10114 4a0b 00000000 		.4byte	.LASF783
 10115 4a0f 3A       		.byte	0x3a
 10116 4a10 7A       		.byte	0x7a
 10117 4a11 0E       		.byte	0xe
 10118 4a12 6C400000 		.4byte	0x406c
 10119 4a16 254A0000 		.4byte	0x4a25
 10120 4a1a 01       		.uleb128 0x1
 10121 4a1b D43A0000 		.4byte	0x3ad4
 10122 4a1f 01       		.uleb128 0x1
 10123 4a20 283D0000 		.4byte	0x3d28
 10124 4a24 00       		.byte	0
 10125 4a25 47       		.uleb128 0x47
 10126 4a26 00000000 		.4byte	.LASF785
 10127 4a2a 3A       		.byte	0x3a
 10128 4a2b 7D       		.byte	0x7d
 10129 4a2c 16       		.byte	0x16
 10130 4a2d 314A0000 		.4byte	0x4a31
 10131 4a31 09       		.uleb128 0x9
 10132 4a32 08       		.byte	0x8
 10133 4a33 C4480000 		.4byte	0x48c4
 10134 4a37 06       		.uleb128 0x6
 10135 4a38 00000000 		.4byte	.LASF786
 10136 4a3c 3B       		.byte	0x3b
 10137 4a3d 07       		.byte	0x7
 10138 4a3e 12       		.byte	0x12
 10139 4a3f 68470000 		.4byte	0x4768
 10140 4a43 0C       		.uleb128 0xc
 10141 4a44 374A0000 		.4byte	0x4a37
 10142 4a48 06       		.uleb128 0x6
 10143 4a49 00000000 		.4byte	.LASF787
 10144 4a4d 3C       		.byte	0x3c
 10145 4a4e 07       		.byte	0x7
 10146 4a4f 13       		.byte	0x13
 10147 4a50 5C470000 		.4byte	0x475c
 10148 4a54 06       		.uleb128 0x6
 10149 4a55 00000000 		.4byte	.LASF788
 10150 4a59 3D       		.byte	0x3d
 10151 4a5a 20       		.byte	0x20
 10152 4a5b 0D       		.byte	0xd
 10153 4a5c D43A0000 		.4byte	0x3ad4
 10154 4a60 09       		.uleb128 0x9
 10155 4a61 08       		.byte	0x8
 10156 4a62 664A0000 		.4byte	0x4a66
 10157 4a66 9101     		.uleb128 0x91
 10158 4a68 09       		.uleb128 0x9
 10159 4a69 08       		.byte	0x8
 10160 4a6a 2F320000 		.4byte	0x322f
 10161 4a6e 0C       		.uleb128 0xc
 10162 4a6f 684A0000 		.4byte	0x4a68
AARCH64 GAS  obj/extInstr.s 			page 388


 10163 4a73 11       		.uleb128 0x11
 10164 4a74 08       		.byte	0x8
 10165 4a75 B5330000 		.4byte	0x33b5
 10166 4a79 09       		.uleb128 0x9
 10167 4a7a 08       		.byte	0x8
 10168 4a7b B5330000 		.4byte	0x33b5
 10169 4a7f 11       		.uleb128 0x11
 10170 4a80 08       		.byte	0x8
 10171 4a81 4E3B0000 		.4byte	0x3b4e
 10172 4a85 11       		.uleb128 0x11
 10173 4a86 08       		.byte	0x8
 10174 4a87 553B0000 		.4byte	0x3b55
 10175 4a8b 09       		.uleb128 0x9
 10176 4a8c 08       		.byte	0x8
 10177 4a8d D3230000 		.4byte	0x23d3
 10178 4a91 0C       		.uleb128 0xc
 10179 4a92 8B4A0000 		.4byte	0x4a8b
 10180 4a96 11       		.uleb128 0x11
 10181 4a97 08       		.byte	0x8
 10182 4a98 64240000 		.4byte	0x2464
 10183 4a9c 11       		.uleb128 0x11
 10184 4a9d 08       		.byte	0x8
 10185 4a9e D3230000 		.4byte	0x23d3
 10186 4aa2 45       		.uleb128 0x45
 10187 4aa3 08       		.byte	0x8
 10188 4aa4 3E       		.byte	0x3e
 10189 4aa5 3B       		.byte	0x3b
 10190 4aa6 03       		.byte	0x3
 10191 4aa7 00000000 		.4byte	.LASF790
 10192 4aab CA4A0000 		.4byte	0x4aca
 10193 4aaf 08       		.uleb128 0x8
 10194 4ab0 00000000 		.4byte	.LASF791
 10195 4ab4 3E       		.byte	0x3e
 10196 4ab5 3C       		.byte	0x3c
 10197 4ab6 09       		.byte	0x9
 10198 4ab7 D43A0000 		.4byte	0x3ad4
 10199 4abb 00       		.byte	0
 10200 4abc 50       		.uleb128 0x50
 10201 4abd 72656D00 		.string	"rem"
 10202 4ac1 3E       		.byte	0x3e
 10203 4ac2 3D       		.byte	0x3d
 10204 4ac3 09       		.byte	0x9
 10205 4ac4 D43A0000 		.4byte	0x3ad4
 10206 4ac8 04       		.byte	0x4
 10207 4ac9 00       		.byte	0
 10208 4aca 06       		.uleb128 0x6
 10209 4acb 00000000 		.4byte	.LASF792
 10210 4acf 3E       		.byte	0x3e
 10211 4ad0 3E       		.byte	0x3e
 10212 4ad1 05       		.byte	0x5
 10213 4ad2 A24A0000 		.4byte	0x4aa2
 10214 4ad6 45       		.uleb128 0x45
 10215 4ad7 10       		.byte	0x10
 10216 4ad8 3E       		.byte	0x3e
 10217 4ad9 43       		.byte	0x43
 10218 4ada 03       		.byte	0x3
 10219 4adb 00000000 		.4byte	.LASF793
AARCH64 GAS  obj/extInstr.s 			page 389


 10220 4adf FE4A0000 		.4byte	0x4afe
 10221 4ae3 08       		.uleb128 0x8
 10222 4ae4 00000000 		.4byte	.LASF791
 10223 4ae8 3E       		.byte	0x3e
 10224 4ae9 44       		.byte	0x44
 10225 4aea 0E       		.byte	0xe
 10226 4aeb 08430000 		.4byte	0x4308
 10227 4aef 00       		.byte	0
 10228 4af0 50       		.uleb128 0x50
 10229 4af1 72656D00 		.string	"rem"
 10230 4af5 3E       		.byte	0x3e
 10231 4af6 45       		.byte	0x45
 10232 4af7 0E       		.byte	0xe
 10233 4af8 08430000 		.4byte	0x4308
 10234 4afc 08       		.byte	0x8
 10235 4afd 00       		.byte	0
 10236 4afe 06       		.uleb128 0x6
 10237 4aff 00000000 		.4byte	.LASF794
 10238 4b03 3E       		.byte	0x3e
 10239 4b04 46       		.byte	0x46
 10240 4b05 05       		.byte	0x5
 10241 4b06 D64A0000 		.4byte	0x4ad6
 10242 4b0a 45       		.uleb128 0x45
 10243 4b0b 10       		.byte	0x10
 10244 4b0c 3E       		.byte	0x3e
 10245 4b0d 4D       		.byte	0x4d
 10246 4b0e 03       		.byte	0x3
 10247 4b0f 00000000 		.4byte	.LASF795
 10248 4b13 324B0000 		.4byte	0x4b32
 10249 4b17 08       		.uleb128 0x8
 10250 4b18 00000000 		.4byte	.LASF791
 10251 4b1c 3E       		.byte	0x3e
 10252 4b1d 4E       		.byte	0x4e
 10253 4b1e 13       		.byte	0x13
 10254 4b1f 9C450000 		.4byte	0x459c
 10255 4b23 00       		.byte	0
 10256 4b24 50       		.uleb128 0x50
 10257 4b25 72656D00 		.string	"rem"
 10258 4b29 3E       		.byte	0x3e
 10259 4b2a 4F       		.byte	0x4f
 10260 4b2b 13       		.byte	0x13
 10261 4b2c 9C450000 		.4byte	0x459c
 10262 4b30 08       		.byte	0x8
 10263 4b31 00       		.byte	0
 10264 4b32 06       		.uleb128 0x6
 10265 4b33 00000000 		.4byte	.LASF796
 10266 4b37 3E       		.byte	0x3e
 10267 4b38 50       		.byte	0x50
 10268 4b39 05       		.byte	0x5
 10269 4b3a 0A4B0000 		.4byte	0x4b0a
 10270 4b3e 1D       		.uleb128 0x1d
 10271 4b3f 00000000 		.4byte	.LASF797
 10272 4b43 3E       		.byte	0x3e
 10273 4b44 2803     		.2byte	0x328
 10274 4b46 0F       		.byte	0xf
 10275 4b47 4B4B0000 		.4byte	0x4b4b
 10276 4b4b 09       		.uleb128 0x9
AARCH64 GAS  obj/extInstr.s 			page 390


 10277 4b4c 08       		.byte	0x8
 10278 4b4d 514B0000 		.4byte	0x4b51
 10279 4b51 67       		.uleb128 0x67
 10280 4b52 D43A0000 		.4byte	0x3ad4
 10281 4b56 654B0000 		.4byte	0x4b65
 10282 4b5a 01       		.uleb128 0x1
 10283 4b5b 604A0000 		.4byte	0x4a60
 10284 4b5f 01       		.uleb128 0x1
 10285 4b60 604A0000 		.4byte	0x4a60
 10286 4b64 00       		.byte	0
 10287 4b65 0B       		.uleb128 0xb
 10288 4b66 00000000 		.4byte	.LASF798
 10289 4b6a 3E       		.byte	0x3e
 10290 4b6b 5302     		.2byte	0x253
 10291 4b6d 0C       		.byte	0xc
 10292 4b6e D43A0000 		.4byte	0x3ad4
 10293 4b72 7C4B0000 		.4byte	0x4b7c
 10294 4b76 01       		.uleb128 0x1
 10295 4b77 7C4B0000 		.4byte	0x4b7c
 10296 4b7b 00       		.byte	0
 10297 4b7c 09       		.uleb128 0x9
 10298 4b7d 08       		.byte	0x8
 10299 4b7e 824B0000 		.4byte	0x4b82
 10300 4b82 9201     		.uleb128 0x92
 10301 4b84 14       		.uleb128 0x14
 10302 4b85 00000000 		.4byte	.LASF799
 10303 4b89 3E       		.byte	0x3e
 10304 4b8a 5802     		.2byte	0x258
 10305 4b8c 12       		.byte	0x12
 10306 4b8d 00000000 		.4byte	.LASF799
 10307 4b91 D43A0000 		.4byte	0x3ad4
 10308 4b95 9F4B0000 		.4byte	0x4b9f
 10309 4b99 01       		.uleb128 0x1
 10310 4b9a 7C4B0000 		.4byte	0x4b7c
 10311 4b9e 00       		.byte	0
 10312 4b9f 10       		.uleb128 0x10
 10313 4ba0 00000000 		.4byte	.LASF800
 10314 4ba4 3F       		.byte	0x3f
 10315 4ba5 19       		.byte	0x19
 10316 4ba6 1C       		.byte	0x1c
 10317 4ba7 663A0000 		.4byte	0x3a66
 10318 4bab B54B0000 		.4byte	0x4bb5
 10319 4baf 01       		.uleb128 0x1
 10320 4bb0 283D0000 		.4byte	0x3d28
 10321 4bb4 00       		.byte	0
 10322 4bb5 0B       		.uleb128 0xb
 10323 4bb6 00000000 		.4byte	.LASF801
 10324 4bba 3E       		.byte	0x3e
 10325 4bbb 6901     		.2byte	0x169
 10326 4bbd 1C       		.byte	0x1c
 10327 4bbe D43A0000 		.4byte	0x3ad4
 10328 4bc2 CC4B0000 		.4byte	0x4bcc
 10329 4bc6 01       		.uleb128 0x1
 10330 4bc7 283D0000 		.4byte	0x3d28
 10331 4bcb 00       		.byte	0
 10332 4bcc 0B       		.uleb128 0xb
 10333 4bcd 00000000 		.4byte	.LASF802
AARCH64 GAS  obj/extInstr.s 			page 391


 10334 4bd1 3E       		.byte	0x3e
 10335 4bd2 6E01     		.2byte	0x16e
 10336 4bd4 1C       		.byte	0x1c
 10337 4bd5 08430000 		.4byte	0x4308
 10338 4bd9 E34B0000 		.4byte	0x4be3
 10339 4bdd 01       		.uleb128 0x1
 10340 4bde 283D0000 		.4byte	0x3d28
 10341 4be2 00       		.byte	0
 10342 4be3 10       		.uleb128 0x10
 10343 4be4 00000000 		.4byte	.LASF803
 10344 4be8 40       		.byte	0x40
 10345 4be9 14       		.byte	0x14
 10346 4bea 01       		.byte	0x1
 10347 4beb D13A0000 		.4byte	0x3ad1
 10348 4bef 0D4C0000 		.4byte	0x4c0d
 10349 4bf3 01       		.uleb128 0x1
 10350 4bf4 604A0000 		.4byte	0x4a60
 10351 4bf8 01       		.uleb128 0x1
 10352 4bf9 604A0000 		.4byte	0x4a60
 10353 4bfd 01       		.uleb128 0x1
 10354 4bfe 6D3A0000 		.4byte	0x3a6d
 10355 4c02 01       		.uleb128 0x1
 10356 4c03 6D3A0000 		.4byte	0x3a6d
 10357 4c07 01       		.uleb128 0x1
 10358 4c08 3E4B0000 		.4byte	0x4b3e
 10359 4c0c 00       		.byte	0
 10360 4c0d 9301     		.uleb128 0x93
 10361 4c0f 64697600 		.string	"div"
 10362 4c13 3E       		.byte	0x3e
 10363 4c14 5403     		.2byte	0x354
 10364 4c16 0E       		.byte	0xe
 10365 4c17 CA4A0000 		.4byte	0x4aca
 10366 4c1b 2A4C0000 		.4byte	0x4c2a
 10367 4c1f 01       		.uleb128 0x1
 10368 4c20 D43A0000 		.4byte	0x3ad4
 10369 4c24 01       		.uleb128 0x1
 10370 4c25 D43A0000 		.4byte	0x3ad4
 10371 4c29 00       		.byte	0
 10372 4c2a 0B       		.uleb128 0xb
 10373 4c2b 00000000 		.4byte	.LASF804
 10374 4c2f 3E       		.byte	0x3e
 10375 4c30 7A02     		.2byte	0x27a
 10376 4c32 0E       		.byte	0xe
 10377 4c33 6C400000 		.4byte	0x406c
 10378 4c37 414C0000 		.4byte	0x4c41
 10379 4c3b 01       		.uleb128 0x1
 10380 4c3c 283D0000 		.4byte	0x3d28
 10381 4c40 00       		.byte	0
 10382 4c41 0B       		.uleb128 0xb
 10383 4c42 00000000 		.4byte	.LASF805
 10384 4c46 3E       		.byte	0x3e
 10385 4c47 5603     		.2byte	0x356
 10386 4c49 0F       		.byte	0xf
 10387 4c4a FE4A0000 		.4byte	0x4afe
 10388 4c4e 5D4C0000 		.4byte	0x4c5d
 10389 4c52 01       		.uleb128 0x1
 10390 4c53 08430000 		.4byte	0x4308
AARCH64 GAS  obj/extInstr.s 			page 392


 10391 4c57 01       		.uleb128 0x1
 10392 4c58 08430000 		.4byte	0x4308
 10393 4c5c 00       		.byte	0
 10394 4c5d 0B       		.uleb128 0xb
 10395 4c5e 00000000 		.4byte	.LASF806
 10396 4c62 3E       		.byte	0x3e
 10397 4c63 9A03     		.2byte	0x39a
 10398 4c65 0C       		.byte	0xc
 10399 4c66 D43A0000 		.4byte	0x3ad4
 10400 4c6a 794C0000 		.4byte	0x4c79
 10401 4c6e 01       		.uleb128 0x1
 10402 4c6f 283D0000 		.4byte	0x3d28
 10403 4c73 01       		.uleb128 0x1
 10404 4c74 6D3A0000 		.4byte	0x3a6d
 10405 4c78 00       		.byte	0
 10406 4c79 0B       		.uleb128 0xb
 10407 4c7a 00000000 		.4byte	.LASF807
 10408 4c7e 3E       		.byte	0x3e
 10409 4c7f A503     		.2byte	0x3a5
 10410 4c81 0F       		.byte	0xf
 10411 4c82 6D3A0000 		.4byte	0x3a6d
 10412 4c86 9A4C0000 		.4byte	0x4c9a
 10413 4c8a 01       		.uleb128 0x1
 10414 4c8b 883D0000 		.4byte	0x3d88
 10415 4c8f 01       		.uleb128 0x1
 10416 4c90 283D0000 		.4byte	0x3d28
 10417 4c94 01       		.uleb128 0x1
 10418 4c95 6D3A0000 		.4byte	0x3a6d
 10419 4c99 00       		.byte	0
 10420 4c9a 0B       		.uleb128 0xb
 10421 4c9b 00000000 		.4byte	.LASF808
 10422 4c9f 3E       		.byte	0x3e
 10423 4ca0 9D03     		.2byte	0x39d
 10424 4ca2 0C       		.byte	0xc
 10425 4ca3 D43A0000 		.4byte	0x3ad4
 10426 4ca7 BB4C0000 		.4byte	0x4cbb
 10427 4cab 01       		.uleb128 0x1
 10428 4cac 883D0000 		.4byte	0x3d88
 10429 4cb0 01       		.uleb128 0x1
 10430 4cb1 283D0000 		.4byte	0x3d28
 10431 4cb5 01       		.uleb128 0x1
 10432 4cb6 6D3A0000 		.4byte	0x3a6d
 10433 4cba 00       		.byte	0
 10434 4cbb 39       		.uleb128 0x39
 10435 4cbc 00000000 		.4byte	.LASF811
 10436 4cc0 3E       		.byte	0x3e
 10437 4cc1 3E03     		.2byte	0x33e
 10438 4cc3 0D       		.byte	0xd
 10439 4cc4 DD4C0000 		.4byte	0x4cdd
 10440 4cc8 01       		.uleb128 0x1
 10441 4cc9 D13A0000 		.4byte	0x3ad1
 10442 4ccd 01       		.uleb128 0x1
 10443 4cce 6D3A0000 		.4byte	0x3a6d
 10444 4cd2 01       		.uleb128 0x1
 10445 4cd3 6D3A0000 		.4byte	0x3a6d
 10446 4cd7 01       		.uleb128 0x1
 10447 4cd8 3E4B0000 		.4byte	0x4b3e
AARCH64 GAS  obj/extInstr.s 			page 393


 10448 4cdc 00       		.byte	0
 10449 4cdd 9401     		.uleb128 0x94
 10450 4cdf 00000000 		.4byte	.LASF809
 10451 4ce3 3E       		.byte	0x3e
 10452 4ce4 6F02     		.2byte	0x26f
 10453 4ce6 0D       		.byte	0xd
 10454 4ce7 F14C0000 		.4byte	0x4cf1
 10455 4ceb 01       		.uleb128 0x1
 10456 4cec D43A0000 		.4byte	0x3ad4
 10457 4cf0 00       		.byte	0
 10458 4cf1 66       		.uleb128 0x66
 10459 4cf2 00000000 		.4byte	.LASF810
 10460 4cf6 3E       		.byte	0x3e
 10461 4cf7 C501     		.2byte	0x1c5
 10462 4cf9 0C       		.byte	0xc
 10463 4cfa D43A0000 		.4byte	0x3ad4
 10464 4cfe 39       		.uleb128 0x39
 10465 4cff 00000000 		.4byte	.LASF812
 10466 4d03 3E       		.byte	0x3e
 10467 4d04 C701     		.2byte	0x1c7
 10468 4d06 0D       		.byte	0xd
 10469 4d07 114D0000 		.4byte	0x4d11
 10470 4d0b 01       		.uleb128 0x1
 10471 4d0c ED3A0000 		.4byte	0x3aed
 10472 4d10 00       		.byte	0
 10473 4d11 10       		.uleb128 0x10
 10474 4d12 00000000 		.4byte	.LASF813
 10475 4d16 3E       		.byte	0x3e
 10476 4d17 75       		.byte	0x75
 10477 4d18 0F       		.byte	0xf
 10478 4d19 663A0000 		.4byte	0x3a66
 10479 4d1d 2C4D0000 		.4byte	0x4d2c
 10480 4d21 01       		.uleb128 0x1
 10481 4d22 283D0000 		.4byte	0x3d28
 10482 4d26 01       		.uleb128 0x1
 10483 4d27 2C4D0000 		.4byte	0x4d2c
 10484 4d2b 00       		.byte	0
 10485 4d2c 09       		.uleb128 0x9
 10486 4d2d 08       		.byte	0x8
 10487 4d2e 6C400000 		.4byte	0x406c
 10488 4d32 10       		.uleb128 0x10
 10489 4d33 00000000 		.4byte	.LASF814
 10490 4d37 3E       		.byte	0x3e
 10491 4d38 B0       		.byte	0xb0
 10492 4d39 11       		.byte	0x11
 10493 4d3a 08430000 		.4byte	0x4308
 10494 4d3e 524D0000 		.4byte	0x4d52
 10495 4d42 01       		.uleb128 0x1
 10496 4d43 283D0000 		.4byte	0x3d28
 10497 4d47 01       		.uleb128 0x1
 10498 4d48 2C4D0000 		.4byte	0x4d2c
 10499 4d4c 01       		.uleb128 0x1
 10500 4d4d D43A0000 		.4byte	0x3ad4
 10501 4d51 00       		.byte	0
 10502 4d52 10       		.uleb128 0x10
 10503 4d53 00000000 		.4byte	.LASF815
 10504 4d57 3E       		.byte	0x3e
AARCH64 GAS  obj/extInstr.s 			page 394


 10505 4d58 B4       		.byte	0xb4
 10506 4d59 1A       		.byte	0x1a
 10507 4d5a 793A0000 		.4byte	0x3a79
 10508 4d5e 724D0000 		.4byte	0x4d72
 10509 4d62 01       		.uleb128 0x1
 10510 4d63 283D0000 		.4byte	0x3d28
 10511 4d67 01       		.uleb128 0x1
 10512 4d68 2C4D0000 		.4byte	0x4d2c
 10513 4d6c 01       		.uleb128 0x1
 10514 4d6d D43A0000 		.4byte	0x3ad4
 10515 4d71 00       		.byte	0
 10516 4d72 0B       		.uleb128 0xb
 10517 4d73 00000000 		.4byte	.LASF816
 10518 4d77 3E       		.byte	0x3e
 10519 4d78 1003     		.2byte	0x310
 10520 4d7a 0C       		.byte	0xc
 10521 4d7b D43A0000 		.4byte	0x3ad4
 10522 4d7f 894D0000 		.4byte	0x4d89
 10523 4d83 01       		.uleb128 0x1
 10524 4d84 283D0000 		.4byte	0x3d28
 10525 4d88 00       		.byte	0
 10526 4d89 0B       		.uleb128 0xb
 10527 4d8a 00000000 		.4byte	.LASF817
 10528 4d8e 3E       		.byte	0x3e
 10529 4d8f A803     		.2byte	0x3a8
 10530 4d91 0F       		.byte	0xf
 10531 4d92 6D3A0000 		.4byte	0x3a6d
 10532 4d96 AA4D0000 		.4byte	0x4daa
 10533 4d9a 01       		.uleb128 0x1
 10534 4d9b 6C400000 		.4byte	0x406c
 10535 4d9f 01       		.uleb128 0x1
 10536 4da0 D23D0000 		.4byte	0x3dd2
 10537 4da4 01       		.uleb128 0x1
 10538 4da5 6D3A0000 		.4byte	0x3a6d
 10539 4da9 00       		.byte	0
 10540 4daa 0B       		.uleb128 0xb
 10541 4dab 00000000 		.4byte	.LASF818
 10542 4daf 3E       		.byte	0x3e
 10543 4db0 A103     		.2byte	0x3a1
 10544 4db2 0C       		.byte	0xc
 10545 4db3 D43A0000 		.4byte	0x3ad4
 10546 4db7 C64D0000 		.4byte	0x4dc6
 10547 4dbb 01       		.uleb128 0x1
 10548 4dbc 6C400000 		.4byte	0x406c
 10549 4dc0 01       		.uleb128 0x1
 10550 4dc1 8E3D0000 		.4byte	0x3d8e
 10551 4dc5 00       		.byte	0
 10552 4dc6 0B       		.uleb128 0xb
 10553 4dc7 00000000 		.4byte	.LASF819
 10554 4dcb 3E       		.byte	0x3e
 10555 4dcc 5A03     		.2byte	0x35a
 10556 4dce 1E       		.byte	0x1e
 10557 4dcf 324B0000 		.4byte	0x4b32
 10558 4dd3 E24D0000 		.4byte	0x4de2
 10559 4dd7 01       		.uleb128 0x1
 10560 4dd8 9C450000 		.4byte	0x459c
 10561 4ddc 01       		.uleb128 0x1
AARCH64 GAS  obj/extInstr.s 			page 395


 10562 4ddd 9C450000 		.4byte	0x459c
 10563 4de1 00       		.byte	0
 10564 4de2 0B       		.uleb128 0xb
 10565 4de3 00000000 		.4byte	.LASF820
 10566 4de7 3E       		.byte	0x3e
 10567 4de8 7501     		.2byte	0x175
 10568 4dea 1C       		.byte	0x1c
 10569 4deb 9C450000 		.4byte	0x459c
 10570 4def F94D0000 		.4byte	0x4df9
 10571 4df3 01       		.uleb128 0x1
 10572 4df4 283D0000 		.4byte	0x3d28
 10573 4df8 00       		.byte	0
 10574 4df9 10       		.uleb128 0x10
 10575 4dfa 00000000 		.4byte	.LASF821
 10576 4dfe 3E       		.byte	0x3e
 10577 4dff C8       		.byte	0xc8
 10578 4e00 16       		.byte	0x16
 10579 4e01 9C450000 		.4byte	0x459c
 10580 4e05 194E0000 		.4byte	0x4e19
 10581 4e09 01       		.uleb128 0x1
 10582 4e0a 283D0000 		.4byte	0x3d28
 10583 4e0e 01       		.uleb128 0x1
 10584 4e0f 2C4D0000 		.4byte	0x4d2c
 10585 4e13 01       		.uleb128 0x1
 10586 4e14 D43A0000 		.4byte	0x3ad4
 10587 4e18 00       		.byte	0
 10588 4e19 10       		.uleb128 0x10
 10589 4e1a 00000000 		.4byte	.LASF822
 10590 4e1e 3E       		.byte	0x3e
 10591 4e1f CD       		.byte	0xcd
 10592 4e20 1F       		.byte	0x1f
 10593 4e21 C4450000 		.4byte	0x45c4
 10594 4e25 394E0000 		.4byte	0x4e39
 10595 4e29 01       		.uleb128 0x1
 10596 4e2a 283D0000 		.4byte	0x3d28
 10597 4e2e 01       		.uleb128 0x1
 10598 4e2f 2C4D0000 		.4byte	0x4d2c
 10599 4e33 01       		.uleb128 0x1
 10600 4e34 D43A0000 		.4byte	0x3ad4
 10601 4e38 00       		.byte	0
 10602 4e39 10       		.uleb128 0x10
 10603 4e3a 00000000 		.4byte	.LASF823
 10604 4e3e 3E       		.byte	0x3e
 10605 4e3f 7B       		.byte	0x7b
 10606 4e40 0E       		.byte	0xe
 10607 4e41 5F3A0000 		.4byte	0x3a5f
 10608 4e45 544E0000 		.4byte	0x4e54
 10609 4e49 01       		.uleb128 0x1
 10610 4e4a 283D0000 		.4byte	0x3d28
 10611 4e4e 01       		.uleb128 0x1
 10612 4e4f 2C4D0000 		.4byte	0x4d2c
 10613 4e53 00       		.byte	0
 10614 4e54 10       		.uleb128 0x10
 10615 4e55 00000000 		.4byte	.LASF824
 10616 4e59 3E       		.byte	0x3e
 10617 4e5a 7E       		.byte	0x7e
 10618 4e5b 14       		.byte	0x14
AARCH64 GAS  obj/extInstr.s 			page 396


 10619 4e5c 583A0000 		.4byte	0x3a58
 10620 4e60 6F4E0000 		.4byte	0x4e6f
 10621 4e64 01       		.uleb128 0x1
 10622 4e65 283D0000 		.4byte	0x3d28
 10623 4e69 01       		.uleb128 0x1
 10624 4e6a 2C4D0000 		.4byte	0x4d2c
 10625 4e6e 00       		.byte	0
 10626 4e6f 24       		.uleb128 0x24
 10627 4e70 00000000 		.4byte	.LASF825
 10628 4e74 10       		.byte	0x10
 10629 4e75 41       		.byte	0x41
 10630 4e76 0A       		.byte	0xa
 10631 4e77 10       		.byte	0x10
 10632 4e78 974E0000 		.4byte	0x4e97
 10633 4e7c 08       		.uleb128 0x8
 10634 4e7d 00000000 		.4byte	.LASF826
 10635 4e81 41       		.byte	0x41
 10636 4e82 0C       		.byte	0xc
 10637 4e83 0B       		.byte	0xb
 10638 4e84 44470000 		.4byte	0x4744
 10639 4e88 00       		.byte	0
 10640 4e89 08       		.uleb128 0x8
 10641 4e8a 00000000 		.4byte	.LASF827
 10642 4e8e 41       		.byte	0x41
 10643 4e8f 0D       		.byte	0xd
 10644 4e90 0F       		.byte	0xf
 10645 4e91 5A3B0000 		.4byte	0x3b5a
 10646 4e95 08       		.byte	0x8
 10647 4e96 00       		.byte	0
 10648 4e97 06       		.uleb128 0x6
 10649 4e98 00000000 		.4byte	.LASF828
 10650 4e9c 41       		.byte	0x41
 10651 4e9d 0E       		.byte	0xe
 10652 4e9e 03       		.byte	0x3
 10653 4e9f 6F4E0000 		.4byte	0x4e6f
 10654 4ea3 9501     		.uleb128 0x95
 10655 4ea5 00000000 		.4byte	.LASF1004
 10656 4ea9 32       		.byte	0x32
 10657 4eaa 2B       		.byte	0x2b
 10658 4eab 0E       		.byte	0xe
 10659 4eac 51       		.uleb128 0x51
 10660 4ead 00000000 		.4byte	.LASF829
 10661 4eb1 09       		.uleb128 0x9
 10662 4eb2 08       		.byte	0x8
 10663 4eb3 AC4E0000 		.4byte	0x4eac
 10664 4eb7 09       		.uleb128 0x9
 10665 4eb8 08       		.byte	0x8
 10666 4eb9 833B0000 		.4byte	0x3b83
 10667 4ebd 21       		.uleb128 0x21
 10668 4ebe 4E3B0000 		.4byte	0x3b4e
 10669 4ec2 CD4E0000 		.4byte	0x4ecd
 10670 4ec6 22       		.uleb128 0x22
 10671 4ec7 793A0000 		.4byte	0x3a79
 10672 4ecb 00       		.byte	0
 10673 4ecc 00       		.byte	0
 10674 4ecd 09       		.uleb128 0x9
 10675 4ece 08       		.byte	0x8
AARCH64 GAS  obj/extInstr.s 			page 397


 10676 4ecf A34E0000 		.4byte	0x4ea3
 10677 4ed3 51       		.uleb128 0x51
 10678 4ed4 00000000 		.4byte	.LASF830
 10679 4ed8 09       		.uleb128 0x9
 10680 4ed9 08       		.byte	0x8
 10681 4eda D34E0000 		.4byte	0x4ed3
 10682 4ede 51       		.uleb128 0x51
 10683 4edf 00000000 		.4byte	.LASF831
 10684 4ee3 09       		.uleb128 0x9
 10685 4ee4 08       		.byte	0x8
 10686 4ee5 DE4E0000 		.4byte	0x4ede
 10687 4ee9 21       		.uleb128 0x21
 10688 4eea 4E3B0000 		.4byte	0x3b4e
 10689 4eee F94E0000 		.4byte	0x4ef9
 10690 4ef2 22       		.uleb128 0x22
 10691 4ef3 793A0000 		.4byte	0x3a79
 10692 4ef7 13       		.byte	0x13
 10693 4ef8 00       		.byte	0
 10694 4ef9 06       		.uleb128 0x6
 10695 4efa 00000000 		.4byte	.LASF832
 10696 4efe 42       		.byte	0x42
 10697 4eff 54       		.byte	0x54
 10698 4f00 12       		.byte	0x12
 10699 4f01 974E0000 		.4byte	0x4e97
 10700 4f05 0C       		.uleb128 0xc
 10701 4f06 F94E0000 		.4byte	0x4ef9
 10702 4f0a 09       		.uleb128 0x9
 10703 4f0b 08       		.byte	0x8
 10704 4f0c 0A3D0000 		.4byte	0x3d0a
 10705 4f10 39       		.uleb128 0x39
 10706 4f11 00000000 		.4byte	.LASF833
 10707 4f15 42       		.byte	0x42
 10708 4f16 F502     		.2byte	0x2f5
 10709 4f18 0D       		.byte	0xd
 10710 4f19 234F0000 		.4byte	0x4f23
 10711 4f1d 01       		.uleb128 0x1
 10712 4f1e 0A4F0000 		.4byte	0x4f0a
 10713 4f22 00       		.byte	0
 10714 4f23 10       		.uleb128 0x10
 10715 4f24 00000000 		.4byte	.LASF834
 10716 4f28 42       		.byte	0x42
 10717 4f29 D5       		.byte	0xd5
 10718 4f2a 0C       		.byte	0xc
 10719 4f2b D43A0000 		.4byte	0x3ad4
 10720 4f2f 394F0000 		.4byte	0x4f39
 10721 4f33 01       		.uleb128 0x1
 10722 4f34 0A4F0000 		.4byte	0x4f0a
 10723 4f38 00       		.byte	0
 10724 4f39 0B       		.uleb128 0xb
 10725 4f3a 00000000 		.4byte	.LASF835
 10726 4f3e 42       		.byte	0x42
 10727 4f3f F702     		.2byte	0x2f7
 10728 4f41 0C       		.byte	0xc
 10729 4f42 D43A0000 		.4byte	0x3ad4
 10730 4f46 504F0000 		.4byte	0x4f50
 10731 4f4a 01       		.uleb128 0x1
 10732 4f4b 0A4F0000 		.4byte	0x4f0a
AARCH64 GAS  obj/extInstr.s 			page 398


 10733 4f4f 00       		.byte	0
 10734 4f50 0B       		.uleb128 0xb
 10735 4f51 00000000 		.4byte	.LASF836
 10736 4f55 42       		.byte	0x42
 10737 4f56 F902     		.2byte	0x2f9
 10738 4f58 0C       		.byte	0xc
 10739 4f59 D43A0000 		.4byte	0x3ad4
 10740 4f5d 674F0000 		.4byte	0x4f67
 10741 4f61 01       		.uleb128 0x1
 10742 4f62 0A4F0000 		.4byte	0x4f0a
 10743 4f66 00       		.byte	0
 10744 4f67 10       		.uleb128 0x10
 10745 4f68 00000000 		.4byte	.LASF837
 10746 4f6c 42       		.byte	0x42
 10747 4f6d DA       		.byte	0xda
 10748 4f6e 0C       		.byte	0xc
 10749 4f6f D43A0000 		.4byte	0x3ad4
 10750 4f73 7D4F0000 		.4byte	0x4f7d
 10751 4f77 01       		.uleb128 0x1
 10752 4f78 0A4F0000 		.4byte	0x4f0a
 10753 4f7c 00       		.byte	0
 10754 4f7d 0B       		.uleb128 0xb
 10755 4f7e 00000000 		.4byte	.LASF838
 10756 4f82 42       		.byte	0x42
 10757 4f83 E501     		.2byte	0x1e5
 10758 4f85 0C       		.byte	0xc
 10759 4f86 D43A0000 		.4byte	0x3ad4
 10760 4f8a 944F0000 		.4byte	0x4f94
 10761 4f8e 01       		.uleb128 0x1
 10762 4f8f 0A4F0000 		.4byte	0x4f0a
 10763 4f93 00       		.byte	0
 10764 4f94 0B       		.uleb128 0xb
 10765 4f95 00000000 		.4byte	.LASF839
 10766 4f99 42       		.byte	0x42
 10767 4f9a DB02     		.2byte	0x2db
 10768 4f9c 0C       		.byte	0xc
 10769 4f9d D43A0000 		.4byte	0x3ad4
 10770 4fa1 B04F0000 		.4byte	0x4fb0
 10771 4fa5 01       		.uleb128 0x1
 10772 4fa6 0A4F0000 		.4byte	0x4f0a
 10773 4faa 01       		.uleb128 0x1
 10774 4fab B04F0000 		.4byte	0x4fb0
 10775 4faf 00       		.byte	0
 10776 4fb0 09       		.uleb128 0x9
 10777 4fb1 08       		.byte	0x8
 10778 4fb2 F94E0000 		.4byte	0x4ef9
 10779 4fb6 0B       		.uleb128 0xb
 10780 4fb7 00000000 		.4byte	.LASF840
 10781 4fbb 42       		.byte	0x42
 10782 4fbc 3402     		.2byte	0x234
 10783 4fbe 0E       		.byte	0xe
 10784 4fbf 6C400000 		.4byte	0x406c
 10785 4fc3 D74F0000 		.4byte	0x4fd7
 10786 4fc7 01       		.uleb128 0x1
 10787 4fc8 6C400000 		.4byte	0x406c
 10788 4fcc 01       		.uleb128 0x1
 10789 4fcd D43A0000 		.4byte	0x3ad4
AARCH64 GAS  obj/extInstr.s 			page 399


 10790 4fd1 01       		.uleb128 0x1
 10791 4fd2 0A4F0000 		.4byte	0x4f0a
 10792 4fd6 00       		.byte	0
 10793 4fd7 10       		.uleb128 0x10
 10794 4fd8 00000000 		.4byte	.LASF841
 10795 4fdc 42       		.byte	0x42
 10796 4fdd F6       		.byte	0xf6
 10797 4fde 0E       		.byte	0xe
 10798 4fdf 0A4F0000 		.4byte	0x4f0a
 10799 4fe3 F24F0000 		.4byte	0x4ff2
 10800 4fe7 01       		.uleb128 0x1
 10801 4fe8 283D0000 		.4byte	0x3d28
 10802 4fec 01       		.uleb128 0x1
 10803 4fed 283D0000 		.4byte	0x3d28
 10804 4ff1 00       		.byte	0
 10805 4ff2 0B       		.uleb128 0xb
 10806 4ff3 00000000 		.4byte	.LASF842
 10807 4ff7 42       		.byte	0x42
 10808 4ff8 8602     		.2byte	0x286
 10809 4ffa 0F       		.byte	0xf
 10810 4ffb 6D3A0000 		.4byte	0x3a6d
 10811 4fff 18500000 		.4byte	0x5018
 10812 5003 01       		.uleb128 0x1
 10813 5004 D13A0000 		.4byte	0x3ad1
 10814 5008 01       		.uleb128 0x1
 10815 5009 6D3A0000 		.4byte	0x3a6d
 10816 500d 01       		.uleb128 0x1
 10817 500e 6D3A0000 		.4byte	0x3a6d
 10818 5012 01       		.uleb128 0x1
 10819 5013 0A4F0000 		.4byte	0x4f0a
 10820 5017 00       		.byte	0
 10821 5018 10       		.uleb128 0x10
 10822 5019 00000000 		.4byte	.LASF843
 10823 501d 42       		.byte	0x42
 10824 501e FC       		.byte	0xfc
 10825 501f 0E       		.byte	0xe
 10826 5020 0A4F0000 		.4byte	0x4f0a
 10827 5024 38500000 		.4byte	0x5038
 10828 5028 01       		.uleb128 0x1
 10829 5029 283D0000 		.4byte	0x3d28
 10830 502d 01       		.uleb128 0x1
 10831 502e 283D0000 		.4byte	0x3d28
 10832 5032 01       		.uleb128 0x1
 10833 5033 0A4F0000 		.4byte	0x4f0a
 10834 5037 00       		.byte	0
 10835 5038 0B       		.uleb128 0xb
 10836 5039 00000000 		.4byte	.LASF844
 10837 503d 42       		.byte	0x42
 10838 503e AC02     		.2byte	0x2ac
 10839 5040 0C       		.byte	0xc
 10840 5041 D43A0000 		.4byte	0x3ad4
 10841 5045 59500000 		.4byte	0x5059
 10842 5049 01       		.uleb128 0x1
 10843 504a 0A4F0000 		.4byte	0x4f0a
 10844 504e 01       		.uleb128 0x1
 10845 504f 08430000 		.4byte	0x4308
 10846 5053 01       		.uleb128 0x1
AARCH64 GAS  obj/extInstr.s 			page 400


 10847 5054 D43A0000 		.4byte	0x3ad4
 10848 5058 00       		.byte	0
 10849 5059 0B       		.uleb128 0xb
 10850 505a 00000000 		.4byte	.LASF845
 10851 505e 42       		.byte	0x42
 10852 505f E002     		.2byte	0x2e0
 10853 5061 0C       		.byte	0xc
 10854 5062 D43A0000 		.4byte	0x3ad4
 10855 5066 75500000 		.4byte	0x5075
 10856 506a 01       		.uleb128 0x1
 10857 506b 0A4F0000 		.4byte	0x4f0a
 10858 506f 01       		.uleb128 0x1
 10859 5070 75500000 		.4byte	0x5075
 10860 5074 00       		.byte	0
 10861 5075 09       		.uleb128 0x9
 10862 5076 08       		.byte	0x8
 10863 5077 054F0000 		.4byte	0x4f05
 10864 507b 0B       		.uleb128 0xb
 10865 507c 00000000 		.4byte	.LASF846
 10866 5080 42       		.byte	0x42
 10867 5081 B102     		.2byte	0x2b1
 10868 5083 11       		.byte	0x11
 10869 5084 08430000 		.4byte	0x4308
 10870 5088 92500000 		.4byte	0x5092
 10871 508c 01       		.uleb128 0x1
 10872 508d 0A4F0000 		.4byte	0x4f0a
 10873 5091 00       		.byte	0
 10874 5092 0B       		.uleb128 0xb
 10875 5093 00000000 		.4byte	.LASF847
 10876 5097 42       		.byte	0x42
 10877 5098 E601     		.2byte	0x1e6
 10878 509a 0C       		.byte	0xc
 10879 509b D43A0000 		.4byte	0x3ad4
 10880 509f A9500000 		.4byte	0x50a9
 10881 50a3 01       		.uleb128 0x1
 10882 50a4 0A4F0000 		.4byte	0x4f0a
 10883 50a8 00       		.byte	0
 10884 50a9 47       		.uleb128 0x47
 10885 50aa 00000000 		.4byte	.LASF848
 10886 50ae 43       		.byte	0x43
 10887 50af 2F       		.byte	0x2f
 10888 50b0 01       		.byte	0x1
 10889 50b1 D43A0000 		.4byte	0x3ad4
 10890 50b5 39       		.uleb128 0x39
 10891 50b6 00000000 		.4byte	.LASF849
 10892 50ba 42       		.byte	0x42
 10893 50bb 0703     		.2byte	0x307
 10894 50bd 0D       		.byte	0xd
 10895 50be C8500000 		.4byte	0x50c8
 10896 50c2 01       		.uleb128 0x1
 10897 50c3 283D0000 		.4byte	0x3d28
 10898 50c7 00       		.byte	0
 10899 50c8 10       		.uleb128 0x10
 10900 50c9 00000000 		.4byte	.LASF850
 10901 50cd 42       		.byte	0x42
 10902 50ce 92       		.byte	0x92
 10903 50cf 0C       		.byte	0xc
AARCH64 GAS  obj/extInstr.s 			page 401


 10904 50d0 D43A0000 		.4byte	0x3ad4
 10905 50d4 DE500000 		.4byte	0x50de
 10906 50d8 01       		.uleb128 0x1
 10907 50d9 283D0000 		.4byte	0x3d28
 10908 50dd 00       		.byte	0
 10909 50de 10       		.uleb128 0x10
 10910 50df 00000000 		.4byte	.LASF851
 10911 50e3 42       		.byte	0x42
 10912 50e4 94       		.byte	0x94
 10913 50e5 0C       		.byte	0xc
 10914 50e6 D43A0000 		.4byte	0x3ad4
 10915 50ea F9500000 		.4byte	0x50f9
 10916 50ee 01       		.uleb128 0x1
 10917 50ef 283D0000 		.4byte	0x3d28
 10918 50f3 01       		.uleb128 0x1
 10919 50f4 283D0000 		.4byte	0x3d28
 10920 50f8 00       		.byte	0
 10921 50f9 39       		.uleb128 0x39
 10922 50fa 00000000 		.4byte	.LASF852
 10923 50fe 42       		.byte	0x42
 10924 50ff B602     		.2byte	0x2b6
 10925 5101 0D       		.byte	0xd
 10926 5102 0C510000 		.4byte	0x510c
 10927 5106 01       		.uleb128 0x1
 10928 5107 0A4F0000 		.4byte	0x4f0a
 10929 510b 00       		.byte	0
 10930 510c 39       		.uleb128 0x39
 10931 510d 00000000 		.4byte	.LASF853
 10932 5111 42       		.byte	0x42
 10933 5112 3001     		.2byte	0x130
 10934 5114 0D       		.byte	0xd
 10935 5115 24510000 		.4byte	0x5124
 10936 5119 01       		.uleb128 0x1
 10937 511a 0A4F0000 		.4byte	0x4f0a
 10938 511e 01       		.uleb128 0x1
 10939 511f 6C400000 		.4byte	0x406c
 10940 5123 00       		.byte	0
 10941 5124 0B       		.uleb128 0xb
 10942 5125 00000000 		.4byte	.LASF854
 10943 5129 42       		.byte	0x42
 10944 512a 3401     		.2byte	0x134
 10945 512c 0C       		.byte	0xc
 10946 512d D43A0000 		.4byte	0x3ad4
 10947 5131 4A510000 		.4byte	0x514a
 10948 5135 01       		.uleb128 0x1
 10949 5136 0A4F0000 		.4byte	0x4f0a
 10950 513a 01       		.uleb128 0x1
 10951 513b 6C400000 		.4byte	0x406c
 10952 513f 01       		.uleb128 0x1
 10953 5140 D43A0000 		.4byte	0x3ad4
 10954 5144 01       		.uleb128 0x1
 10955 5145 6D3A0000 		.4byte	0x3a6d
 10956 5149 00       		.byte	0
 10957 514a 47       		.uleb128 0x47
 10958 514b 00000000 		.4byte	.LASF855
 10959 514f 42       		.byte	0x42
 10960 5150 AD       		.byte	0xad
AARCH64 GAS  obj/extInstr.s 			page 402


 10961 5151 0E       		.byte	0xe
 10962 5152 0A4F0000 		.4byte	0x4f0a
 10963 5156 10       		.uleb128 0x10
 10964 5157 00000000 		.4byte	.LASF856
 10965 515b 42       		.byte	0x42
 10966 515c BB       		.byte	0xbb
 10967 515d 0E       		.byte	0xe
 10968 515e 6C400000 		.4byte	0x406c
 10969 5162 6C510000 		.4byte	0x516c
 10970 5166 01       		.uleb128 0x1
 10971 5167 6C400000 		.4byte	0x406c
 10972 516b 00       		.byte	0
 10973 516c 0B       		.uleb128 0xb
 10974 516d 00000000 		.4byte	.LASF857
 10975 5171 42       		.byte	0x42
 10976 5172 7F02     		.2byte	0x27f
 10977 5174 0C       		.byte	0xc
 10978 5175 D43A0000 		.4byte	0x3ad4
 10979 5179 88510000 		.4byte	0x5188
 10980 517d 01       		.uleb128 0x1
 10981 517e D43A0000 		.4byte	0x3ad4
 10982 5182 01       		.uleb128 0x1
 10983 5183 0A4F0000 		.4byte	0x4f0a
 10984 5187 00       		.byte	0
 10985 5188 11       		.uleb128 0x11
 10986 5189 08       		.byte	0x8
 10987 518a 7C260000 		.4byte	0x267c
 10988 518e 11       		.uleb128 0x11
 10989 518f 08       		.byte	0x8
 10990 5190 89260000 		.4byte	0x2689
 10991 5194 11       		.uleb128 0x11
 10992 5195 08       		.byte	0x8
 10993 5196 CB340000 		.4byte	0x34cb
 10994 519a 11       		.uleb128 0x11
 10995 519b 08       		.byte	0x8
 10996 519c D7340000 		.4byte	0x34d7
 10997 51a0 09       		.uleb128 0x9
 10998 51a1 08       		.byte	0x8
 10999 51a2 4E000000 		.4byte	0x4e
 11000 51a6 0C       		.uleb128 0xc
 11001 51a7 A0510000 		.4byte	0x51a0
 11002 51ab 46       		.uleb128 0x46
 11003 51ac 08       		.byte	0x8
 11004 51ad D3230000 		.4byte	0x23d3
 11005 51b1 21       		.uleb128 0x21
 11006 51b2 4E3B0000 		.4byte	0x3b4e
 11007 51b6 C1510000 		.4byte	0x51c1
 11008 51ba 22       		.uleb128 0x22
 11009 51bb 793A0000 		.4byte	0x3a79
 11010 51bf 0F       		.byte	0xf
 11011 51c0 00       		.byte	0
 11012 51c1 09       		.uleb128 0x9
 11013 51c2 08       		.byte	0x8
 11014 51c3 41000000 		.4byte	0x41
 11015 51c7 0C       		.uleb128 0xc
 11016 51c8 C1510000 		.4byte	0x51c1
 11017 51cc 09       		.uleb128 0x9
AARCH64 GAS  obj/extInstr.s 			page 403


 11018 51cd 08       		.byte	0x8
 11019 51ce D21A0000 		.4byte	0x1ad2
 11020 51d2 0C       		.uleb128 0xc
 11021 51d3 CC510000 		.4byte	0x51cc
 11022 51d7 11       		.uleb128 0x11
 11023 51d8 08       		.byte	0x8
 11024 51d9 13010000 		.4byte	0x113
 11025 51dd 11       		.uleb128 0x11
 11026 51de 08       		.byte	0x8
 11027 51df 06030000 		.4byte	0x306
 11028 51e3 11       		.uleb128 0x11
 11029 51e4 08       		.byte	0x8
 11030 51e5 13030000 		.4byte	0x313
 11031 51e9 11       		.uleb128 0x11
 11032 51ea 08       		.byte	0x8
 11033 51eb D21A0000 		.4byte	0x1ad2
 11034 51ef 46       		.uleb128 0x46
 11035 51f0 08       		.byte	0x8
 11036 51f1 41000000 		.4byte	0x41
 11037 51f5 11       		.uleb128 0x11
 11038 51f6 08       		.byte	0x8
 11039 51f7 41000000 		.4byte	0x41
 11040 51fb 09       		.uleb128 0x9
 11041 51fc 08       		.byte	0x8
 11042 51fd 55270000 		.4byte	0x2755
 11043 5201 09       		.uleb128 0x9
 11044 5202 08       		.byte	0x8
 11045 5203 48280000 		.4byte	0x2848
 11046 5207 09       		.uleb128 0x9
 11047 5208 08       		.byte	0x8
 11048 5209 3F290000 		.4byte	0x293f
 11049 520d 11       		.uleb128 0x11
 11050 520e 08       		.byte	0x8
 11051 520f EE290000 		.4byte	0x29ee
 11052 5213 11       		.uleb128 0x11
 11053 5214 08       		.byte	0x8
 11054 5215 3F290000 		.4byte	0x293f
 11055 5219 06       		.uleb128 0x6
 11056 521a 00000000 		.4byte	.LASF858
 11057 521e 44       		.byte	0x44
 11058 521f 26       		.byte	0x26
 11059 5220 1B       		.byte	0x1b
 11060 5221 793A0000 		.4byte	0x3a79
 11061 5225 06       		.uleb128 0x6
 11062 5226 00000000 		.4byte	.LASF859
 11063 522a 45       		.byte	0x45
 11064 522b 30       		.byte	0x30
 11065 522c 1A       		.byte	0x1a
 11066 522d 31520000 		.4byte	0x5231
 11067 5231 09       		.uleb128 0x9
 11068 5232 08       		.byte	0x8
 11069 5233 A3460000 		.4byte	0x46a3
 11070 5237 10       		.uleb128 0x10
 11071 5238 00000000 		.4byte	.LASF860
 11072 523c 44       		.byte	0x44
 11073 523d 9F       		.byte	0x9f
 11074 523e 0C       		.byte	0xc
AARCH64 GAS  obj/extInstr.s 			page 404


 11075 523f D43A0000 		.4byte	0x3ad4
 11076 5243 52520000 		.4byte	0x5252
 11077 5247 01       		.uleb128 0x1
 11078 5248 E13A0000 		.4byte	0x3ae1
 11079 524c 01       		.uleb128 0x1
 11080 524d 19520000 		.4byte	0x5219
 11081 5251 00       		.byte	0
 11082 5252 10       		.uleb128 0x10
 11083 5253 00000000 		.4byte	.LASF861
 11084 5257 45       		.byte	0x45
 11085 5258 37       		.byte	0x37
 11086 5259 0F       		.byte	0xf
 11087 525a E13A0000 		.4byte	0x3ae1
 11088 525e 6D520000 		.4byte	0x526d
 11089 5262 01       		.uleb128 0x1
 11090 5263 E13A0000 		.4byte	0x3ae1
 11091 5267 01       		.uleb128 0x1
 11092 5268 25520000 		.4byte	0x5225
 11093 526c 00       		.byte	0
 11094 526d 10       		.uleb128 0x10
 11095 526e 00000000 		.4byte	.LASF862
 11096 5272 45       		.byte	0x45
 11097 5273 34       		.byte	0x34
 11098 5274 12       		.byte	0x12
 11099 5275 25520000 		.4byte	0x5225
 11100 5279 83520000 		.4byte	0x5283
 11101 527d 01       		.uleb128 0x1
 11102 527e 283D0000 		.4byte	0x3d28
 11103 5282 00       		.byte	0
 11104 5283 10       		.uleb128 0x10
 11105 5284 00000000 		.4byte	.LASF863
 11106 5288 44       		.byte	0x44
 11107 5289 9B       		.byte	0x9b
 11108 528a 11       		.byte	0x11
 11109 528b 19520000 		.4byte	0x5219
 11110 528f 99520000 		.4byte	0x5299
 11111 5293 01       		.uleb128 0x1
 11112 5294 283D0000 		.4byte	0x3d28
 11113 5298 00       		.byte	0
 11114 5299 11       		.uleb128 0x11
 11115 529a 08       		.byte	0x8
 11116 529b 6A2A0000 		.4byte	0x2a6a
 11117 529f 9601     		.uleb128 0x96
 11118 52a1 C32C0000 		.4byte	0x2cc3
 11119 52a5 09       		.uleb128 0x9
 11120 52a6 03       		.byte	0x3
 11121 52a7 00000000 		.8byte	_ZStL8__ioinit
 11121      00000000 
 11122 52af 09       		.uleb128 0x9
 11123 52b0 08       		.byte	0x8
 11124 52b1 D71A0000 		.4byte	0x1ad7
 11125 52b5 0C       		.uleb128 0xc
 11126 52b6 AF520000 		.4byte	0x52af
 11127 52ba 47       		.uleb128 0x47
 11128 52bb 00000000 		.4byte	.LASF864
 11129 52bf 46       		.byte	0x46
 11130 52c0 48       		.byte	0x48
AARCH64 GAS  obj/extInstr.s 			page 405


 11131 52c1 10       		.byte	0x10
 11132 52c2 484A0000 		.4byte	0x4a48
 11133 52c6 10       		.uleb128 0x10
 11134 52c7 00000000 		.4byte	.LASF865
 11135 52cb 46       		.byte	0x46
 11136 52cc 4E       		.byte	0x4e
 11137 52cd 0F       		.byte	0xf
 11138 52ce 663A0000 		.4byte	0x3a66
 11139 52d2 E1520000 		.4byte	0x52e1
 11140 52d6 01       		.uleb128 0x1
 11141 52d7 374A0000 		.4byte	0x4a37
 11142 52db 01       		.uleb128 0x1
 11143 52dc 374A0000 		.4byte	0x4a37
 11144 52e0 00       		.byte	0
 11145 52e1 10       		.uleb128 0x10
 11146 52e2 00000000 		.4byte	.LASF866
 11147 52e6 46       		.byte	0x46
 11148 52e7 52       		.byte	0x52
 11149 52e8 0F       		.byte	0xf
 11150 52e9 374A0000 		.4byte	0x4a37
 11151 52ed F7520000 		.4byte	0x52f7
 11152 52f1 01       		.uleb128 0x1
 11153 52f2 F7520000 		.4byte	0x52f7
 11154 52f6 00       		.byte	0
 11155 52f7 09       		.uleb128 0x9
 11156 52f8 08       		.byte	0x8
 11157 52f9 2A410000 		.4byte	0x412a
 11158 52fd 10       		.uleb128 0x10
 11159 52fe 00000000 		.4byte	.LASF867
 11160 5302 46       		.byte	0x46
 11161 5303 4B       		.byte	0x4b
 11162 5304 0F       		.byte	0xf
 11163 5305 374A0000 		.4byte	0x4a37
 11164 5309 13530000 		.4byte	0x5313
 11165 530d 01       		.uleb128 0x1
 11166 530e 13530000 		.4byte	0x5313
 11167 5312 00       		.byte	0
 11168 5313 09       		.uleb128 0x9
 11169 5314 08       		.byte	0x8
 11170 5315 374A0000 		.4byte	0x4a37
 11171 5319 10       		.uleb128 0x10
 11172 531a 00000000 		.4byte	.LASF868
 11173 531e 46       		.byte	0x46
 11174 531f 8B       		.byte	0x8b
 11175 5320 0E       		.byte	0xe
 11176 5321 6C400000 		.4byte	0x406c
 11177 5325 2F530000 		.4byte	0x532f
 11178 5329 01       		.uleb128 0x1
 11179 532a 24410000 		.4byte	0x4124
 11180 532e 00       		.byte	0
 11181 532f 10       		.uleb128 0x10
 11182 5330 00000000 		.4byte	.LASF869
 11183 5334 46       		.byte	0x46
 11184 5335 8E       		.byte	0x8e
 11185 5336 0E       		.byte	0xe
 11186 5337 6C400000 		.4byte	0x406c
 11187 533b 45530000 		.4byte	0x5345
AARCH64 GAS  obj/extInstr.s 			page 406


 11188 533f 01       		.uleb128 0x1
 11189 5340 45530000 		.4byte	0x5345
 11190 5344 00       		.byte	0
 11191 5345 09       		.uleb128 0x9
 11192 5346 08       		.byte	0x8
 11193 5347 434A0000 		.4byte	0x4a43
 11194 534b 10       		.uleb128 0x10
 11195 534c 00000000 		.4byte	.LASF870
 11196 5350 46       		.byte	0x46
 11197 5351 77       		.byte	0x77
 11198 5352 13       		.byte	0x13
 11199 5353 F7520000 		.4byte	0x52f7
 11200 5357 61530000 		.4byte	0x5361
 11201 535b 01       		.uleb128 0x1
 11202 535c 45530000 		.4byte	0x5345
 11203 5360 00       		.byte	0
 11204 5361 10       		.uleb128 0x10
 11205 5362 00000000 		.4byte	.LASF871
 11206 5366 46       		.byte	0x46
 11207 5367 7B       		.byte	0x7b
 11208 5368 13       		.byte	0x13
 11209 5369 F7520000 		.4byte	0x52f7
 11210 536d 77530000 		.4byte	0x5377
 11211 5371 01       		.uleb128 0x1
 11212 5372 45530000 		.4byte	0x5345
 11213 5376 00       		.byte	0
 11214 5377 09       		.uleb128 0x9
 11215 5378 08       		.byte	0x8
 11216 5379 45350000 		.4byte	0x3545
 11217 537d 0C       		.uleb128 0xc
 11218 537e 77530000 		.4byte	0x5377
 11219 5382 11       		.uleb128 0x11
 11220 5383 08       		.byte	0x8
 11221 5384 72400000 		.4byte	0x4072
 11222 5388 09       		.uleb128 0x9
 11223 5389 08       		.byte	0x8
 11224 538a 7F370000 		.4byte	0x377f
 11225 538e 0C       		.uleb128 0xc
 11226 538f 88530000 		.4byte	0x5388
 11227 5393 11       		.uleb128 0x11
 11228 5394 08       		.byte	0x8
 11229 5395 45350000 		.4byte	0x3545
 11230 5399 09       		.uleb128 0x9
 11231 539a 08       		.byte	0x8
 11232 539b 84370000 		.4byte	0x3784
 11233 539f 0C       		.uleb128 0xc
 11234 53a0 99530000 		.4byte	0x5399
 11235 53a4 11       		.uleb128 0x11
 11236 53a5 08       		.byte	0x8
 11237 53a6 2E3D0000 		.4byte	0x3d2e
 11238 53aa 09       		.uleb128 0x9
 11239 53ab 08       		.byte	0x8
 11240 53ac E8390000 		.4byte	0x39e8
 11241 53b0 0C       		.uleb128 0xc
 11242 53b1 AA530000 		.4byte	0x53aa
 11243 53b5 11       		.uleb128 0x11
 11244 53b6 08       		.byte	0x8
AARCH64 GAS  obj/extInstr.s 			page 407


 11245 53b7 84370000 		.4byte	0x3784
 11246 53bb 09       		.uleb128 0x9
 11247 53bc 08       		.byte	0x8
 11248 53bd 8C2D0000 		.4byte	0x2d8c
 11249 53c1 4F       		.uleb128 0x4f
 11250 53c2 B62D0000 		.4byte	0x2db6
 11251 53c6 4F       		.uleb128 0x4f
 11252 53c7 D42D0000 		.4byte	0x2dd4
 11253 53cb 9701     		.uleb128 0x97
 11254 53cd 00000000 		.4byte	.LASF1005
 11255 53d1 10       		.byte	0x10
 11256 53d2 10       		.byte	0x10
 11257 53d3 05       		.byte	0x5
 11258 53d4 0B       		.byte	0xb
 11259 53d5 14       		.byte	0x14
 11260 53d6 6D560000 		.4byte	0x566d
 11261 53da 4B       		.uleb128 0x4b
 11262 53db 10       		.byte	0x10
 11263 53dc 05       		.byte	0x5
 11264 53dd 0F       		.byte	0xf
 11265 53de 05       		.byte	0x5
 11266 53df 5C540000 		.4byte	0x545c
 11267 53e3 1F       		.uleb128 0x1f
 11268 53e4 00000000 		.4byte	.LASF872
 11269 53e8 05       		.byte	0x5
 11270 53e9 10       		.byte	0x10
 11271 53ea 10       		.byte	0x10
 11272 53eb 6D560000 		.4byte	0x566d
 11273 53ef 1F       		.uleb128 0x1f
 11274 53f0 00000000 		.4byte	.LASF873
 11275 53f4 05       		.byte	0x5
 11276 53f5 11       		.byte	0x11
 11277 53f6 11       		.byte	0x11
 11278 53f7 7D560000 		.4byte	0x567d
 11279 53fb 1F       		.uleb128 0x1f
 11280 53fc 00000000 		.4byte	.LASF874
 11281 5400 05       		.byte	0x5
 11282 5401 12       		.byte	0x12
 11283 5402 11       		.byte	0x11
 11284 5403 8D560000 		.4byte	0x568d
 11285 5407 1F       		.uleb128 0x1f
 11286 5408 00000000 		.4byte	.LASF875
 11287 540c 05       		.byte	0x5
 11288 540d 13       		.byte	0x13
 11289 540e 11       		.byte	0x11
 11290 540f 9D560000 		.4byte	0x569d
 11291 5413 1F       		.uleb128 0x1f
 11292 5414 00000000 		.4byte	.LASF876
 11293 5418 05       		.byte	0x5
 11294 5419 14       		.byte	0x14
 11295 541a 11       		.byte	0x11
 11296 541b AD560000 		.4byte	0x56ad
 11297 541f 1F       		.uleb128 0x1f
 11298 5420 00000000 		.4byte	.LASF877
 11299 5424 05       		.byte	0x5
 11300 5425 15       		.byte	0x15
 11301 5426 12       		.byte	0x12
AARCH64 GAS  obj/extInstr.s 			page 408


 11302 5427 BD560000 		.4byte	0x56bd
 11303 542b 1F       		.uleb128 0x1f
 11304 542c 00000000 		.4byte	.LASF878
 11305 5430 05       		.byte	0x5
 11306 5431 16       		.byte	0x16
 11307 5432 12       		.byte	0x12
 11308 5433 CD560000 		.4byte	0x56cd
 11309 5437 1F       		.uleb128 0x1f
 11310 5438 00000000 		.4byte	.LASF879
 11311 543c 05       		.byte	0x5
 11312 543d 17       		.byte	0x17
 11313 543e 12       		.byte	0x12
 11314 543f DD560000 		.4byte	0x56dd
 11315 5443 1F       		.uleb128 0x1f
 11316 5444 00000000 		.4byte	.LASF880
 11317 5448 05       		.byte	0x5
 11318 5449 18       		.byte	0x18
 11319 544a 0F       		.byte	0xf
 11320 544b ED560000 		.4byte	0x56ed
 11321 544f 1F       		.uleb128 0x1f
 11322 5450 00000000 		.4byte	.LASF881
 11323 5454 05       		.byte	0x5
 11324 5455 19       		.byte	0x19
 11325 5456 10       		.byte	0x10
 11326 5457 FD560000 		.4byte	0x56fd
 11327 545b 00       		.byte	0
 11328 545c 56       		.uleb128 0x56
 11329 545d DA530000 		.4byte	0x53da
 11330 5461 00       		.byte	0
 11331 5462 19       		.uleb128 0x19
 11332 5463 00000000 		.4byte	.LASF882
 11333 5467 05       		.byte	0x5
 11334 5468 69       		.byte	0x69
 11335 5469 11       		.byte	0x11
 11336 546a 00000000 		.4byte	.LASF883
 11337 546e 57280000 		.4byte	0x2857
 11338 5472 7A540000 		.4byte	0x547a
 11339 5476 80540000 		.4byte	0x5480
 11340 547a 02       		.uleb128 0x2
 11341 547b 0D570000 		.4byte	0x570d
 11342 547f 00       		.byte	0
 11343 5480 19       		.uleb128 0x19
 11344 5481 00000000 		.4byte	.LASF884
 11345 5485 05       		.byte	0x5
 11346 5486 6E       		.byte	0x6e
 11347 5487 11       		.byte	0x11
 11348 5488 00000000 		.4byte	.LASF885
 11349 548c 57280000 		.4byte	0x2857
 11350 5490 98540000 		.4byte	0x5498
 11351 5494 9E540000 		.4byte	0x549e
 11352 5498 02       		.uleb128 0x2
 11353 5499 0D570000 		.4byte	0x570d
 11354 549d 00       		.byte	0
 11355 549e 19       		.uleb128 0x19
 11356 549f 00000000 		.4byte	.LASF886
 11357 54a3 05       		.byte	0x5
 11358 54a4 73       		.byte	0x73
AARCH64 GAS  obj/extInstr.s 			page 409


 11359 54a5 11       		.byte	0x11
 11360 54a6 00000000 		.4byte	.LASF887
 11361 54aa 57280000 		.4byte	0x2857
 11362 54ae B6540000 		.4byte	0x54b6
 11363 54b2 BC540000 		.4byte	0x54bc
 11364 54b6 02       		.uleb128 0x2
 11365 54b7 0D570000 		.4byte	0x570d
 11366 54bb 00       		.byte	0
 11367 54bc 19       		.uleb128 0x19
 11368 54bd 00000000 		.4byte	.LASF888
 11369 54c1 05       		.byte	0x5
 11370 54c2 78       		.byte	0x78
 11371 54c3 11       		.byte	0x11
 11372 54c4 00000000 		.4byte	.LASF889
 11373 54c8 57280000 		.4byte	0x2857
 11374 54cc D4540000 		.4byte	0x54d4
 11375 54d0 DA540000 		.4byte	0x54da
 11376 54d4 02       		.uleb128 0x2
 11377 54d5 0D570000 		.4byte	0x570d
 11378 54d9 00       		.byte	0
 11379 54da 19       		.uleb128 0x19
 11380 54db 00000000 		.4byte	.LASF890
 11381 54df 05       		.byte	0x5
 11382 54e0 81       		.byte	0x81
 11383 54e1 11       		.byte	0x11
 11384 54e2 00000000 		.4byte	.LASF891
 11385 54e6 57280000 		.4byte	0x2857
 11386 54ea F2540000 		.4byte	0x54f2
 11387 54ee F8540000 		.4byte	0x54f8
 11388 54f2 02       		.uleb128 0x2
 11389 54f3 0D570000 		.4byte	0x570d
 11390 54f7 00       		.byte	0
 11391 54f8 19       		.uleb128 0x19
 11392 54f9 00000000 		.4byte	.LASF892
 11393 54fd 05       		.byte	0x5
 11394 54fe 86       		.byte	0x86
 11395 54ff 11       		.byte	0x11
 11396 5500 00000000 		.4byte	.LASF893
 11397 5504 57280000 		.4byte	0x2857
 11398 5508 10550000 		.4byte	0x5510
 11399 550c 16550000 		.4byte	0x5516
 11400 5510 02       		.uleb128 0x2
 11401 5511 0D570000 		.4byte	0x570d
 11402 5515 00       		.byte	0
 11403 5516 19       		.uleb128 0x19
 11404 5517 00000000 		.4byte	.LASF894
 11405 551b 05       		.byte	0x5
 11406 551c 8B       		.byte	0x8b
 11407 551d 11       		.byte	0x11
 11408 551e 00000000 		.4byte	.LASF895
 11409 5522 57280000 		.4byte	0x2857
 11410 5526 2E550000 		.4byte	0x552e
 11411 552a 34550000 		.4byte	0x5534
 11412 552e 02       		.uleb128 0x2
 11413 552f 0D570000 		.4byte	0x570d
 11414 5533 00       		.byte	0
 11415 5534 19       		.uleb128 0x19
AARCH64 GAS  obj/extInstr.s 			page 410


 11416 5535 00000000 		.4byte	.LASF896
 11417 5539 05       		.byte	0x5
 11418 553a 90       		.byte	0x90
 11419 553b 11       		.byte	0x11
 11420 553c 00000000 		.4byte	.LASF897
 11421 5540 57280000 		.4byte	0x2857
 11422 5544 4C550000 		.4byte	0x554c
 11423 5548 52550000 		.4byte	0x5552
 11424 554c 02       		.uleb128 0x2
 11425 554d 0D570000 		.4byte	0x570d
 11426 5551 00       		.byte	0
 11427 5552 19       		.uleb128 0x19
 11428 5553 00000000 		.4byte	.LASF898
 11429 5557 05       		.byte	0x5
 11430 5558 99       		.byte	0x99
 11431 5559 11       		.byte	0x11
 11432 555a 00000000 		.4byte	.LASF899
 11433 555e 57280000 		.4byte	0x2857
 11434 5562 6A550000 		.4byte	0x556a
 11435 5566 70550000 		.4byte	0x5570
 11436 556a 02       		.uleb128 0x2
 11437 556b 0D570000 		.4byte	0x570d
 11438 556f 00       		.byte	0
 11439 5570 19       		.uleb128 0x19
 11440 5571 00000000 		.4byte	.LASF900
 11441 5575 05       		.byte	0x5
 11442 5576 9E       		.byte	0x9e
 11443 5577 11       		.byte	0x11
 11444 5578 00000000 		.4byte	.LASF901
 11445 557c 57280000 		.4byte	0x2857
 11446 5580 88550000 		.4byte	0x5588
 11447 5584 8E550000 		.4byte	0x558e
 11448 5588 02       		.uleb128 0x2
 11449 5589 0D570000 		.4byte	0x570d
 11450 558d 00       		.byte	0
 11451 558e 19       		.uleb128 0x19
 11452 558f 00000000 		.4byte	.LASF902
 11453 5593 05       		.byte	0x5
 11454 5594 A3       		.byte	0xa3
 11455 5595 11       		.byte	0x11
 11456 5596 00000000 		.4byte	.LASF903
 11457 559a 57280000 		.4byte	0x2857
 11458 559e A6550000 		.4byte	0x55a6
 11459 55a2 AC550000 		.4byte	0x55ac
 11460 55a6 02       		.uleb128 0x2
 11461 55a7 0D570000 		.4byte	0x570d
 11462 55ab 00       		.byte	0
 11463 55ac 19       		.uleb128 0x19
 11464 55ad 00000000 		.4byte	.LASF904
 11465 55b1 05       		.byte	0x5
 11466 55b2 A8       		.byte	0xa8
 11467 55b3 11       		.byte	0x11
 11468 55b4 00000000 		.4byte	.LASF905
 11469 55b8 57280000 		.4byte	0x2857
 11470 55bc C4550000 		.4byte	0x55c4
 11471 55c0 CA550000 		.4byte	0x55ca
 11472 55c4 02       		.uleb128 0x2
AARCH64 GAS  obj/extInstr.s 			page 411


 11473 55c5 0D570000 		.4byte	0x570d
 11474 55c9 00       		.byte	0
 11475 55ca 19       		.uleb128 0x19
 11476 55cb 00000000 		.4byte	.LASF906
 11477 55cf 05       		.byte	0x5
 11478 55d0 B1       		.byte	0xb1
 11479 55d1 11       		.byte	0x11
 11480 55d2 00000000 		.4byte	.LASF907
 11481 55d6 57280000 		.4byte	0x2857
 11482 55da E2550000 		.4byte	0x55e2
 11483 55de E8550000 		.4byte	0x55e8
 11484 55e2 02       		.uleb128 0x2
 11485 55e3 0D570000 		.4byte	0x570d
 11486 55e7 00       		.byte	0
 11487 55e8 19       		.uleb128 0x19
 11488 55e9 00000000 		.4byte	.LASF908
 11489 55ed 05       		.byte	0x5
 11490 55ee B6       		.byte	0xb6
 11491 55ef 11       		.byte	0x11
 11492 55f0 00000000 		.4byte	.LASF909
 11493 55f4 57280000 		.4byte	0x2857
 11494 55f8 00560000 		.4byte	0x5600
 11495 55fc 06560000 		.4byte	0x5606
 11496 5600 02       		.uleb128 0x2
 11497 5601 0D570000 		.4byte	0x570d
 11498 5605 00       		.byte	0
 11499 5606 28       		.uleb128 0x28
 11500 5607 00000000 		.4byte	.LASF910
 11501 560b 05       		.byte	0x5
 11502 560c 2C       		.byte	0x2c
 11503 560d 27       		.byte	0x27
 11504 560e 00000000 		.4byte	.LASF911
 11505 5612 57280000 		.4byte	0x2857
 11506 5616 03       		.byte	0x3
 11507 5617 26560000 		.4byte	0x5626
 11508 561b 3B560000 		.4byte	0x563b
 11509 561f 1C       		.uleb128 0x1c
 11510 5620 5400     		.string	"T"
 11511 5622 1C3D0000 		.4byte	0x3d1c
 11512 5626 02       		.uleb128 0x2
 11513 5627 0D570000 		.4byte	0x570d
 11514 562b 01       		.uleb128 0x1
 11515 562c 163D0000 		.4byte	0x3d16
 11516 5630 01       		.uleb128 0x1
 11517 5631 D43A0000 		.4byte	0x3ad4
 11518 5635 01       		.uleb128 0x1
 11519 5636 D43A0000 		.4byte	0x3ad4
 11520 563a 00       		.byte	0
 11521 563b 5A       		.uleb128 0x5a
 11522 563c 00000000 		.4byte	.LASF912
 11523 5640 05       		.byte	0x5
 11524 5641 2C       		.byte	0x2c
 11525 5642 27       		.byte	0x27
 11526 5643 00000000 		.4byte	.LASF913
 11527 5647 57280000 		.4byte	0x2857
 11528 564b 03       		.byte	0x3
 11529 564c 57560000 		.4byte	0x5657
AARCH64 GAS  obj/extInstr.s 			page 412


 11530 5650 1C       		.uleb128 0x1c
 11531 5651 5400     		.string	"T"
 11532 5653 01460000 		.4byte	0x4601
 11533 5657 02       		.uleb128 0x2
 11534 5658 0D570000 		.4byte	0x570d
 11535 565c 01       		.uleb128 0x1
 11536 565d C5650000 		.4byte	0x65c5
 11537 5661 01       		.uleb128 0x1
 11538 5662 D43A0000 		.4byte	0x3ad4
 11539 5666 01       		.uleb128 0x1
 11540 5667 D43A0000 		.4byte	0x3ad4
 11541 566b 00       		.byte	0
 11542 566c 00       		.byte	0
 11543 566d 21       		.uleb128 0x21
 11544 566e 74470000 		.4byte	0x4774
 11545 5672 7D560000 		.4byte	0x567d
 11546 5676 22       		.uleb128 0x22
 11547 5677 793A0000 		.4byte	0x3a79
 11548 567b 0F       		.byte	0xf
 11549 567c 00       		.byte	0
 11550 567d 21       		.uleb128 0x21
 11551 567e 80470000 		.4byte	0x4780
 11552 5682 8D560000 		.4byte	0x568d
 11553 5686 22       		.uleb128 0x22
 11554 5687 793A0000 		.4byte	0x3a79
 11555 568b 07       		.byte	0x7
 11556 568c 00       		.byte	0
 11557 568d 21       		.uleb128 0x21
 11558 568e 8C470000 		.4byte	0x478c
 11559 5692 9D560000 		.4byte	0x569d
 11560 5696 22       		.uleb128 0x22
 11561 5697 793A0000 		.4byte	0x3a79
 11562 569b 03       		.byte	0x3
 11563 569c 00       		.byte	0
 11564 569d 21       		.uleb128 0x21
 11565 569e 98470000 		.4byte	0x4798
 11566 56a2 AD560000 		.4byte	0x56ad
 11567 56a6 22       		.uleb128 0x22
 11568 56a7 793A0000 		.4byte	0x3a79
 11569 56ab 01       		.byte	0x1
 11570 56ac 00       		.byte	0
 11571 56ad 21       		.uleb128 0x21
 11572 56ae A4470000 		.4byte	0x47a4
 11573 56b2 BD560000 		.4byte	0x56bd
 11574 56b6 22       		.uleb128 0x22
 11575 56b7 793A0000 		.4byte	0x3a79
 11576 56bb 0F       		.byte	0xf
 11577 56bc 00       		.byte	0
 11578 56bd 21       		.uleb128 0x21
 11579 56be B0470000 		.4byte	0x47b0
 11580 56c2 CD560000 		.4byte	0x56cd
 11581 56c6 22       		.uleb128 0x22
 11582 56c7 793A0000 		.4byte	0x3a79
 11583 56cb 07       		.byte	0x7
 11584 56cc 00       		.byte	0
 11585 56cd 21       		.uleb128 0x21
 11586 56ce BC470000 		.4byte	0x47bc
AARCH64 GAS  obj/extInstr.s 			page 413


 11587 56d2 DD560000 		.4byte	0x56dd
 11588 56d6 22       		.uleb128 0x22
 11589 56d7 793A0000 		.4byte	0x3a79
 11590 56db 03       		.byte	0x3
 11591 56dc 00       		.byte	0
 11592 56dd 21       		.uleb128 0x21
 11593 56de C8470000 		.4byte	0x47c8
 11594 56e2 ED560000 		.4byte	0x56ed
 11595 56e6 22       		.uleb128 0x22
 11596 56e7 793A0000 		.4byte	0x3a79
 11597 56eb 01       		.byte	0x1
 11598 56ec 00       		.byte	0
 11599 56ed 21       		.uleb128 0x21
 11600 56ee 5F3A0000 		.4byte	0x3a5f
 11601 56f2 FD560000 		.4byte	0x56fd
 11602 56f6 22       		.uleb128 0x22
 11603 56f7 793A0000 		.4byte	0x3a79
 11604 56fb 03       		.byte	0x3
 11605 56fc 00       		.byte	0
 11606 56fd 21       		.uleb128 0x21
 11607 56fe 663A0000 		.4byte	0x3a66
 11608 5702 0D570000 		.4byte	0x570d
 11609 5706 22       		.uleb128 0x22
 11610 5707 793A0000 		.4byte	0x3a79
 11611 570b 01       		.byte	0x1
 11612 570c 00       		.byte	0
 11613 570d 09       		.uleb128 0x9
 11614 570e 08       		.byte	0x8
 11615 570f CB530000 		.4byte	0x53cb
 11616 5713 0C       		.uleb128 0xc
 11617 5714 0D570000 		.4byte	0x570d
 11618 5718 4E       		.uleb128 0x4e
 11619 5719 04       		.byte	0x4
 11620 571a 05       		.byte	0x5
 11621 571b 11       		.byte	0x11
 11622 571c 29000000 		.4byte	0x29
 11623 5720 3A       		.uleb128 0x3a
 11624 5721 6100     		.string	"a"
 11625 5723 04       		.byte	0x4
 11626 5724 08       		.byte	0x8
 11627 5725 08       		.byte	0x8
 11628 5726 CB530000 		.4byte	0x53cb
 11629 572a 09       		.uleb128 0x9
 11630 572b 03       		.byte	0x3
 11631 572c 00000000 		.8byte	a
 11631      00000000 
 11632 5734 3A       		.uleb128 0x3a
 11633 5735 6200     		.string	"b"
 11634 5737 04       		.byte	0x4
 11635 5738 08       		.byte	0x8
 11636 5739 0A       		.byte	0xa
 11637 573a CB530000 		.4byte	0x53cb
 11638 573e 09       		.uleb128 0x9
 11639 573f 03       		.byte	0x3
 11640 5740 00000000 		.8byte	b
 11640      00000000 
 11641 5748 9801     		.uleb128 0x98
AARCH64 GAS  obj/extInstr.s 			page 414


 11642 574a 00000000 		.4byte	.LASF914
 11643 574e 04       		.byte	0x4
 11644 574f 08       		.byte	0x8
 11645 5750 0C       		.byte	0xc
 11646 5751 CB530000 		.4byte	0x53cb
 11647 5755 09       		.uleb128 0x9
 11648 5756 03       		.byte	0x3
 11649 5757 00000000 		.8byte	indx
 11649      00000000 
 11650 575f 3A       		.uleb128 0x3a
 11651 5760 7800     		.string	"x"
 11652 5762 04       		.byte	0x4
 11653 5763 08       		.byte	0x8
 11654 5764 11       		.byte	0x11
 11655 5765 CB530000 		.4byte	0x53cb
 11656 5769 09       		.uleb128 0x9
 11657 576a 03       		.byte	0x3
 11658 576b 00000000 		.8byte	x
 11658      00000000 
 11659 5773 3A       		.uleb128 0x3a
 11660 5774 7900     		.string	"y"
 11661 5776 04       		.byte	0x4
 11662 5777 08       		.byte	0x8
 11663 5778 13       		.byte	0x13
 11664 5779 CB530000 		.4byte	0x53cb
 11665 577d 09       		.uleb128 0x9
 11666 577e 03       		.byte	0x3
 11667 577f 00000000 		.8byte	y
 11667      00000000 
 11668 5787 3A       		.uleb128 0x3a
 11669 5788 613200   		.string	"a2"
 11670 578b 04       		.byte	0x4
 11671 578c 08       		.byte	0x8
 11672 578d 15       		.byte	0x15
 11673 578e CB530000 		.4byte	0x53cb
 11674 5792 09       		.uleb128 0x9
 11675 5793 03       		.byte	0x3
 11676 5794 00000000 		.8byte	a2
 11676      00000000 
 11677 579c 3A       		.uleb128 0x3a
 11678 579d 623200   		.string	"b2"
 11679 57a0 04       		.byte	0x4
 11680 57a1 08       		.byte	0x8
 11681 57a2 18       		.byte	0x18
 11682 57a3 CB530000 		.4byte	0x53cb
 11683 57a7 09       		.uleb128 0x9
 11684 57a8 03       		.byte	0x3
 11685 57a9 00000000 		.8byte	b2
 11685      00000000 
 11686 57b1 11       		.uleb128 0x11
 11687 57b2 08       		.byte	0x8
 11688 57b3 7D2E0000 		.4byte	0x2e7d
 11689 57b7 11       		.uleb128 0x11
 11690 57b8 08       		.byte	0x8
 11691 57b9 E22E0000 		.4byte	0x2ee2
 11692 57bd 9901     		.uleb128 0x99
 11693 57bf 00000000 		.4byte	.LASF921
AARCH64 GAS  obj/extInstr.s 			page 415


 11694 57c3 D13A0000 		.4byte	0x3ad1
 11695 57c7 9A01     		.uleb128 0x9a
 11696 57c9 00000000 		.4byte	.LASF1006
 11697 57cd 00000000 		.8byte	.LFB2817
 11697      00000000 
 11698 57d5 40000000 		.8byte	.LFE2817-.LFB2817
 11698      00000000 
 11699 57dd 01       		.uleb128 0x1
 11700 57de 9C       		.byte	0x9c
 11701 57df 3F580000 		.4byte	0x583f
 11702 57e3 29       		.uleb128 0x29
 11703 57e4 3F580000 		.4byte	0x583f
 11704 57e8 00000000 		.8byte	.LBI1001
 11704      00000000 
 11705 57f0 0100     		.2byte	.LVU300
 11706 57f2 00000000 		.4byte	.Ldebug_ranges0+0xa00
 11707 57f6 04       		.byte	0x4
 11708 57f7 40       		.byte	0x40
 11709 57f8 01       		.byte	0x1
 11710 57f9 9B01     		.uleb128 0x9b
 11711 57fb 56580000 		.4byte	0x5856
 11712 57ff FFFF     		.2byte	0xffff
 11713 5801 9C01     		.uleb128 0x9c
 11714 5803 4A580000 		.4byte	0x584a
 11715 5807 01       		.byte	0x1
 11716 5808 9D01     		.uleb128 0x9d
 11717 580a 00000000 		.8byte	.LVL65
 11717      00000000 
 11718 5812 1D580000 		.4byte	0x581d
 11719 5816 0F       		.uleb128 0xf
 11720 5817 01       		.uleb128 0x1
 11721 5818 50       		.byte	0x50
 11722 5819 02       		.uleb128 0x2
 11723 581a 83       		.byte	0x83
 11724 581b 00       		.sleb128 0
 11725 581c 00       		.byte	0
 11726 581d 9E01     		.uleb128 0x9e
 11727 581f 00000000 		.8byte	.LVL66
 11727      00000000 
 11728 5827 9E7A0000 		.4byte	0x7a9e
 11729 582b 0F       		.uleb128 0xf
 11730 582c 01       		.uleb128 0x1
 11731 582d 51       		.byte	0x51
 11732 582e 09       		.uleb128 0x9
 11733 582f 03       		.byte	0x3
 11734 5830 00000000 		.8byte	.LANCHOR0+112
 11734      00000000 
 11735 5838 9F01     		.uleb128 0x9f
 11736 583a 01       		.uleb128 0x1
 11737 583b 52       		.byte	0x52
 11738 583c 00       		.byte	0
 11739 583d 00       		.byte	0
 11740 583e 00       		.byte	0
 11741 583f A001     		.uleb128 0xa0
 11742 5841 00000000 		.4byte	.LASF1007
 11743 5845 01       		.byte	0x1
 11744 5846 63580000 		.4byte	0x5863
AARCH64 GAS  obj/extInstr.s 			page 416


 11745 584a 2E       		.uleb128 0x2e
 11746 584b 00000000 		.4byte	.LASF915
 11747 584f 04       		.byte	0x4
 11748 5850 40       		.byte	0x40
 11749 5851 01       		.byte	0x1
 11750 5852 D43A0000 		.4byte	0x3ad4
 11751 5856 2E       		.uleb128 0x2e
 11752 5857 00000000 		.4byte	.LASF916
 11753 585b 04       		.byte	0x4
 11754 585c 40       		.byte	0x40
 11755 585d 01       		.byte	0x1
 11756 585e D43A0000 		.4byte	0x3ad4
 11757 5862 00       		.byte	0
 11758 5863 0A       		.uleb128 0xa
 11759 5864 8B390000 		.4byte	0x398b
 11760 5868 71580000 		.4byte	0x5871
 11761 586c 03       		.byte	0x3
 11762 586d 7B580000 		.4byte	0x587b
 11763 5871 07       		.uleb128 0x7
 11764 5872 00000000 		.4byte	.LASF919
 11765 5876 B0530000 		.4byte	0x53b0
 11766 587a 00       		.byte	0
 11767 587b 11       		.uleb128 0x11
 11768 587c 08       		.byte	0x8
 11769 587d E8390000 		.4byte	0x39e8
 11770 5881 1A       		.uleb128 0x1a
 11771 5882 ED390000 		.4byte	0x39ed
 11772 5886 03       		.byte	0x3
 11773 5887 B8580000 		.4byte	0x58b8
 11774 588b 0E       		.uleb128 0xe
 11775 588c 00000000 		.4byte	.LASF544
 11776 5890 283D0000 		.4byte	0x3d28
 11777 5894 0E       		.uleb128 0xe
 11778 5895 00000000 		.4byte	.LASF545
 11779 5899 41000000 		.4byte	0x41
 11780 589d 15       		.uleb128 0x15
 11781 589e 00000000 		.4byte	.LASF917
 11782 58a2 2B       		.byte	0x2b
 11783 58a3 B204     		.2byte	0x4b2
 11784 58a5 3F       		.byte	0x3f
 11785 58a6 7B580000 		.4byte	0x587b
 11786 58aa 15       		.uleb128 0x15
 11787 58ab 00000000 		.4byte	.LASF918
 11788 58af 2B       		.byte	0x2b
 11789 58b0 B304     		.2byte	0x4b3
 11790 58b2 38       		.byte	0x38
 11791 58b3 7B580000 		.4byte	0x587b
 11792 58b7 00       		.byte	0
 11793 58b8 11       		.uleb128 0x11
 11794 58b9 08       		.byte	0x8
 11795 58ba 7F370000 		.4byte	0x377f
 11796 58be 1A       		.uleb128 0x1a
 11797 58bf 1F3A0000 		.4byte	0x3a1f
 11798 58c3 03       		.byte	0x3
 11799 58c4 FE580000 		.4byte	0x58fe
 11800 58c8 0E       		.uleb128 0xe
 11801 58c9 00000000 		.4byte	.LASF568
AARCH64 GAS  obj/extInstr.s 			page 417


 11802 58cd 283D0000 		.4byte	0x3d28
 11803 58d1 0E       		.uleb128 0xe
 11804 58d2 00000000 		.4byte	.LASF569
 11805 58d6 6C400000 		.4byte	0x406c
 11806 58da 0E       		.uleb128 0xe
 11807 58db 00000000 		.4byte	.LASF545
 11808 58df 41000000 		.4byte	0x41
 11809 58e3 15       		.uleb128 0x15
 11810 58e4 00000000 		.4byte	.LASF917
 11811 58e8 2B       		.byte	0x2b
 11812 58e9 A504     		.2byte	0x4a5
 11813 58eb 40       		.byte	0x40
 11814 58ec 7B580000 		.4byte	0x587b
 11815 58f0 15       		.uleb128 0x15
 11816 58f1 00000000 		.4byte	.LASF918
 11817 58f5 2B       		.byte	0x2b
 11818 58f6 A604     		.2byte	0x4a6
 11819 58f8 39       		.byte	0x39
 11820 58f9 B8580000 		.4byte	0x58b8
 11821 58fd 00       		.byte	0
 11822 58fe 0A       		.uleb128 0xa
 11823 58ff 4C370000 		.4byte	0x374c
 11824 5903 0C590000 		.4byte	0x590c
 11825 5907 03       		.byte	0x3
 11826 5908 16590000 		.4byte	0x5916
 11827 590c 07       		.uleb128 0x7
 11828 590d 00000000 		.4byte	.LASF919
 11829 5911 8E530000 		.4byte	0x538e
 11830 5915 00       		.byte	0
 11831 5916 0A       		.uleb128 0xa
 11832 5917 7E350000 		.4byte	0x357e
 11833 591b 24590000 		.4byte	0x5924
 11834 591f 02       		.byte	0x2
 11835 5920 3B590000 		.4byte	0x593b
 11836 5924 07       		.uleb128 0x7
 11837 5925 00000000 		.4byte	.LASF919
 11838 5929 7D530000 		.4byte	0x537d
 11839 592d 25       		.uleb128 0x25
 11840 592e 5F5F6900 		.string	"__i"
 11841 5932 2B       		.byte	0x2b
 11842 5933 D203     		.2byte	0x3d2
 11843 5935 2A       		.byte	0x2a
 11844 5936 82530000 		.4byte	0x5382
 11845 593a 00       		.byte	0
 11846 593b 13       		.uleb128 0x13
 11847 593c 16590000 		.4byte	0x5916
 11848 5940 00000000 		.4byte	.LASF929
 11849 5944 4C590000 		.4byte	0x594c
 11850 5948 57590000 		.4byte	0x5957
 11851 594c 0D       		.uleb128 0xd
 11852 594d 24590000 		.4byte	0x5924
 11853 5951 0D       		.uleb128 0xd
 11854 5952 2D590000 		.4byte	0x592d
 11855 5956 00       		.byte	0
 11856 5957 0A       		.uleb128 0xa
 11857 5958 110E0000 		.4byte	0xe11
 11858 595c 65590000 		.4byte	0x5965
AARCH64 GAS  obj/extInstr.s 			page 418


 11859 5960 03       		.byte	0x3
 11860 5961 A5590000 		.4byte	0x59a5
 11861 5965 07       		.uleb128 0x7
 11862 5966 00000000 		.4byte	.LASF919
 11863 596a C7510000 		.4byte	0x51c7
 11864 596e 15       		.uleb128 0x15
 11865 596f 00000000 		.4byte	.LASF920
 11866 5973 0A       		.byte	0xa
 11867 5974 3705     		.2byte	0x537
 11868 5976 22       		.byte	0x22
 11869 5977 E9510000 		.4byte	0x51e9
 11870 597b 52       		.uleb128 0x52
 11871 597c 42       		.uleb128 0x42
 11872 597d 00000000 		.4byte	.LASF922
 11873 5981 0A       		.byte	0xa
 11874 5982 4905     		.2byte	0x549
 11875 5984 12       		.byte	0x12
 11876 5985 803A0000 		.4byte	0x3a80
 11877 5989 42       		.uleb128 0x42
 11878 598a 00000000 		.4byte	.LASF923
 11879 598e 0A       		.byte	0xa
 11880 598f 4A05     		.2byte	0x54a
 11881 5991 0C       		.byte	0xc
 11882 5992 D3230000 		.4byte	0x23d3
 11883 5996 42       		.uleb128 0x42
 11884 5997 00000000 		.4byte	.LASF924
 11885 599b 0A       		.byte	0xa
 11886 599c 4C05     		.2byte	0x54c
 11887 599e 0C       		.byte	0xc
 11888 599f 6C400000 		.4byte	0x406c
 11889 59a3 00       		.byte	0
 11890 59a4 00       		.byte	0
 11891 59a5 0A       		.uleb128 0xa
 11892 59a6 F8120000 		.4byte	0x12f8
 11893 59aa B3590000 		.4byte	0x59b3
 11894 59ae 03       		.byte	0x3
 11895 59af F1590000 		.4byte	0x59f1
 11896 59b3 07       		.uleb128 0x7
 11897 59b4 00000000 		.4byte	.LASF919
 11898 59b8 C7510000 		.4byte	0x51c7
 11899 59bc 15       		.uleb128 0x15
 11900 59bd 00000000 		.4byte	.LASF925
 11901 59c1 0A       		.byte	0xa
 11902 59c2 4A08     		.2byte	0x84a
 11903 59c4 20       		.byte	0x20
 11904 59c5 91100000 		.4byte	0x1091
 11905 59c9 15       		.uleb128 0x15
 11906 59ca 00000000 		.4byte	.LASF926
 11907 59ce 0A       		.byte	0xa
 11908 59cf 4A08     		.2byte	0x84a
 11909 59d1 37       		.byte	0x37
 11910 59d2 91100000 		.4byte	0x1091
 11911 59d6 15       		.uleb128 0x15
 11912 59d7 00000000 		.4byte	.LASF927
 11913 59db 0A       		.byte	0xa
 11914 59dc 4B08     		.2byte	0x84b
 11915 59de 10       		.byte	0x10
AARCH64 GAS  obj/extInstr.s 			page 419


 11916 59df 6C400000 		.4byte	0x406c
 11917 59e3 15       		.uleb128 0x15
 11918 59e4 00000000 		.4byte	.LASF928
 11919 59e8 0A       		.byte	0xa
 11920 59e9 4B08     		.2byte	0x84b
 11921 59eb 1E       		.byte	0x1e
 11922 59ec 6C400000 		.4byte	0x406c
 11923 59f0 00       		.byte	0
 11924 59f1 0A       		.uleb128 0xa
 11925 59f2 AB390000 		.4byte	0x39ab
 11926 59f6 085A0000 		.4byte	0x5a08
 11927 59fa 02       		.byte	0x2
 11928 59fb 1F5A0000 		.4byte	0x5a1f
 11929 59ff 0E       		.uleb128 0xe
 11930 5a00 00000000 		.4byte	.LASF563
 11931 5a04 6C400000 		.4byte	0x406c
 11932 5a08 07       		.uleb128 0x7
 11933 5a09 00000000 		.4byte	.LASF919
 11934 5a0d 9F530000 		.4byte	0x539f
 11935 5a11 25       		.uleb128 0x25
 11936 5a12 5F5F6900 		.string	"__i"
 11937 5a16 2B       		.byte	0x2b
 11938 5a17 DB03     		.2byte	0x3db
 11939 5a19 1F       		.byte	0x1f
 11940 5a1a B8580000 		.4byte	0x58b8
 11941 5a1e 00       		.byte	0
 11942 5a1f 13       		.uleb128 0x13
 11943 5a20 F1590000 		.4byte	0x59f1
 11944 5a24 00000000 		.4byte	.LASF930
 11945 5a28 395A0000 		.4byte	0x5a39
 11946 5a2c 445A0000 		.4byte	0x5a44
 11947 5a30 0E       		.uleb128 0xe
 11948 5a31 00000000 		.4byte	.LASF563
 11949 5a35 6C400000 		.4byte	0x406c
 11950 5a39 0D       		.uleb128 0xd
 11951 5a3a 085A0000 		.4byte	0x5a08
 11952 5a3e 0D       		.uleb128 0xd
 11953 5a3f 115A0000 		.4byte	0x5a11
 11954 5a43 00       		.byte	0
 11955 5a44 0A       		.uleb128 0xa
 11956 5a45 A4080000 		.4byte	0x8a4
 11957 5a49 525A0000 		.4byte	0x5a52
 11958 5a4d 03       		.byte	0x3
 11959 5a4e 5C5A0000 		.4byte	0x5a5c
 11960 5a52 07       		.uleb128 0x7
 11961 5a53 00000000 		.4byte	.LASF919
 11962 5a57 C7510000 		.4byte	0x51c7
 11963 5a5b 00       		.byte	0
 11964 5a5c 0A       		.uleb128 0xa
 11965 5a5d 64080000 		.4byte	0x864
 11966 5a61 6A5A0000 		.4byte	0x5a6a
 11967 5a65 03       		.byte	0x3
 11968 5a66 745A0000 		.4byte	0x5a74
 11969 5a6a 07       		.uleb128 0x7
 11970 5a6b 00000000 		.4byte	.LASF919
 11971 5a6f C7510000 		.4byte	0x51c7
 11972 5a73 00       		.byte	0
AARCH64 GAS  obj/extInstr.s 			page 420


 11973 5a74 1A       		.uleb128 0x1a
 11974 5a75 EE2E0000 		.4byte	0x2eee
 11975 5a79 03       		.byte	0x3
 11976 5a7a 945A0000 		.4byte	0x5a94
 11977 5a7e 1C       		.uleb128 0x1c
 11978 5a7f 5F547000 		.string	"_Tp"
 11979 5a83 553B0000 		.4byte	0x3b55
 11980 5a87 16       		.uleb128 0x16
 11981 5a88 5F5F7200 		.string	"__r"
 11982 5a8c 25       		.byte	0x25
 11983 5a8d 8C       		.byte	0x8c
 11984 5a8e 14       		.byte	0x14
 11985 5a8f 854A0000 		.4byte	0x4a85
 11986 5a93 00       		.byte	0
 11987 5a94 1A       		.uleb128 0x1a
 11988 5a95 112F0000 		.4byte	0x2f11
 11989 5a99 03       		.byte	0x3
 11990 5a9a B45A0000 		.4byte	0x5ab4
 11991 5a9e 1C       		.uleb128 0x1c
 11992 5a9f 5F547000 		.string	"_Tp"
 11993 5aa3 553B0000 		.4byte	0x3b55
 11994 5aa7 16       		.uleb128 0x16
 11995 5aa8 5F5F7200 		.string	"__r"
 11996 5aac 25       		.byte	0x25
 11997 5aad 31       		.byte	0x31
 11998 5aae 16       		.byte	0x16
 11999 5aaf 854A0000 		.4byte	0x4a85
 12000 5ab3 00       		.byte	0
 12001 5ab4 0A       		.uleb128 0xa
 12002 5ab5 49330000 		.4byte	0x3349
 12003 5ab9 C25A0000 		.4byte	0x5ac2
 12004 5abd 03       		.byte	0x3
 12005 5abe E45A0000 		.4byte	0x5ae4
 12006 5ac2 07       		.uleb128 0x7
 12007 5ac3 00000000 		.4byte	.LASF919
 12008 5ac7 6E4A0000 		.4byte	0x4a6e
 12009 5acb 16       		.uleb128 0x16
 12010 5acc 5F5F7000 		.string	"__p"
 12011 5ad0 0C       		.byte	0xc
 12012 5ad1 78       		.byte	0x78
 12013 5ad2 17       		.byte	0x17
 12014 5ad3 6C400000 		.4byte	0x406c
 12015 5ad7 16       		.uleb128 0x16
 12016 5ad8 5F5F7400 		.string	"__t"
 12017 5adc 0C       		.byte	0xc
 12018 5add 78       		.byte	0x78
 12019 5ade 26       		.byte	0x26
 12020 5adf 3C330000 		.4byte	0x333c
 12021 5ae3 00       		.byte	0
 12022 5ae4 0A       		.uleb128 0xa
 12023 5ae5 AB070000 		.4byte	0x7ab
 12024 5ae9 F25A0000 		.4byte	0x5af2
 12025 5aed 03       		.byte	0x3
 12026 5aee 095B0000 		.4byte	0x5b09
 12027 5af2 07       		.uleb128 0x7
 12028 5af3 00000000 		.4byte	.LASF919
 12029 5af7 C7510000 		.4byte	0x51c7
AARCH64 GAS  obj/extInstr.s 			page 421


 12030 5afb 15       		.uleb128 0x15
 12031 5afc 00000000 		.4byte	.LASF920
 12032 5b00 0A       		.byte	0xa
 12033 5b01 9902     		.2byte	0x299
 12034 5b03 25       		.byte	0x25
 12035 5b04 E9510000 		.4byte	0x51e9
 12036 5b08 00       		.byte	0
 12037 5b09 0A       		.uleb128 0xa
 12038 5b0a 831A0000 		.4byte	0x1a83
 12039 5b0e 205B0000 		.4byte	0x5b20
 12040 5b12 03       		.byte	0x3
 12041 5b13 445B0000 		.4byte	0x5b44
 12042 5b17 0E       		.uleb128 0xe
 12043 5b18 00000000 		.4byte	.LASF253
 12044 5b1c 6C400000 		.4byte	0x406c
 12045 5b20 07       		.uleb128 0x7
 12046 5b21 00000000 		.4byte	.LASF919
 12047 5b25 C7510000 		.4byte	0x51c7
 12048 5b29 15       		.uleb128 0x15
 12049 5b2a 00000000 		.4byte	.LASF931
 12050 5b2e 0A       		.byte	0xa
 12051 5b2f BE05     		.2byte	0x5be
 12052 5b31 1F       		.byte	0x1f
 12053 5b32 6C400000 		.4byte	0x406c
 12054 5b36 15       		.uleb128 0x15
 12055 5b37 00000000 		.4byte	.LASF932
 12056 5b3b 0A       		.byte	0xa
 12057 5b3c BE05     		.2byte	0x5be
 12058 5b3e 37       		.byte	0x37
 12059 5b3f 6C400000 		.4byte	0x406c
 12060 5b43 00       		.byte	0
 12061 5b44 09       		.uleb128 0x9
 12062 5b45 08       		.byte	0x8
 12063 5b46 592B0000 		.4byte	0x2b59
 12064 5b4a 09       		.uleb128 0x9
 12065 5b4b 08       		.byte	0x8
 12066 5b4c 1A2C0000 		.4byte	0x2c1a
 12067 5b50 0C       		.uleb128 0xc
 12068 5b51 4A5B0000 		.4byte	0x5b4a
 12069 5b55 0A       		.uleb128 0xa
 12070 5b56 662B0000 		.4byte	0x2b66
 12071 5b5a 635B0000 		.4byte	0x5b63
 12072 5b5e 03       		.byte	0x3
 12073 5b5f 6D5B0000 		.4byte	0x5b6d
 12074 5b63 07       		.uleb128 0x7
 12075 5b64 00000000 		.4byte	.LASF919
 12076 5b68 505B0000 		.4byte	0x5b50
 12077 5b6c 00       		.byte	0
 12078 5b6d 0A       		.uleb128 0xa
 12079 5b6e 862B0000 		.4byte	0x2b86
 12080 5b72 7B5B0000 		.4byte	0x5b7b
 12081 5b76 03       		.byte	0x3
 12082 5b77 855B0000 		.4byte	0x5b85
 12083 5b7b 07       		.uleb128 0x7
 12084 5b7c 00000000 		.4byte	.LASF919
 12085 5b80 505B0000 		.4byte	0x5b50
 12086 5b84 00       		.byte	0
AARCH64 GAS  obj/extInstr.s 			page 422


 12087 5b85 0A       		.uleb128 0xa
 12088 5b86 A62B0000 		.4byte	0x2ba6
 12089 5b8a 935B0000 		.4byte	0x5b93
 12090 5b8e 03       		.byte	0x3
 12091 5b8f 9D5B0000 		.4byte	0x5b9d
 12092 5b93 07       		.uleb128 0x7
 12093 5b94 00000000 		.4byte	.LASF919
 12094 5b98 505B0000 		.4byte	0x5b50
 12095 5b9c 00       		.byte	0
 12096 5b9d 0A       		.uleb128 0xa
 12097 5b9e B3050000 		.4byte	0x5b3
 12098 5ba2 AB5B0000 		.4byte	0x5bab
 12099 5ba6 02       		.byte	0x2
 12100 5ba7 C25B0000 		.4byte	0x5bc2
 12101 5bab 07       		.uleb128 0x7
 12102 5bac 00000000 		.4byte	.LASF919
 12103 5bb0 C7510000 		.4byte	0x51c7
 12104 5bb4 25       		.uleb128 0x25
 12105 5bb5 5F5F6100 		.string	"__a"
 12106 5bb9 0A       		.byte	0xa
 12107 5bba B801     		.2byte	0x1b8
 12108 5bbc 22       		.byte	0x22
 12109 5bbd 964A0000 		.4byte	0x4a96
 12110 5bc1 00       		.byte	0
 12111 5bc2 13       		.uleb128 0x13
 12112 5bc3 9D5B0000 		.4byte	0x5b9d
 12113 5bc7 00000000 		.4byte	.LASF933
 12114 5bcb D35B0000 		.4byte	0x5bd3
 12115 5bcf DE5B0000 		.4byte	0x5bde
 12116 5bd3 0D       		.uleb128 0xd
 12117 5bd4 AB5B0000 		.4byte	0x5bab
 12118 5bd8 0D       		.uleb128 0xd
 12119 5bd9 B45B0000 		.4byte	0x5bb4
 12120 5bdd 00       		.byte	0
 12121 5bde 0A       		.uleb128 0xa
 12122 5bdf 97050000 		.4byte	0x597
 12123 5be3 EC5B0000 		.4byte	0x5bec
 12124 5be7 02       		.byte	0x2
 12125 5be8 F65B0000 		.4byte	0x5bf6
 12126 5bec 07       		.uleb128 0x7
 12127 5bed 00000000 		.4byte	.LASF919
 12128 5bf1 C7510000 		.4byte	0x51c7
 12129 5bf5 00       		.byte	0
 12130 5bf6 13       		.uleb128 0x13
 12131 5bf7 DE5B0000 		.4byte	0x5bde
 12132 5bfb 00000000 		.4byte	.LASF934
 12133 5bff 075C0000 		.4byte	0x5c07
 12134 5c03 0D5C0000 		.4byte	0x5c0d
 12135 5c07 0D       		.uleb128 0xd
 12136 5c08 EC5B0000 		.4byte	0x5bec
 12137 5c0c 00       		.byte	0
 12138 5c0d 09       		.uleb128 0x9
 12139 5c0e 08       		.byte	0x8
 12140 5c0f 502B0000 		.4byte	0x2b50
 12141 5c13 0C       		.uleb128 0xc
 12142 5c14 0D5C0000 		.4byte	0x5c0d
 12143 5c18 0A       		.uleb128 0xa
AARCH64 GAS  obj/extInstr.s 			page 423


 12144 5c19 C62B0000 		.4byte	0x2bc6
 12145 5c1d 265C0000 		.4byte	0x5c26
 12146 5c21 02       		.byte	0x2
 12147 5c22 305C0000 		.4byte	0x5c30
 12148 5c26 07       		.uleb128 0x7
 12149 5c27 00000000 		.4byte	.LASF919
 12150 5c2b 135C0000 		.4byte	0x5c13
 12151 5c2f 00       		.byte	0
 12152 5c30 13       		.uleb128 0x13
 12153 5c31 185C0000 		.4byte	0x5c18
 12154 5c35 00000000 		.4byte	.LASF935
 12155 5c39 415C0000 		.4byte	0x5c41
 12156 5c3d 475C0000 		.4byte	0x5c47
 12157 5c41 0D       		.uleb128 0xd
 12158 5c42 265C0000 		.4byte	0x5c26
 12159 5c46 00       		.byte	0
 12160 5c47 0A       		.uleb128 0xa
 12161 5c48 B5030000 		.4byte	0x3b5
 12162 5c4c 555C0000 		.4byte	0x5c55
 12163 5c50 03       		.byte	0x3
 12164 5c51 865C0000 		.4byte	0x5c86
 12165 5c55 07       		.uleb128 0x7
 12166 5c56 00000000 		.4byte	.LASF919
 12167 5c5a D2510000 		.4byte	0x51d2
 12168 5c5e 15       		.uleb128 0x15
 12169 5c5f 00000000 		.4byte	.LASF826
 12170 5c63 0A       		.byte	0xa
 12171 5c64 4901     		.2byte	0x149
 12172 5c66 1A       		.byte	0x1a
 12173 5c67 13010000 		.4byte	0x113
 12174 5c6b 15       		.uleb128 0x15
 12175 5c6c 00000000 		.4byte	.LASF936
 12176 5c70 0A       		.byte	0xa
 12177 5c71 4901     		.2byte	0x149
 12178 5c73 2B       		.byte	0x2b
 12179 5c74 13010000 		.4byte	0x113
 12180 5c78 42       		.uleb128 0x42
 12181 5c79 00000000 		.4byte	.LASF937
 12182 5c7d 0A       		.byte	0xa
 12183 5c7e 4B01     		.2byte	0x14b
 12184 5c80 0D       		.byte	0xd
 12185 5c81 F6450000 		.4byte	0x45f6
 12186 5c85 00       		.byte	0
 12187 5c86 1A       		.uleb128 0x1a
 12188 5c87 BE2E0000 		.4byte	0x2ebe
 12189 5c8b 03       		.byte	0x3
 12190 5c8c 9D5C0000 		.4byte	0x5c9d
 12191 5c90 16       		.uleb128 0x16
 12192 5c91 5F5F7200 		.string	"__r"
 12193 5c95 24       		.byte	0x24
 12194 5c96 92       		.byte	0x92
 12195 5c97 31       		.byte	0x31
 12196 5c98 B7570000 		.4byte	0x57b7
 12197 5c9c 00       		.byte	0
 12198 5c9d 1A       		.uleb128 0x1a
 12199 5c9e CD260000 		.4byte	0x26cd
 12200 5ca2 03       		.byte	0x3
AARCH64 GAS  obj/extInstr.s 			page 424


 12201 5ca3 CF5C0000 		.4byte	0x5ccf
 12202 5ca7 25       		.uleb128 0x25
 12203 5ca8 5F5F6100 		.string	"__a"
 12204 5cac 0B       		.byte	0xb
 12205 5cad EB01     		.2byte	0x1eb
 12206 5caf 22       		.byte	0x22
 12207 5cb0 88510000 		.4byte	0x5188
 12208 5cb4 25       		.uleb128 0x25
 12209 5cb5 5F5F7000 		.string	"__p"
 12210 5cb9 0B       		.byte	0xb
 12211 5cba EB01     		.2byte	0x1eb
 12212 5cbc 2F       		.byte	0x2f
 12213 5cbd 4F260000 		.4byte	0x264f
 12214 5cc1 25       		.uleb128 0x25
 12215 5cc2 5F5F6E00 		.string	"__n"
 12216 5cc6 0B       		.byte	0xb
 12217 5cc7 EB01     		.2byte	0x1eb
 12218 5cc9 3E       		.byte	0x3e
 12219 5cca 8E260000 		.4byte	0x268e
 12220 5cce 00       		.byte	0
 12221 5ccf 0A       		.uleb128 0xa
 12222 5cd0 57320000 		.4byte	0x3257
 12223 5cd4 DD5C0000 		.4byte	0x5cdd
 12224 5cd8 02       		.byte	0x2
 12225 5cd9 EC5C0000 		.4byte	0x5cec
 12226 5cdd 07       		.uleb128 0x7
 12227 5cde 00000000 		.4byte	.LASF919
 12228 5ce2 6E4A0000 		.4byte	0x4a6e
 12229 5ce6 01       		.uleb128 0x1
 12230 5ce7 734A0000 		.4byte	0x4a73
 12231 5ceb 00       		.byte	0
 12232 5cec 13       		.uleb128 0x13
 12233 5ced CF5C0000 		.4byte	0x5ccf
 12234 5cf1 00000000 		.4byte	.LASF938
 12235 5cf5 FD5C0000 		.4byte	0x5cfd
 12236 5cf9 085D0000 		.4byte	0x5d08
 12237 5cfd 0D       		.uleb128 0xd
 12238 5cfe DD5C0000 		.4byte	0x5cdd
 12239 5d02 0D       		.uleb128 0xd
 12240 5d03 E65C0000 		.4byte	0x5ce6
 12241 5d07 00       		.byte	0
 12242 5d08 1A       		.uleb128 0x1a
 12243 5d09 342F0000 		.4byte	0x2f34
 12244 5d0d 03       		.byte	0x3
 12245 5d0e 285D0000 		.4byte	0x5d28
 12246 5d12 1C       		.uleb128 0x1c
 12247 5d13 5F547000 		.string	"_Tp"
 12248 5d17 4E3B0000 		.4byte	0x3b4e
 12249 5d1b 16       		.uleb128 0x16
 12250 5d1c 5F5F7200 		.string	"__r"
 12251 5d20 25       		.byte	0x25
 12252 5d21 8C       		.byte	0x8c
 12253 5d22 14       		.byte	0x14
 12254 5d23 7F4A0000 		.4byte	0x4a7f
 12255 5d27 00       		.byte	0
 12256 5d28 1A       		.uleb128 0x1a
 12257 5d29 572F0000 		.4byte	0x2f57
AARCH64 GAS  obj/extInstr.s 			page 425


 12258 5d2d 03       		.byte	0x3
 12259 5d2e 485D0000 		.4byte	0x5d48
 12260 5d32 1C       		.uleb128 0x1c
 12261 5d33 5F547000 		.string	"_Tp"
 12262 5d37 4E3B0000 		.4byte	0x3b4e
 12263 5d3b 16       		.uleb128 0x16
 12264 5d3c 5F5F7200 		.string	"__r"
 12265 5d40 25       		.byte	0x25
 12266 5d41 31       		.byte	0x31
 12267 5d42 16       		.byte	0x16
 12268 5d43 7F4A0000 		.4byte	0x4a7f
 12269 5d47 00       		.byte	0
 12270 5d48 11       		.uleb128 0x11
 12271 5d49 08       		.byte	0x8
 12272 5d4a A12C0000 		.4byte	0x2ca1
 12273 5d4e 09       		.uleb128 0x9
 12274 5d4f 08       		.byte	0x8
 12275 5d50 A12C0000 		.4byte	0x2ca1
 12276 5d54 0C       		.uleb128 0xc
 12277 5d55 4E5D0000 		.4byte	0x5d4e
 12278 5d59 1A       		.uleb128 0x1a
 12279 5d5a 7A2F0000 		.4byte	0x2f7a
 12280 5d5e 03       		.byte	0x3
 12281 5d5f 795D0000 		.4byte	0x5d79
 12282 5d63 0E       		.uleb128 0xe
 12283 5d64 00000000 		.4byte	.LASF453
 12284 5d68 1F2C0000 		.4byte	0x2c1f
 12285 5d6c 16       		.uleb128 0x16
 12286 5d6d 5F5F6600 		.string	"__f"
 12287 5d71 02       		.byte	0x2
 12288 5d72 2F       		.byte	0x2f
 12289 5d73 21       		.byte	0x21
 12290 5d74 4E5D0000 		.4byte	0x5d4e
 12291 5d78 00       		.byte	0
 12292 5d79 09       		.uleb128 0x9
 12293 5d7a 08       		.byte	0x8
 12294 5d7b 6C300000 		.4byte	0x306c
 12295 5d7f 0C       		.uleb128 0xc
 12296 5d80 795D0000 		.4byte	0x5d79
 12297 5d84 0A       		.uleb128 0xa
 12298 5d85 A62F0000 		.4byte	0x2fa6
 12299 5d89 925D0000 		.4byte	0x5d92
 12300 5d8d 03       		.byte	0x3
 12301 5d8e 9C5D0000 		.4byte	0x5d9c
 12302 5d92 07       		.uleb128 0x7
 12303 5d93 00000000 		.4byte	.LASF919
 12304 5d97 7F5D0000 		.4byte	0x5d7f
 12305 5d9b 00       		.byte	0
 12306 5d9c 0A       		.uleb128 0xa
 12307 5d9d 62030000 		.4byte	0x362
 12308 5da1 AA5D0000 		.4byte	0x5daa
 12309 5da5 03       		.byte	0x3
 12310 5da6 CE5D0000 		.4byte	0x5dce
 12311 5daa 07       		.uleb128 0x7
 12312 5dab 00000000 		.4byte	.LASF919
 12313 5daf D2510000 		.4byte	0x51d2
 12314 5db3 15       		.uleb128 0x15
AARCH64 GAS  obj/extInstr.s 			page 426


 12315 5db4 00000000 		.4byte	.LASF826
 12316 5db8 0A       		.byte	0xa
 12317 5db9 3601     		.2byte	0x136
 12318 5dbb 1A       		.byte	0x1a
 12319 5dbc 13010000 		.4byte	0x113
 12320 5dc0 25       		.uleb128 0x25
 12321 5dc1 5F5F7300 		.string	"__s"
 12322 5dc5 0A       		.byte	0xa
 12323 5dc6 3601     		.2byte	0x136
 12324 5dc8 2D       		.byte	0x2d
 12325 5dc9 283D0000 		.4byte	0x3d28
 12326 5dcd 00       		.byte	0
 12327 5dce 09       		.uleb128 0x9
 12328 5dcf 08       		.byte	0x8
 12329 5dd0 6A1B0000 		.4byte	0x1b6a
 12330 5dd4 0C       		.uleb128 0xc
 12331 5dd5 CE5D0000 		.4byte	0x5dce
 12332 5dd9 53       		.uleb128 0x53
 12333 5dda ED1A0000 		.4byte	0x1aed
 12334 5dde E65D0000 		.4byte	0x5de6
 12335 5de2 FD5D0000 		.4byte	0x5dfd
 12336 5de6 07       		.uleb128 0x7
 12337 5de7 00000000 		.4byte	.LASF919
 12338 5deb D45D0000 		.4byte	0x5dd4
 12339 5def A101     		.uleb128 0xa1
 12340 5df1 00000000 		.4byte	.LASF939
 12341 5df5 09       		.byte	0x9
 12342 5df6 B4       		.byte	0xb4
 12343 5df7 10       		.byte	0x10
 12344 5df8 E01A0000 		.4byte	0x1ae0
 12345 5dfc 00       		.byte	0
 12346 5dfd 0A       		.uleb128 0xa
 12347 5dfe E22B0000 		.4byte	0x2be2
 12348 5e02 0B5E0000 		.4byte	0x5e0b
 12349 5e06 02       		.byte	0x2
 12350 5e07 1E5E0000 		.4byte	0x5e1e
 12351 5e0b 07       		.uleb128 0x7
 12352 5e0c 00000000 		.4byte	.LASF919
 12353 5e10 135C0000 		.4byte	0x5c13
 12354 5e14 07       		.uleb128 0x7
 12355 5e15 00000000 		.4byte	.LASF940
 12356 5e19 DC3A0000 		.4byte	0x3adc
 12357 5e1d 00       		.byte	0
 12358 5e1e 13       		.uleb128 0x13
 12359 5e1f FD5D0000 		.4byte	0x5dfd
 12360 5e23 00000000 		.4byte	.LASF941
 12361 5e27 2F5E0000 		.4byte	0x5e2f
 12362 5e2b 355E0000 		.4byte	0x5e35
 12363 5e2f 0D       		.uleb128 0xd
 12364 5e30 0B5E0000 		.4byte	0x5e0b
 12365 5e34 00       		.byte	0
 12366 5e35 13       		.uleb128 0x13
 12367 5e36 FD5D0000 		.4byte	0x5dfd
 12368 5e3a 00000000 		.4byte	.LASF942
 12369 5e3e 465E0000 		.4byte	0x5e46
 12370 5e42 4C5E0000 		.4byte	0x5e4c
 12371 5e46 0D       		.uleb128 0xd
AARCH64 GAS  obj/extInstr.s 			page 427


 12372 5e47 0B5E0000 		.4byte	0x5e0b
 12373 5e4b 00       		.byte	0
 12374 5e4c 0A       		.uleb128 0xa
 12375 5e4d 0C1B0000 		.4byte	0x1b0c
 12376 5e51 5A5E0000 		.4byte	0x5e5a
 12377 5e55 02       		.byte	0x2
 12378 5e56 705E0000 		.4byte	0x5e70
 12379 5e5a 07       		.uleb128 0x7
 12380 5e5b 00000000 		.4byte	.LASF919
 12381 5e5f B5520000 		.4byte	0x52b5
 12382 5e63 2E       		.uleb128 0x2e
 12383 5e64 00000000 		.4byte	.LASF943
 12384 5e68 09       		.byte	0x9
 12385 5e69 6F       		.byte	0x6f
 12386 5e6a 2A       		.byte	0x2a
 12387 5e6b 012A0000 		.4byte	0x2a01
 12388 5e6f 00       		.byte	0
 12389 5e70 13       		.uleb128 0x13
 12390 5e71 4C5E0000 		.4byte	0x5e4c
 12391 5e75 00000000 		.4byte	.LASF944
 12392 5e79 815E0000 		.4byte	0x5e81
 12393 5e7d 8C5E0000 		.4byte	0x5e8c
 12394 5e81 0D       		.uleb128 0xd
 12395 5e82 5A5E0000 		.4byte	0x5e5a
 12396 5e86 0D       		.uleb128 0xd
 12397 5e87 635E0000 		.4byte	0x5e63
 12398 5e8b 00       		.byte	0
 12399 5e8c 09       		.uleb128 0x9
 12400 5e8d 08       		.byte	0x8
 12401 5e8e 6A2A0000 		.4byte	0x2a6a
 12402 5e92 0C       		.uleb128 0xc
 12403 5e93 8C5E0000 		.4byte	0x5e8c
 12404 5e97 09       		.uleb128 0x9
 12405 5e98 08       		.byte	0x8
 12406 5e99 604A0000 		.4byte	0x4a60
 12407 5e9d 0C       		.uleb128 0xc
 12408 5e9e 975E0000 		.4byte	0x5e97
 12409 5ea2 0A       		.uleb128 0xa
 12410 5ea3 732A0000 		.4byte	0x2a73
 12411 5ea7 B05E0000 		.4byte	0x5eb0
 12412 5eab 02       		.byte	0x2
 12413 5eac CC5E0000 		.4byte	0x5ecc
 12414 5eb0 07       		.uleb128 0x7
 12415 5eb1 00000000 		.4byte	.LASF919
 12416 5eb5 925E0000 		.4byte	0x5e92
 12417 5eb9 07       		.uleb128 0x7
 12418 5eba 00000000 		.4byte	.LASF940
 12419 5ebe DC3A0000 		.4byte	0x3adc
 12420 5ec2 07       		.uleb128 0x7
 12421 5ec3 00000000 		.4byte	.LASF945
 12422 5ec7 9D5E0000 		.4byte	0x5e9d
 12423 5ecb 00       		.byte	0
 12424 5ecc 13       		.uleb128 0x13
 12425 5ecd A25E0000 		.4byte	0x5ea2
 12426 5ed1 00000000 		.4byte	.LASF946
 12427 5ed5 DD5E0000 		.4byte	0x5edd
 12428 5ed9 E85E0000 		.4byte	0x5ee8
AARCH64 GAS  obj/extInstr.s 			page 428


 12429 5edd 0D       		.uleb128 0xd
 12430 5ede B05E0000 		.4byte	0x5eb0
 12431 5ee2 0D       		.uleb128 0xd
 12432 5ee3 C25E0000 		.4byte	0x5ec2
 12433 5ee7 00       		.byte	0
 12434 5ee8 0A       		.uleb128 0xa
 12435 5ee9 9D2A0000 		.4byte	0x2a9d
 12436 5eed F65E0000 		.4byte	0x5ef6
 12437 5ef1 02       		.byte	0x2
 12438 5ef2 125F0000 		.4byte	0x5f12
 12439 5ef6 07       		.uleb128 0x7
 12440 5ef7 00000000 		.4byte	.LASF919
 12441 5efb 925E0000 		.4byte	0x5e92
 12442 5eff 07       		.uleb128 0x7
 12443 5f00 00000000 		.4byte	.LASF940
 12444 5f04 DC3A0000 		.4byte	0x3adc
 12445 5f08 07       		.uleb128 0x7
 12446 5f09 00000000 		.4byte	.LASF945
 12447 5f0d 9D5E0000 		.4byte	0x5e9d
 12448 5f11 00       		.byte	0
 12449 5f12 13       		.uleb128 0x13
 12450 5f13 E85E0000 		.4byte	0x5ee8
 12451 5f17 00000000 		.4byte	.LASF947
 12452 5f1b 235F0000 		.4byte	0x5f23
 12453 5f1f 2E5F0000 		.4byte	0x5f2e
 12454 5f23 0D       		.uleb128 0xd
 12455 5f24 F65E0000 		.4byte	0x5ef6
 12456 5f28 0D       		.uleb128 0xd
 12457 5f29 085F0000 		.4byte	0x5f08
 12458 5f2d 00       		.byte	0
 12459 5f2e 09       		.uleb128 0x9
 12460 5f2f 08       		.byte	0x8
 12461 5f30 9D2F0000 		.4byte	0x2f9d
 12462 5f34 0C       		.uleb128 0xc
 12463 5f35 2E5F0000 		.4byte	0x5f2e
 12464 5f39 0A       		.uleb128 0xa
 12465 5f3a C52F0000 		.4byte	0x2fc5
 12466 5f3e 475F0000 		.4byte	0x5f47
 12467 5f42 02       		.byte	0x2
 12468 5f43 5A5F0000 		.4byte	0x5f5a
 12469 5f47 07       		.uleb128 0x7
 12470 5f48 00000000 		.4byte	.LASF919
 12471 5f4c 345F0000 		.4byte	0x5f34
 12472 5f50 07       		.uleb128 0x7
 12473 5f51 00000000 		.4byte	.LASF940
 12474 5f55 DC3A0000 		.4byte	0x3adc
 12475 5f59 00       		.byte	0
 12476 5f5a 13       		.uleb128 0x13
 12477 5f5b 395F0000 		.4byte	0x5f39
 12478 5f5f 00000000 		.4byte	.LASF948
 12479 5f63 6B5F0000 		.4byte	0x5f6b
 12480 5f67 715F0000 		.4byte	0x5f71
 12481 5f6b 0D       		.uleb128 0xd
 12482 5f6c 475F0000 		.4byte	0x5f47
 12483 5f70 00       		.byte	0
 12484 5f71 13       		.uleb128 0x13
 12485 5f72 395F0000 		.4byte	0x5f39
AARCH64 GAS  obj/extInstr.s 			page 429


 12486 5f76 00000000 		.4byte	.LASF949
 12487 5f7a 825F0000 		.4byte	0x5f82
 12488 5f7e 885F0000 		.4byte	0x5f88
 12489 5f82 0D       		.uleb128 0xd
 12490 5f83 475F0000 		.4byte	0x5f47
 12491 5f87 00       		.byte	0
 12492 5f88 0A       		.uleb128 0xa
 12493 5f89 EB2F0000 		.4byte	0x2feb
 12494 5f8d 965F0000 		.4byte	0x5f96
 12495 5f91 02       		.byte	0x2
 12496 5f92 A05F0000 		.4byte	0x5fa0
 12497 5f96 07       		.uleb128 0x7
 12498 5f97 00000000 		.4byte	.LASF919
 12499 5f9b 345F0000 		.4byte	0x5f34
 12500 5f9f 00       		.byte	0
 12501 5fa0 13       		.uleb128 0x13
 12502 5fa1 885F0000 		.4byte	0x5f88
 12503 5fa5 00000000 		.4byte	.LASF950
 12504 5fa9 B15F0000 		.4byte	0x5fb1
 12505 5fad B75F0000 		.4byte	0x5fb7
 12506 5fb1 0D       		.uleb128 0xd
 12507 5fb2 965F0000 		.4byte	0x5f96
 12508 5fb6 00       		.byte	0
 12509 5fb7 53       		.uleb128 0x53
 12510 5fb8 9B110000 		.4byte	0x119b
 12511 5fbc C45F0000 		.4byte	0x5fc4
 12512 5fc0 02600000 		.4byte	0x6002
 12513 5fc4 07       		.uleb128 0x7
 12514 5fc5 00000000 		.4byte	.LASF919
 12515 5fc9 C7510000 		.4byte	0x51c7
 12516 5fcd 15       		.uleb128 0x15
 12517 5fce 00000000 		.4byte	.LASF826
 12518 5fd2 0A       		.byte	0xa
 12519 5fd3 8F07     		.2byte	0x78f
 12520 5fd5 19       		.byte	0x19
 12521 5fd6 13010000 		.4byte	0x113
 12522 5fda 15       		.uleb128 0x15
 12523 5fdb 00000000 		.4byte	.LASF951
 12524 5fdf 0A       		.byte	0xa
 12525 5fe0 8F07     		.2byte	0x78f
 12526 5fe2 2A       		.byte	0x2a
 12527 5fe3 13010000 		.4byte	0x113
 12528 5fe7 25       		.uleb128 0x25
 12529 5fe8 5F5F7300 		.string	"__s"
 12530 5fec 0A       		.byte	0xa
 12531 5fed 8F07     		.2byte	0x78f
 12532 5fef 3E       		.byte	0x3e
 12533 5ff0 283D0000 		.4byte	0x3d28
 12534 5ff4 15       		.uleb128 0x15
 12535 5ff5 00000000 		.4byte	.LASF952
 12536 5ff9 0A       		.byte	0xa
 12537 5ffa 9007     		.2byte	0x790
 12538 5ffc 12       		.byte	0x12
 12539 5ffd 13010000 		.4byte	0x113
 12540 6001 00       		.byte	0
 12541 6002 0A       		.uleb128 0xa
 12542 6003 43030000 		.4byte	0x343
AARCH64 GAS  obj/extInstr.s 			page 430


 12543 6007 10600000 		.4byte	0x6010
 12544 600b 03       		.byte	0x3
 12545 600c 1A600000 		.4byte	0x601a
 12546 6010 07       		.uleb128 0x7
 12547 6011 00000000 		.4byte	.LASF919
 12548 6015 D2510000 		.4byte	0x51d2
 12549 6019 00       		.byte	0
 12550 601a 0A       		.uleb128 0xa
 12551 601b E1010000 		.4byte	0x1e1
 12552 601f 28600000 		.4byte	0x6028
 12553 6023 03       		.byte	0x3
 12554 6024 32600000 		.4byte	0x6032
 12555 6028 07       		.uleb128 0x7
 12556 6029 00000000 		.4byte	.LASF919
 12557 602d D2510000 		.4byte	0x51d2
 12558 6031 00       		.byte	0
 12559 6032 0A       		.uleb128 0xa
 12560 6033 9D020000 		.4byte	0x29d
 12561 6037 40600000 		.4byte	0x6040
 12562 603b 03       		.byte	0x3
 12563 603c 56600000 		.4byte	0x6056
 12564 6040 07       		.uleb128 0x7
 12565 6041 00000000 		.4byte	.LASF919
 12566 6045 C7510000 		.4byte	0x51c7
 12567 6049 2E       		.uleb128 0x2e
 12568 604a 00000000 		.4byte	.LASF953
 12569 604e 0A       		.byte	0xa
 12570 604f EC       		.byte	0xec
 12571 6050 1C       		.byte	0x1c
 12572 6051 13010000 		.4byte	0x113
 12573 6055 00       		.byte	0
 12574 6056 0A       		.uleb128 0xa
 12575 6057 02240000 		.4byte	0x2402
 12576 605b 64600000 		.4byte	0x6064
 12577 605f 02       		.byte	0x2
 12578 6060 7A600000 		.4byte	0x607a
 12579 6064 07       		.uleb128 0x7
 12580 6065 00000000 		.4byte	.LASF919
 12581 6069 914A0000 		.4byte	0x4a91
 12582 606d 16       		.uleb128 0x16
 12583 606e 5F5F6100 		.string	"__a"
 12584 6072 0D       		.byte	0xd
 12585 6073 93       		.byte	0x93
 12586 6074 22       		.byte	0x22
 12587 6075 964A0000 		.4byte	0x4a96
 12588 6079 00       		.byte	0
 12589 607a 13       		.uleb128 0x13
 12590 607b 56600000 		.4byte	0x6056
 12591 607f 00000000 		.4byte	.LASF954
 12592 6083 8B600000 		.4byte	0x608b
 12593 6087 96600000 		.4byte	0x6096
 12594 608b 0D       		.uleb128 0xd
 12595 608c 64600000 		.4byte	0x6064
 12596 6090 0D       		.uleb128 0xd
 12597 6091 6D600000 		.4byte	0x606d
 12598 6095 00       		.byte	0
 12599 6096 1A       		.uleb128 0x1a
AARCH64 GAS  obj/extInstr.s 			page 431


 12600 6097 592E0000 		.4byte	0x2e59
 12601 609b 03       		.byte	0x3
 12602 609c AD600000 		.4byte	0x60ad
 12603 60a0 16       		.uleb128 0x16
 12604 60a1 5F5F7200 		.string	"__r"
 12605 60a5 24       		.byte	0x24
 12606 60a6 92       		.byte	0x92
 12607 60a7 31       		.byte	0x31
 12608 60a8 B1570000 		.4byte	0x57b1
 12609 60ac 00       		.byte	0
 12610 60ad 1A       		.uleb128 0x1a
 12611 60ae 71300000 		.4byte	0x3071
 12612 60b2 03       		.byte	0x3
 12613 60b3 D7600000 		.4byte	0x60d7
 12614 60b7 0E       		.uleb128 0xe
 12615 60b8 00000000 		.4byte	.LASF254
 12616 60bc 4E3B0000 		.4byte	0x3b4e
 12617 60c0 0E       		.uleb128 0xe
 12618 60c1 00000000 		.4byte	.LASF255
 12619 60c5 E2200000 		.4byte	0x20e2
 12620 60c9 15       		.uleb128 0x15
 12621 60ca 00000000 		.4byte	.LASF955
 12622 60ce 01       		.byte	0x1
 12623 60cf BF02     		.2byte	0x2bf
 12624 60d1 2B       		.byte	0x2b
 12625 60d2 99520000 		.4byte	0x5299
 12626 60d6 00       		.byte	0
 12627 60d7 0A       		.uleb128 0xa
 12628 60d8 14300000 		.4byte	0x3014
 12629 60dc E5600000 		.4byte	0x60e5
 12630 60e0 03       		.byte	0x3
 12631 60e1 FC600000 		.4byte	0x60fc
 12632 60e5 07       		.uleb128 0x7
 12633 60e6 00000000 		.4byte	.LASF919
 12634 60ea 7F5D0000 		.4byte	0x5d7f
 12635 60ee 25       		.uleb128 0x25
 12636 60ef 5F5F6300 		.string	"__c"
 12637 60f3 02       		.byte	0x2
 12638 60f4 C101     		.2byte	0x1c1
 12639 60f6 12       		.byte	0x12
 12640 60f7 4E3B0000 		.4byte	0x3b4e
 12641 60fb 00       		.byte	0
 12642 60fc 0A       		.uleb128 0xa
 12643 60fd 39300000 		.4byte	0x3039
 12644 6101 0A610000 		.4byte	0x610a
 12645 6105 03       		.byte	0x3
 12646 6106 20610000 		.4byte	0x6120
 12647 610a 07       		.uleb128 0x7
 12648 610b 00000000 		.4byte	.LASF919
 12649 610f 345F0000 		.4byte	0x5f34
 12650 6113 2E       		.uleb128 0x2e
 12651 6114 00000000 		.4byte	.LASF827
 12652 6118 02       		.byte	0x2
 12653 6119 9D       		.byte	0x9d
 12654 611a 18       		.byte	0x18
 12655 611b F3290000 		.4byte	0x29f3
 12656 611f 00       		.byte	0
AARCH64 GAS  obj/extInstr.s 			page 432


 12657 6120 11       		.uleb128 0x11
 12658 6121 08       		.byte	0x8
 12659 6122 C32A0000 		.4byte	0x2ac3
 12660 6126 0A       		.uleb128 0xa
 12661 6127 D02A0000 		.4byte	0x2ad0
 12662 612b 34610000 		.4byte	0x6134
 12663 612f 03       		.byte	0x3
 12664 6130 4A610000 		.4byte	0x614a
 12665 6134 07       		.uleb128 0x7
 12666 6135 00000000 		.4byte	.LASF919
 12667 6139 925E0000 		.4byte	0x5e92
 12668 613d 16       		.uleb128 0x16
 12669 613e 5F5F6E00 		.string	"__n"
 12670 6142 01       		.byte	0x1
 12671 6143 AA       		.byte	0xaa
 12672 6144 20       		.byte	0x20
 12673 6145 793A0000 		.4byte	0x3a79
 12674 6149 00       		.byte	0
 12675 614a 09       		.uleb128 0x9
 12676 614b 08       		.byte	0x8
 12677 614c 131C0000 		.4byte	0x1c13
 12678 6150 0C       		.uleb128 0xc
 12679 6151 4A610000 		.4byte	0x614a
 12680 6155 0A       		.uleb128 0xa
 12681 6156 861B0000 		.4byte	0x1b86
 12682 615a 63610000 		.4byte	0x6163
 12683 615e 03       		.byte	0x3
 12684 615f 6D610000 		.4byte	0x616d
 12685 6163 07       		.uleb128 0x7
 12686 6164 00000000 		.4byte	.LASF919
 12687 6168 50610000 		.4byte	0x6150
 12688 616c 00       		.byte	0
 12689 616d 1A       		.uleb128 0x1a
 12690 616e 9E300000 		.4byte	0x309e
 12691 6172 03       		.byte	0x3
 12692 6173 A2610000 		.4byte	0x61a2
 12693 6177 0E       		.uleb128 0xe
 12694 6178 00000000 		.4byte	.LASF254
 12695 617c 4E3B0000 		.4byte	0x3b4e
 12696 6180 0E       		.uleb128 0xe
 12697 6181 00000000 		.4byte	.LASF255
 12698 6185 E2200000 		.4byte	0x20e2
 12699 6189 2E       		.uleb128 0x2e
 12700 618a 00000000 		.4byte	.LASF955
 12701 618e 08       		.byte	0x8
 12702 618f EE       		.byte	0xee
 12703 6190 30       		.byte	0x30
 12704 6191 99520000 		.4byte	0x5299
 12705 6195 16       		.uleb128 0x16
 12706 6196 5F5F6600 		.string	"__f"
 12707 619a 08       		.byte	0x8
 12708 619b EE       		.byte	0xee
 12709 619c 3C       		.byte	0x3c
 12710 619d E42D0000 		.4byte	0x2de4
 12711 61a1 00       		.byte	0
 12712 61a2 09       		.uleb128 0x9
 12713 61a3 08       		.byte	0x8
AARCH64 GAS  obj/extInstr.s 			page 433


 12714 61a4 6F1B0000 		.4byte	0x1b6f
 12715 61a8 0C       		.uleb128 0xc
 12716 61a9 A2610000 		.4byte	0x61a2
 12717 61ad 0A       		.uleb128 0xa
 12718 61ae A61B0000 		.4byte	0x1ba6
 12719 61b2 BB610000 		.4byte	0x61bb
 12720 61b6 02       		.byte	0x2
 12721 61b7 D7610000 		.4byte	0x61d7
 12722 61bb 07       		.uleb128 0x7
 12723 61bc 00000000 		.4byte	.LASF919
 12724 61c0 A8610000 		.4byte	0x61a8
 12725 61c4 07       		.uleb128 0x7
 12726 61c5 00000000 		.4byte	.LASF940
 12727 61c9 DC3A0000 		.4byte	0x3adc
 12728 61cd 07       		.uleb128 0x7
 12729 61ce 00000000 		.4byte	.LASF945
 12730 61d2 9D5E0000 		.4byte	0x5e9d
 12731 61d6 00       		.byte	0
 12732 61d7 13       		.uleb128 0x13
 12733 61d8 AD610000 		.4byte	0x61ad
 12734 61dc 00000000 		.4byte	.LASF956
 12735 61e0 E8610000 		.4byte	0x61e8
 12736 61e4 EE610000 		.4byte	0x61ee
 12737 61e8 0D       		.uleb128 0xd
 12738 61e9 BB610000 		.4byte	0x61bb
 12739 61ed 00       		.byte	0
 12740 61ee 13       		.uleb128 0x13
 12741 61ef AD610000 		.4byte	0x61ad
 12742 61f3 00000000 		.4byte	.LASF957
 12743 61f7 FF610000 		.4byte	0x61ff
 12744 61fb 05620000 		.4byte	0x6205
 12745 61ff 0D       		.uleb128 0xd
 12746 6200 BB610000 		.4byte	0x61bb
 12747 6204 00       		.byte	0
 12748 6205 0A       		.uleb128 0xa
 12749 6206 D11B0000 		.4byte	0x1bd1
 12750 620a 13620000 		.4byte	0x6213
 12751 620e 02       		.byte	0x2
 12752 620f 2F620000 		.4byte	0x622f
 12753 6213 07       		.uleb128 0x7
 12754 6214 00000000 		.4byte	.LASF919
 12755 6218 A8610000 		.4byte	0x61a8
 12756 621c 07       		.uleb128 0x7
 12757 621d 00000000 		.4byte	.LASF940
 12758 6221 DC3A0000 		.4byte	0x3adc
 12759 6225 07       		.uleb128 0x7
 12760 6226 00000000 		.4byte	.LASF945
 12761 622a 9D5E0000 		.4byte	0x5e9d
 12762 622e 00       		.byte	0
 12763 622f 13       		.uleb128 0x13
 12764 6230 05620000 		.4byte	0x6205
 12765 6234 00000000 		.4byte	.LASF958
 12766 6238 40620000 		.4byte	0x6240
 12767 623c 46620000 		.4byte	0x6246
 12768 6240 0D       		.uleb128 0xd
 12769 6241 13620000 		.4byte	0x6213
 12770 6245 00       		.byte	0
AARCH64 GAS  obj/extInstr.s 			page 434


 12771 6246 68       		.uleb128 0x68
 12772 6247 2C1B0000 		.4byte	0x1b2c
 12773 624b 09       		.byte	0x9
 12774 624c 41       		.byte	0x41
 12775 624d 0B       		.byte	0xb
 12776 624e 57620000 		.4byte	0x6257
 12777 6252 02       		.byte	0x2
 12778 6253 6A620000 		.4byte	0x626a
 12779 6257 07       		.uleb128 0x7
 12780 6258 00000000 		.4byte	.LASF919
 12781 625c B5520000 		.4byte	0x52b5
 12782 6260 07       		.uleb128 0x7
 12783 6261 00000000 		.4byte	.LASF940
 12784 6265 DC3A0000 		.4byte	0x3adc
 12785 6269 00       		.byte	0
 12786 626a 13       		.uleb128 0x13
 12787 626b 46620000 		.4byte	0x6246
 12788 626f 00000000 		.4byte	.LASF959
 12789 6273 7B620000 		.4byte	0x627b
 12790 6277 81620000 		.4byte	0x6281
 12791 627b 0D       		.uleb128 0xd
 12792 627c 57620000 		.4byte	0x6257
 12793 6280 00       		.byte	0
 12794 6281 13       		.uleb128 0x13
 12795 6282 46620000 		.4byte	0x6246
 12796 6286 00000000 		.4byte	.LASF960
 12797 628a 92620000 		.4byte	0x6292
 12798 628e 98620000 		.4byte	0x6298
 12799 6292 0D       		.uleb128 0xd
 12800 6293 57620000 		.4byte	0x6257
 12801 6297 00       		.byte	0
 12802 6298 0A       		.uleb128 0xa
 12803 6299 16150000 		.4byte	0x1516
 12804 629d A6620000 		.4byte	0x62a6
 12805 62a1 03       		.byte	0x3
 12806 62a2 B0620000 		.4byte	0x62b0
 12807 62a6 07       		.uleb128 0x7
 12808 62a7 00000000 		.4byte	.LASF919
 12809 62ab D2510000 		.4byte	0x51d2
 12810 62af 00       		.byte	0
 12811 62b0 0A       		.uleb128 0xa
 12812 62b1 1E020000 		.4byte	0x21e
 12813 62b5 BE620000 		.4byte	0x62be
 12814 62b9 03       		.byte	0x3
 12815 62ba D4620000 		.4byte	0x62d4
 12816 62be 07       		.uleb128 0x7
 12817 62bf 00000000 		.4byte	.LASF919
 12818 62c3 C7510000 		.4byte	0x51c7
 12819 62c7 16       		.uleb128 0x16
 12820 62c8 5F5F6E00 		.string	"__n"
 12821 62cc 0A       		.byte	0xa
 12822 62cd D6       		.byte	0xd6
 12823 62ce 1F       		.byte	0x1f
 12824 62cf 13010000 		.4byte	0x113
 12825 62d3 00       		.byte	0
 12826 62d4 0A       		.uleb128 0xa
 12827 62d5 79010000 		.4byte	0x179
AARCH64 GAS  obj/extInstr.s 			page 435


 12828 62d9 E2620000 		.4byte	0x62e2
 12829 62dd 03       		.byte	0x3
 12830 62de F8620000 		.4byte	0x62f8
 12831 62e2 07       		.uleb128 0x7
 12832 62e3 00000000 		.4byte	.LASF919
 12833 62e7 C7510000 		.4byte	0x51c7
 12834 62eb 2E       		.uleb128 0x2e
 12835 62ec 00000000 		.4byte	.LASF961
 12836 62f0 0A       		.byte	0xa
 12837 62f1 B6       		.byte	0xb6
 12838 62f2 1B       		.byte	0x1b
 12839 62f3 13010000 		.4byte	0x113
 12840 62f7 00       		.byte	0
 12841 62f8 0A       		.uleb128 0xa
 12842 62f9 3D020000 		.4byte	0x23d
 12843 62fd 06630000 		.4byte	0x6306
 12844 6301 03       		.byte	0x3
 12845 6302 10630000 		.4byte	0x6310
 12846 6306 07       		.uleb128 0x7
 12847 6307 00000000 		.4byte	.LASF919
 12848 630b D2510000 		.4byte	0x51d2
 12849 630f 00       		.byte	0
 12850 6310 0A       		.uleb128 0xa
 12851 6311 85000000 		.4byte	0x85
 12852 6315 1E630000 		.4byte	0x631e
 12853 6319 02       		.byte	0x2
 12854 631a 40630000 		.4byte	0x6340
 12855 631e 07       		.uleb128 0x7
 12856 631f 00000000 		.4byte	.LASF919
 12857 6323 A6510000 		.4byte	0x51a6
 12858 6327 2E       		.uleb128 0x2e
 12859 6328 00000000 		.4byte	.LASF962
 12860 632c 0A       		.byte	0xa
 12861 632d 9F       		.byte	0x9f
 12862 632e 17       		.byte	0x17
 12863 632f CF000000 		.4byte	0xcf
 12864 6333 16       		.uleb128 0x16
 12865 6334 5F5F6100 		.string	"__a"
 12866 6338 0A       		.byte	0xa
 12867 6339 9F       		.byte	0x9f
 12868 633a 27       		.byte	0x27
 12869 633b AB510000 		.4byte	0x51ab
 12870 633f 00       		.byte	0
 12871 6340 13       		.uleb128 0x13
 12872 6341 10630000 		.4byte	0x6310
 12873 6345 00000000 		.4byte	.LASF963
 12874 6349 51630000 		.4byte	0x6351
 12875 634d 61630000 		.4byte	0x6361
 12876 6351 0D       		.uleb128 0xd
 12877 6352 1E630000 		.4byte	0x631e
 12878 6356 0D       		.uleb128 0xd
 12879 6357 27630000 		.4byte	0x6327
 12880 635b 0D       		.uleb128 0xd
 12881 635c 33630000 		.4byte	0x6333
 12882 6360 00       		.byte	0
 12883 6361 46       		.uleb128 0x46
 12884 6362 08       		.byte	0x8
AARCH64 GAS  obj/extInstr.s 			page 436


 12885 6363 0D2E0000 		.4byte	0x2e0d
 12886 6367 1A       		.uleb128 0x1a
 12887 6368 CF300000 		.4byte	0x30cf
 12888 636c 03       		.byte	0x3
 12889 636d 87630000 		.4byte	0x6387
 12890 6371 1C       		.uleb128 0x1c
 12891 6372 5F547000 		.string	"_Tp"
 12892 6376 9C4A0000 		.4byte	0x4a9c
 12893 637a 16       		.uleb128 0x16
 12894 637b 5F5F7400 		.string	"__t"
 12895 637f 25       		.byte	0x25
 12896 6380 65       		.byte	0x65
 12897 6381 10       		.byte	0x10
 12898 6382 9C4A0000 		.4byte	0x4a9c
 12899 6386 00       		.byte	0
 12900 6387 0A       		.uleb128 0xa
 12901 6388 24030000 		.4byte	0x324
 12902 638c 95630000 		.4byte	0x6395
 12903 6390 03       		.byte	0x3
 12904 6391 9F630000 		.4byte	0x639f
 12905 6395 07       		.uleb128 0x7
 12906 6396 00000000 		.4byte	.LASF919
 12907 639a C7510000 		.4byte	0x51c7
 12908 639e 00       		.byte	0
 12909 639f 0A       		.uleb128 0xa
 12910 63a0 83020000 		.4byte	0x283
 12911 63a4 AD630000 		.4byte	0x63ad
 12912 63a8 03       		.byte	0x3
 12913 63a9 B7630000 		.4byte	0x63b7
 12914 63ad 07       		.uleb128 0x7
 12915 63ae 00000000 		.4byte	.LASF919
 12916 63b2 C7510000 		.4byte	0x51c7
 12917 63b6 00       		.byte	0
 12918 63b7 0A       		.uleb128 0xa
 12919 63b8 61000000 		.4byte	0x61
 12920 63bc C5630000 		.4byte	0x63c5
 12921 63c0 02       		.byte	0x2
 12922 63c1 E7630000 		.4byte	0x63e7
 12923 63c5 07       		.uleb128 0x7
 12924 63c6 00000000 		.4byte	.LASF919
 12925 63ca A6510000 		.4byte	0x51a6
 12926 63ce 2E       		.uleb128 0x2e
 12927 63cf 00000000 		.4byte	.LASF962
 12928 63d3 0A       		.byte	0xa
 12929 63d4 9C       		.byte	0x9c
 12930 63d5 17       		.byte	0x17
 12931 63d6 CF000000 		.4byte	0xcf
 12932 63da 16       		.uleb128 0x16
 12933 63db 5F5F6100 		.string	"__a"
 12934 63df 0A       		.byte	0xa
 12935 63e0 9C       		.byte	0x9c
 12936 63e1 2C       		.byte	0x2c
 12937 63e2 964A0000 		.4byte	0x4a96
 12938 63e6 00       		.byte	0
 12939 63e7 13       		.uleb128 0x13
 12940 63e8 B7630000 		.4byte	0x63b7
 12941 63ec 00000000 		.4byte	.LASF964
AARCH64 GAS  obj/extInstr.s 			page 437


 12942 63f0 F8630000 		.4byte	0x63f8
 12943 63f4 08640000 		.4byte	0x6408
 12944 63f8 0D       		.uleb128 0xd
 12945 63f9 C5630000 		.4byte	0x63c5
 12946 63fd 0D       		.uleb128 0xd
 12947 63fe CE630000 		.4byte	0x63ce
 12948 6402 0D       		.uleb128 0xd
 12949 6403 DA630000 		.4byte	0x63da
 12950 6407 00       		.byte	0
 12951 6408 0A       		.uleb128 0xa
 12952 6409 B6010000 		.4byte	0x1b6
 12953 640d 16640000 		.4byte	0x6416
 12954 6411 03       		.byte	0x3
 12955 6412 20640000 		.4byte	0x6420
 12956 6416 07       		.uleb128 0x7
 12957 6417 00000000 		.4byte	.LASF919
 12958 641b C7510000 		.4byte	0x51c7
 12959 641f 00       		.byte	0
 12960 6420 0A       		.uleb128 0xa
 12961 6421 77320000 		.4byte	0x3277
 12962 6425 2E640000 		.4byte	0x642e
 12963 6429 02       		.byte	0x2
 12964 642a 41640000 		.4byte	0x6441
 12965 642e 07       		.uleb128 0x7
 12966 642f 00000000 		.4byte	.LASF919
 12967 6433 6E4A0000 		.4byte	0x4a6e
 12968 6437 07       		.uleb128 0x7
 12969 6438 00000000 		.4byte	.LASF940
 12970 643c DC3A0000 		.4byte	0x3adc
 12971 6440 00       		.byte	0
 12972 6441 13       		.uleb128 0x13
 12973 6442 20640000 		.4byte	0x6420
 12974 6446 00000000 		.4byte	.LASF965
 12975 644a 52640000 		.4byte	0x6452
 12976 644e 58640000 		.4byte	0x6458
 12977 6452 0D       		.uleb128 0xd
 12978 6453 2E640000 		.4byte	0x642e
 12979 6457 00       		.byte	0
 12980 6458 0A       		.uleb128 0xa
 12981 6459 3C320000 		.4byte	0x323c
 12982 645d 66640000 		.4byte	0x6466
 12983 6461 02       		.byte	0x2
 12984 6462 70640000 		.4byte	0x6470
 12985 6466 07       		.uleb128 0x7
 12986 6467 00000000 		.4byte	.LASF919
 12987 646b 6E4A0000 		.4byte	0x4a6e
 12988 646f 00       		.byte	0
 12989 6470 13       		.uleb128 0x13
 12990 6471 58640000 		.4byte	0x6458
 12991 6475 00000000 		.4byte	.LASF966
 12992 6479 81640000 		.4byte	0x6481
 12993 647d 87640000 		.4byte	0x6487
 12994 6481 0D       		.uleb128 0xd
 12995 6482 66640000 		.4byte	0x6466
 12996 6486 00       		.byte	0
 12997 6487 0A       		.uleb128 0xa
 12998 6488 98010000 		.4byte	0x198
AARCH64 GAS  obj/extInstr.s 			page 438


 12999 648c 95640000 		.4byte	0x6495
 13000 6490 03       		.byte	0x3
 13001 6491 9F640000 		.4byte	0x649f
 13002 6495 07       		.uleb128 0x7
 13003 6496 00000000 		.4byte	.LASF919
 13004 649a D2510000 		.4byte	0x51d2
 13005 649e 00       		.byte	0
 13006 649f 1A       		.uleb128 0x1a
 13007 64a0 F2300000 		.4byte	0x30f2
 13008 64a4 03       		.byte	0x3
 13009 64a5 DF640000 		.4byte	0x64df
 13010 64a9 0E       		.uleb128 0xe
 13011 64aa 00000000 		.4byte	.LASF254
 13012 64ae 4E3B0000 		.4byte	0x3b4e
 13013 64b2 0E       		.uleb128 0xe
 13014 64b3 00000000 		.4byte	.LASF255
 13015 64b7 E2200000 		.4byte	0x20e2
 13016 64bb 0E       		.uleb128 0xe
 13017 64bc 00000000 		.4byte	.LASF256
 13018 64c0 D3230000 		.4byte	0x23d3
 13019 64c4 15       		.uleb128 0x15
 13020 64c5 00000000 		.4byte	.LASF955
 13021 64c9 0A       		.byte	0xa
 13022 64ca 4419     		.2byte	0x1944
 13023 64cc 30       		.byte	0x30
 13024 64cd 99520000 		.4byte	0x5299
 13025 64d1 15       		.uleb128 0x15
 13026 64d2 00000000 		.4byte	.LASF920
 13027 64d6 0A       		.byte	0xa
 13028 64d7 4519     		.2byte	0x1945
 13029 64d9 36       		.byte	0x36
 13030 64da E9510000 		.4byte	0x51e9
 13031 64de 00       		.byte	0
 13032 64df 09       		.uleb128 0x9
 13033 64e0 08       		.byte	0x8
 13034 64e1 E5640000 		.4byte	0x64e5
 13035 64e5 67       		.uleb128 0x67
 13036 64e6 20610000 		.4byte	0x6120
 13037 64ea F4640000 		.4byte	0x64f4
 13038 64ee 01       		.uleb128 0x1
 13039 64ef 20610000 		.4byte	0x6120
 13040 64f3 00       		.byte	0
 13041 64f4 0A       		.uleb128 0xa
 13042 64f5 F42A0000 		.4byte	0x2af4
 13043 64f9 02650000 		.4byte	0x6502
 13044 64fd 03       		.byte	0x3
 13045 64fe 18650000 		.4byte	0x6518
 13046 6502 07       		.uleb128 0x7
 13047 6503 00000000 		.4byte	.LASF919
 13048 6507 925E0000 		.4byte	0x5e92
 13049 650b 2E       		.uleb128 0x2e
 13050 650c 00000000 		.4byte	.LASF967
 13051 6510 01       		.byte	0x1
 13052 6511 6C       		.byte	0x6c
 13053 6512 24       		.byte	0x24
 13054 6513 DF640000 		.4byte	0x64df
 13055 6517 00       		.byte	0
AARCH64 GAS  obj/extInstr.s 			page 439


 13056 6518 1A       		.uleb128 0x1a
 13057 6519 2D310000 		.4byte	0x312d
 13058 651d 03       		.byte	0x3
 13059 651e 42650000 		.4byte	0x6542
 13060 6522 0E       		.uleb128 0xe
 13061 6523 00000000 		.4byte	.LASF254
 13062 6527 4E3B0000 		.4byte	0x3b4e
 13063 652b 0E       		.uleb128 0xe
 13064 652c 00000000 		.4byte	.LASF255
 13065 6530 E2200000 		.4byte	0x20e2
 13066 6534 15       		.uleb128 0x15
 13067 6535 00000000 		.4byte	.LASF955
 13068 6539 01       		.byte	0x1
 13069 653a A902     		.2byte	0x2a9
 13070 653c 2A       		.byte	0x2a
 13071 653d 99520000 		.4byte	0x5299
 13072 6541 00       		.byte	0
 13073 6542 1A       		.uleb128 0x1a
 13074 6543 5A310000 		.4byte	0x315a
 13075 6547 03       		.byte	0x3
 13076 6548 70650000 		.4byte	0x6570
 13077 654c 0E       		.uleb128 0xe
 13078 654d 00000000 		.4byte	.LASF255
 13079 6551 E2200000 		.4byte	0x20e2
 13080 6555 15       		.uleb128 0x15
 13081 6556 00000000 		.4byte	.LASF968
 13082 655a 01       		.byte	0x1
 13083 655b 5E02     		.2byte	0x25e
 13084 655d 2E       		.byte	0x2e
 13085 655e 99520000 		.4byte	0x5299
 13086 6562 25       		.uleb128 0x25
 13087 6563 5F5F7300 		.string	"__s"
 13088 6567 01       		.byte	0x1
 13089 6568 5E02     		.2byte	0x25e
 13090 656a 41       		.byte	0x41
 13091 656b 283D0000 		.4byte	0x3d28
 13092 656f 00       		.byte	0
 13093 6570 0A       		.uleb128 0xa
 13094 6571 06560000 		.4byte	0x5606
 13095 6575 85650000 		.4byte	0x6585
 13096 6579 03       		.byte	0x3
 13097 657a C5650000 		.4byte	0x65c5
 13098 657e 1C       		.uleb128 0x1c
 13099 657f 5400     		.string	"T"
 13100 6581 1C3D0000 		.4byte	0x3d1c
 13101 6585 07       		.uleb128 0x7
 13102 6586 00000000 		.4byte	.LASF919
 13103 658a 13570000 		.4byte	0x5713
 13104 658e 16       		.uleb128 0x16
 13105 658f 7800     		.string	"x"
 13106 6591 05       		.byte	0x5
 13107 6592 2C       		.byte	0x2c
 13108 6593 3D       		.byte	0x3d
 13109 6594 163D0000 		.4byte	0x3d16
 13110 6598 16       		.uleb128 0x16
 13111 6599 6E00     		.string	"n"
 13112 659b 05       		.byte	0x5
AARCH64 GAS  obj/extInstr.s 			page 440


 13113 659c 2C       		.byte	0x2c
 13114 659d 44       		.byte	0x44
 13115 659e D43A0000 		.4byte	0x3ad4
 13116 65a2 16       		.uleb128 0x16
 13117 65a3 7700     		.string	"w"
 13118 65a5 05       		.byte	0x5
 13119 65a6 2C       		.byte	0x2c
 13120 65a7 4B       		.byte	0x4b
 13121 65a8 D43A0000 		.4byte	0x3ad4
 13122 65ac 48       		.uleb128 0x48
 13123 65ad 6F737300 		.string	"oss"
 13124 65b1 05       		.byte	0x5
 13125 65b2 2E       		.byte	0x2e
 13126 65b3 1C       		.byte	0x1c
 13127 65b4 83310000 		.4byte	0x3183
 13128 65b8 52       		.uleb128 0x52
 13129 65b9 48       		.uleb128 0x48
 13130 65ba 6900     		.string	"i"
 13131 65bc 05       		.byte	0x5
 13132 65bd 30       		.byte	0x30
 13133 65be 12       		.byte	0x12
 13134 65bf D43A0000 		.4byte	0x3ad4
 13135 65c3 00       		.byte	0
 13136 65c4 00       		.byte	0
 13137 65c5 09       		.uleb128 0x9
 13138 65c6 08       		.byte	0x8
 13139 65c7 08460000 		.4byte	0x4608
 13140 65cb 0A       		.uleb128 0xa
 13141 65cc 3B560000 		.4byte	0x563b
 13142 65d0 E0650000 		.4byte	0x65e0
 13143 65d4 03       		.byte	0x3
 13144 65d5 20660000 		.4byte	0x6620
 13145 65d9 1C       		.uleb128 0x1c
 13146 65da 5400     		.string	"T"
 13147 65dc 01460000 		.4byte	0x4601
 13148 65e0 07       		.uleb128 0x7
 13149 65e1 00000000 		.4byte	.LASF919
 13150 65e5 13570000 		.4byte	0x5713
 13151 65e9 16       		.uleb128 0x16
 13152 65ea 7800     		.string	"x"
 13153 65ec 05       		.byte	0x5
 13154 65ed 2C       		.byte	0x2c
 13155 65ee 3D       		.byte	0x3d
 13156 65ef C5650000 		.4byte	0x65c5
 13157 65f3 16       		.uleb128 0x16
 13158 65f4 6E00     		.string	"n"
 13159 65f6 05       		.byte	0x5
 13160 65f7 2C       		.byte	0x2c
 13161 65f8 44       		.byte	0x44
 13162 65f9 D43A0000 		.4byte	0x3ad4
 13163 65fd 16       		.uleb128 0x16
 13164 65fe 7700     		.string	"w"
 13165 6600 05       		.byte	0x5
 13166 6601 2C       		.byte	0x2c
 13167 6602 4B       		.byte	0x4b
 13168 6603 D43A0000 		.4byte	0x3ad4
 13169 6607 48       		.uleb128 0x48
AARCH64 GAS  obj/extInstr.s 			page 441


 13170 6608 6F737300 		.string	"oss"
 13171 660c 05       		.byte	0x5
 13172 660d 2E       		.byte	0x2e
 13173 660e 1C       		.byte	0x1c
 13174 660f 83310000 		.4byte	0x3183
 13175 6613 52       		.uleb128 0x52
 13176 6614 48       		.uleb128 0x48
 13177 6615 6900     		.string	"i"
 13178 6617 05       		.byte	0x5
 13179 6618 30       		.byte	0x30
 13180 6619 12       		.byte	0x12
 13181 661a D43A0000 		.4byte	0x3ad4
 13182 661e 00       		.byte	0
 13183 661f 00       		.byte	0
 13184 6620 0A       		.uleb128 0xa
 13185 6621 F6140000 		.4byte	0x14f6
 13186 6625 2E660000 		.4byte	0x662e
 13187 6629 03       		.byte	0x3
 13188 662a 38660000 		.4byte	0x6638
 13189 662e 07       		.uleb128 0x7
 13190 662f 00000000 		.4byte	.LASF919
 13191 6633 D2510000 		.4byte	0x51d2
 13192 6637 00       		.byte	0
 13193 6638 0A       		.uleb128 0xa
 13194 6639 FE090000 		.4byte	0x9fe
 13195 663d 46660000 		.4byte	0x6646
 13196 6641 03       		.byte	0x3
 13197 6642 50660000 		.4byte	0x6650
 13198 6646 07       		.uleb128 0x7
 13199 6647 00000000 		.4byte	.LASF919
 13200 664b D2510000 		.4byte	0x51d2
 13201 664f 00       		.byte	0
 13202 6650 0A       		.uleb128 0xa
 13203 6651 8A070000 		.4byte	0x78a
 13204 6655 5E660000 		.4byte	0x665e
 13205 6659 02       		.byte	0x2
 13206 665a 71660000 		.4byte	0x6671
 13207 665e 07       		.uleb128 0x7
 13208 665f 00000000 		.4byte	.LASF919
 13209 6663 C7510000 		.4byte	0x51c7
 13210 6667 07       		.uleb128 0x7
 13211 6668 00000000 		.4byte	.LASF940
 13212 666c DC3A0000 		.4byte	0x3adc
 13213 6670 00       		.byte	0
 13214 6671 13       		.uleb128 0x13
 13215 6672 50660000 		.4byte	0x6650
 13216 6676 00000000 		.4byte	.LASF969
 13217 667a 82660000 		.4byte	0x6682
 13218 667e 88660000 		.4byte	0x6688
 13219 6682 0D       		.uleb128 0xd
 13220 6683 5E660000 		.4byte	0x665e
 13221 6687 00       		.byte	0
 13222 6688 68       		.uleb128 0x68
 13223 6689 B6000000 		.4byte	0xb6
 13224 668d 0A       		.byte	0xa
 13225 668e 96       		.byte	0x96
 13226 668f 0E       		.byte	0xe
AARCH64 GAS  obj/extInstr.s 			page 442


 13227 6690 99660000 		.4byte	0x6699
 13228 6694 02       		.byte	0x2
 13229 6695 AC660000 		.4byte	0x66ac
 13230 6699 07       		.uleb128 0x7
 13231 669a 00000000 		.4byte	.LASF919
 13232 669e A6510000 		.4byte	0x51a6
 13233 66a2 07       		.uleb128 0x7
 13234 66a3 00000000 		.4byte	.LASF940
 13235 66a7 DC3A0000 		.4byte	0x3adc
 13236 66ab 00       		.byte	0
 13237 66ac 13       		.uleb128 0x13
 13238 66ad 88660000 		.4byte	0x6688
 13239 66b1 00000000 		.4byte	.LASF970
 13240 66b5 BD660000 		.4byte	0x66bd
 13241 66b9 C3660000 		.4byte	0x66c3
 13242 66bd 0D       		.uleb128 0xd
 13243 66be 99660000 		.4byte	0x6699
 13244 66c2 00       		.byte	0
 13245 66c3 0A       		.uleb128 0xa
 13246 66c4 47240000 		.4byte	0x2447
 13247 66c8 D1660000 		.4byte	0x66d1
 13248 66cc 02       		.byte	0x2
 13249 66cd E4660000 		.4byte	0x66e4
 13250 66d1 07       		.uleb128 0x7
 13251 66d2 00000000 		.4byte	.LASF919
 13252 66d6 914A0000 		.4byte	0x4a91
 13253 66da 07       		.uleb128 0x7
 13254 66db 00000000 		.4byte	.LASF940
 13255 66df DC3A0000 		.4byte	0x3adc
 13256 66e3 00       		.byte	0
 13257 66e4 13       		.uleb128 0x13
 13258 66e5 C3660000 		.4byte	0x66c3
 13259 66e9 00000000 		.4byte	.LASF971
 13260 66ed F5660000 		.4byte	0x66f5
 13261 66f1 FB660000 		.4byte	0x66fb
 13262 66f5 0D       		.uleb128 0xd
 13263 66f6 D1660000 		.4byte	0x66d1
 13264 66fa 00       		.byte	0
 13265 66fb 0A       		.uleb128 0xa
 13266 66fc E7230000 		.4byte	0x23e7
 13267 6700 09670000 		.4byte	0x6709
 13268 6704 02       		.byte	0x2
 13269 6705 13670000 		.4byte	0x6713
 13270 6709 07       		.uleb128 0x7
 13271 670a 00000000 		.4byte	.LASF919
 13272 670e 914A0000 		.4byte	0x4a91
 13273 6712 00       		.byte	0
 13274 6713 13       		.uleb128 0x13
 13275 6714 FB660000 		.4byte	0x66fb
 13276 6718 00000000 		.4byte	.LASF972
 13277 671c 24670000 		.4byte	0x6724
 13278 6720 2A670000 		.4byte	0x672a
 13279 6724 0D       		.uleb128 0xd
 13280 6725 09670000 		.4byte	0x6709
 13281 6729 00       		.byte	0
 13282 672a A201     		.uleb128 0xa2
 13283 672c 00000000 		.4byte	.LASF973
AARCH64 GAS  obj/extInstr.s 			page 443


 13284 6730 04       		.byte	0x4
 13285 6731 09       		.byte	0x9
 13286 6732 05       		.byte	0x5
 13287 6733 D43A0000 		.4byte	0x3ad4
 13288 6737 00000000 		.8byte	.LFB2202
 13288      00000000 
 13289 673f AC020000 		.8byte	.LFE2202-.LFB2202
 13289      00000000 
 13290 6747 01       		.uleb128 0x1
 13291 6748 9C       		.byte	0x9c
 13292 6749 DB770000 		.4byte	0x77db
 13293 674d 26       		.uleb128 0x26
 13294 674e 42650000 		.4byte	0x6542
 13295 6752 00000000 		.8byte	.LBI748
 13295      00000000 
 13296 675a 0100     		.2byte	.LVU92
 13297 675c 00000000 		.4byte	.Ldebug_ranges0+0xc0
 13298 6760 04       		.byte	0x4
 13299 6761 39       		.byte	0x39
 13300 6762 08       		.byte	0x8
 13301 6763 A0670000 		.4byte	0x67a0
 13302 6767 05       		.uleb128 0x5
 13303 6768 62650000 		.4byte	0x6562
 13304 676c 00000000 		.4byte	.LLST9
 13305 6770 00000000 		.4byte	.LVUS9
 13306 6774 0D       		.uleb128 0xd
 13307 6775 55650000 		.4byte	0x6555
 13308 6779 23       		.uleb128 0x23
 13309 677a 00000000 		.8byte	.LVL15
 13309      00000000 
 13310 6782 D4310000 		.4byte	0x31d4
 13311 6786 0F       		.uleb128 0xf
 13312 6787 01       		.uleb128 0x1
 13313 6788 50       		.byte	0x50
 13314 6789 02       		.uleb128 0x2
 13315 678a 89       		.byte	0x89
 13316 678b 00       		.sleb128 0
 13317 678c 0F       		.uleb128 0xf
 13318 678d 01       		.uleb128 0x1
 13319 678e 51       		.byte	0x51
 13320 678f 09       		.uleb128 0x9
 13321 6790 03       		.byte	0x3
 13322 6791 00000000 		.8byte	.LC0
 13322      00000000 
 13323 6799 0F       		.uleb128 0xf
 13324 679a 01       		.uleb128 0x1
 13325 679b 52       		.byte	0x52
 13326 679c 01       		.uleb128 0x1
 13327 679d 47       		.byte	0x47
 13328 679e 00       		.byte	0
 13329 679f 00       		.byte	0
 13330 67a0 26       		.uleb128 0x26
 13331 67a1 DB770000 		.4byte	0x77db
 13332 67a5 00000000 		.8byte	.LBI751
 13332      00000000 
 13333 67ad 0100     		.2byte	.LVU106
 13334 67af 00000000 		.4byte	.Ldebug_ranges0+0x100
AARCH64 GAS  obj/extInstr.s 			page 444


 13335 67b3 04       		.byte	0x4
 13336 67b4 3A       		.byte	0x3a
 13337 67b5 20       		.byte	0x20
 13338 67b6 BB690000 		.4byte	0x69bb
 13339 67ba 05       		.uleb128 0x5
 13340 67bb E9770000 		.4byte	0x77e9
 13341 67bf 00000000 		.4byte	.LLST10
 13342 67c3 00000000 		.4byte	.LVUS10
 13343 67c7 29       		.uleb128 0x29
 13344 67c8 70650000 		.4byte	0x6570
 13345 67cc 00000000 		.8byte	.LBI752
 13345      00000000 
 13346 67d4 0300     		.2byte	.LVU108
 13347 67d6 00000000 		.4byte	.Ldebug_ranges0+0x1b0
 13348 67da 05       		.byte	0x5
 13349 67db 88       		.byte	0x88
 13350 67dc 47       		.byte	0x47
 13351 67dd 05       		.uleb128 0x5
 13352 67de 85650000 		.4byte	0x6585
 13353 67e2 00000000 		.4byte	.LLST11
 13354 67e6 00000000 		.4byte	.LVUS11
 13355 67ea 05       		.uleb128 0x5
 13356 67eb A2650000 		.4byte	0x65a2
 13357 67ef 00000000 		.4byte	.LLST12
 13358 67f3 00000000 		.4byte	.LVUS12
 13359 67f7 05       		.uleb128 0x5
 13360 67f8 98650000 		.4byte	0x6598
 13361 67fc 00000000 		.4byte	.LLST12
 13362 6800 00000000 		.4byte	.LVUS12
 13363 6804 05       		.uleb128 0x5
 13364 6805 8E650000 		.4byte	0x658e
 13365 6809 00000000 		.4byte	.LLST14
 13366 680d 00000000 		.4byte	.LVUS14
 13367 6811 49       		.uleb128 0x49
 13368 6812 00000000 		.4byte	.Ldebug_ranges0+0x1b0
 13369 6816 69       		.uleb128 0x69
 13370 6817 AC650000 		.4byte	0x65ac
 13371 681b 03       		.uleb128 0x3
 13372 681c 91       		.byte	0x91
 13373 681d 887D     		.sleb128 -376
 13374 681f 6A       		.uleb128 0x6a
 13375 6820 B8650000 		.4byte	0x65b8
 13376 6824 00000000 		.4byte	.Ldebug_ranges0+0x250
 13377 6828 44690000 		.4byte	0x6944
 13378 682c 4A       		.uleb128 0x4a
 13379 682d B9650000 		.4byte	0x65b9
 13380 6831 00000000 		.4byte	.LLST15
 13381 6835 00000000 		.4byte	.LVUS15
 13382 6839 26       		.uleb128 0x26
 13383 683a 6D610000 		.4byte	0x616d
 13384 683e 00000000 		.8byte	.LBI755
 13384      00000000 
 13385 6846 0300     		.2byte	.LVU113
 13386 6848 00000000 		.4byte	.Ldebug_ranges0+0x2e0
 13387 684c 05       		.byte	0x5
 13388 684d 32       		.byte	0x32
 13389 684e 11       		.byte	0x11
AARCH64 GAS  obj/extInstr.s 			page 445


 13390 684f AA680000 		.4byte	0x68aa
 13391 6853 0D       		.uleb128 0xd
 13392 6854 95610000 		.4byte	0x6195
 13393 6858 05       		.uleb128 0x5
 13394 6859 89610000 		.4byte	0x6189
 13395 685d 00000000 		.4byte	.LLST16
 13396 6861 00000000 		.4byte	.LVUS16
 13397 6865 29       		.uleb128 0x29
 13398 6866 76780000 		.4byte	0x7876
 13399 686a 00000000 		.8byte	.LBI757
 13399      00000000 
 13400 6872 0400     		.2byte	.LVU114
 13401 6874 00000000 		.4byte	.Ldebug_ranges0+0x330
 13402 6878 08       		.byte	0x8
 13403 6879 F0       		.byte	0xf0
 13404 687a 11       		.byte	0x11
 13405 687b 05       		.uleb128 0x5
 13406 687c 8D780000 		.4byte	0x788d
 13407 6880 00000000 		.4byte	.LLST17
 13408 6884 00000000 		.4byte	.LVUS17
 13409 6888 05       		.uleb128 0x5
 13410 6889 84780000 		.4byte	0x7884
 13411 688d 00000000 		.4byte	.LLST18
 13412 6891 00000000 		.4byte	.LVUS18
 13413 6895 49       		.uleb128 0x49
 13414 6896 00000000 		.4byte	.Ldebug_ranges0+0x330
 13415 689a 4A       		.uleb128 0x4a
 13416 689b 9A780000 		.4byte	0x789a
 13417 689f 00000000 		.4byte	.LLST19
 13418 68a3 00000000 		.4byte	.LVUS19
 13419 68a7 00       		.byte	0
 13420 68a8 00       		.byte	0
 13421 68a9 00       		.byte	0
 13422 68aa 26       		.uleb128 0x26
 13423 68ab 42650000 		.4byte	0x6542
 13424 68af 00000000 		.8byte	.LBI768
 13424      00000000 
 13425 68b7 0100     		.2byte	.LVU257
 13426 68b9 00000000 		.4byte	.Ldebug_ranges0+0x380
 13427 68bd 05       		.byte	0x5
 13428 68be 35       		.byte	0x35
 13429 68bf 15       		.byte	0x15
 13430 68c0 FE680000 		.4byte	0x68fe
 13431 68c4 05       		.uleb128 0x5
 13432 68c5 62650000 		.4byte	0x6562
 13433 68c9 00000000 		.4byte	.LLST20
 13434 68cd 00000000 		.4byte	.LVUS20
 13435 68d1 05       		.uleb128 0x5
 13436 68d2 55650000 		.4byte	0x6555
 13437 68d6 00000000 		.4byte	.LLST21
 13438 68da 00000000 		.4byte	.LVUS21
 13439 68de 23       		.uleb128 0x23
 13440 68df 00000000 		.8byte	.LVL53
 13440      00000000 
 13441 68e7 D4310000 		.4byte	0x31d4
 13442 68eb 0F       		.uleb128 0xf
 13443 68ec 01       		.uleb128 0x1
AARCH64 GAS  obj/extInstr.s 			page 446


 13444 68ed 50       		.byte	0x50
 13445 68ee 02       		.uleb128 0x2
 13446 68ef 83       		.byte	0x83
 13447 68f0 00       		.sleb128 0
 13448 68f1 0F       		.uleb128 0xf
 13449 68f2 01       		.uleb128 0x1
 13450 68f3 51       		.byte	0x51
 13451 68f4 02       		.uleb128 0x2
 13452 68f5 89       		.byte	0x89
 13453 68f6 00       		.sleb128 0
 13454 68f7 0F       		.uleb128 0xf
 13455 68f8 01       		.uleb128 0x1
 13456 68f9 52       		.byte	0x52
 13457 68fa 01       		.uleb128 0x1
 13458 68fb 34       		.byte	0x34
 13459 68fc 00       		.byte	0
 13460 68fd 00       		.byte	0
 13461 68fe 29       		.uleb128 0x29
 13462 68ff 26610000 		.4byte	0x6126
 13463 6903 00000000 		.8byte	.LBI774
 13463      00000000 
 13464 690b 0200     		.2byte	.LVU125
 13465 690d 00000000 		.4byte	.Ldebug_ranges0+0x3d0
 13466 6911 05       		.byte	0x5
 13467 6912 32       		.byte	0x32
 13468 6913 21       		.byte	0x21
 13469 6914 05       		.uleb128 0x5
 13470 6915 3D610000 		.4byte	0x613d
 13471 6919 00000000 		.4byte	.LLST22
 13472 691d 00000000 		.4byte	.LVUS22
 13473 6921 05       		.uleb128 0x5
 13474 6922 34610000 		.4byte	0x6134
 13475 6926 00000000 		.4byte	.LLST23
 13476 692a 00000000 		.4byte	.LVUS23
 13477 692e 23       		.uleb128 0x23
 13478 692f 00000000 		.8byte	.LVL20
 13478      00000000 
 13479 6937 2A2B0000 		.4byte	0x2b2a
 13480 693b 0F       		.uleb128 0xf
 13481 693c 01       		.uleb128 0x1
 13482 693d 50       		.byte	0x50
 13483 693e 02       		.uleb128 0x2
 13484 693f 83       		.byte	0x83
 13485 6940 00       		.sleb128 0
 13486 6941 00       		.byte	0
 13487 6942 00       		.byte	0
 13488 6943 00       		.byte	0
 13489 6944 1E       		.uleb128 0x1e
 13490 6945 55610000 		.4byte	0x6155
 13491 6949 00000000 		.8byte	.LBI789
 13491      00000000 
 13492 6951 0100     		.2byte	.LVU132
 13493 6953 00000000 		.8byte	.LBB789
 13493      00000000 
 13494 695b 14000000 		.8byte	.LBE789-.LBB789
 13494      00000000 
 13495 6963 05       		.byte	0x5
AARCH64 GAS  obj/extInstr.s 			page 447


 13496 6964 38       		.byte	0x38
 13497 6965 18       		.byte	0x18
 13498 6966 8C690000 		.4byte	0x698c
 13499 696a 05       		.uleb128 0x5
 13500 696b 63610000 		.4byte	0x6163
 13501 696f 00000000 		.4byte	.LLST24
 13502 6973 00000000 		.4byte	.LVUS24
 13503 6977 23       		.uleb128 0x23
 13504 6978 00000000 		.8byte	.LVL24
 13504      00000000 
 13505 6980 D95D0000 		.4byte	0x5dd9
 13506 6984 0F       		.uleb128 0xf
 13507 6985 01       		.uleb128 0x1
 13508 6986 50       		.byte	0x50
 13509 6987 02       		.uleb128 0x2
 13510 6988 8A       		.byte	0x8a
 13511 6989 00       		.sleb128 0
 13512 698a 00       		.byte	0
 13513 698b 00       		.byte	0
 13514 698c 32       		.uleb128 0x32
 13515 698d 00000000 		.8byte	.LVL18
 13515      00000000 
 13516 6995 2F620000 		.4byte	0x622f
 13517 6999 A4690000 		.4byte	0x69a4
 13518 699d 0F       		.uleb128 0xf
 13519 699e 01       		.uleb128 0x1
 13520 699f 50       		.byte	0x50
 13521 69a0 02       		.uleb128 0x2
 13522 69a1 83       		.byte	0x83
 13523 69a2 00       		.sleb128 0
 13524 69a3 00       		.byte	0
 13525 69a4 23       		.uleb128 0x23
 13526 69a5 00000000 		.8byte	.LVL25
 13526      00000000 
 13527 69ad EE610000 		.4byte	0x61ee
 13528 69b1 0F       		.uleb128 0xf
 13529 69b2 01       		.uleb128 0x1
 13530 69b3 50       		.byte	0x50
 13531 69b4 02       		.uleb128 0x2
 13532 69b5 83       		.byte	0x83
 13533 69b6 00       		.sleb128 0
 13534 69b7 00       		.byte	0
 13535 69b8 00       		.byte	0
 13536 69b9 00       		.byte	0
 13537 69ba 00       		.byte	0
 13538 69bb 1E       		.uleb128 0x1e
 13539 69bc F4640000 		.4byte	0x64f4
 13540 69c0 00000000 		.8byte	.LBI813
 13540      00000000 
 13541 69c8 0100     		.2byte	.LVU97
 13542 69ca 00000000 		.8byte	.LBB813
 13542      00000000 
 13543 69d2 08000000 		.8byte	.LBE813-.LBB813
 13543      00000000 
 13544 69da 04       		.byte	0x4
 13545 69db 39       		.byte	0x39
 13546 69dc 23       		.byte	0x23
AARCH64 GAS  obj/extInstr.s 			page 448


 13547 69dd 006A0000 		.4byte	0x6a00
 13548 69e1 0D       		.uleb128 0xd
 13549 69e2 0B650000 		.4byte	0x650b
 13550 69e6 0D       		.uleb128 0xd
 13551 69e7 02650000 		.4byte	0x6502
 13552 69eb 23       		.uleb128 0x23
 13553 69ec 00000000 		.8byte	.LVL16
 13553      00000000 
 13554 69f4 16790000 		.4byte	0x7916
 13555 69f8 0F       		.uleb128 0xf
 13556 69f9 01       		.uleb128 0x1
 13557 69fa 50       		.byte	0x50
 13558 69fb 02       		.uleb128 0x2
 13559 69fc 89       		.byte	0x89
 13560 69fd 00       		.sleb128 0
 13561 69fe 00       		.byte	0
 13562 69ff 00       		.byte	0
 13563 6a00 26       		.uleb128 0x26
 13564 6a01 42650000 		.4byte	0x6542
 13565 6a05 00000000 		.8byte	.LBI815
 13565      00000000 
 13566 6a0d 0200     		.2byte	.LVU101
 13567 6a0f 00000000 		.4byte	.Ldebug_ranges0+0x410
 13568 6a13 04       		.byte	0x4
 13569 6a14 3A       		.byte	0x3a
 13570 6a15 20       		.byte	0x20
 13571 6a16 4D6A0000 		.4byte	0x6a4d
 13572 6a1a 05       		.uleb128 0x5
 13573 6a1b 62650000 		.4byte	0x6562
 13574 6a1f 00000000 		.4byte	.LLST25
 13575 6a23 00000000 		.4byte	.LVUS25
 13576 6a27 0D       		.uleb128 0xd
 13577 6a28 55650000 		.4byte	0x6555
 13578 6a2c 23       		.uleb128 0x23
 13579 6a2d 00000000 		.8byte	.LVL17
 13579      00000000 
 13580 6a35 D4310000 		.4byte	0x31d4
 13581 6a39 0F       		.uleb128 0xf
 13582 6a3a 01       		.uleb128 0x1
 13583 6a3b 51       		.byte	0x51
 13584 6a3c 09       		.uleb128 0x9
 13585 6a3d 03       		.byte	0x3
 13586 6a3e 00000000 		.8byte	.LC1
 13586      00000000 
 13587 6a46 0F       		.uleb128 0xf
 13588 6a47 01       		.uleb128 0x1
 13589 6a48 52       		.byte	0x52
 13590 6a49 01       		.uleb128 0x1
 13591 6a4a 36       		.byte	0x36
 13592 6a4b 00       		.byte	0
 13593 6a4c 00       		.byte	0
 13594 6a4d 1E       		.uleb128 0x1e
 13595 6a4e 9F640000 		.4byte	0x649f
 13596 6a52 00000000 		.8byte	.LBI827
 13596      00000000 
 13597 6a5a 0100     		.2byte	.LVU137
 13598 6a5c 00000000 		.8byte	.LBB827
AARCH64 GAS  obj/extInstr.s 			page 449


 13598      00000000 
 13599 6a64 0C000000 		.8byte	.LBE827-.LBB827
 13599      00000000 
 13600 6a6c 04       		.byte	0x4
 13601 6a6d 3A       		.byte	0x3a
 13602 6a6e 20       		.byte	0x20
 13603 6a6f 2E6B0000 		.4byte	0x6b2e
 13604 6a73 05       		.uleb128 0x5
 13605 6a74 D1640000 		.4byte	0x64d1
 13606 6a78 00000000 		.4byte	.LLST26
 13607 6a7c 00000000 		.4byte	.LVUS26
 13608 6a80 0D       		.uleb128 0xd
 13609 6a81 C4640000 		.4byte	0x64c4
 13610 6a85 3B       		.uleb128 0x3b
 13611 6a86 20660000 		.4byte	0x6620
 13612 6a8a 00000000 		.8byte	.LBI829
 13612      00000000 
 13613 6a92 0200     		.2byte	.LVU138
 13614 6a94 00000000 		.8byte	.LBB829
 13614      00000000 
 13615 6a9c 00000000 		.8byte	.LBE829-.LBB829
 13615      00000000 
 13616 6aa4 0A       		.byte	0xa
 13617 6aa5 4919     		.2byte	0x1949
 13618 6aa7 1E       		.byte	0x1e
 13619 6aa8 EB6A0000 		.4byte	0x6aeb
 13620 6aac 05       		.uleb128 0x5
 13621 6aad 2E660000 		.4byte	0x662e
 13622 6ab1 00000000 		.4byte	.LLST27
 13623 6ab5 00000000 		.4byte	.LVUS27
 13624 6ab9 3C       		.uleb128 0x3c
 13625 6aba 87640000 		.4byte	0x6487
 13626 6abe 00000000 		.8byte	.LBI830
 13626      00000000 
 13627 6ac6 0300     		.2byte	.LVU139
 13628 6ac8 00000000 		.8byte	.LBB830
 13628      00000000 
 13629 6ad0 00000000 		.8byte	.LBE830-.LBB830
 13629      00000000 
 13630 6ad8 0A       		.byte	0xa
 13631 6ad9 0809     		.2byte	0x908
 13632 6adb 17       		.byte	0x17
 13633 6adc 05       		.uleb128 0x5
 13634 6add 95640000 		.4byte	0x6495
 13635 6ae1 00000000 		.4byte	.LLST28
 13636 6ae5 00000000 		.4byte	.LVUS28
 13637 6ae9 00       		.byte	0
 13638 6aea 00       		.byte	0
 13639 6aeb 3B       		.uleb128 0x3b
 13640 6aec 38660000 		.4byte	0x6638
 13641 6af0 00000000 		.8byte	.LBI831
 13641      00000000 
 13642 6af8 0500     		.2byte	.LVU141
 13643 6afa 00000000 		.8byte	.LBB831
 13643      00000000 
 13644 6b02 00000000 		.8byte	.LBE831-.LBB831
 13644      00000000 
AARCH64 GAS  obj/extInstr.s 			page 450


 13645 6b0a 0A       		.byte	0xa
 13646 6b0b 4919     		.2byte	0x1949
 13647 6b0d 3D       		.byte	0x3d
 13648 6b0e 206B0000 		.4byte	0x6b20
 13649 6b12 05       		.uleb128 0x5
 13650 6b13 46660000 		.4byte	0x6646
 13651 6b17 00000000 		.4byte	.LLST29
 13652 6b1b 00000000 		.4byte	.LVUS29
 13653 6b1f 00       		.byte	0
 13654 6b20 33       		.uleb128 0x33
 13655 6b21 00000000 		.8byte	.LVL26
 13655      00000000 
 13656 6b29 D4310000 		.4byte	0x31d4
 13657 6b2d 00       		.byte	0
 13658 6b2e 1E       		.uleb128 0x1e
 13659 6b2f F4640000 		.4byte	0x64f4
 13660 6b33 00000000 		.8byte	.LBI832
 13660      00000000 
 13661 6b3b 0100     		.2byte	.LVU145
 13662 6b3d 00000000 		.8byte	.LBB832
 13662      00000000 
 13663 6b45 04000000 		.8byte	.LBE832-.LBB832
 13663      00000000 
 13664 6b4d 04       		.byte	0x4
 13665 6b4e 3A       		.byte	0x3a
 13666 6b4f 23       		.byte	0x23
 13667 6b50 746B0000 		.4byte	0x6b74
 13668 6b54 0D       		.uleb128 0xd
 13669 6b55 0B650000 		.4byte	0x650b
 13670 6b59 05       		.uleb128 0x5
 13671 6b5a 02650000 		.4byte	0x6502
 13672 6b5e 00000000 		.4byte	.LLST30
 13673 6b62 00000000 		.4byte	.LVUS30
 13674 6b66 33       		.uleb128 0x33
 13675 6b67 00000000 		.8byte	.LVL27
 13675      00000000 
 13676 6b6f 16790000 		.4byte	0x7916
 13677 6b73 00       		.byte	0
 13678 6b74 1E       		.uleb128 0x1e
 13679 6b75 50660000 		.4byte	0x6650
 13680 6b79 00000000 		.8byte	.LBI834
 13680      00000000 
 13681 6b81 0100     		.2byte	.LVU148
 13682 6b83 00000000 		.8byte	.LBB834
 13682      00000000 
 13683 6b8b 1C000000 		.8byte	.LBE834-.LBB834
 13683      00000000 
 13684 6b93 04       		.byte	0x4
 13685 6b94 3A       		.byte	0x3a
 13686 6b95 1F       		.byte	0x1f
 13687 6b96 D16D0000 		.4byte	0x6dd1
 13688 6b9a 05       		.uleb128 0x5
 13689 6b9b 5E660000 		.4byte	0x665e
 13690 6b9f 00000000 		.4byte	.LLST31
 13691 6ba3 00000000 		.4byte	.LVUS31
 13692 6ba7 3B       		.uleb128 0x3b
 13693 6ba8 9F630000 		.4byte	0x639f
AARCH64 GAS  obj/extInstr.s 			page 451


 13694 6bac 00000000 		.8byte	.LBI836
 13694      00000000 
 13695 6bb4 0200     		.2byte	.LVU149
 13696 6bb6 00000000 		.8byte	.LBB836
 13696      00000000 
 13697 6bbe 1C000000 		.8byte	.LBE836-.LBB836
 13697      00000000 
 13698 6bc6 0A       		.byte	0xa
 13699 6bc7 9202     		.2byte	0x292
 13700 6bc9 13       		.byte	0x13
 13701 6bca 3F6D0000 		.4byte	0x6d3f
 13702 6bce 05       		.uleb128 0x5
 13703 6bcf AD630000 		.4byte	0x63ad
 13704 6bd3 00000000 		.4byte	.LLST32
 13705 6bd7 00000000 		.4byte	.LVUS32
 13706 6bdb 1E       		.uleb128 0x1e
 13707 6bdc F8620000 		.4byte	0x62f8
 13708 6be0 00000000 		.8byte	.LBI838
 13708      00000000 
 13709 6be8 0300     		.2byte	.LVU150
 13710 6bea 00000000 		.8byte	.LBB838
 13710      00000000 
 13711 6bf2 04000000 		.8byte	.LBE838-.LBB838
 13711      00000000 
 13712 6bfa 0A       		.byte	0xa
 13713 6bfb E7       		.byte	0xe7
 13714 6bfc 12       		.byte	0x12
 13715 6bfd 736C0000 		.4byte	0x6c73
 13716 6c01 05       		.uleb128 0x5
 13717 6c02 06630000 		.4byte	0x6306
 13718 6c06 00000000 		.4byte	.LLST33
 13719 6c0a 00000000 		.4byte	.LVUS33
 13720 6c0e 1E       		.uleb128 0x1e
 13721 6c0f 87640000 		.4byte	0x6487
 13722 6c13 00000000 		.8byte	.LBI839
 13722      00000000 
 13723 6c1b 0400     		.2byte	.LVU151
 13724 6c1d 00000000 		.8byte	.LBB839
 13724      00000000 
 13725 6c25 04000000 		.8byte	.LBE839-.LBB839
 13725      00000000 
 13726 6c2d 0A       		.byte	0xa
 13727 6c2e DE       		.byte	0xde
 13728 6c2f 17       		.byte	0x17
 13729 6c30 426C0000 		.4byte	0x6c42
 13730 6c34 05       		.uleb128 0x5
 13731 6c35 95640000 		.4byte	0x6495
 13732 6c39 00000000 		.4byte	.LLST34
 13733 6c3d 00000000 		.4byte	.LVUS34
 13734 6c41 00       		.byte	0
 13735 6c42 2A       		.uleb128 0x2a
 13736 6c43 1A600000 		.4byte	0x601a
 13737 6c47 00000000 		.8byte	.LBI841
 13737      00000000 
 13738 6c4f 0100     		.2byte	.LVU154
 13739 6c51 00000000 		.8byte	.LBB841
 13739      00000000 
AARCH64 GAS  obj/extInstr.s 			page 452


 13740 6c59 00000000 		.8byte	.LBE841-.LBB841
 13740      00000000 
 13741 6c61 0A       		.byte	0xa
 13742 6c62 DE       		.byte	0xde
 13743 6c63 2A       		.byte	0x2a
 13744 6c64 05       		.uleb128 0x5
 13745 6c65 28600000 		.4byte	0x6028
 13746 6c69 00000000 		.4byte	.LLST35
 13747 6c6d 00000000 		.4byte	.LVUS35
 13748 6c71 00       		.byte	0
 13749 6c72 00       		.byte	0
 13750 6c73 2A       		.uleb128 0x2a
 13751 6c74 32600000 		.4byte	0x6032
 13752 6c78 00000000 		.8byte	.LBI842
 13752      00000000 
 13753 6c80 0000     		.2byte	.LVU157
 13754 6c82 00000000 		.8byte	.LBB842
 13754      00000000 
 13755 6c8a 0C000000 		.8byte	.LBE842-.LBB842
 13755      00000000 
 13756 6c92 0A       		.byte	0xa
 13757 6c93 E8       		.byte	0xe8
 13758 6c94 0E       		.byte	0xe
 13759 6c95 05       		.uleb128 0x5
 13760 6c96 49600000 		.4byte	0x6049
 13761 6c9a 00000000 		.4byte	.LLST36
 13762 6c9e 00000000 		.4byte	.LVUS36
 13763 6ca2 05       		.uleb128 0x5
 13764 6ca3 40600000 		.4byte	0x6040
 13765 6ca7 00000000 		.4byte	.LLST37
 13766 6cab 00000000 		.4byte	.LVUS37
 13767 6caf 29       		.uleb128 0x29
 13768 6cb0 9D5C0000 		.4byte	0x5c9d
 13769 6cb4 00000000 		.8byte	.LBI844
 13769      00000000 
 13770 6cbc 0100     		.2byte	.LVU158
 13771 6cbe 00000000 		.4byte	.Ldebug_ranges0+0x460
 13772 6cc2 0A       		.byte	0xa
 13773 6cc3 ED       		.byte	0xed
 13774 6cc4 22       		.byte	0x22
 13775 6cc5 05       		.uleb128 0x5
 13776 6cc6 C15C0000 		.4byte	0x5cc1
 13777 6cca 00000000 		.4byte	.LLST38
 13778 6cce 00000000 		.4byte	.LVUS38
 13779 6cd2 05       		.uleb128 0x5
 13780 6cd3 B45C0000 		.4byte	0x5cb4
 13781 6cd7 00000000 		.4byte	.LLST39
 13782 6cdb 00000000 		.4byte	.LVUS39
 13783 6cdf 05       		.uleb128 0x5
 13784 6ce0 A75C0000 		.4byte	0x5ca7
 13785 6ce4 00000000 		.4byte	.LLST40
 13786 6ce8 00000000 		.4byte	.LVUS40
 13787 6cec 36       		.uleb128 0x36
 13788 6ced B45A0000 		.4byte	0x5ab4
 13789 6cf1 00000000 		.8byte	.LBI845
 13789      00000000 
 13790 6cf9 0200     		.2byte	.LVU159
AARCH64 GAS  obj/extInstr.s 			page 453


 13791 6cfb 00000000 		.4byte	.Ldebug_ranges0+0x460
 13792 6cff 0B       		.byte	0xb
 13793 6d00 EC01     		.2byte	0x1ec
 13794 6d02 17       		.byte	0x17
 13795 6d03 2F6D0000 		.4byte	0x6d2f
 13796 6d07 05       		.uleb128 0x5
 13797 6d08 D75A0000 		.4byte	0x5ad7
 13798 6d0c 00000000 		.4byte	.LLST41
 13799 6d10 00000000 		.4byte	.LVUS41
 13800 6d14 05       		.uleb128 0x5
 13801 6d15 CB5A0000 		.4byte	0x5acb
 13802 6d19 00000000 		.4byte	.LLST42
 13803 6d1d 00000000 		.4byte	.LVUS42
 13804 6d21 05       		.uleb128 0x5
 13805 6d22 C25A0000 		.4byte	0x5ac2
 13806 6d26 00000000 		.4byte	.LLST43
 13807 6d2a 00000000 		.4byte	.LVUS43
 13808 6d2e 00       		.byte	0
 13809 6d2f 33       		.uleb128 0x33
 13810 6d30 00000000 		.8byte	.LVL31
 13810      00000000 
 13811 6d38 A77A0000 		.4byte	0x7aa7
 13812 6d3c 00       		.byte	0
 13813 6d3d 00       		.byte	0
 13814 6d3e 00       		.byte	0
 13815 6d3f 3C       		.uleb128 0x3c
 13816 6d40 88660000 		.4byte	0x6688
 13817 6d44 00000000 		.8byte	.LBI849
 13817      00000000 
 13818 6d4c 0100     		.2byte	.LVU164
 13819 6d4e 00000000 		.8byte	.LBB849
 13819      00000000 
 13820 6d56 00000000 		.8byte	.LBE849-.LBB849
 13820      00000000 
 13821 6d5e 0A       		.byte	0xa
 13822 6d5f 9202     		.2byte	0x292
 13823 6d61 17       		.byte	0x17
 13824 6d62 05       		.uleb128 0x5
 13825 6d63 99660000 		.4byte	0x6699
 13826 6d67 00000000 		.4byte	.LLST44
 13827 6d6b 00000000 		.4byte	.LVUS44
 13828 6d6f 2A       		.uleb128 0x2a
 13829 6d70 C3660000 		.4byte	0x66c3
 13830 6d74 00000000 		.8byte	.LBI850
 13830      00000000 
 13831 6d7c 0200     		.2byte	.LVU165
 13832 6d7e 00000000 		.8byte	.LBB850
 13832      00000000 
 13833 6d86 00000000 		.8byte	.LBE850-.LBB850
 13833      00000000 
 13834 6d8e 0A       		.byte	0xa
 13835 6d8f 96       		.byte	0x96
 13836 6d90 0E       		.byte	0xe
 13837 6d91 05       		.uleb128 0x5
 13838 6d92 D1660000 		.4byte	0x66d1
 13839 6d96 00000000 		.4byte	.LLST45
 13840 6d9a 00000000 		.4byte	.LVUS45
AARCH64 GAS  obj/extInstr.s 			page 454


 13841 6d9e 2A       		.uleb128 0x2a
 13842 6d9f 20640000 		.4byte	0x6420
 13843 6da3 00000000 		.8byte	.LBI851
 13843      00000000 
 13844 6dab 0300     		.2byte	.LVU166
 13845 6dad 00000000 		.8byte	.LBB851
 13845      00000000 
 13846 6db5 00000000 		.8byte	.LBE851-.LBB851
 13846      00000000 
 13847 6dbd 0D       		.byte	0xd
 13848 6dbe A2       		.byte	0xa2
 13849 6dbf 1F       		.byte	0x1f
 13850 6dc0 05       		.uleb128 0x5
 13851 6dc1 2E640000 		.4byte	0x642e
 13852 6dc5 00000000 		.4byte	.LLST46
 13853 6dc9 00000000 		.4byte	.LVUS46
 13854 6dcd 00       		.byte	0
 13855 6dce 00       		.byte	0
 13856 6dcf 00       		.byte	0
 13857 6dd0 00       		.byte	0
 13858 6dd1 26       		.uleb128 0x26
 13859 6dd2 F3770000 		.4byte	0x77f3
 13860 6dd6 00000000 		.8byte	.LBI852
 13860      00000000 
 13861 6dde 0100     		.2byte	.LVU188
 13862 6de0 00000000 		.4byte	.Ldebug_ranges0+0x490
 13863 6de4 04       		.byte	0x4
 13864 6de5 3E       		.byte	0x3e
 13865 6de6 1C       		.byte	0x1c
 13866 6de7 06700000 		.4byte	0x7006
 13867 6deb 05       		.uleb128 0x5
 13868 6dec 01780000 		.4byte	0x7801
 13869 6df0 00000000 		.4byte	.LLST47
 13870 6df4 00000000 		.4byte	.LVUS47
 13871 6df8 29       		.uleb128 0x29
 13872 6df9 CB650000 		.4byte	0x65cb
 13873 6dfd 00000000 		.8byte	.LBI853
 13873      00000000 
 13874 6e05 0300     		.2byte	.LVU190
 13875 6e07 00000000 		.4byte	.Ldebug_ranges0+0x540
 13876 6e0b 05       		.byte	0x5
 13877 6e0c 83       		.byte	0x83
 13878 6e0d 44       		.byte	0x44
 13879 6e0e 05       		.uleb128 0x5
 13880 6e0f E0650000 		.4byte	0x65e0
 13881 6e13 00000000 		.4byte	.LLST48
 13882 6e17 00000000 		.4byte	.LVUS48
 13883 6e1b 05       		.uleb128 0x5
 13884 6e1c FD650000 		.4byte	0x65fd
 13885 6e20 00000000 		.4byte	.LLST49
 13886 6e24 00000000 		.4byte	.LVUS49
 13887 6e28 05       		.uleb128 0x5
 13888 6e29 F3650000 		.4byte	0x65f3
 13889 6e2d 00000000 		.4byte	.LLST50
 13890 6e31 00000000 		.4byte	.LVUS50
 13891 6e35 05       		.uleb128 0x5
 13892 6e36 E9650000 		.4byte	0x65e9
AARCH64 GAS  obj/extInstr.s 			page 455


 13893 6e3a 00000000 		.4byte	.LLST51
 13894 6e3e 00000000 		.4byte	.LVUS51
 13895 6e42 49       		.uleb128 0x49
 13896 6e43 00000000 		.4byte	.Ldebug_ranges0+0x540
 13897 6e47 69       		.uleb128 0x69
 13898 6e48 07660000 		.4byte	0x6607
 13899 6e4c 03       		.uleb128 0x3
 13900 6e4d 91       		.byte	0x91
 13901 6e4e 887D     		.sleb128 -376
 13902 6e50 6A       		.uleb128 0x6a
 13903 6e51 13660000 		.4byte	0x6613
 13904 6e55 00000000 		.4byte	.Ldebug_ranges0+0x5e0
 13905 6e59 766F0000 		.4byte	0x6f76
 13906 6e5d 4A       		.uleb128 0x4a
 13907 6e5e 14660000 		.4byte	0x6614
 13908 6e62 00000000 		.4byte	.LLST52
 13909 6e66 00000000 		.4byte	.LVUS52
 13910 6e6a 26       		.uleb128 0x26
 13911 6e6b 6D610000 		.4byte	0x616d
 13912 6e6f 00000000 		.8byte	.LBI856
 13912      00000000 
 13913 6e77 0300     		.2byte	.LVU195
 13914 6e79 00000000 		.4byte	.Ldebug_ranges0+0x670
 13915 6e7d 05       		.byte	0x5
 13916 6e7e 32       		.byte	0x32
 13917 6e7f 11       		.byte	0x11
 13918 6e80 DB6E0000 		.4byte	0x6edb
 13919 6e84 0D       		.uleb128 0xd
 13920 6e85 95610000 		.4byte	0x6195
 13921 6e89 05       		.uleb128 0x5
 13922 6e8a 89610000 		.4byte	0x6189
 13923 6e8e 00000000 		.4byte	.LLST53
 13924 6e92 00000000 		.4byte	.LVUS53
 13925 6e96 29       		.uleb128 0x29
 13926 6e97 76780000 		.4byte	0x7876
 13927 6e9b 00000000 		.8byte	.LBI858
 13927      00000000 
 13928 6ea3 0400     		.2byte	.LVU196
 13929 6ea5 00000000 		.4byte	.Ldebug_ranges0+0x6c0
 13930 6ea9 08       		.byte	0x8
 13931 6eaa F0       		.byte	0xf0
 13932 6eab 11       		.byte	0x11
 13933 6eac 05       		.uleb128 0x5
 13934 6ead 8D780000 		.4byte	0x788d
 13935 6eb1 00000000 		.4byte	.LLST54
 13936 6eb5 00000000 		.4byte	.LVUS54
 13937 6eb9 05       		.uleb128 0x5
 13938 6eba 84780000 		.4byte	0x7884
 13939 6ebe 00000000 		.4byte	.LLST55
 13940 6ec2 00000000 		.4byte	.LVUS55
 13941 6ec6 49       		.uleb128 0x49
 13942 6ec7 00000000 		.4byte	.Ldebug_ranges0+0x6c0
 13943 6ecb 4A       		.uleb128 0x4a
 13944 6ecc 9A780000 		.4byte	0x789a
 13945 6ed0 00000000 		.4byte	.LLST56
 13946 6ed4 00000000 		.4byte	.LVUS56
 13947 6ed8 00       		.byte	0
AARCH64 GAS  obj/extInstr.s 			page 456


 13948 6ed9 00       		.byte	0
 13949 6eda 00       		.byte	0
 13950 6edb 26       		.uleb128 0x26
 13951 6edc 42650000 		.4byte	0x6542
 13952 6ee0 00000000 		.8byte	.LBI869
 13952      00000000 
 13953 6ee8 0000     		.2byte	.LVU252
 13954 6eea 00000000 		.4byte	.Ldebug_ranges0+0x710
 13955 6eee 05       		.byte	0x5
 13956 6eef 35       		.byte	0x35
 13957 6ef0 15       		.byte	0x15
 13958 6ef1 306F0000 		.4byte	0x6f30
 13959 6ef5 05       		.uleb128 0x5
 13960 6ef6 62650000 		.4byte	0x6562
 13961 6efa 00000000 		.4byte	.LLST57
 13962 6efe 00000000 		.4byte	.LVUS57
 13963 6f02 05       		.uleb128 0x5
 13964 6f03 55650000 		.4byte	0x6555
 13965 6f07 00000000 		.4byte	.LLST58
 13966 6f0b 00000000 		.4byte	.LVUS58
 13967 6f0f 23       		.uleb128 0x23
 13968 6f10 00000000 		.8byte	.LVL51
 13968      00000000 
 13969 6f18 D4310000 		.4byte	0x31d4
 13970 6f1c 0F       		.uleb128 0xf
 13971 6f1d 01       		.uleb128 0x1
 13972 6f1e 50       		.byte	0x50
 13973 6f1f 02       		.uleb128 0x2
 13974 6f20 83       		.byte	0x83
 13975 6f21 00       		.sleb128 0
 13976 6f22 0F       		.uleb128 0xf
 13977 6f23 01       		.uleb128 0x1
 13978 6f24 51       		.byte	0x51
 13979 6f25 02       		.uleb128 0x2
 13980 6f26 88       		.byte	0x88
 13981 6f27 00       		.sleb128 0
 13982 6f28 0F       		.uleb128 0xf
 13983 6f29 01       		.uleb128 0x1
 13984 6f2a 52       		.byte	0x52
 13985 6f2b 02       		.uleb128 0x2
 13986 6f2c 86       		.byte	0x86
 13987 6f2d 00       		.sleb128 0
 13988 6f2e 00       		.byte	0
 13989 6f2f 00       		.byte	0
 13990 6f30 29       		.uleb128 0x29
 13991 6f31 26610000 		.4byte	0x6126
 13992 6f35 00000000 		.8byte	.LBI875
 13992      00000000 
 13993 6f3d 0200     		.2byte	.LVU207
 13994 6f3f 00000000 		.4byte	.Ldebug_ranges0+0x760
 13995 6f43 05       		.byte	0x5
 13996 6f44 32       		.byte	0x32
 13997 6f45 21       		.byte	0x21
 13998 6f46 05       		.uleb128 0x5
 13999 6f47 3D610000 		.4byte	0x613d
 14000 6f4b 00000000 		.4byte	.LLST59
 14001 6f4f 00000000 		.4byte	.LVUS59
AARCH64 GAS  obj/extInstr.s 			page 457


 14002 6f53 05       		.uleb128 0x5
 14003 6f54 34610000 		.4byte	0x6134
 14004 6f58 00000000 		.4byte	.LLST60
 14005 6f5c 00000000 		.4byte	.LVUS60
 14006 6f60 23       		.uleb128 0x23
 14007 6f61 00000000 		.8byte	.LVL38
 14007      00000000 
 14008 6f69 2A2B0000 		.4byte	0x2b2a
 14009 6f6d 0F       		.uleb128 0xf
 14010 6f6e 01       		.uleb128 0x1
 14011 6f6f 50       		.byte	0x50
 14012 6f70 02       		.uleb128 0x2
 14013 6f71 83       		.byte	0x83
 14014 6f72 00       		.sleb128 0
 14015 6f73 00       		.byte	0
 14016 6f74 00       		.byte	0
 14017 6f75 00       		.byte	0
 14018 6f76 1E       		.uleb128 0x1e
 14019 6f77 55610000 		.4byte	0x6155
 14020 6f7b 00000000 		.8byte	.LBI890
 14020      00000000 
 14021 6f83 0100     		.2byte	.LVU214
 14022 6f85 00000000 		.8byte	.LBB890
 14022      00000000 
 14023 6f8d 0C000000 		.8byte	.LBE890-.LBB890
 14023      00000000 
 14024 6f95 05       		.byte	0x5
 14025 6f96 38       		.byte	0x38
 14026 6f97 18       		.byte	0x18
 14027 6f98 BE6F0000 		.4byte	0x6fbe
 14028 6f9c 05       		.uleb128 0x5
 14029 6f9d 63610000 		.4byte	0x6163
 14030 6fa1 00000000 		.4byte	.LLST61
 14031 6fa5 00000000 		.4byte	.LVUS61
 14032 6fa9 23       		.uleb128 0x23
 14033 6faa 00000000 		.8byte	.LVL42
 14033      00000000 
 14034 6fb2 D95D0000 		.4byte	0x5dd9
 14035 6fb6 0F       		.uleb128 0xf
 14036 6fb7 01       		.uleb128 0x1
 14037 6fb8 50       		.byte	0x50
 14038 6fb9 02       		.uleb128 0x2
 14039 6fba 8A       		.byte	0x8a
 14040 6fbb 00       		.sleb128 0
 14041 6fbc 00       		.byte	0
 14042 6fbd 00       		.byte	0
 14043 6fbe 32       		.uleb128 0x32
 14044 6fbf 00000000 		.8byte	.LVL36
 14044      00000000 
 14045 6fc7 2F620000 		.4byte	0x622f
 14046 6fcb D66F0000 		.4byte	0x6fd6
 14047 6fcf 0F       		.uleb128 0xf
 14048 6fd0 01       		.uleb128 0x1
 14049 6fd1 50       		.byte	0x50
 14050 6fd2 02       		.uleb128 0x2
 14051 6fd3 83       		.byte	0x83
 14052 6fd4 00       		.sleb128 0
AARCH64 GAS  obj/extInstr.s 			page 458


 14053 6fd5 00       		.byte	0
 14054 6fd6 32       		.uleb128 0x32
 14055 6fd7 00000000 		.8byte	.LVL43
 14055      00000000 
 14056 6fdf EE610000 		.4byte	0x61ee
 14057 6fe3 EE6F0000 		.4byte	0x6fee
 14058 6fe7 0F       		.uleb128 0xf
 14059 6fe8 01       		.uleb128 0x1
 14060 6fe9 50       		.byte	0x50
 14061 6fea 02       		.uleb128 0x2
 14062 6feb 83       		.byte	0x83
 14063 6fec 00       		.sleb128 0
 14064 6fed 00       		.byte	0
 14065 6fee 23       		.uleb128 0x23
 14066 6fef 00000000 		.8byte	.LVL55
 14066      00000000 
 14067 6ff7 EE610000 		.4byte	0x61ee
 14068 6ffb 0F       		.uleb128 0xf
 14069 6ffc 01       		.uleb128 0x1
 14070 6ffd 50       		.byte	0x50
 14071 6ffe 03       		.uleb128 0x3
 14072 6fff 91       		.byte	0x91
 14073 7000 887D     		.sleb128 -376
 14074 7002 00       		.byte	0
 14075 7003 00       		.byte	0
 14076 7004 00       		.byte	0
 14077 7005 00       		.byte	0
 14078 7006 26       		.uleb128 0x26
 14079 7007 42650000 		.4byte	0x6542
 14080 700b 00000000 		.8byte	.LBI910
 14080      00000000 
 14081 7013 0100     		.2byte	.LVU173
 14082 7015 00000000 		.4byte	.Ldebug_ranges0+0x7a0
 14083 7019 04       		.byte	0x4
 14084 701a 3D       		.byte	0x3d
 14085 701b 08       		.byte	0x8
 14086 701c 33700000 		.4byte	0x7033
 14087 7020 05       		.uleb128 0x5
 14088 7021 62650000 		.4byte	0x6562
 14089 7025 00000000 		.4byte	.LLST62
 14090 7029 00000000 		.4byte	.LVUS62
 14091 702d 0D       		.uleb128 0xd
 14092 702e 55650000 		.4byte	0x6555
 14093 7032 00       		.byte	0
 14094 7033 1E       		.uleb128 0x1e
 14095 7034 F4640000 		.4byte	0x64f4
 14096 7038 00000000 		.8byte	.LBI914
 14096      00000000 
 14097 7040 0100     		.2byte	.LVU179
 14098 7042 00000000 		.8byte	.LBB914
 14098      00000000 
 14099 704a 08000000 		.8byte	.LBE914-.LBB914
 14099      00000000 
 14100 7052 04       		.byte	0x4
 14101 7053 3D       		.byte	0x3d
 14102 7054 23       		.byte	0x23
 14103 7055 78700000 		.4byte	0x7078
AARCH64 GAS  obj/extInstr.s 			page 459


 14104 7059 0D       		.uleb128 0xd
 14105 705a 0B650000 		.4byte	0x650b
 14106 705e 0D       		.uleb128 0xd
 14107 705f 02650000 		.4byte	0x6502
 14108 7063 23       		.uleb128 0x23
 14109 7064 00000000 		.8byte	.LVL34
 14109      00000000 
 14110 706c 16790000 		.4byte	0x7916
 14111 7070 0F       		.uleb128 0xf
 14112 7071 01       		.uleb128 0x1
 14113 7072 50       		.byte	0x50
 14114 7073 02       		.uleb128 0x2
 14115 7074 88       		.byte	0x88
 14116 7075 00       		.sleb128 0
 14117 7076 00       		.byte	0
 14118 7077 00       		.byte	0
 14119 7078 26       		.uleb128 0x26
 14120 7079 42650000 		.4byte	0x6542
 14121 707d 00000000 		.8byte	.LBI916
 14121      00000000 
 14122 7085 0200     		.2byte	.LVU183
 14123 7087 00000000 		.4byte	.Ldebug_ranges0+0x7d0
 14124 708b 04       		.byte	0x4
 14125 708c 3E       		.byte	0x3e
 14126 708d 1C       		.byte	0x1c
 14127 708e C5700000 		.4byte	0x70c5
 14128 7092 05       		.uleb128 0x5
 14129 7093 62650000 		.4byte	0x6562
 14130 7097 00000000 		.4byte	.LLST63
 14131 709b 00000000 		.4byte	.LVUS63
 14132 709f 0D       		.uleb128 0xd
 14133 70a0 55650000 		.4byte	0x6555
 14134 70a4 23       		.uleb128 0x23
 14135 70a5 00000000 		.8byte	.LVL35
 14135      00000000 
 14136 70ad D4310000 		.4byte	0x31d4
 14137 70b1 0F       		.uleb128 0xf
 14138 70b2 01       		.uleb128 0x1
 14139 70b3 51       		.byte	0x51
 14140 70b4 09       		.uleb128 0x9
 14141 70b5 03       		.byte	0x3
 14142 70b6 00000000 		.8byte	.LC4
 14142      00000000 
 14143 70be 0F       		.uleb128 0xf
 14144 70bf 01       		.uleb128 0x1
 14145 70c0 52       		.byte	0x52
 14146 70c1 01       		.uleb128 0x1
 14147 70c2 33       		.byte	0x33
 14148 70c3 00       		.byte	0
 14149 70c4 00       		.byte	0
 14150 70c5 1E       		.uleb128 0x1e
 14151 70c6 9F640000 		.4byte	0x649f
 14152 70ca 00000000 		.8byte	.LBI928
 14152      00000000 
 14153 70d2 0100     		.2byte	.LVU219
 14154 70d4 00000000 		.8byte	.LBB928
 14154      00000000 
AARCH64 GAS  obj/extInstr.s 			page 460


 14155 70dc 0C000000 		.8byte	.LBE928-.LBB928
 14155      00000000 
 14156 70e4 04       		.byte	0x4
 14157 70e5 3E       		.byte	0x3e
 14158 70e6 1C       		.byte	0x1c
 14159 70e7 A6710000 		.4byte	0x71a6
 14160 70eb 05       		.uleb128 0x5
 14161 70ec D1640000 		.4byte	0x64d1
 14162 70f0 00000000 		.4byte	.LLST64
 14163 70f4 00000000 		.4byte	.LVUS64
 14164 70f8 0D       		.uleb128 0xd
 14165 70f9 C4640000 		.4byte	0x64c4
 14166 70fd 3B       		.uleb128 0x3b
 14167 70fe 20660000 		.4byte	0x6620
 14168 7102 00000000 		.8byte	.LBI930
 14168      00000000 
 14169 710a 0200     		.2byte	.LVU220
 14170 710c 00000000 		.8byte	.LBB930
 14170      00000000 
 14171 7114 00000000 		.8byte	.LBE930-.LBB930
 14171      00000000 
 14172 711c 0A       		.byte	0xa
 14173 711d 4919     		.2byte	0x1949
 14174 711f 1E       		.byte	0x1e
 14175 7120 63710000 		.4byte	0x7163
 14176 7124 05       		.uleb128 0x5
 14177 7125 2E660000 		.4byte	0x662e
 14178 7129 00000000 		.4byte	.LLST65
 14179 712d 00000000 		.4byte	.LVUS65
 14180 7131 3C       		.uleb128 0x3c
 14181 7132 87640000 		.4byte	0x6487
 14182 7136 00000000 		.8byte	.LBI931
 14182      00000000 
 14183 713e 0300     		.2byte	.LVU221
 14184 7140 00000000 		.8byte	.LBB931
 14184      00000000 
 14185 7148 00000000 		.8byte	.LBE931-.LBB931
 14185      00000000 
 14186 7150 0A       		.byte	0xa
 14187 7151 0809     		.2byte	0x908
 14188 7153 17       		.byte	0x17
 14189 7154 05       		.uleb128 0x5
 14190 7155 95640000 		.4byte	0x6495
 14191 7159 00000000 		.4byte	.LLST66
 14192 715d 00000000 		.4byte	.LVUS66
 14193 7161 00       		.byte	0
 14194 7162 00       		.byte	0
 14195 7163 3B       		.uleb128 0x3b
 14196 7164 38660000 		.4byte	0x6638
 14197 7168 00000000 		.8byte	.LBI932
 14197      00000000 
 14198 7170 0500     		.2byte	.LVU223
 14199 7172 00000000 		.8byte	.LBB932
 14199      00000000 
 14200 717a 00000000 		.8byte	.LBE932-.LBB932
 14200      00000000 
 14201 7182 0A       		.byte	0xa
AARCH64 GAS  obj/extInstr.s 			page 461


 14202 7183 4919     		.2byte	0x1949
 14203 7185 3D       		.byte	0x3d
 14204 7186 98710000 		.4byte	0x7198
 14205 718a 05       		.uleb128 0x5
 14206 718b 46660000 		.4byte	0x6646
 14207 718f 00000000 		.4byte	.LLST67
 14208 7193 00000000 		.4byte	.LVUS67
 14209 7197 00       		.byte	0
 14210 7198 33       		.uleb128 0x33
 14211 7199 00000000 		.8byte	.LVL44
 14211      00000000 
 14212 71a1 D4310000 		.4byte	0x31d4
 14213 71a5 00       		.byte	0
 14214 71a6 1E       		.uleb128 0x1e
 14215 71a7 F4640000 		.4byte	0x64f4
 14216 71ab 00000000 		.8byte	.LBI933
 14216      00000000 
 14217 71b3 0100     		.2byte	.LVU227
 14218 71b5 00000000 		.8byte	.LBB933
 14218      00000000 
 14219 71bd 04000000 		.8byte	.LBE933-.LBB933
 14219      00000000 
 14220 71c5 04       		.byte	0x4
 14221 71c6 3E       		.byte	0x3e
 14222 71c7 1F       		.byte	0x1f
 14223 71c8 EC710000 		.4byte	0x71ec
 14224 71cc 0D       		.uleb128 0xd
 14225 71cd 0B650000 		.4byte	0x650b
 14226 71d1 05       		.uleb128 0x5
 14227 71d2 02650000 		.4byte	0x6502
 14228 71d6 00000000 		.4byte	.LLST68
 14229 71da 00000000 		.4byte	.LVUS68
 14230 71de 33       		.uleb128 0x33
 14231 71df 00000000 		.8byte	.LVL45
 14231      00000000 
 14232 71e7 16790000 		.4byte	0x7916
 14233 71eb 00       		.byte	0
 14234 71ec 1E       		.uleb128 0x1e
 14235 71ed 50660000 		.4byte	0x6650
 14236 71f1 00000000 		.8byte	.LBI935
 14236      00000000 
 14237 71f9 0100     		.2byte	.LVU230
 14238 71fb 00000000 		.8byte	.LBB935
 14238      00000000 
 14239 7203 18000000 		.8byte	.LBE935-.LBB935
 14239      00000000 
 14240 720b 04       		.byte	0x4
 14241 720c 3E       		.byte	0x3e
 14242 720d 1B       		.byte	0x1b
 14243 720e 49740000 		.4byte	0x7449
 14244 7212 05       		.uleb128 0x5
 14245 7213 5E660000 		.4byte	0x665e
 14246 7217 00000000 		.4byte	.LLST69
 14247 721b 00000000 		.4byte	.LVUS69
 14248 721f 3B       		.uleb128 0x3b
 14249 7220 9F630000 		.4byte	0x639f
 14250 7224 00000000 		.8byte	.LBI937
AARCH64 GAS  obj/extInstr.s 			page 462


 14250      00000000 
 14251 722c 0200     		.2byte	.LVU231
 14252 722e 00000000 		.8byte	.LBB937
 14252      00000000 
 14253 7236 18000000 		.8byte	.LBE937-.LBB937
 14253      00000000 
 14254 723e 0A       		.byte	0xa
 14255 723f 9202     		.2byte	0x292
 14256 7241 13       		.byte	0x13
 14257 7242 B7730000 		.4byte	0x73b7
 14258 7246 05       		.uleb128 0x5
 14259 7247 AD630000 		.4byte	0x63ad
 14260 724b 00000000 		.4byte	.LLST70
 14261 724f 00000000 		.4byte	.LVUS70
 14262 7253 1E       		.uleb128 0x1e
 14263 7254 F8620000 		.4byte	0x62f8
 14264 7258 00000000 		.8byte	.LBI939
 14264      00000000 
 14265 7260 0300     		.2byte	.LVU232
 14266 7262 00000000 		.8byte	.LBB939
 14266      00000000 
 14267 726a 04000000 		.8byte	.LBE939-.LBB939
 14267      00000000 
 14268 7272 0A       		.byte	0xa
 14269 7273 E7       		.byte	0xe7
 14270 7274 12       		.byte	0x12
 14271 7275 EB720000 		.4byte	0x72eb
 14272 7279 05       		.uleb128 0x5
 14273 727a 06630000 		.4byte	0x6306
 14274 727e 00000000 		.4byte	.LLST71
 14275 7282 00000000 		.4byte	.LVUS71
 14276 7286 1E       		.uleb128 0x1e
 14277 7287 87640000 		.4byte	0x6487
 14278 728b 00000000 		.8byte	.LBI940
 14278      00000000 
 14279 7293 0400     		.2byte	.LVU233
 14280 7295 00000000 		.8byte	.LBB940
 14280      00000000 
 14281 729d 04000000 		.8byte	.LBE940-.LBB940
 14281      00000000 
 14282 72a5 0A       		.byte	0xa
 14283 72a6 DE       		.byte	0xde
 14284 72a7 17       		.byte	0x17
 14285 72a8 BA720000 		.4byte	0x72ba
 14286 72ac 05       		.uleb128 0x5
 14287 72ad 95640000 		.4byte	0x6495
 14288 72b1 00000000 		.4byte	.LLST72
 14289 72b5 00000000 		.4byte	.LVUS72
 14290 72b9 00       		.byte	0
 14291 72ba 2A       		.uleb128 0x2a
 14292 72bb 1A600000 		.4byte	0x601a
 14293 72bf 00000000 		.8byte	.LBI942
 14293      00000000 
 14294 72c7 0100     		.2byte	.LVU236
 14295 72c9 00000000 		.8byte	.LBB942
 14295      00000000 
 14296 72d1 00000000 		.8byte	.LBE942-.LBB942
AARCH64 GAS  obj/extInstr.s 			page 463


 14296      00000000 
 14297 72d9 0A       		.byte	0xa
 14298 72da DE       		.byte	0xde
 14299 72db 2A       		.byte	0x2a
 14300 72dc 05       		.uleb128 0x5
 14301 72dd 28600000 		.4byte	0x6028
 14302 72e1 00000000 		.4byte	.LLST73
 14303 72e5 00000000 		.4byte	.LVUS73
 14304 72e9 00       		.byte	0
 14305 72ea 00       		.byte	0
 14306 72eb 2A       		.uleb128 0x2a
 14307 72ec 32600000 		.4byte	0x6032
 14308 72f0 00000000 		.8byte	.LBI943
 14308      00000000 
 14309 72f8 0000     		.2byte	.LVU239
 14310 72fa 00000000 		.8byte	.LBB943
 14310      00000000 
 14311 7302 0C000000 		.8byte	.LBE943-.LBB943
 14311      00000000 
 14312 730a 0A       		.byte	0xa
 14313 730b E8       		.byte	0xe8
 14314 730c 0E       		.byte	0xe
 14315 730d 05       		.uleb128 0x5
 14316 730e 49600000 		.4byte	0x6049
 14317 7312 00000000 		.4byte	.LLST74
 14318 7316 00000000 		.4byte	.LVUS74
 14319 731a 05       		.uleb128 0x5
 14320 731b 40600000 		.4byte	0x6040
 14321 731f 00000000 		.4byte	.LLST75
 14322 7323 00000000 		.4byte	.LVUS75
 14323 7327 29       		.uleb128 0x29
 14324 7328 9D5C0000 		.4byte	0x5c9d
 14325 732c 00000000 		.8byte	.LBI945
 14325      00000000 
 14326 7334 0100     		.2byte	.LVU240
 14327 7336 00000000 		.4byte	.Ldebug_ranges0+0x820
 14328 733a 0A       		.byte	0xa
 14329 733b ED       		.byte	0xed
 14330 733c 22       		.byte	0x22
 14331 733d 05       		.uleb128 0x5
 14332 733e C15C0000 		.4byte	0x5cc1
 14333 7342 00000000 		.4byte	.LLST76
 14334 7346 00000000 		.4byte	.LVUS76
 14335 734a 05       		.uleb128 0x5
 14336 734b B45C0000 		.4byte	0x5cb4
 14337 734f 00000000 		.4byte	.LLST77
 14338 7353 00000000 		.4byte	.LVUS77
 14339 7357 05       		.uleb128 0x5
 14340 7358 A75C0000 		.4byte	0x5ca7
 14341 735c 00000000 		.4byte	.LLST78
 14342 7360 00000000 		.4byte	.LVUS78
 14343 7364 36       		.uleb128 0x36
 14344 7365 B45A0000 		.4byte	0x5ab4
 14345 7369 00000000 		.8byte	.LBI946
 14345      00000000 
 14346 7371 0200     		.2byte	.LVU241
 14347 7373 00000000 		.4byte	.Ldebug_ranges0+0x820
AARCH64 GAS  obj/extInstr.s 			page 464


 14348 7377 0B       		.byte	0xb
 14349 7378 EC01     		.2byte	0x1ec
 14350 737a 17       		.byte	0x17
 14351 737b A7730000 		.4byte	0x73a7
 14352 737f 05       		.uleb128 0x5
 14353 7380 D75A0000 		.4byte	0x5ad7
 14354 7384 00000000 		.4byte	.LLST79
 14355 7388 00000000 		.4byte	.LVUS79
 14356 738c 05       		.uleb128 0x5
 14357 738d CB5A0000 		.4byte	0x5acb
 14358 7391 00000000 		.4byte	.LLST80
 14359 7395 00000000 		.4byte	.LVUS80
 14360 7399 05       		.uleb128 0x5
 14361 739a C25A0000 		.4byte	0x5ac2
 14362 739e 00000000 		.4byte	.LLST81
 14363 73a2 00000000 		.4byte	.LVUS81
 14364 73a6 00       		.byte	0
 14365 73a7 33       		.uleb128 0x33
 14366 73a8 00000000 		.8byte	.LVL49
 14366      00000000 
 14367 73b0 A77A0000 		.4byte	0x7aa7
 14368 73b4 00       		.byte	0
 14369 73b5 00       		.byte	0
 14370 73b6 00       		.byte	0
 14371 73b7 3C       		.uleb128 0x3c
 14372 73b8 88660000 		.4byte	0x6688
 14373 73bc 00000000 		.8byte	.LBI950
 14373      00000000 
 14374 73c4 0100     		.2byte	.LVU246
 14375 73c6 00000000 		.8byte	.LBB950
 14375      00000000 
 14376 73ce 00000000 		.8byte	.LBE950-.LBB950
 14376      00000000 
 14377 73d6 0A       		.byte	0xa
 14378 73d7 9202     		.2byte	0x292
 14379 73d9 17       		.byte	0x17
 14380 73da 05       		.uleb128 0x5
 14381 73db 99660000 		.4byte	0x6699
 14382 73df 00000000 		.4byte	.LLST82
 14383 73e3 00000000 		.4byte	.LVUS82
 14384 73e7 2A       		.uleb128 0x2a
 14385 73e8 C3660000 		.4byte	0x66c3
 14386 73ec 00000000 		.8byte	.LBI951
 14386      00000000 
 14387 73f4 0200     		.2byte	.LVU247
 14388 73f6 00000000 		.8byte	.LBB951
 14388      00000000 
 14389 73fe 00000000 		.8byte	.LBE951-.LBB951
 14389      00000000 
 14390 7406 0A       		.byte	0xa
 14391 7407 96       		.byte	0x96
 14392 7408 0E       		.byte	0xe
 14393 7409 05       		.uleb128 0x5
 14394 740a D1660000 		.4byte	0x66d1
 14395 740e 00000000 		.4byte	.LLST83
 14396 7412 00000000 		.4byte	.LVUS83
 14397 7416 2A       		.uleb128 0x2a
AARCH64 GAS  obj/extInstr.s 			page 465


 14398 7417 20640000 		.4byte	0x6420
 14399 741b 00000000 		.8byte	.LBI952
 14399      00000000 
 14400 7423 0300     		.2byte	.LVU248
 14401 7425 00000000 		.8byte	.LBB952
 14401      00000000 
 14402 742d 00000000 		.8byte	.LBE952-.LBB952
 14402      00000000 
 14403 7435 0D       		.byte	0xd
 14404 7436 A2       		.byte	0xa2
 14405 7437 1F       		.byte	0x1f
 14406 7438 05       		.uleb128 0x5
 14407 7439 2E640000 		.4byte	0x642e
 14408 743d 00000000 		.4byte	.LLST84
 14409 7441 00000000 		.4byte	.LVUS84
 14410 7445 00       		.byte	0
 14411 7446 00       		.byte	0
 14412 7447 00       		.byte	0
 14413 7448 00       		.byte	0
 14414 7449 1E       		.uleb128 0x1e
 14415 744a 50660000 		.4byte	0x6650
 14416 744e 00000000 		.8byte	.LBI958
 14416      00000000 
 14417 7456 0100     		.2byte	.LVU265
 14418 7458 00000000 		.8byte	.LBB958
 14418      00000000 
 14419 7460 28000000 		.8byte	.LBE958-.LBB958
 14419      00000000 
 14420 7468 04       		.byte	0x4
 14421 7469 3E       		.byte	0x3e
 14422 746a 1B       		.byte	0x1b
 14423 746b 76760000 		.4byte	0x7676
 14424 746f 05       		.uleb128 0x5
 14425 7470 5E660000 		.4byte	0x665e
 14426 7474 00000000 		.4byte	.LLST85
 14427 7478 00000000 		.4byte	.LVUS85
 14428 747c 36       		.uleb128 0x36
 14429 747d 9F630000 		.4byte	0x639f
 14430 7481 00000000 		.8byte	.LBI960
 14430      00000000 
 14431 7489 0200     		.2byte	.LVU266
 14432 748b 00000000 		.4byte	.Ldebug_ranges0+0x850
 14433 748f 0A       		.byte	0xa
 14434 7490 9202     		.2byte	0x292
 14435 7492 13       		.byte	0x13
 14436 7493 E4750000 		.4byte	0x75e4
 14437 7497 05       		.uleb128 0x5
 14438 7498 AD630000 		.4byte	0x63ad
 14439 749c 00000000 		.4byte	.LLST86
 14440 74a0 00000000 		.4byte	.LVUS86
 14441 74a4 26       		.uleb128 0x26
 14442 74a5 F8620000 		.4byte	0x62f8
 14443 74a9 00000000 		.8byte	.LBI962
 14443      00000000 
 14444 74b1 0300     		.2byte	.LVU267
 14445 74b3 00000000 		.4byte	.Ldebug_ranges0+0x890
 14446 74b7 0A       		.byte	0xa
AARCH64 GAS  obj/extInstr.s 			page 466


 14447 74b8 E7       		.byte	0xe7
 14448 74b9 12       		.byte	0x12
 14449 74ba 24750000 		.4byte	0x7524
 14450 74be 05       		.uleb128 0x5
 14451 74bf 06630000 		.4byte	0x6306
 14452 74c3 00000000 		.4byte	.LLST87
 14453 74c7 00000000 		.4byte	.LVUS87
 14454 74cb 26       		.uleb128 0x26
 14455 74cc 87640000 		.4byte	0x6487
 14456 74d0 00000000 		.8byte	.LBI963
 14456      00000000 
 14457 74d8 0400     		.2byte	.LVU268
 14458 74da 00000000 		.4byte	.Ldebug_ranges0+0x8c0
 14459 74de 0A       		.byte	0xa
 14460 74df DE       		.byte	0xde
 14461 74e0 17       		.byte	0x17
 14462 74e1 F3740000 		.4byte	0x74f3
 14463 74e5 05       		.uleb128 0x5
 14464 74e6 95640000 		.4byte	0x6495
 14465 74ea 00000000 		.4byte	.LLST88
 14466 74ee 00000000 		.4byte	.LVUS88
 14467 74f2 00       		.byte	0
 14468 74f3 2A       		.uleb128 0x2a
 14469 74f4 1A600000 		.4byte	0x601a
 14470 74f8 00000000 		.8byte	.LBI966
 14470      00000000 
 14471 7500 0600     		.2byte	.LVU270
 14472 7502 00000000 		.8byte	.LBB966
 14472      00000000 
 14473 750a 00000000 		.8byte	.LBE966-.LBB966
 14473      00000000 
 14474 7512 0A       		.byte	0xa
 14475 7513 DE       		.byte	0xde
 14476 7514 2A       		.byte	0x2a
 14477 7515 05       		.uleb128 0x5
 14478 7516 28600000 		.4byte	0x6028
 14479 751a 00000000 		.4byte	.LLST89
 14480 751e 00000000 		.4byte	.LVUS89
 14481 7522 00       		.byte	0
 14482 7523 00       		.byte	0
 14483 7524 29       		.uleb128 0x29
 14484 7525 32600000 		.4byte	0x6032
 14485 7529 00000000 		.8byte	.LBI968
 14485      00000000 
 14486 7531 0000     		.2byte	.LVU273
 14487 7533 00000000 		.4byte	.Ldebug_ranges0+0x8f0
 14488 7537 0A       		.byte	0xa
 14489 7538 E8       		.byte	0xe8
 14490 7539 0E       		.byte	0xe
 14491 753a 05       		.uleb128 0x5
 14492 753b 49600000 		.4byte	0x6049
 14493 753f 00000000 		.4byte	.LLST90
 14494 7543 00000000 		.4byte	.LVUS90
 14495 7547 05       		.uleb128 0x5
 14496 7548 40600000 		.4byte	0x6040
 14497 754c 00000000 		.4byte	.LLST91
 14498 7550 00000000 		.4byte	.LVUS91
AARCH64 GAS  obj/extInstr.s 			page 467


 14499 7554 29       		.uleb128 0x29
 14500 7555 9D5C0000 		.4byte	0x5c9d
 14501 7559 00000000 		.8byte	.LBI970
 14501      00000000 
 14502 7561 0100     		.2byte	.LVU274
 14503 7563 00000000 		.4byte	.Ldebug_ranges0+0x920
 14504 7567 0A       		.byte	0xa
 14505 7568 ED       		.byte	0xed
 14506 7569 22       		.byte	0x22
 14507 756a 05       		.uleb128 0x5
 14508 756b C15C0000 		.4byte	0x5cc1
 14509 756f 00000000 		.4byte	.LLST92
 14510 7573 00000000 		.4byte	.LVUS92
 14511 7577 05       		.uleb128 0x5
 14512 7578 B45C0000 		.4byte	0x5cb4
 14513 757c 00000000 		.4byte	.LLST93
 14514 7580 00000000 		.4byte	.LVUS93
 14515 7584 05       		.uleb128 0x5
 14516 7585 A75C0000 		.4byte	0x5ca7
 14517 7589 00000000 		.4byte	.LLST94
 14518 758d 00000000 		.4byte	.LVUS94
 14519 7591 36       		.uleb128 0x36
 14520 7592 B45A0000 		.4byte	0x5ab4
 14521 7596 00000000 		.8byte	.LBI971
 14521      00000000 
 14522 759e 0200     		.2byte	.LVU275
 14523 75a0 00000000 		.4byte	.Ldebug_ranges0+0x920
 14524 75a4 0B       		.byte	0xb
 14525 75a5 EC01     		.2byte	0x1ec
 14526 75a7 17       		.byte	0x17
 14527 75a8 D4750000 		.4byte	0x75d4
 14528 75ac 05       		.uleb128 0x5
 14529 75ad D75A0000 		.4byte	0x5ad7
 14530 75b1 00000000 		.4byte	.LLST95
 14531 75b5 00000000 		.4byte	.LVUS95
 14532 75b9 05       		.uleb128 0x5
 14533 75ba CB5A0000 		.4byte	0x5acb
 14534 75be 00000000 		.4byte	.LLST96
 14535 75c2 00000000 		.4byte	.LVUS96
 14536 75c6 05       		.uleb128 0x5
 14537 75c7 C25A0000 		.4byte	0x5ac2
 14538 75cb 00000000 		.4byte	.LLST97
 14539 75cf 00000000 		.4byte	.LVUS97
 14540 75d3 00       		.byte	0
 14541 75d4 33       		.uleb128 0x33
 14542 75d5 00000000 		.8byte	.LVL60
 14542      00000000 
 14543 75dd A77A0000 		.4byte	0x7aa7
 14544 75e1 00       		.byte	0
 14545 75e2 00       		.byte	0
 14546 75e3 00       		.byte	0
 14547 75e4 3C       		.uleb128 0x3c
 14548 75e5 88660000 		.4byte	0x6688
 14549 75e9 00000000 		.8byte	.LBI980
 14549      00000000 
 14550 75f1 0100     		.2byte	.LVU280
 14551 75f3 00000000 		.8byte	.LBB980
AARCH64 GAS  obj/extInstr.s 			page 468


 14551      00000000 
 14552 75fb 00000000 		.8byte	.LBE980-.LBB980
 14552      00000000 
 14553 7603 0A       		.byte	0xa
 14554 7604 9202     		.2byte	0x292
 14555 7606 17       		.byte	0x17
 14556 7607 05       		.uleb128 0x5
 14557 7608 99660000 		.4byte	0x6699
 14558 760c 00000000 		.4byte	.LLST98
 14559 7610 00000000 		.4byte	.LVUS98
 14560 7614 2A       		.uleb128 0x2a
 14561 7615 C3660000 		.4byte	0x66c3
 14562 7619 00000000 		.8byte	.LBI981
 14562      00000000 
 14563 7621 0200     		.2byte	.LVU281
 14564 7623 00000000 		.8byte	.LBB981
 14564      00000000 
 14565 762b 00000000 		.8byte	.LBE981-.LBB981
 14565      00000000 
 14566 7633 0A       		.byte	0xa
 14567 7634 96       		.byte	0x96
 14568 7635 0E       		.byte	0xe
 14569 7636 05       		.uleb128 0x5
 14570 7637 D1660000 		.4byte	0x66d1
 14571 763b 00000000 		.4byte	.LLST99
 14572 763f 00000000 		.4byte	.LVUS99
 14573 7643 2A       		.uleb128 0x2a
 14574 7644 20640000 		.4byte	0x6420
 14575 7648 00000000 		.8byte	.LBI982
 14575      00000000 
 14576 7650 0300     		.2byte	.LVU282
 14577 7652 00000000 		.8byte	.LBB982
 14577      00000000 
 14578 765a 00000000 		.8byte	.LBE982-.LBB982
 14578      00000000 
 14579 7662 0D       		.byte	0xd
 14580 7663 A2       		.byte	0xa2
 14581 7664 1F       		.byte	0x1f
 14582 7665 05       		.uleb128 0x5
 14583 7666 2E640000 		.4byte	0x642e
 14584 766a 00000000 		.4byte	.LLST100
 14585 766e 00000000 		.4byte	.LVUS100
 14586 7672 00       		.byte	0
 14587 7673 00       		.byte	0
 14588 7674 00       		.byte	0
 14589 7675 00       		.byte	0
 14590 7676 1E       		.uleb128 0x1e
 14591 7677 50660000 		.4byte	0x6650
 14592 767b 00000000 		.8byte	.LBI985
 14592      00000000 
 14593 7683 0100     		.2byte	.LVU291
 14594 7685 00000000 		.8byte	.LBB985
 14594      00000000 
 14595 768d 18000000 		.8byte	.LBE985-.LBB985
 14595      00000000 
 14596 7695 04       		.byte	0x4
 14597 7696 3A       		.byte	0x3a
AARCH64 GAS  obj/extInstr.s 			page 469


 14598 7697 1F       		.byte	0x1f
 14599 7698 4B770000 		.4byte	0x774b
 14600 769c 05       		.uleb128 0x5
 14601 769d 5E660000 		.4byte	0x665e
 14602 76a1 00000000 		.4byte	.LLST101
 14603 76a5 00000000 		.4byte	.LVUS101
 14604 76a9 6B       		.uleb128 0x6b
 14605 76aa 9F630000 		.4byte	0x639f
 14606 76ae 00000000 		.8byte	.LBI987
 14606      00000000 
 14607 76b6 0200     		.2byte	.LVU292
 14608 76b8 00000000 		.4byte	.Ldebug_ranges0+0x950
 14609 76bc 0A       		.byte	0xa
 14610 76bd 9202     		.2byte	0x292
 14611 76bf 13       		.byte	0x13
 14612 76c0 05       		.uleb128 0x5
 14613 76c1 AD630000 		.4byte	0x63ad
 14614 76c5 00000000 		.4byte	.LLST102
 14615 76c9 00000000 		.4byte	.LVUS102
 14616 76cd 29       		.uleb128 0x29
 14617 76ce F8620000 		.4byte	0x62f8
 14618 76d2 00000000 		.8byte	.LBI989
 14618      00000000 
 14619 76da 0300     		.2byte	.LVU293
 14620 76dc 00000000 		.4byte	.Ldebug_ranges0+0x980
 14621 76e0 0A       		.byte	0xa
 14622 76e1 E7       		.byte	0xe7
 14623 76e2 12       		.byte	0x12
 14624 76e3 05       		.uleb128 0x5
 14625 76e4 06630000 		.4byte	0x6306
 14626 76e8 00000000 		.4byte	.LLST103
 14627 76ec 00000000 		.4byte	.LVUS103
 14628 76f0 26       		.uleb128 0x26
 14629 76f1 87640000 		.4byte	0x6487
 14630 76f5 00000000 		.8byte	.LBI990
 14630      00000000 
 14631 76fd 0400     		.2byte	.LVU294
 14632 76ff 00000000 		.4byte	.Ldebug_ranges0+0x9c0
 14633 7703 0A       		.byte	0xa
 14634 7704 DE       		.byte	0xde
 14635 7705 17       		.byte	0x17
 14636 7706 18770000 		.4byte	0x7718
 14637 770a 05       		.uleb128 0x5
 14638 770b 95640000 		.4byte	0x6495
 14639 770f 00000000 		.4byte	.LLST104
 14640 7713 00000000 		.4byte	.LVUS104
 14641 7717 00       		.byte	0
 14642 7718 2A       		.uleb128 0x2a
 14643 7719 1A600000 		.4byte	0x601a
 14644 771d 00000000 		.8byte	.LBI995
 14644      00000000 
 14645 7725 0600     		.2byte	.LVU296
 14646 7727 00000000 		.8byte	.LBB995
 14646      00000000 
 14647 772f 00000000 		.8byte	.LBE995-.LBB995
 14647      00000000 
 14648 7737 0A       		.byte	0xa
AARCH64 GAS  obj/extInstr.s 			page 470


 14649 7738 DE       		.byte	0xde
 14650 7739 2A       		.byte	0x2a
 14651 773a 05       		.uleb128 0x5
 14652 773b 28600000 		.4byte	0x6028
 14653 773f 00000000 		.4byte	.LLST105
 14654 7743 00000000 		.4byte	.LVUS105
 14655 7747 00       		.byte	0
 14656 7748 00       		.byte	0
 14657 7749 00       		.byte	0
 14658 774a 00       		.byte	0
 14659 774b 32       		.uleb128 0x32
 14660 774c 00000000 		.8byte	.LVL14
 14660      00000000 
 14661 7754 B37A0000 		.4byte	0x7ab3
 14662 7758 70770000 		.4byte	0x7770
 14663 775c 0F       		.uleb128 0xf
 14664 775d 01       		.uleb128 0x1
 14665 775e 50       		.byte	0x50
 14666 775f 03       		.uleb128 0x3
 14667 7760 86       		.byte	0x86
 14668 7761 D000     		.sleb128 80
 14669 7763 0F       		.uleb128 0xf
 14670 7764 01       		.uleb128 0x1
 14671 7765 51       		.byte	0x51
 14672 7766 02       		.uleb128 0x2
 14673 7767 86       		.byte	0x86
 14674 7768 00       		.sleb128 0
 14675 7769 0F       		.uleb128 0xf
 14676 776a 01       		.uleb128 0x1
 14677 776b 52       		.byte	0x52
 14678 776c 02       		.uleb128 0x2
 14679 776d 86       		.byte	0x86
 14680 776e 10       		.sleb128 16
 14681 776f 00       		.byte	0
 14682 7770 32       		.uleb128 0x32
 14683 7771 00000000 		.8byte	.LVL32
 14683      00000000 
 14684 7779 BF7A0000 		.4byte	0x7abf
 14685 777d 9C770000 		.4byte	0x779c
 14686 7781 0F       		.uleb128 0xf
 14687 7782 01       		.uleb128 0x1
 14688 7783 50       		.byte	0x50
 14689 7784 03       		.uleb128 0x3
 14690 7785 85       		.byte	0x85
 14691 7786 E000     		.sleb128 96
 14692 7788 0F       		.uleb128 0xf
 14693 7789 01       		.uleb128 0x1
 14694 778a 51       		.byte	0x51
 14695 778b 02       		.uleb128 0x2
 14696 778c 85       		.byte	0x85
 14697 778d 30       		.sleb128 48
 14698 778e 0F       		.uleb128 0xf
 14699 778f 01       		.uleb128 0x1
 14700 7790 52       		.byte	0x52
 14701 7791 03       		.uleb128 0x3
 14702 7792 85       		.byte	0x85
 14703 7793 C000     		.sleb128 64
AARCH64 GAS  obj/extInstr.s 			page 471


 14704 7795 0F       		.uleb128 0xf
 14705 7796 01       		.uleb128 0x1
 14706 7797 53       		.byte	0x53
 14707 7798 02       		.uleb128 0x2
 14708 7799 85       		.byte	0x85
 14709 779a 20       		.sleb128 32
 14710 779b 00       		.byte	0
 14711 779c 32       		.uleb128 0x32
 14712 779d 00000000 		.8byte	.LVL33
 14712      00000000 
 14713 77a5 D4310000 		.4byte	0x31d4
 14714 77a9 C6770000 		.4byte	0x77c6
 14715 77ad 0F       		.uleb128 0xf
 14716 77ae 01       		.uleb128 0x1
 14717 77af 50       		.byte	0x50
 14718 77b0 02       		.uleb128 0x2
 14719 77b1 88       		.byte	0x88
 14720 77b2 00       		.sleb128 0
 14721 77b3 0F       		.uleb128 0xf
 14722 77b4 01       		.uleb128 0x1
 14723 77b5 51       		.byte	0x51
 14724 77b6 09       		.uleb128 0x9
 14725 77b7 03       		.byte	0x3
 14726 77b8 00000000 		.8byte	.LC3
 14726      00000000 
 14727 77c0 0F       		.uleb128 0xf
 14728 77c1 01       		.uleb128 0x1
 14729 77c2 52       		.byte	0x52
 14730 77c3 01       		.uleb128 0x1
 14731 77c4 47       		.byte	0x47
 14732 77c5 00       		.byte	0
 14733 77c6 23       		.uleb128 0x23
 14734 77c7 00000000 		.8byte	.LVL56
 14734      00000000 
 14735 77cf CB7A0000 		.4byte	0x7acb
 14736 77d3 0F       		.uleb128 0xf
 14737 77d4 01       		.uleb128 0x1
 14738 77d5 50       		.byte	0x50
 14739 77d6 02       		.uleb128 0x2
 14740 77d7 83       		.byte	0x83
 14741 77d8 00       		.sleb128 0
 14742 77d9 00       		.byte	0
 14743 77da 00       		.byte	0
 14744 77db 0A       		.uleb128 0xa
 14745 77dc F8540000 		.4byte	0x54f8
 14746 77e0 E9770000 		.4byte	0x77e9
 14747 77e4 03       		.byte	0x3
 14748 77e5 F3770000 		.4byte	0x77f3
 14749 77e9 07       		.uleb128 0x7
 14750 77ea 00000000 		.4byte	.LASF919
 14751 77ee 13570000 		.4byte	0x5713
 14752 77f2 00       		.byte	0
 14753 77f3 0A       		.uleb128 0xa
 14754 77f4 DA540000 		.4byte	0x54da
 14755 77f8 01780000 		.4byte	0x7801
 14756 77fc 03       		.byte	0x3
 14757 77fd 0B780000 		.4byte	0x780b
AARCH64 GAS  obj/extInstr.s 			page 472


 14758 7801 07       		.uleb128 0x7
 14759 7802 00000000 		.4byte	.LASF919
 14760 7806 13570000 		.4byte	0x5713
 14761 780a 00       		.byte	0
 14762 780b 1A       		.uleb128 0x1a
 14763 780c 8F310000 		.4byte	0x318f
 14764 7810 03       		.byte	0x3
 14765 7811 22780000 		.4byte	0x7822
 14766 7815 16       		.uleb128 0x16
 14767 7816 5F5F6E00 		.string	"__n"
 14768 781a 08       		.byte	0x8
 14769 781b E1       		.byte	0xe1
 14770 781c 0C       		.byte	0xc
 14771 781d D43A0000 		.4byte	0x3ad4
 14772 7821 00       		.byte	0
 14773 7822 53       		.uleb128 0x53
 14774 7823 362C0000 		.4byte	0x2c36
 14775 7827 2F780000 		.4byte	0x782f
 14776 782b 46780000 		.4byte	0x7846
 14777 782f 07       		.uleb128 0x7
 14778 7830 00000000 		.4byte	.LASF919
 14779 7834 545D0000 		.4byte	0x5d54
 14780 7838 25       		.uleb128 0x25
 14781 7839 5F5F6300 		.string	"__c"
 14782 783d 03       		.byte	0x3
 14783 783e 3C04     		.2byte	0x43c
 14784 7840 15       		.byte	0x15
 14785 7841 4E3B0000 		.4byte	0x3b4e
 14786 7845 00       		.byte	0
 14787 7846 0A       		.uleb128 0xa
 14788 7847 642C0000 		.4byte	0x2c64
 14789 784b 54780000 		.4byte	0x7854
 14790 784f 03       		.byte	0x3
 14791 7850 6B780000 		.4byte	0x786b
 14792 7854 07       		.uleb128 0x7
 14793 7855 00000000 		.4byte	.LASF919
 14794 7859 545D0000 		.4byte	0x5d54
 14795 785d 25       		.uleb128 0x25
 14796 785e 5F5F6300 		.string	"__c"
 14797 7862 03       		.byte	0x3
 14798 7863 6803     		.2byte	0x368
 14799 7865 12       		.byte	0x12
 14800 7866 4E3B0000 		.4byte	0x3b4e
 14801 786a 00       		.byte	0
 14802 786b 09       		.uleb128 0x9
 14803 786c 08       		.byte	0x8
 14804 786d 36290000 		.4byte	0x2936
 14805 7871 0C       		.uleb128 0xc
 14806 7872 6B780000 		.4byte	0x786b
 14807 7876 0A       		.uleb128 0xa
 14808 7877 0F2A0000 		.4byte	0x2a0f
 14809 787b 84780000 		.4byte	0x7884
 14810 787f 03       		.byte	0x3
 14811 7880 A8780000 		.4byte	0x78a8
 14812 7884 07       		.uleb128 0x7
 14813 7885 00000000 		.4byte	.LASF919
 14814 7889 71780000 		.4byte	0x7871
AARCH64 GAS  obj/extInstr.s 			page 473


 14815 788d 15       		.uleb128 0x15
 14816 788e 00000000 		.4byte	.LASF974
 14817 7892 06       		.byte	0x6
 14818 7893 EF02     		.2byte	0x2ef
 14819 7895 16       		.byte	0x16
 14820 7896 A9310000 		.4byte	0x31a9
 14821 789a 42       		.uleb128 0x42
 14822 789b 00000000 		.4byte	.LASF975
 14823 789f 06       		.byte	0x6
 14824 78a0 F102     		.2byte	0x2f1
 14825 78a2 12       		.byte	0x12
 14826 78a3 A9310000 		.4byte	0x31a9
 14827 78a7 00       		.byte	0
 14828 78a8 1A       		.uleb128 0x1a
 14829 78a9 B5310000 		.4byte	0x31b5
 14830 78ad 03       		.byte	0x3
 14831 78ae CB780000 		.4byte	0x78cb
 14832 78b2 16       		.uleb128 0x16
 14833 78b3 5F5F6100 		.string	"__a"
 14834 78b7 06       		.byte	0x6
 14835 78b8 A9       		.byte	0xa9
 14836 78b9 1A       		.byte	0x1a
 14837 78ba EF280000 		.4byte	0x28ef
 14838 78be 16       		.uleb128 0x16
 14839 78bf 5F5F6200 		.string	"__b"
 14840 78c3 06       		.byte	0x6
 14841 78c4 A9       		.byte	0xa9
 14842 78c5 2C       		.byte	0x2c
 14843 78c6 EF280000 		.4byte	0x28ef
 14844 78ca 00       		.byte	0
 14845 78cb 1A       		.uleb128 0x1a
 14846 78cc 81210000 		.4byte	0x2181
 14847 78d0 03       		.byte	0x3
 14848 78d1 E3780000 		.4byte	0x78e3
 14849 78d5 25       		.uleb128 0x25
 14850 78d6 5F5F7300 		.string	"__s"
 14851 78da 07       		.byte	0x7
 14852 78db 6601     		.2byte	0x166
 14853 78dd 1F       		.byte	0x1f
 14854 78de 55460000 		.4byte	0x4655
 14855 78e2 00       		.byte	0
 14856 78e3 1A       		.uleb128 0x1a
 14857 78e4 F0200000 		.4byte	0x20f0
 14858 78e8 03       		.byte	0x3
 14859 78e9 08790000 		.4byte	0x7908
 14860 78ed 15       		.uleb128 0x15
 14861 78ee 00000000 		.4byte	.LASF976
 14862 78f2 07       		.byte	0x7
 14863 78f3 4801     		.2byte	0x148
 14864 78f5 19       		.byte	0x19
 14865 78f6 49460000 		.4byte	0x4649
 14866 78fa 15       		.uleb128 0x15
 14867 78fb 00000000 		.4byte	.LASF977
 14868 78ff 07       		.byte	0x7
 14869 7900 4801     		.2byte	0x148
 14870 7902 30       		.byte	0x30
 14871 7903 4F460000 		.4byte	0x464f
AARCH64 GAS  obj/extInstr.s 			page 474


 14872 7907 00       		.byte	0
 14873 7908 1B       		.uleb128 0x1b
 14874 7909 10       		.byte	0x10
 14875 790a 05       		.byte	0x5
 14876 790b 00000000 		.4byte	.LASF978
 14877 790f 1B       		.uleb128 0x1b
 14878 7910 10       		.byte	0x10
 14879 7911 07       		.byte	0x7
 14880 7912 00000000 		.4byte	.LASF979
 14881 7916 A301     		.uleb128 0xa3
 14882 7918 18650000 		.4byte	0x6518
 14883 791c 00000000 		.8byte	.LFB2823
 14883      00000000 
 14884 7924 6C000000 		.8byte	.LFE2823-.LFB2823
 14884      00000000 
 14885 792c 01       		.uleb128 0x1
 14886 792d 9C       		.byte	0x9c
 14887 792e 9E7A0000 		.4byte	0x7a9e
 14888 7932 05       		.uleb128 0x5
 14889 7933 34650000 		.4byte	0x6534
 14890 7937 00000000 		.4byte	.LLST0
 14891 793b 00000000 		.4byte	.LVUS0
 14892 793f 36       		.uleb128 0x36
 14893 7940 D7600000 		.4byte	0x60d7
 14894 7944 00000000 		.8byte	.LBI605
 14894      00000000 
 14895 794c 0000     		.2byte	.LVU5
 14896 794e 00000000 		.4byte	.Ldebug_ranges0+0
 14897 7952 01       		.byte	0x1
 14898 7953 AA02     		.2byte	0x2aa
 14899 7955 13       		.byte	0x13
 14900 7956 4E7A0000 		.4byte	0x7a4e
 14901 795a 0D       		.uleb128 0xd
 14902 795b E5600000 		.4byte	0x60e5
 14903 795f 05       		.uleb128 0x5
 14904 7960 E5600000 		.4byte	0x60e5
 14905 7964 00000000 		.4byte	.LLST1
 14906 7968 00000000 		.4byte	.LVUS1
 14907 796c 05       		.uleb128 0x5
 14908 796d EE600000 		.4byte	0x60ee
 14909 7971 00000000 		.4byte	.LLST2
 14910 7975 00000000 		.4byte	.LVUS2
 14911 7979 36       		.uleb128 0x36
 14912 797a 595D0000 		.4byte	0x5d59
 14913 797e 00000000 		.8byte	.LBI606
 14913      00000000 
 14914 7986 0100     		.2byte	.LVU6
 14915 7988 00000000 		.4byte	.Ldebug_ranges0+0x30
 14916 798c 02       		.byte	0x2
 14917 798d C201     		.2byte	0x1c2
 14918 798f 1D       		.byte	0x1d
 14919 7990 AF790000 		.4byte	0x79af
 14920 7994 05       		.uleb128 0x5
 14921 7995 6C5D0000 		.4byte	0x5d6c
 14922 7999 00000000 		.4byte	.LLST3
 14923 799d 00000000 		.4byte	.LVUS3
 14924 79a1 33       		.uleb128 0x33
AARCH64 GAS  obj/extInstr.s 			page 475


 14925 79a2 00000000 		.8byte	.LVL13
 14925      00000000 
 14926 79aa E0310000 		.4byte	0x31e0
 14927 79ae 00       		.byte	0
 14928 79af 6B       		.uleb128 0x6b
 14929 79b0 46780000 		.4byte	0x7846
 14930 79b4 00000000 		.8byte	.LBI609
 14930      00000000 
 14931 79bc 0100     		.2byte	.LVU9
 14932 79be 00000000 		.4byte	.Ldebug_ranges0+0x60
 14933 79c2 02       		.byte	0x2
 14934 79c3 C201     		.2byte	0x1c2
 14935 79c5 2D       		.byte	0x2d
 14936 79c6 05       		.uleb128 0x5
 14937 79c7 5D780000 		.4byte	0x785d
 14938 79cb 00000000 		.4byte	.LLST4
 14939 79cf 00000000 		.4byte	.LVUS4
 14940 79d3 05       		.uleb128 0x5
 14941 79d4 54780000 		.4byte	0x7854
 14942 79d8 00000000 		.4byte	.LLST5
 14943 79dc 00000000 		.4byte	.LVUS5
 14944 79e0 3C       		.uleb128 0x3c
 14945 79e1 46780000 		.4byte	0x7846
 14946 79e5 00000000 		.8byte	.LBI611
 14946      00000000 
 14947 79ed 0100     		.2byte	.LVU21
 14948 79ef 00000000 		.8byte	.LBB611
 14948      00000000 
 14949 79f7 24000000 		.8byte	.LBE611-.LBB611
 14949      00000000 
 14950 79ff 03       		.byte	0x3
 14951 7a00 6803     		.2byte	0x368
 14952 7a02 07       		.byte	0x7
 14953 7a03 05       		.uleb128 0x5
 14954 7a04 5D780000 		.4byte	0x785d
 14955 7a08 00000000 		.4byte	.LLST6
 14956 7a0c 00000000 		.4byte	.LVUS6
 14957 7a10 05       		.uleb128 0x5
 14958 7a11 54780000 		.4byte	0x7854
 14959 7a15 00000000 		.4byte	.LLST7
 14960 7a19 00000000 		.4byte	.LVUS7
 14961 7a1d 32       		.uleb128 0x32
 14962 7a1e 00000000 		.8byte	.LVL9
 14962      00000000 
 14963 7a26 922C0000 		.4byte	0x2c92
 14964 7a2a 357A0000 		.4byte	0x7a35
 14965 7a2e 0F       		.uleb128 0xf
 14966 7a2f 01       		.uleb128 0x1
 14967 7a30 50       		.byte	0x50
 14968 7a31 02       		.uleb128 0x2
 14969 7a32 84       		.byte	0x84
 14970 7a33 00       		.sleb128 0
 14971 7a34 00       		.byte	0
 14972 7a35 A401     		.uleb128 0xa4
 14973 7a37 00000000 		.8byte	.LVL10
 14973      00000000 
 14974 7a3f 0F       		.uleb128 0xf
AARCH64 GAS  obj/extInstr.s 			page 476


 14975 7a40 01       		.uleb128 0x1
 14976 7a41 50       		.byte	0x50
 14977 7a42 02       		.uleb128 0x2
 14978 7a43 84       		.byte	0x84
 14979 7a44 00       		.sleb128 0
 14980 7a45 0F       		.uleb128 0xf
 14981 7a46 01       		.uleb128 0x1
 14982 7a47 51       		.byte	0x51
 14983 7a48 01       		.uleb128 0x1
 14984 7a49 3A       		.byte	0x3a
 14985 7a4a 00       		.byte	0
 14986 7a4b 00       		.byte	0
 14987 7a4c 00       		.byte	0
 14988 7a4d 00       		.byte	0
 14989 7a4e 36       		.uleb128 0x36
 14990 7a4f AD600000 		.4byte	0x60ad
 14991 7a53 00000000 		.8byte	.LBI616
 14991      00000000 
 14992 7a5b 0000     		.2byte	.LVU16
 14993 7a5d 00000000 		.4byte	.Ldebug_ranges0+0x90
 14994 7a61 01       		.byte	0x1
 14995 7a62 AA02     		.2byte	0x2aa
 14996 7a64 13       		.byte	0x13
 14997 7a65 777A0000 		.4byte	0x7a77
 14998 7a69 05       		.uleb128 0x5
 14999 7a6a C9600000 		.4byte	0x60c9
 15000 7a6e 00000000 		.4byte	.LLST8
 15001 7a72 00000000 		.4byte	.LVUS8
 15002 7a76 00       		.byte	0
 15003 7a77 32       		.uleb128 0x32
 15004 7a78 00000000 		.8byte	.LVL6
 15004      00000000 
 15005 7a80 362B0000 		.4byte	0x2b36
 15006 7a84 8F7A0000 		.4byte	0x7a8f
 15007 7a88 0F       		.uleb128 0xf
 15008 7a89 01       		.uleb128 0x1
 15009 7a8a 50       		.byte	0x50
 15010 7a8b 02       		.uleb128 0x2
 15011 7a8c 83       		.byte	0x83
 15012 7a8d 00       		.sleb128 0
 15013 7a8e 00       		.byte	0
 15014 7a8f A501     		.uleb128 0xa5
 15015 7a91 00000000 		.8byte	.LVL8
 15015      00000000 
 15016 7a99 432B0000 		.4byte	0x2b43
 15017 7a9d 00       		.byte	0
 15018 7a9e 6C       		.uleb128 0x6c
 15019 7a9f 00000000 		.4byte	.LASF984
 15020 7aa3 00000000 		.4byte	.LASF984
 15021 7aa7 35       		.uleb128 0x35
 15022 7aa8 00000000 		.4byte	.LASF980
 15023 7aac 00000000 		.4byte	.LASF981
 15024 7ab0 47       		.byte	0x47
 15025 7ab1 87       		.byte	0x87
 15026 7ab2 06       		.byte	0x6
 15027 7ab3 35       		.uleb128 0x35
 15028 7ab4 00000000 		.4byte	.LASF982
AARCH64 GAS  obj/extInstr.s 			page 477


 15029 7ab8 00000000 		.4byte	.LASF982
 15030 7abc 04       		.byte	0x4
 15031 7abd 06       		.byte	0x6
 15032 7abe 11       		.byte	0x11
 15033 7abf 35       		.uleb128 0x35
 15034 7ac0 00000000 		.4byte	.LASF983
 15035 7ac4 00000000 		.4byte	.LASF983
 15036 7ac8 04       		.byte	0x4
 15037 7ac9 07       		.byte	0x7
 15038 7aca 11       		.byte	0x11
 15039 7acb 6C       		.uleb128 0x6c
 15040 7acc 00000000 		.4byte	.LASF985
 15041 7ad0 00000000 		.4byte	.LASF986
 15042 7ad4 00       		.byte	0
 15043              		.section	.debug_abbrev,"",@progbits
 15044              	.Ldebug_abbrev0:
 15045 0000 01       		.uleb128 0x1
 15046 0001 05       		.uleb128 0x5
 15047 0002 00       		.byte	0
 15048 0003 49       		.uleb128 0x49
 15049 0004 13       		.uleb128 0x13
 15050 0005 00       		.byte	0
 15051 0006 00       		.byte	0
 15052 0007 02       		.uleb128 0x2
 15053 0008 05       		.uleb128 0x5
 15054 0009 00       		.byte	0
 15055 000a 49       		.uleb128 0x49
 15056 000b 13       		.uleb128 0x13
 15057 000c 34       		.uleb128 0x34
 15058 000d 19       		.uleb128 0x19
 15059 000e 00       		.byte	0
 15060 000f 00       		.byte	0
 15061 0010 03       		.uleb128 0x3
 15062 0011 08       		.uleb128 0x8
 15063 0012 00       		.byte	0
 15064 0013 3A       		.uleb128 0x3a
 15065 0014 0B       		.uleb128 0xb
 15066 0015 3B       		.uleb128 0x3b
 15067 0016 0B       		.uleb128 0xb
 15068 0017 39       		.uleb128 0x39
 15069 0018 0B       		.uleb128 0xb
 15070 0019 18       		.uleb128 0x18
 15071 001a 13       		.uleb128 0x13
 15072 001b 00       		.byte	0
 15073 001c 00       		.byte	0
 15074 001d 04       		.uleb128 0x4
 15075 001e 2E       		.uleb128 0x2e
 15076 001f 01       		.byte	0x1
 15077 0020 3F       		.uleb128 0x3f
 15078 0021 19       		.uleb128 0x19
 15079 0022 03       		.uleb128 0x3
 15080 0023 0E       		.uleb128 0xe
 15081 0024 3A       		.uleb128 0x3a
 15082 0025 0B       		.uleb128 0xb
 15083 0026 3B       		.uleb128 0x3b
 15084 0027 05       		.uleb128 0x5
 15085 0028 39       		.uleb128 0x39
AARCH64 GAS  obj/extInstr.s 			page 478


 15086 0029 0B       		.uleb128 0xb
 15087 002a 6E       		.uleb128 0x6e
 15088 002b 0E       		.uleb128 0xe
 15089 002c 49       		.uleb128 0x49
 15090 002d 13       		.uleb128 0x13
 15091 002e 32       		.uleb128 0x32
 15092 002f 0B       		.uleb128 0xb
 15093 0030 3C       		.uleb128 0x3c
 15094 0031 19       		.uleb128 0x19
 15095 0032 64       		.uleb128 0x64
 15096 0033 13       		.uleb128 0x13
 15097 0034 01       		.uleb128 0x1
 15098 0035 13       		.uleb128 0x13
 15099 0036 00       		.byte	0
 15100 0037 00       		.byte	0
 15101 0038 05       		.uleb128 0x5
 15102 0039 05       		.uleb128 0x5
 15103 003a 00       		.byte	0
 15104 003b 31       		.uleb128 0x31
 15105 003c 13       		.uleb128 0x13
 15106 003d 02       		.uleb128 0x2
 15107 003e 17       		.uleb128 0x17
 15108 003f B742     		.uleb128 0x2137
 15109 0041 17       		.uleb128 0x17
 15110 0042 00       		.byte	0
 15111 0043 00       		.byte	0
 15112 0044 06       		.uleb128 0x6
 15113 0045 16       		.uleb128 0x16
 15114 0046 00       		.byte	0
 15115 0047 03       		.uleb128 0x3
 15116 0048 0E       		.uleb128 0xe
 15117 0049 3A       		.uleb128 0x3a
 15118 004a 0B       		.uleb128 0xb
 15119 004b 3B       		.uleb128 0x3b
 15120 004c 0B       		.uleb128 0xb
 15121 004d 39       		.uleb128 0x39
 15122 004e 0B       		.uleb128 0xb
 15123 004f 49       		.uleb128 0x49
 15124 0050 13       		.uleb128 0x13
 15125 0051 00       		.byte	0
 15126 0052 00       		.byte	0
 15127 0053 07       		.uleb128 0x7
 15128 0054 05       		.uleb128 0x5
 15129 0055 00       		.byte	0
 15130 0056 03       		.uleb128 0x3
 15131 0057 0E       		.uleb128 0xe
 15132 0058 49       		.uleb128 0x49
 15133 0059 13       		.uleb128 0x13
 15134 005a 34       		.uleb128 0x34
 15135 005b 19       		.uleb128 0x19
 15136 005c 00       		.byte	0
 15137 005d 00       		.byte	0
 15138 005e 08       		.uleb128 0x8
 15139 005f 0D       		.uleb128 0xd
 15140 0060 00       		.byte	0
 15141 0061 03       		.uleb128 0x3
 15142 0062 0E       		.uleb128 0xe
AARCH64 GAS  obj/extInstr.s 			page 479


 15143 0063 3A       		.uleb128 0x3a
 15144 0064 0B       		.uleb128 0xb
 15145 0065 3B       		.uleb128 0x3b
 15146 0066 0B       		.uleb128 0xb
 15147 0067 39       		.uleb128 0x39
 15148 0068 0B       		.uleb128 0xb
 15149 0069 49       		.uleb128 0x49
 15150 006a 13       		.uleb128 0x13
 15151 006b 38       		.uleb128 0x38
 15152 006c 0B       		.uleb128 0xb
 15153 006d 00       		.byte	0
 15154 006e 00       		.byte	0
 15155 006f 09       		.uleb128 0x9
 15156 0070 0F       		.uleb128 0xf
 15157 0071 00       		.byte	0
 15158 0072 0B       		.uleb128 0xb
 15159 0073 0B       		.uleb128 0xb
 15160 0074 49       		.uleb128 0x49
 15161 0075 13       		.uleb128 0x13
 15162 0076 00       		.byte	0
 15163 0077 00       		.byte	0
 15164 0078 0A       		.uleb128 0xa
 15165 0079 2E       		.uleb128 0x2e
 15166 007a 01       		.byte	0x1
 15167 007b 47       		.uleb128 0x47
 15168 007c 13       		.uleb128 0x13
 15169 007d 64       		.uleb128 0x64
 15170 007e 13       		.uleb128 0x13
 15171 007f 20       		.uleb128 0x20
 15172 0080 0B       		.uleb128 0xb
 15173 0081 01       		.uleb128 0x1
 15174 0082 13       		.uleb128 0x13
 15175 0083 00       		.byte	0
 15176 0084 00       		.byte	0
 15177 0085 0B       		.uleb128 0xb
 15178 0086 2E       		.uleb128 0x2e
 15179 0087 01       		.byte	0x1
 15180 0088 3F       		.uleb128 0x3f
 15181 0089 19       		.uleb128 0x19
 15182 008a 03       		.uleb128 0x3
 15183 008b 0E       		.uleb128 0xe
 15184 008c 3A       		.uleb128 0x3a
 15185 008d 0B       		.uleb128 0xb
 15186 008e 3B       		.uleb128 0x3b
 15187 008f 05       		.uleb128 0x5
 15188 0090 39       		.uleb128 0x39
 15189 0091 0B       		.uleb128 0xb
 15190 0092 49       		.uleb128 0x49
 15191 0093 13       		.uleb128 0x13
 15192 0094 3C       		.uleb128 0x3c
 15193 0095 19       		.uleb128 0x19
 15194 0096 01       		.uleb128 0x1
 15195 0097 13       		.uleb128 0x13
 15196 0098 00       		.byte	0
 15197 0099 00       		.byte	0
 15198 009a 0C       		.uleb128 0xc
 15199 009b 26       		.uleb128 0x26
AARCH64 GAS  obj/extInstr.s 			page 480


 15200 009c 00       		.byte	0
 15201 009d 49       		.uleb128 0x49
 15202 009e 13       		.uleb128 0x13
 15203 009f 00       		.byte	0
 15204 00a0 00       		.byte	0
 15205 00a1 0D       		.uleb128 0xd
 15206 00a2 05       		.uleb128 0x5
 15207 00a3 00       		.byte	0
 15208 00a4 31       		.uleb128 0x31
 15209 00a5 13       		.uleb128 0x13
 15210 00a6 00       		.byte	0
 15211 00a7 00       		.byte	0
 15212 00a8 0E       		.uleb128 0xe
 15213 00a9 2F       		.uleb128 0x2f
 15214 00aa 00       		.byte	0
 15215 00ab 03       		.uleb128 0x3
 15216 00ac 0E       		.uleb128 0xe
 15217 00ad 49       		.uleb128 0x49
 15218 00ae 13       		.uleb128 0x13
 15219 00af 00       		.byte	0
 15220 00b0 00       		.byte	0
 15221 00b1 0F       		.uleb128 0xf
 15222 00b2 8A8201   		.uleb128 0x410a
 15223 00b5 00       		.byte	0
 15224 00b6 02       		.uleb128 0x2
 15225 00b7 18       		.uleb128 0x18
 15226 00b8 9142     		.uleb128 0x2111
 15227 00ba 18       		.uleb128 0x18
 15228 00bb 00       		.byte	0
 15229 00bc 00       		.byte	0
 15230 00bd 10       		.uleb128 0x10
 15231 00be 2E       		.uleb128 0x2e
 15232 00bf 01       		.byte	0x1
 15233 00c0 3F       		.uleb128 0x3f
 15234 00c1 19       		.uleb128 0x19
 15235 00c2 03       		.uleb128 0x3
 15236 00c3 0E       		.uleb128 0xe
 15237 00c4 3A       		.uleb128 0x3a
 15238 00c5 0B       		.uleb128 0xb
 15239 00c6 3B       		.uleb128 0x3b
 15240 00c7 0B       		.uleb128 0xb
 15241 00c8 39       		.uleb128 0x39
 15242 00c9 0B       		.uleb128 0xb
 15243 00ca 49       		.uleb128 0x49
 15244 00cb 13       		.uleb128 0x13
 15245 00cc 3C       		.uleb128 0x3c
 15246 00cd 19       		.uleb128 0x19
 15247 00ce 01       		.uleb128 0x1
 15248 00cf 13       		.uleb128 0x13
 15249 00d0 00       		.byte	0
 15250 00d1 00       		.byte	0
 15251 00d2 11       		.uleb128 0x11
 15252 00d3 10       		.uleb128 0x10
 15253 00d4 00       		.byte	0
 15254 00d5 0B       		.uleb128 0xb
 15255 00d6 0B       		.uleb128 0xb
 15256 00d7 49       		.uleb128 0x49
AARCH64 GAS  obj/extInstr.s 			page 481


 15257 00d8 13       		.uleb128 0x13
 15258 00d9 00       		.byte	0
 15259 00da 00       		.byte	0
 15260 00db 12       		.uleb128 0x12
 15261 00dc 2E       		.uleb128 0x2e
 15262 00dd 01       		.byte	0x1
 15263 00de 3F       		.uleb128 0x3f
 15264 00df 19       		.uleb128 0x19
 15265 00e0 03       		.uleb128 0x3
 15266 00e1 0E       		.uleb128 0xe
 15267 00e2 3A       		.uleb128 0x3a
 15268 00e3 0B       		.uleb128 0xb
 15269 00e4 3B       		.uleb128 0x3b
 15270 00e5 05       		.uleb128 0x5
 15271 00e6 39       		.uleb128 0x39
 15272 00e7 0B       		.uleb128 0xb
 15273 00e8 6E       		.uleb128 0x6e
 15274 00e9 0E       		.uleb128 0xe
 15275 00ea 32       		.uleb128 0x32
 15276 00eb 0B       		.uleb128 0xb
 15277 00ec 3C       		.uleb128 0x3c
 15278 00ed 19       		.uleb128 0x19
 15279 00ee 64       		.uleb128 0x64
 15280 00ef 13       		.uleb128 0x13
 15281 00f0 01       		.uleb128 0x1
 15282 00f1 13       		.uleb128 0x13
 15283 00f2 00       		.byte	0
 15284 00f3 00       		.byte	0
 15285 00f4 13       		.uleb128 0x13
 15286 00f5 2E       		.uleb128 0x2e
 15287 00f6 01       		.byte	0x1
 15288 00f7 31       		.uleb128 0x31
 15289 00f8 13       		.uleb128 0x13
 15290 00f9 6E       		.uleb128 0x6e
 15291 00fa 0E       		.uleb128 0xe
 15292 00fb 64       		.uleb128 0x64
 15293 00fc 13       		.uleb128 0x13
 15294 00fd 01       		.uleb128 0x1
 15295 00fe 13       		.uleb128 0x13
 15296 00ff 00       		.byte	0
 15297 0100 00       		.byte	0
 15298 0101 14       		.uleb128 0x14
 15299 0102 2E       		.uleb128 0x2e
 15300 0103 01       		.byte	0x1
 15301 0104 3F       		.uleb128 0x3f
 15302 0105 19       		.uleb128 0x19
 15303 0106 03       		.uleb128 0x3
 15304 0107 0E       		.uleb128 0xe
 15305 0108 3A       		.uleb128 0x3a
 15306 0109 0B       		.uleb128 0xb
 15307 010a 3B       		.uleb128 0x3b
 15308 010b 05       		.uleb128 0x5
 15309 010c 39       		.uleb128 0x39
 15310 010d 0B       		.uleb128 0xb
 15311 010e 6E       		.uleb128 0x6e
 15312 010f 0E       		.uleb128 0xe
 15313 0110 49       		.uleb128 0x49
AARCH64 GAS  obj/extInstr.s 			page 482


 15314 0111 13       		.uleb128 0x13
 15315 0112 3C       		.uleb128 0x3c
 15316 0113 19       		.uleb128 0x19
 15317 0114 01       		.uleb128 0x1
 15318 0115 13       		.uleb128 0x13
 15319 0116 00       		.byte	0
 15320 0117 00       		.byte	0
 15321 0118 15       		.uleb128 0x15
 15322 0119 05       		.uleb128 0x5
 15323 011a 00       		.byte	0
 15324 011b 03       		.uleb128 0x3
 15325 011c 0E       		.uleb128 0xe
 15326 011d 3A       		.uleb128 0x3a
 15327 011e 0B       		.uleb128 0xb
 15328 011f 3B       		.uleb128 0x3b
 15329 0120 05       		.uleb128 0x5
 15330 0121 39       		.uleb128 0x39
 15331 0122 0B       		.uleb128 0xb
 15332 0123 49       		.uleb128 0x49
 15333 0124 13       		.uleb128 0x13
 15334 0125 00       		.byte	0
 15335 0126 00       		.byte	0
 15336 0127 16       		.uleb128 0x16
 15337 0128 05       		.uleb128 0x5
 15338 0129 00       		.byte	0
 15339 012a 03       		.uleb128 0x3
 15340 012b 08       		.uleb128 0x8
 15341 012c 3A       		.uleb128 0x3a
 15342 012d 0B       		.uleb128 0xb
 15343 012e 3B       		.uleb128 0x3b
 15344 012f 0B       		.uleb128 0xb
 15345 0130 39       		.uleb128 0x39
 15346 0131 0B       		.uleb128 0xb
 15347 0132 49       		.uleb128 0x49
 15348 0133 13       		.uleb128 0x13
 15349 0134 00       		.byte	0
 15350 0135 00       		.byte	0
 15351 0136 17       		.uleb128 0x17
 15352 0137 16       		.uleb128 0x16
 15353 0138 00       		.byte	0
 15354 0139 03       		.uleb128 0x3
 15355 013a 0E       		.uleb128 0xe
 15356 013b 3A       		.uleb128 0x3a
 15357 013c 0B       		.uleb128 0xb
 15358 013d 3B       		.uleb128 0x3b
 15359 013e 0B       		.uleb128 0xb
 15360 013f 39       		.uleb128 0x39
 15361 0140 0B       		.uleb128 0xb
 15362 0141 49       		.uleb128 0x49
 15363 0142 13       		.uleb128 0x13
 15364 0143 32       		.uleb128 0x32
 15365 0144 0B       		.uleb128 0xb
 15366 0145 00       		.byte	0
 15367 0146 00       		.byte	0
 15368 0147 18       		.uleb128 0x18
 15369 0148 2E       		.uleb128 0x2e
 15370 0149 01       		.byte	0x1
AARCH64 GAS  obj/extInstr.s 			page 483


 15371 014a 3F       		.uleb128 0x3f
 15372 014b 19       		.uleb128 0x19
 15373 014c 03       		.uleb128 0x3
 15374 014d 0E       		.uleb128 0xe
 15375 014e 3A       		.uleb128 0x3a
 15376 014f 0B       		.uleb128 0xb
 15377 0150 3B       		.uleb128 0x3b
 15378 0151 0B       		.uleb128 0xb
 15379 0152 39       		.uleb128 0x39
 15380 0153 0B       		.uleb128 0xb
 15381 0154 6E       		.uleb128 0x6e
 15382 0155 0E       		.uleb128 0xe
 15383 0156 49       		.uleb128 0x49
 15384 0157 13       		.uleb128 0x13
 15385 0158 3C       		.uleb128 0x3c
 15386 0159 19       		.uleb128 0x19
 15387 015a 01       		.uleb128 0x1
 15388 015b 13       		.uleb128 0x13
 15389 015c 00       		.byte	0
 15390 015d 00       		.byte	0
 15391 015e 19       		.uleb128 0x19
 15392 015f 2E       		.uleb128 0x2e
 15393 0160 01       		.byte	0x1
 15394 0161 3F       		.uleb128 0x3f
 15395 0162 19       		.uleb128 0x19
 15396 0163 03       		.uleb128 0x3
 15397 0164 0E       		.uleb128 0xe
 15398 0165 3A       		.uleb128 0x3a
 15399 0166 0B       		.uleb128 0xb
 15400 0167 3B       		.uleb128 0x3b
 15401 0168 0B       		.uleb128 0xb
 15402 0169 39       		.uleb128 0x39
 15403 016a 0B       		.uleb128 0xb
 15404 016b 6E       		.uleb128 0x6e
 15405 016c 0E       		.uleb128 0xe
 15406 016d 49       		.uleb128 0x49
 15407 016e 13       		.uleb128 0x13
 15408 016f 3C       		.uleb128 0x3c
 15409 0170 19       		.uleb128 0x19
 15410 0171 64       		.uleb128 0x64
 15411 0172 13       		.uleb128 0x13
 15412 0173 01       		.uleb128 0x1
 15413 0174 13       		.uleb128 0x13
 15414 0175 00       		.byte	0
 15415 0176 00       		.byte	0
 15416 0177 1A       		.uleb128 0x1a
 15417 0178 2E       		.uleb128 0x2e
 15418 0179 01       		.byte	0x1
 15419 017a 47       		.uleb128 0x47
 15420 017b 13       		.uleb128 0x13
 15421 017c 20       		.uleb128 0x20
 15422 017d 0B       		.uleb128 0xb
 15423 017e 01       		.uleb128 0x1
 15424 017f 13       		.uleb128 0x13
 15425 0180 00       		.byte	0
 15426 0181 00       		.byte	0
 15427 0182 1B       		.uleb128 0x1b
AARCH64 GAS  obj/extInstr.s 			page 484


 15428 0183 24       		.uleb128 0x24
 15429 0184 00       		.byte	0
 15430 0185 0B       		.uleb128 0xb
 15431 0186 0B       		.uleb128 0xb
 15432 0187 3E       		.uleb128 0x3e
 15433 0188 0B       		.uleb128 0xb
 15434 0189 03       		.uleb128 0x3
 15435 018a 0E       		.uleb128 0xe
 15436 018b 00       		.byte	0
 15437 018c 00       		.byte	0
 15438 018d 1C       		.uleb128 0x1c
 15439 018e 2F       		.uleb128 0x2f
 15440 018f 00       		.byte	0
 15441 0190 03       		.uleb128 0x3
 15442 0191 08       		.uleb128 0x8
 15443 0192 49       		.uleb128 0x49
 15444 0193 13       		.uleb128 0x13
 15445 0194 00       		.byte	0
 15446 0195 00       		.byte	0
 15447 0196 1D       		.uleb128 0x1d
 15448 0197 16       		.uleb128 0x16
 15449 0198 00       		.byte	0
 15450 0199 03       		.uleb128 0x3
 15451 019a 0E       		.uleb128 0xe
 15452 019b 3A       		.uleb128 0x3a
 15453 019c 0B       		.uleb128 0xb
 15454 019d 3B       		.uleb128 0x3b
 15455 019e 05       		.uleb128 0x5
 15456 019f 39       		.uleb128 0x39
 15457 01a0 0B       		.uleb128 0xb
 15458 01a1 49       		.uleb128 0x49
 15459 01a2 13       		.uleb128 0x13
 15460 01a3 00       		.byte	0
 15461 01a4 00       		.byte	0
 15462 01a5 1E       		.uleb128 0x1e
 15463 01a6 1D       		.uleb128 0x1d
 15464 01a7 01       		.byte	0x1
 15465 01a8 31       		.uleb128 0x31
 15466 01a9 13       		.uleb128 0x13
 15467 01aa 52       		.uleb128 0x52
 15468 01ab 01       		.uleb128 0x1
 15469 01ac B842     		.uleb128 0x2138
 15470 01ae 05       		.uleb128 0x5
 15471 01af 11       		.uleb128 0x11
 15472 01b0 01       		.uleb128 0x1
 15473 01b1 12       		.uleb128 0x12
 15474 01b2 07       		.uleb128 0x7
 15475 01b3 58       		.uleb128 0x58
 15476 01b4 0B       		.uleb128 0xb
 15477 01b5 59       		.uleb128 0x59
 15478 01b6 0B       		.uleb128 0xb
 15479 01b7 57       		.uleb128 0x57
 15480 01b8 0B       		.uleb128 0xb
 15481 01b9 01       		.uleb128 0x1
 15482 01ba 13       		.uleb128 0x13
 15483 01bb 00       		.byte	0
 15484 01bc 00       		.byte	0
AARCH64 GAS  obj/extInstr.s 			page 485


 15485 01bd 1F       		.uleb128 0x1f
 15486 01be 0D       		.uleb128 0xd
 15487 01bf 00       		.byte	0
 15488 01c0 03       		.uleb128 0x3
 15489 01c1 0E       		.uleb128 0xe
 15490 01c2 3A       		.uleb128 0x3a
 15491 01c3 0B       		.uleb128 0xb
 15492 01c4 3B       		.uleb128 0x3b
 15493 01c5 0B       		.uleb128 0xb
 15494 01c6 39       		.uleb128 0x39
 15495 01c7 0B       		.uleb128 0xb
 15496 01c8 49       		.uleb128 0x49
 15497 01c9 13       		.uleb128 0x13
 15498 01ca 00       		.byte	0
 15499 01cb 00       		.byte	0
 15500 01cc 20       		.uleb128 0x20
 15501 01cd 2E       		.uleb128 0x2e
 15502 01ce 01       		.byte	0x1
 15503 01cf 3F       		.uleb128 0x3f
 15504 01d0 19       		.uleb128 0x19
 15505 01d1 03       		.uleb128 0x3
 15506 01d2 0E       		.uleb128 0xe
 15507 01d3 3A       		.uleb128 0x3a
 15508 01d4 0B       		.uleb128 0xb
 15509 01d5 3B       		.uleb128 0x3b
 15510 01d6 0B       		.uleb128 0xb
 15511 01d7 39       		.uleb128 0x39
 15512 01d8 0B       		.uleb128 0xb
 15513 01d9 6E       		.uleb128 0x6e
 15514 01da 0E       		.uleb128 0xe
 15515 01db 32       		.uleb128 0x32
 15516 01dc 0B       		.uleb128 0xb
 15517 01dd 3C       		.uleb128 0x3c
 15518 01de 19       		.uleb128 0x19
 15519 01df 64       		.uleb128 0x64
 15520 01e0 13       		.uleb128 0x13
 15521 01e1 01       		.uleb128 0x1
 15522 01e2 13       		.uleb128 0x13
 15523 01e3 00       		.byte	0
 15524 01e4 00       		.byte	0
 15525 01e5 21       		.uleb128 0x21
 15526 01e6 01       		.uleb128 0x1
 15527 01e7 01       		.byte	0x1
 15528 01e8 49       		.uleb128 0x49
 15529 01e9 13       		.uleb128 0x13
 15530 01ea 01       		.uleb128 0x1
 15531 01eb 13       		.uleb128 0x13
 15532 01ec 00       		.byte	0
 15533 01ed 00       		.byte	0
 15534 01ee 22       		.uleb128 0x22
 15535 01ef 21       		.uleb128 0x21
 15536 01f0 00       		.byte	0
 15537 01f1 49       		.uleb128 0x49
 15538 01f2 13       		.uleb128 0x13
 15539 01f3 2F       		.uleb128 0x2f
 15540 01f4 0B       		.uleb128 0xb
 15541 01f5 00       		.byte	0
AARCH64 GAS  obj/extInstr.s 			page 486


 15542 01f6 00       		.byte	0
 15543 01f7 23       		.uleb128 0x23
 15544 01f8 898201   		.uleb128 0x4109
 15545 01fb 01       		.byte	0x1
 15546 01fc 11       		.uleb128 0x11
 15547 01fd 01       		.uleb128 0x1
 15548 01fe 31       		.uleb128 0x31
 15549 01ff 13       		.uleb128 0x13
 15550 0200 00       		.byte	0
 15551 0201 00       		.byte	0
 15552 0202 24       		.uleb128 0x24
 15553 0203 13       		.uleb128 0x13
 15554 0204 01       		.byte	0x1
 15555 0205 03       		.uleb128 0x3
 15556 0206 0E       		.uleb128 0xe
 15557 0207 0B       		.uleb128 0xb
 15558 0208 0B       		.uleb128 0xb
 15559 0209 3A       		.uleb128 0x3a
 15560 020a 0B       		.uleb128 0xb
 15561 020b 3B       		.uleb128 0x3b
 15562 020c 0B       		.uleb128 0xb
 15563 020d 39       		.uleb128 0x39
 15564 020e 0B       		.uleb128 0xb
 15565 020f 01       		.uleb128 0x1
 15566 0210 13       		.uleb128 0x13
 15567 0211 00       		.byte	0
 15568 0212 00       		.byte	0
 15569 0213 25       		.uleb128 0x25
 15570 0214 05       		.uleb128 0x5
 15571 0215 00       		.byte	0
 15572 0216 03       		.uleb128 0x3
 15573 0217 08       		.uleb128 0x8
 15574 0218 3A       		.uleb128 0x3a
 15575 0219 0B       		.uleb128 0xb
 15576 021a 3B       		.uleb128 0x3b
 15577 021b 05       		.uleb128 0x5
 15578 021c 39       		.uleb128 0x39
 15579 021d 0B       		.uleb128 0xb
 15580 021e 49       		.uleb128 0x49
 15581 021f 13       		.uleb128 0x13
 15582 0220 00       		.byte	0
 15583 0221 00       		.byte	0
 15584 0222 26       		.uleb128 0x26
 15585 0223 1D       		.uleb128 0x1d
 15586 0224 01       		.byte	0x1
 15587 0225 31       		.uleb128 0x31
 15588 0226 13       		.uleb128 0x13
 15589 0227 52       		.uleb128 0x52
 15590 0228 01       		.uleb128 0x1
 15591 0229 B842     		.uleb128 0x2138
 15592 022b 05       		.uleb128 0x5
 15593 022c 55       		.uleb128 0x55
 15594 022d 17       		.uleb128 0x17
 15595 022e 58       		.uleb128 0x58
 15596 022f 0B       		.uleb128 0xb
 15597 0230 59       		.uleb128 0x59
 15598 0231 0B       		.uleb128 0xb
AARCH64 GAS  obj/extInstr.s 			page 487


 15599 0232 57       		.uleb128 0x57
 15600 0233 0B       		.uleb128 0xb
 15601 0234 01       		.uleb128 0x1
 15602 0235 13       		.uleb128 0x13
 15603 0236 00       		.byte	0
 15604 0237 00       		.byte	0
 15605 0238 27       		.uleb128 0x27
 15606 0239 08       		.uleb128 0x8
 15607 023a 00       		.byte	0
 15608 023b 3A       		.uleb128 0x3a
 15609 023c 0B       		.uleb128 0xb
 15610 023d 3B       		.uleb128 0x3b
 15611 023e 05       		.uleb128 0x5
 15612 023f 39       		.uleb128 0x39
 15613 0240 0B       		.uleb128 0xb
 15614 0241 18       		.uleb128 0x18
 15615 0242 13       		.uleb128 0x13
 15616 0243 00       		.byte	0
 15617 0244 00       		.byte	0
 15618 0245 28       		.uleb128 0x28
 15619 0246 2E       		.uleb128 0x2e
 15620 0247 01       		.byte	0x1
 15621 0248 3F       		.uleb128 0x3f
 15622 0249 19       		.uleb128 0x19
 15623 024a 03       		.uleb128 0x3
 15624 024b 0E       		.uleb128 0xe
 15625 024c 3A       		.uleb128 0x3a
 15626 024d 0B       		.uleb128 0xb
 15627 024e 3B       		.uleb128 0x3b
 15628 024f 0B       		.uleb128 0xb
 15629 0250 39       		.uleb128 0x39
 15630 0251 0B       		.uleb128 0xb
 15631 0252 6E       		.uleb128 0x6e
 15632 0253 0E       		.uleb128 0xe
 15633 0254 49       		.uleb128 0x49
 15634 0255 13       		.uleb128 0x13
 15635 0256 32       		.uleb128 0x32
 15636 0257 0B       		.uleb128 0xb
 15637 0258 3C       		.uleb128 0x3c
 15638 0259 19       		.uleb128 0x19
 15639 025a 64       		.uleb128 0x64
 15640 025b 13       		.uleb128 0x13
 15641 025c 01       		.uleb128 0x1
 15642 025d 13       		.uleb128 0x13
 15643 025e 00       		.byte	0
 15644 025f 00       		.byte	0
 15645 0260 29       		.uleb128 0x29
 15646 0261 1D       		.uleb128 0x1d
 15647 0262 01       		.byte	0x1
 15648 0263 31       		.uleb128 0x31
 15649 0264 13       		.uleb128 0x13
 15650 0265 52       		.uleb128 0x52
 15651 0266 01       		.uleb128 0x1
 15652 0267 B842     		.uleb128 0x2138
 15653 0269 05       		.uleb128 0x5
 15654 026a 55       		.uleb128 0x55
 15655 026b 17       		.uleb128 0x17
AARCH64 GAS  obj/extInstr.s 			page 488


 15656 026c 58       		.uleb128 0x58
 15657 026d 0B       		.uleb128 0xb
 15658 026e 59       		.uleb128 0x59
 15659 026f 0B       		.uleb128 0xb
 15660 0270 57       		.uleb128 0x57
 15661 0271 0B       		.uleb128 0xb
 15662 0272 00       		.byte	0
 15663 0273 00       		.byte	0
 15664 0274 2A       		.uleb128 0x2a
 15665 0275 1D       		.uleb128 0x1d
 15666 0276 01       		.byte	0x1
 15667 0277 31       		.uleb128 0x31
 15668 0278 13       		.uleb128 0x13
 15669 0279 52       		.uleb128 0x52
 15670 027a 01       		.uleb128 0x1
 15671 027b B842     		.uleb128 0x2138
 15672 027d 05       		.uleb128 0x5
 15673 027e 11       		.uleb128 0x11
 15674 027f 01       		.uleb128 0x1
 15675 0280 12       		.uleb128 0x12
 15676 0281 07       		.uleb128 0x7
 15677 0282 58       		.uleb128 0x58
 15678 0283 0B       		.uleb128 0xb
 15679 0284 59       		.uleb128 0x59
 15680 0285 0B       		.uleb128 0xb
 15681 0286 57       		.uleb128 0x57
 15682 0287 0B       		.uleb128 0xb
 15683 0288 00       		.byte	0
 15684 0289 00       		.byte	0
 15685 028a 2B       		.uleb128 0x2b
 15686 028b 2E       		.uleb128 0x2e
 15687 028c 01       		.byte	0x1
 15688 028d 3F       		.uleb128 0x3f
 15689 028e 19       		.uleb128 0x19
 15690 028f 03       		.uleb128 0x3
 15691 0290 0E       		.uleb128 0xe
 15692 0291 3A       		.uleb128 0x3a
 15693 0292 0B       		.uleb128 0xb
 15694 0293 3B       		.uleb128 0x3b
 15695 0294 0B       		.uleb128 0xb
 15696 0295 39       		.uleb128 0x39
 15697 0296 0B       		.uleb128 0xb
 15698 0297 6E       		.uleb128 0x6e
 15699 0298 0E       		.uleb128 0xe
 15700 0299 3C       		.uleb128 0x3c
 15701 029a 19       		.uleb128 0x19
 15702 029b 64       		.uleb128 0x64
 15703 029c 13       		.uleb128 0x13
 15704 029d 01       		.uleb128 0x1
 15705 029e 13       		.uleb128 0x13
 15706 029f 00       		.byte	0
 15707 02a0 00       		.byte	0
 15708 02a1 2C       		.uleb128 0x2c
 15709 02a2 28       		.uleb128 0x28
 15710 02a3 00       		.byte	0
 15711 02a4 03       		.uleb128 0x3
 15712 02a5 0E       		.uleb128 0xe
AARCH64 GAS  obj/extInstr.s 			page 489


 15713 02a6 1C       		.uleb128 0x1c
 15714 02a7 0B       		.uleb128 0xb
 15715 02a8 00       		.byte	0
 15716 02a9 00       		.byte	0
 15717 02aa 2D       		.uleb128 0x2d
 15718 02ab 16       		.uleb128 0x16
 15719 02ac 00       		.byte	0
 15720 02ad 03       		.uleb128 0x3
 15721 02ae 0E       		.uleb128 0xe
 15722 02af 3A       		.uleb128 0x3a
 15723 02b0 0B       		.uleb128 0xb
 15724 02b1 3B       		.uleb128 0x3b
 15725 02b2 05       		.uleb128 0x5
 15726 02b3 39       		.uleb128 0x39
 15727 02b4 0B       		.uleb128 0xb
 15728 02b5 49       		.uleb128 0x49
 15729 02b6 13       		.uleb128 0x13
 15730 02b7 32       		.uleb128 0x32
 15731 02b8 0B       		.uleb128 0xb
 15732 02b9 00       		.byte	0
 15733 02ba 00       		.byte	0
 15734 02bb 2E       		.uleb128 0x2e
 15735 02bc 05       		.uleb128 0x5
 15736 02bd 00       		.byte	0
 15737 02be 03       		.uleb128 0x3
 15738 02bf 0E       		.uleb128 0xe
 15739 02c0 3A       		.uleb128 0x3a
 15740 02c1 0B       		.uleb128 0xb
 15741 02c2 3B       		.uleb128 0x3b
 15742 02c3 0B       		.uleb128 0xb
 15743 02c4 39       		.uleb128 0x39
 15744 02c5 0B       		.uleb128 0xb
 15745 02c6 49       		.uleb128 0x49
 15746 02c7 13       		.uleb128 0x13
 15747 02c8 00       		.byte	0
 15748 02c9 00       		.byte	0
 15749 02ca 2F       		.uleb128 0x2f
 15750 02cb 2E       		.uleb128 0x2e
 15751 02cc 01       		.byte	0x1
 15752 02cd 3F       		.uleb128 0x3f
 15753 02ce 19       		.uleb128 0x19
 15754 02cf 03       		.uleb128 0x3
 15755 02d0 0E       		.uleb128 0xe
 15756 02d1 3A       		.uleb128 0x3a
 15757 02d2 0B       		.uleb128 0xb
 15758 02d3 3B       		.uleb128 0x3b
 15759 02d4 05       		.uleb128 0x5
 15760 02d5 39       		.uleb128 0x39
 15761 02d6 0B       		.uleb128 0xb
 15762 02d7 6E       		.uleb128 0x6e
 15763 02d8 0E       		.uleb128 0xe
 15764 02d9 3C       		.uleb128 0x3c
 15765 02da 19       		.uleb128 0x19
 15766 02db 01       		.uleb128 0x1
 15767 02dc 13       		.uleb128 0x13
 15768 02dd 00       		.byte	0
 15769 02de 00       		.byte	0
AARCH64 GAS  obj/extInstr.s 			page 490


 15770 02df 30       		.uleb128 0x30
 15771 02e0 2F       		.uleb128 0x2f
 15772 02e1 00       		.byte	0
 15773 02e2 03       		.uleb128 0x3
 15774 02e3 0E       		.uleb128 0xe
 15775 02e4 49       		.uleb128 0x49
 15776 02e5 13       		.uleb128 0x13
 15777 02e6 1E       		.uleb128 0x1e
 15778 02e7 19       		.uleb128 0x19
 15779 02e8 00       		.byte	0
 15780 02e9 00       		.byte	0
 15781 02ea 31       		.uleb128 0x31
 15782 02eb 2E       		.uleb128 0x2e
 15783 02ec 01       		.byte	0x1
 15784 02ed 3F       		.uleb128 0x3f
 15785 02ee 19       		.uleb128 0x19
 15786 02ef 03       		.uleb128 0x3
 15787 02f0 0E       		.uleb128 0xe
 15788 02f1 3A       		.uleb128 0x3a
 15789 02f2 0B       		.uleb128 0xb
 15790 02f3 3B       		.uleb128 0x3b
 15791 02f4 05       		.uleb128 0x5
 15792 02f5 39       		.uleb128 0x39
 15793 02f6 0B       		.uleb128 0xb
 15794 02f7 6E       		.uleb128 0x6e
 15795 02f8 0E       		.uleb128 0xe
 15796 02f9 49       		.uleb128 0x49
 15797 02fa 13       		.uleb128 0x13
 15798 02fb 3C       		.uleb128 0x3c
 15799 02fc 19       		.uleb128 0x19
 15800 02fd 64       		.uleb128 0x64
 15801 02fe 13       		.uleb128 0x13
 15802 02ff 01       		.uleb128 0x1
 15803 0300 13       		.uleb128 0x13
 15804 0301 00       		.byte	0
 15805 0302 00       		.byte	0
 15806 0303 32       		.uleb128 0x32
 15807 0304 898201   		.uleb128 0x4109
 15808 0307 01       		.byte	0x1
 15809 0308 11       		.uleb128 0x11
 15810 0309 01       		.uleb128 0x1
 15811 030a 31       		.uleb128 0x31
 15812 030b 13       		.uleb128 0x13
 15813 030c 01       		.uleb128 0x1
 15814 030d 13       		.uleb128 0x13
 15815 030e 00       		.byte	0
 15816 030f 00       		.byte	0
 15817 0310 33       		.uleb128 0x33
 15818 0311 898201   		.uleb128 0x4109
 15819 0314 00       		.byte	0
 15820 0315 11       		.uleb128 0x11
 15821 0316 01       		.uleb128 0x1
 15822 0317 31       		.uleb128 0x31
 15823 0318 13       		.uleb128 0x13
 15824 0319 00       		.byte	0
 15825 031a 00       		.byte	0
 15826 031b 34       		.uleb128 0x34
AARCH64 GAS  obj/extInstr.s 			page 491


 15827 031c 02       		.uleb128 0x2
 15828 031d 01       		.byte	0x1
 15829 031e 03       		.uleb128 0x3
 15830 031f 0E       		.uleb128 0xe
 15831 0320 3C       		.uleb128 0x3c
 15832 0321 19       		.uleb128 0x19
 15833 0322 01       		.uleb128 0x1
 15834 0323 13       		.uleb128 0x13
 15835 0324 00       		.byte	0
 15836 0325 00       		.byte	0
 15837 0326 35       		.uleb128 0x35
 15838 0327 2E       		.uleb128 0x2e
 15839 0328 00       		.byte	0
 15840 0329 3F       		.uleb128 0x3f
 15841 032a 19       		.uleb128 0x19
 15842 032b 3C       		.uleb128 0x3c
 15843 032c 19       		.uleb128 0x19
 15844 032d 6E       		.uleb128 0x6e
 15845 032e 0E       		.uleb128 0xe
 15846 032f 03       		.uleb128 0x3
 15847 0330 0E       		.uleb128 0xe
 15848 0331 3A       		.uleb128 0x3a
 15849 0332 0B       		.uleb128 0xb
 15850 0333 3B       		.uleb128 0x3b
 15851 0334 0B       		.uleb128 0xb
 15852 0335 39       		.uleb128 0x39
 15853 0336 0B       		.uleb128 0xb
 15854 0337 00       		.byte	0
 15855 0338 00       		.byte	0
 15856 0339 36       		.uleb128 0x36
 15857 033a 1D       		.uleb128 0x1d
 15858 033b 01       		.byte	0x1
 15859 033c 31       		.uleb128 0x31
 15860 033d 13       		.uleb128 0x13
 15861 033e 52       		.uleb128 0x52
 15862 033f 01       		.uleb128 0x1
 15863 0340 B842     		.uleb128 0x2138
 15864 0342 05       		.uleb128 0x5
 15865 0343 55       		.uleb128 0x55
 15866 0344 17       		.uleb128 0x17
 15867 0345 58       		.uleb128 0x58
 15868 0346 0B       		.uleb128 0xb
 15869 0347 59       		.uleb128 0x59
 15870 0348 05       		.uleb128 0x5
 15871 0349 57       		.uleb128 0x57
 15872 034a 0B       		.uleb128 0xb
 15873 034b 01       		.uleb128 0x1
 15874 034c 13       		.uleb128 0x13
 15875 034d 00       		.byte	0
 15876 034e 00       		.byte	0
 15877 034f 37       		.uleb128 0x37
 15878 0350 2E       		.uleb128 0x2e
 15879 0351 01       		.byte	0x1
 15880 0352 3F       		.uleb128 0x3f
 15881 0353 19       		.uleb128 0x19
 15882 0354 03       		.uleb128 0x3
 15883 0355 0E       		.uleb128 0xe
AARCH64 GAS  obj/extInstr.s 			page 492


 15884 0356 3A       		.uleb128 0x3a
 15885 0357 0B       		.uleb128 0xb
 15886 0358 3B       		.uleb128 0x3b
 15887 0359 05       		.uleb128 0x5
 15888 035a 39       		.uleb128 0x39
 15889 035b 0B       		.uleb128 0xb
 15890 035c 6E       		.uleb128 0x6e
 15891 035d 0E       		.uleb128 0xe
 15892 035e 3C       		.uleb128 0x3c
 15893 035f 19       		.uleb128 0x19
 15894 0360 64       		.uleb128 0x64
 15895 0361 13       		.uleb128 0x13
 15896 0362 01       		.uleb128 0x1
 15897 0363 13       		.uleb128 0x13
 15898 0364 00       		.byte	0
 15899 0365 00       		.byte	0
 15900 0366 38       		.uleb128 0x38
 15901 0367 18       		.uleb128 0x18
 15902 0368 00       		.byte	0
 15903 0369 00       		.byte	0
 15904 036a 00       		.byte	0
 15905 036b 39       		.uleb128 0x39
 15906 036c 2E       		.uleb128 0x2e
 15907 036d 01       		.byte	0x1
 15908 036e 3F       		.uleb128 0x3f
 15909 036f 19       		.uleb128 0x19
 15910 0370 03       		.uleb128 0x3
 15911 0371 0E       		.uleb128 0xe
 15912 0372 3A       		.uleb128 0x3a
 15913 0373 0B       		.uleb128 0xb
 15914 0374 3B       		.uleb128 0x3b
 15915 0375 05       		.uleb128 0x5
 15916 0376 39       		.uleb128 0x39
 15917 0377 0B       		.uleb128 0xb
 15918 0378 3C       		.uleb128 0x3c
 15919 0379 19       		.uleb128 0x19
 15920 037a 01       		.uleb128 0x1
 15921 037b 13       		.uleb128 0x13
 15922 037c 00       		.byte	0
 15923 037d 00       		.byte	0
 15924 037e 3A       		.uleb128 0x3a
 15925 037f 34       		.uleb128 0x34
 15926 0380 00       		.byte	0
 15927 0381 03       		.uleb128 0x3
 15928 0382 08       		.uleb128 0x8
 15929 0383 3A       		.uleb128 0x3a
 15930 0384 0B       		.uleb128 0xb
 15931 0385 3B       		.uleb128 0x3b
 15932 0386 0B       		.uleb128 0xb
 15933 0387 39       		.uleb128 0x39
 15934 0388 0B       		.uleb128 0xb
 15935 0389 49       		.uleb128 0x49
 15936 038a 13       		.uleb128 0x13
 15937 038b 3F       		.uleb128 0x3f
 15938 038c 19       		.uleb128 0x19
 15939 038d 02       		.uleb128 0x2
 15940 038e 18       		.uleb128 0x18
AARCH64 GAS  obj/extInstr.s 			page 493


 15941 038f 00       		.byte	0
 15942 0390 00       		.byte	0
 15943 0391 3B       		.uleb128 0x3b
 15944 0392 1D       		.uleb128 0x1d
 15945 0393 01       		.byte	0x1
 15946 0394 31       		.uleb128 0x31
 15947 0395 13       		.uleb128 0x13
 15948 0396 52       		.uleb128 0x52
 15949 0397 01       		.uleb128 0x1
 15950 0398 B842     		.uleb128 0x2138
 15951 039a 05       		.uleb128 0x5
 15952 039b 11       		.uleb128 0x11
 15953 039c 01       		.uleb128 0x1
 15954 039d 12       		.uleb128 0x12
 15955 039e 07       		.uleb128 0x7
 15956 039f 58       		.uleb128 0x58
 15957 03a0 0B       		.uleb128 0xb
 15958 03a1 59       		.uleb128 0x59
 15959 03a2 05       		.uleb128 0x5
 15960 03a3 57       		.uleb128 0x57
 15961 03a4 0B       		.uleb128 0xb
 15962 03a5 01       		.uleb128 0x1
 15963 03a6 13       		.uleb128 0x13
 15964 03a7 00       		.byte	0
 15965 03a8 00       		.byte	0
 15966 03a9 3C       		.uleb128 0x3c
 15967 03aa 1D       		.uleb128 0x1d
 15968 03ab 01       		.byte	0x1
 15969 03ac 31       		.uleb128 0x31
 15970 03ad 13       		.uleb128 0x13
 15971 03ae 52       		.uleb128 0x52
 15972 03af 01       		.uleb128 0x1
 15973 03b0 B842     		.uleb128 0x2138
 15974 03b2 05       		.uleb128 0x5
 15975 03b3 11       		.uleb128 0x11
 15976 03b4 01       		.uleb128 0x1
 15977 03b5 12       		.uleb128 0x12
 15978 03b6 07       		.uleb128 0x7
 15979 03b7 58       		.uleb128 0x58
 15980 03b8 0B       		.uleb128 0xb
 15981 03b9 59       		.uleb128 0x59
 15982 03ba 05       		.uleb128 0x5
 15983 03bb 57       		.uleb128 0x57
 15984 03bc 0B       		.uleb128 0xb
 15985 03bd 00       		.byte	0
 15986 03be 00       		.byte	0
 15987 03bf 3D       		.uleb128 0x3d
 15988 03c0 02       		.uleb128 0x2
 15989 03c1 01       		.byte	0x1
 15990 03c2 03       		.uleb128 0x3
 15991 03c3 0E       		.uleb128 0xe
 15992 03c4 0B       		.uleb128 0xb
 15993 03c5 0B       		.uleb128 0xb
 15994 03c6 3A       		.uleb128 0x3a
 15995 03c7 0B       		.uleb128 0xb
 15996 03c8 3B       		.uleb128 0x3b
 15997 03c9 0B       		.uleb128 0xb
AARCH64 GAS  obj/extInstr.s 			page 494


 15998 03ca 39       		.uleb128 0x39
 15999 03cb 0B       		.uleb128 0xb
 16000 03cc 01       		.uleb128 0x1
 16001 03cd 13       		.uleb128 0x13
 16002 03ce 00       		.byte	0
 16003 03cf 00       		.byte	0
 16004 03d0 3E       		.uleb128 0x3e
 16005 03d1 2E       		.uleb128 0x2e
 16006 03d2 01       		.byte	0x1
 16007 03d3 3F       		.uleb128 0x3f
 16008 03d4 19       		.uleb128 0x19
 16009 03d5 03       		.uleb128 0x3
 16010 03d6 08       		.uleb128 0x8
 16011 03d7 3A       		.uleb128 0x3a
 16012 03d8 0B       		.uleb128 0xb
 16013 03d9 3B       		.uleb128 0x3b
 16014 03da 05       		.uleb128 0x5
 16015 03db 39       		.uleb128 0x39
 16016 03dc 0B       		.uleb128 0xb
 16017 03dd 6E       		.uleb128 0x6e
 16018 03de 0E       		.uleb128 0xe
 16019 03df 49       		.uleb128 0x49
 16020 03e0 13       		.uleb128 0x13
 16021 03e1 32       		.uleb128 0x32
 16022 03e2 0B       		.uleb128 0xb
 16023 03e3 3C       		.uleb128 0x3c
 16024 03e4 19       		.uleb128 0x19
 16025 03e5 64       		.uleb128 0x64
 16026 03e6 13       		.uleb128 0x13
 16027 03e7 01       		.uleb128 0x1
 16028 03e8 13       		.uleb128 0x13
 16029 03e9 00       		.byte	0
 16030 03ea 00       		.byte	0
 16031 03eb 3F       		.uleb128 0x3f
 16032 03ec 13       		.uleb128 0x13
 16033 03ed 01       		.byte	0x1
 16034 03ee 03       		.uleb128 0x3
 16035 03ef 0E       		.uleb128 0xe
 16036 03f0 0B       		.uleb128 0xb
 16037 03f1 0B       		.uleb128 0xb
 16038 03f2 3A       		.uleb128 0x3a
 16039 03f3 0B       		.uleb128 0xb
 16040 03f4 3B       		.uleb128 0x3b
 16041 03f5 05       		.uleb128 0x5
 16042 03f6 39       		.uleb128 0x39
 16043 03f7 0B       		.uleb128 0xb
 16044 03f8 01       		.uleb128 0x1
 16045 03f9 13       		.uleb128 0x13
 16046 03fa 00       		.byte	0
 16047 03fb 00       		.byte	0
 16048 03fc 40       		.uleb128 0x40
 16049 03fd 2E       		.uleb128 0x2e
 16050 03fe 00       		.byte	0
 16051 03ff 3F       		.uleb128 0x3f
 16052 0400 19       		.uleb128 0x19
 16053 0401 03       		.uleb128 0x3
 16054 0402 0E       		.uleb128 0xe
AARCH64 GAS  obj/extInstr.s 			page 495


 16055 0403 3A       		.uleb128 0x3a
 16056 0404 0B       		.uleb128 0xb
 16057 0405 3B       		.uleb128 0x3b
 16058 0406 0B       		.uleb128 0xb
 16059 0407 39       		.uleb128 0x39
 16060 0408 0B       		.uleb128 0xb
 16061 0409 6E       		.uleb128 0x6e
 16062 040a 0E       		.uleb128 0xe
 16063 040b 49       		.uleb128 0x49
 16064 040c 13       		.uleb128 0x13
 16065 040d 3C       		.uleb128 0x3c
 16066 040e 19       		.uleb128 0x19
 16067 040f 00       		.byte	0
 16068 0410 00       		.byte	0
 16069 0411 41       		.uleb128 0x41
 16070 0412 0D       		.uleb128 0xd
 16071 0413 00       		.byte	0
 16072 0414 03       		.uleb128 0x3
 16073 0415 0E       		.uleb128 0xe
 16074 0416 49       		.uleb128 0x49
 16075 0417 13       		.uleb128 0x13
 16076 0418 38       		.uleb128 0x38
 16077 0419 0B       		.uleb128 0xb
 16078 041a 34       		.uleb128 0x34
 16079 041b 19       		.uleb128 0x19
 16080 041c 00       		.byte	0
 16081 041d 00       		.byte	0
 16082 041e 42       		.uleb128 0x42
 16083 041f 34       		.uleb128 0x34
 16084 0420 00       		.byte	0
 16085 0421 03       		.uleb128 0x3
 16086 0422 0E       		.uleb128 0xe
 16087 0423 3A       		.uleb128 0x3a
 16088 0424 0B       		.uleb128 0xb
 16089 0425 3B       		.uleb128 0x3b
 16090 0426 05       		.uleb128 0x5
 16091 0427 39       		.uleb128 0x39
 16092 0428 0B       		.uleb128 0xb
 16093 0429 49       		.uleb128 0x49
 16094 042a 13       		.uleb128 0x13
 16095 042b 00       		.byte	0
 16096 042c 00       		.byte	0
 16097 042d 43       		.uleb128 0x43
 16098 042e 3A       		.uleb128 0x3a
 16099 042f 00       		.byte	0
 16100 0430 3A       		.uleb128 0x3a
 16101 0431 0B       		.uleb128 0xb
 16102 0432 3B       		.uleb128 0x3b
 16103 0433 05       		.uleb128 0x5
 16104 0434 39       		.uleb128 0x39
 16105 0435 0B       		.uleb128 0xb
 16106 0436 18       		.uleb128 0x18
 16107 0437 13       		.uleb128 0x13
 16108 0438 00       		.byte	0
 16109 0439 00       		.byte	0
 16110 043a 44       		.uleb128 0x44
 16111 043b 28       		.uleb128 0x28
AARCH64 GAS  obj/extInstr.s 			page 496


 16112 043c 00       		.byte	0
 16113 043d 03       		.uleb128 0x3
 16114 043e 0E       		.uleb128 0xe
 16115 043f 1C       		.uleb128 0x1c
 16116 0440 06       		.uleb128 0x6
 16117 0441 00       		.byte	0
 16118 0442 00       		.byte	0
 16119 0443 45       		.uleb128 0x45
 16120 0444 13       		.uleb128 0x13
 16121 0445 01       		.byte	0x1
 16122 0446 0B       		.uleb128 0xb
 16123 0447 0B       		.uleb128 0xb
 16124 0448 3A       		.uleb128 0x3a
 16125 0449 0B       		.uleb128 0xb
 16126 044a 3B       		.uleb128 0x3b
 16127 044b 0B       		.uleb128 0xb
 16128 044c 39       		.uleb128 0x39
 16129 044d 0B       		.uleb128 0xb
 16130 044e 6E       		.uleb128 0x6e
 16131 044f 0E       		.uleb128 0xe
 16132 0450 01       		.uleb128 0x1
 16133 0451 13       		.uleb128 0x13
 16134 0452 00       		.byte	0
 16135 0453 00       		.byte	0
 16136 0454 46       		.uleb128 0x46
 16137 0455 42       		.uleb128 0x42
 16138 0456 00       		.byte	0
 16139 0457 0B       		.uleb128 0xb
 16140 0458 0B       		.uleb128 0xb
 16141 0459 49       		.uleb128 0x49
 16142 045a 13       		.uleb128 0x13
 16143 045b 00       		.byte	0
 16144 045c 00       		.byte	0
 16145 045d 47       		.uleb128 0x47
 16146 045e 2E       		.uleb128 0x2e
 16147 045f 00       		.byte	0
 16148 0460 3F       		.uleb128 0x3f
 16149 0461 19       		.uleb128 0x19
 16150 0462 03       		.uleb128 0x3
 16151 0463 0E       		.uleb128 0xe
 16152 0464 3A       		.uleb128 0x3a
 16153 0465 0B       		.uleb128 0xb
 16154 0466 3B       		.uleb128 0x3b
 16155 0467 0B       		.uleb128 0xb
 16156 0468 39       		.uleb128 0x39
 16157 0469 0B       		.uleb128 0xb
 16158 046a 49       		.uleb128 0x49
 16159 046b 13       		.uleb128 0x13
 16160 046c 3C       		.uleb128 0x3c
 16161 046d 19       		.uleb128 0x19
 16162 046e 00       		.byte	0
 16163 046f 00       		.byte	0
 16164 0470 48       		.uleb128 0x48
 16165 0471 34       		.uleb128 0x34
 16166 0472 00       		.byte	0
 16167 0473 03       		.uleb128 0x3
 16168 0474 08       		.uleb128 0x8
AARCH64 GAS  obj/extInstr.s 			page 497


 16169 0475 3A       		.uleb128 0x3a
 16170 0476 0B       		.uleb128 0xb
 16171 0477 3B       		.uleb128 0x3b
 16172 0478 0B       		.uleb128 0xb
 16173 0479 39       		.uleb128 0x39
 16174 047a 0B       		.uleb128 0xb
 16175 047b 49       		.uleb128 0x49
 16176 047c 13       		.uleb128 0x13
 16177 047d 00       		.byte	0
 16178 047e 00       		.byte	0
 16179 047f 49       		.uleb128 0x49
 16180 0480 0B       		.uleb128 0xb
 16181 0481 01       		.byte	0x1
 16182 0482 55       		.uleb128 0x55
 16183 0483 17       		.uleb128 0x17
 16184 0484 00       		.byte	0
 16185 0485 00       		.byte	0
 16186 0486 4A       		.uleb128 0x4a
 16187 0487 34       		.uleb128 0x34
 16188 0488 00       		.byte	0
 16189 0489 31       		.uleb128 0x31
 16190 048a 13       		.uleb128 0x13
 16191 048b 02       		.uleb128 0x2
 16192 048c 17       		.uleb128 0x17
 16193 048d B742     		.uleb128 0x2137
 16194 048f 17       		.uleb128 0x17
 16195 0490 00       		.byte	0
 16196 0491 00       		.byte	0
 16197 0492 4B       		.uleb128 0x4b
 16198 0493 17       		.uleb128 0x17
 16199 0494 01       		.byte	0x1
 16200 0495 0B       		.uleb128 0xb
 16201 0496 0B       		.uleb128 0xb
 16202 0497 3A       		.uleb128 0x3a
 16203 0498 0B       		.uleb128 0xb
 16204 0499 3B       		.uleb128 0x3b
 16205 049a 0B       		.uleb128 0xb
 16206 049b 39       		.uleb128 0x39
 16207 049c 0B       		.uleb128 0xb
 16208 049d 01       		.uleb128 0x1
 16209 049e 13       		.uleb128 0x13
 16210 049f 00       		.byte	0
 16211 04a0 00       		.byte	0
 16212 04a1 4C       		.uleb128 0x4c
 16213 04a2 2E       		.uleb128 0x2e
 16214 04a3 01       		.byte	0x1
 16215 04a4 3F       		.uleb128 0x3f
 16216 04a5 19       		.uleb128 0x19
 16217 04a6 03       		.uleb128 0x3
 16218 04a7 0E       		.uleb128 0xe
 16219 04a8 3A       		.uleb128 0x3a
 16220 04a9 0B       		.uleb128 0xb
 16221 04aa 3B       		.uleb128 0x3b
 16222 04ab 05       		.uleb128 0x5
 16223 04ac 39       		.uleb128 0x39
 16224 04ad 0B       		.uleb128 0xb
 16225 04ae 6E       		.uleb128 0x6e
AARCH64 GAS  obj/extInstr.s 			page 498


 16226 04af 0E       		.uleb128 0xe
 16227 04b0 32       		.uleb128 0x32
 16228 04b1 0B       		.uleb128 0xb
 16229 04b2 3C       		.uleb128 0x3c
 16230 04b3 19       		.uleb128 0x19
 16231 04b4 63       		.uleb128 0x63
 16232 04b5 19       		.uleb128 0x19
 16233 04b6 64       		.uleb128 0x64
 16234 04b7 13       		.uleb128 0x13
 16235 04b8 01       		.uleb128 0x1
 16236 04b9 13       		.uleb128 0x13
 16237 04ba 00       		.byte	0
 16238 04bb 00       		.byte	0
 16239 04bc 4D       		.uleb128 0x4d
 16240 04bd 02       		.uleb128 0x2
 16241 04be 00       		.byte	0
 16242 04bf 03       		.uleb128 0x3
 16243 04c0 0E       		.uleb128 0xe
 16244 04c1 3C       		.uleb128 0x3c
 16245 04c2 19       		.uleb128 0x19
 16246 04c3 00       		.byte	0
 16247 04c4 00       		.byte	0
 16248 04c5 4E       		.uleb128 0x4e
 16249 04c6 3A       		.uleb128 0x3a
 16250 04c7 00       		.byte	0
 16251 04c8 3A       		.uleb128 0x3a
 16252 04c9 0B       		.uleb128 0xb
 16253 04ca 3B       		.uleb128 0x3b
 16254 04cb 0B       		.uleb128 0xb
 16255 04cc 39       		.uleb128 0x39
 16256 04cd 0B       		.uleb128 0xb
 16257 04ce 18       		.uleb128 0x18
 16258 04cf 13       		.uleb128 0x13
 16259 04d0 00       		.byte	0
 16260 04d1 00       		.byte	0
 16261 04d2 4F       		.uleb128 0x4f
 16262 04d3 34       		.uleb128 0x34
 16263 04d4 00       		.byte	0
 16264 04d5 47       		.uleb128 0x47
 16265 04d6 13       		.uleb128 0x13
 16266 04d7 00       		.byte	0
 16267 04d8 00       		.byte	0
 16268 04d9 50       		.uleb128 0x50
 16269 04da 0D       		.uleb128 0xd
 16270 04db 00       		.byte	0
 16271 04dc 03       		.uleb128 0x3
 16272 04dd 08       		.uleb128 0x8
 16273 04de 3A       		.uleb128 0x3a
 16274 04df 0B       		.uleb128 0xb
 16275 04e0 3B       		.uleb128 0x3b
 16276 04e1 0B       		.uleb128 0xb
 16277 04e2 39       		.uleb128 0x39
 16278 04e3 0B       		.uleb128 0xb
 16279 04e4 49       		.uleb128 0x49
 16280 04e5 13       		.uleb128 0x13
 16281 04e6 38       		.uleb128 0x38
 16282 04e7 0B       		.uleb128 0xb
AARCH64 GAS  obj/extInstr.s 			page 499


 16283 04e8 00       		.byte	0
 16284 04e9 00       		.byte	0
 16285 04ea 51       		.uleb128 0x51
 16286 04eb 13       		.uleb128 0x13
 16287 04ec 00       		.byte	0
 16288 04ed 03       		.uleb128 0x3
 16289 04ee 0E       		.uleb128 0xe
 16290 04ef 3C       		.uleb128 0x3c
 16291 04f0 19       		.uleb128 0x19
 16292 04f1 00       		.byte	0
 16293 04f2 00       		.byte	0
 16294 04f3 52       		.uleb128 0x52
 16295 04f4 0B       		.uleb128 0xb
 16296 04f5 01       		.byte	0x1
 16297 04f6 00       		.byte	0
 16298 04f7 00       		.byte	0
 16299 04f8 53       		.uleb128 0x53
 16300 04f9 2E       		.uleb128 0x2e
 16301 04fa 01       		.byte	0x1
 16302 04fb 47       		.uleb128 0x47
 16303 04fc 13       		.uleb128 0x13
 16304 04fd 64       		.uleb128 0x64
 16305 04fe 13       		.uleb128 0x13
 16306 04ff 01       		.uleb128 0x1
 16307 0500 13       		.uleb128 0x13
 16308 0501 00       		.byte	0
 16309 0502 00       		.byte	0
 16310 0503 54       		.uleb128 0x54
 16311 0504 39       		.uleb128 0x39
 16312 0505 01       		.byte	0x1
 16313 0506 03       		.uleb128 0x3
 16314 0507 0E       		.uleb128 0xe
 16315 0508 3A       		.uleb128 0x3a
 16316 0509 0B       		.uleb128 0xb
 16317 050a 3B       		.uleb128 0x3b
 16318 050b 05       		.uleb128 0x5
 16319 050c 39       		.uleb128 0x39
 16320 050d 0B       		.uleb128 0xb
 16321 050e 8901     		.uleb128 0x89
 16322 0510 19       		.uleb128 0x19
 16323 0511 01       		.uleb128 0x1
 16324 0512 13       		.uleb128 0x13
 16325 0513 00       		.byte	0
 16326 0514 00       		.byte	0
 16327 0515 55       		.uleb128 0x55
 16328 0516 1C       		.uleb128 0x1c
 16329 0517 00       		.byte	0
 16330 0518 49       		.uleb128 0x49
 16331 0519 13       		.uleb128 0x13
 16332 051a 38       		.uleb128 0x38
 16333 051b 0B       		.uleb128 0xb
 16334 051c 00       		.byte	0
 16335 051d 00       		.byte	0
 16336 051e 56       		.uleb128 0x56
 16337 051f 0D       		.uleb128 0xd
 16338 0520 00       		.byte	0
 16339 0521 49       		.uleb128 0x49
AARCH64 GAS  obj/extInstr.s 			page 500


 16340 0522 13       		.uleb128 0x13
 16341 0523 38       		.uleb128 0x38
 16342 0524 0B       		.uleb128 0xb
 16343 0525 00       		.byte	0
 16344 0526 00       		.byte	0
 16345 0527 57       		.uleb128 0x57
 16346 0528 2E       		.uleb128 0x2e
 16347 0529 01       		.byte	0x1
 16348 052a 3F       		.uleb128 0x3f
 16349 052b 19       		.uleb128 0x19
 16350 052c 03       		.uleb128 0x3
 16351 052d 08       		.uleb128 0x8
 16352 052e 3A       		.uleb128 0x3a
 16353 052f 0B       		.uleb128 0xb
 16354 0530 3B       		.uleb128 0x3b
 16355 0531 0B       		.uleb128 0xb
 16356 0532 39       		.uleb128 0x39
 16357 0533 0B       		.uleb128 0xb
 16358 0534 6E       		.uleb128 0x6e
 16359 0535 0E       		.uleb128 0xe
 16360 0536 49       		.uleb128 0x49
 16361 0537 13       		.uleb128 0x13
 16362 0538 32       		.uleb128 0x32
 16363 0539 0B       		.uleb128 0xb
 16364 053a 3C       		.uleb128 0x3c
 16365 053b 19       		.uleb128 0x19
 16366 053c 64       		.uleb128 0x64
 16367 053d 13       		.uleb128 0x13
 16368 053e 01       		.uleb128 0x1
 16369 053f 13       		.uleb128 0x13
 16370 0540 00       		.byte	0
 16371 0541 00       		.byte	0
 16372 0542 58       		.uleb128 0x58
 16373 0543 2E       		.uleb128 0x2e
 16374 0544 01       		.byte	0x1
 16375 0545 3F       		.uleb128 0x3f
 16376 0546 19       		.uleb128 0x19
 16377 0547 03       		.uleb128 0x3
 16378 0548 0E       		.uleb128 0xe
 16379 0549 3A       		.uleb128 0x3a
 16380 054a 0B       		.uleb128 0xb
 16381 054b 3B       		.uleb128 0x3b
 16382 054c 05       		.uleb128 0x5
 16383 054d 39       		.uleb128 0x39
 16384 054e 0B       		.uleb128 0xb
 16385 054f 6E       		.uleb128 0x6e
 16386 0550 0E       		.uleb128 0xe
 16387 0551 4C       		.uleb128 0x4c
 16388 0552 0B       		.uleb128 0xb
 16389 0553 1D       		.uleb128 0x1d
 16390 0554 13       		.uleb128 0x13
 16391 0555 32       		.uleb128 0x32
 16392 0556 0B       		.uleb128 0xb
 16393 0557 3C       		.uleb128 0x3c
 16394 0558 19       		.uleb128 0x19
 16395 0559 64       		.uleb128 0x64
 16396 055a 13       		.uleb128 0x13
AARCH64 GAS  obj/extInstr.s 			page 501


 16397 055b 01       		.uleb128 0x1
 16398 055c 13       		.uleb128 0x13
 16399 055d 00       		.byte	0
 16400 055e 00       		.byte	0
 16401 055f 59       		.uleb128 0x59
 16402 0560 39       		.uleb128 0x39
 16403 0561 01       		.byte	0x1
 16404 0562 03       		.uleb128 0x3
 16405 0563 0E       		.uleb128 0xe
 16406 0564 3A       		.uleb128 0x3a
 16407 0565 0B       		.uleb128 0xb
 16408 0566 3B       		.uleb128 0x3b
 16409 0567 0B       		.uleb128 0xb
 16410 0568 39       		.uleb128 0x39
 16411 0569 0B       		.uleb128 0xb
 16412 056a 01       		.uleb128 0x1
 16413 056b 13       		.uleb128 0x13
 16414 056c 00       		.byte	0
 16415 056d 00       		.byte	0
 16416 056e 5A       		.uleb128 0x5a
 16417 056f 2E       		.uleb128 0x2e
 16418 0570 01       		.byte	0x1
 16419 0571 3F       		.uleb128 0x3f
 16420 0572 19       		.uleb128 0x19
 16421 0573 03       		.uleb128 0x3
 16422 0574 0E       		.uleb128 0xe
 16423 0575 3A       		.uleb128 0x3a
 16424 0576 0B       		.uleb128 0xb
 16425 0577 3B       		.uleb128 0x3b
 16426 0578 0B       		.uleb128 0xb
 16427 0579 39       		.uleb128 0x39
 16428 057a 0B       		.uleb128 0xb
 16429 057b 6E       		.uleb128 0x6e
 16430 057c 0E       		.uleb128 0xe
 16431 057d 49       		.uleb128 0x49
 16432 057e 13       		.uleb128 0x13
 16433 057f 32       		.uleb128 0x32
 16434 0580 0B       		.uleb128 0xb
 16435 0581 3C       		.uleb128 0x3c
 16436 0582 19       		.uleb128 0x19
 16437 0583 64       		.uleb128 0x64
 16438 0584 13       		.uleb128 0x13
 16439 0585 00       		.byte	0
 16440 0586 00       		.byte	0
 16441 0587 5B       		.uleb128 0x5b
 16442 0588 2E       		.uleb128 0x2e
 16443 0589 01       		.byte	0x1
 16444 058a 3F       		.uleb128 0x3f
 16445 058b 19       		.uleb128 0x19
 16446 058c 03       		.uleb128 0x3
 16447 058d 0E       		.uleb128 0xe
 16448 058e 3A       		.uleb128 0x3a
 16449 058f 0B       		.uleb128 0xb
 16450 0590 3B       		.uleb128 0x3b
 16451 0591 0B       		.uleb128 0xb
 16452 0592 39       		.uleb128 0x39
 16453 0593 0B       		.uleb128 0xb
AARCH64 GAS  obj/extInstr.s 			page 502


 16454 0594 6E       		.uleb128 0x6e
 16455 0595 0E       		.uleb128 0xe
 16456 0596 3C       		.uleb128 0x3c
 16457 0597 19       		.uleb128 0x19
 16458 0598 63       		.uleb128 0x63
 16459 0599 19       		.uleb128 0x19
 16460 059a 8B01     		.uleb128 0x8b
 16461 059c 0B       		.uleb128 0xb
 16462 059d 64       		.uleb128 0x64
 16463 059e 13       		.uleb128 0x13
 16464 059f 00       		.byte	0
 16465 05a0 00       		.byte	0
 16466 05a1 5C       		.uleb128 0x5c
 16467 05a2 34       		.uleb128 0x34
 16468 05a3 00       		.byte	0
 16469 05a4 03       		.uleb128 0x3
 16470 05a5 0E       		.uleb128 0xe
 16471 05a6 3A       		.uleb128 0x3a
 16472 05a7 0B       		.uleb128 0xb
 16473 05a8 3B       		.uleb128 0x3b
 16474 05a9 0B       		.uleb128 0xb
 16475 05aa 39       		.uleb128 0x39
 16476 05ab 0B       		.uleb128 0xb
 16477 05ac 49       		.uleb128 0x49
 16478 05ad 13       		.uleb128 0x13
 16479 05ae 3C       		.uleb128 0x3c
 16480 05af 19       		.uleb128 0x19
 16481 05b0 1C       		.uleb128 0x1c
 16482 05b1 0A       		.uleb128 0xa
 16483 05b2 6C       		.uleb128 0x6c
 16484 05b3 19       		.uleb128 0x19
 16485 05b4 00       		.byte	0
 16486 05b5 00       		.byte	0
 16487 05b6 5D       		.uleb128 0x5d
 16488 05b7 39       		.uleb128 0x39
 16489 05b8 00       		.byte	0
 16490 05b9 03       		.uleb128 0x3
 16491 05ba 0E       		.uleb128 0xe
 16492 05bb 3A       		.uleb128 0x3a
 16493 05bc 0B       		.uleb128 0xb
 16494 05bd 3B       		.uleb128 0x3b
 16495 05be 0B       		.uleb128 0xb
 16496 05bf 39       		.uleb128 0x39
 16497 05c0 0B       		.uleb128 0xb
 16498 05c1 00       		.byte	0
 16499 05c2 00       		.byte	0
 16500 05c3 5E       		.uleb128 0x5e
 16501 05c4 2E       		.uleb128 0x2e
 16502 05c5 01       		.byte	0x1
 16503 05c6 3F       		.uleb128 0x3f
 16504 05c7 19       		.uleb128 0x19
 16505 05c8 03       		.uleb128 0x3
 16506 05c9 08       		.uleb128 0x8
 16507 05ca 3A       		.uleb128 0x3a
 16508 05cb 0B       		.uleb128 0xb
 16509 05cc 3B       		.uleb128 0x3b
 16510 05cd 05       		.uleb128 0x5
AARCH64 GAS  obj/extInstr.s 			page 503


 16511 05ce 39       		.uleb128 0x39
 16512 05cf 0B       		.uleb128 0xb
 16513 05d0 6E       		.uleb128 0x6e
 16514 05d1 0E       		.uleb128 0xe
 16515 05d2 49       		.uleb128 0x49
 16516 05d3 13       		.uleb128 0x13
 16517 05d4 3C       		.uleb128 0x3c
 16518 05d5 19       		.uleb128 0x19
 16519 05d6 01       		.uleb128 0x1
 16520 05d7 13       		.uleb128 0x13
 16521 05d8 00       		.byte	0
 16522 05d9 00       		.byte	0
 16523 05da 5F       		.uleb128 0x5f
 16524 05db 39       		.uleb128 0x39
 16525 05dc 00       		.byte	0
 16526 05dd 03       		.uleb128 0x3
 16527 05de 0E       		.uleb128 0xe
 16528 05df 3A       		.uleb128 0x3a
 16529 05e0 0B       		.uleb128 0xb
 16530 05e1 3B       		.uleb128 0x3b
 16531 05e2 05       		.uleb128 0x5
 16532 05e3 39       		.uleb128 0x39
 16533 05e4 0B       		.uleb128 0xb
 16534 05e5 8901     		.uleb128 0x89
 16535 05e7 19       		.uleb128 0x19
 16536 05e8 00       		.byte	0
 16537 05e9 00       		.byte	0
 16538 05ea 60       		.uleb128 0x60
 16539 05eb 04       		.uleb128 0x4
 16540 05ec 01       		.byte	0x1
 16541 05ed 03       		.uleb128 0x3
 16542 05ee 0E       		.uleb128 0xe
 16543 05ef 3E       		.uleb128 0x3e
 16544 05f0 0B       		.uleb128 0xb
 16545 05f1 0B       		.uleb128 0xb
 16546 05f2 0B       		.uleb128 0xb
 16547 05f3 49       		.uleb128 0x49
 16548 05f4 13       		.uleb128 0x13
 16549 05f5 3A       		.uleb128 0x3a
 16550 05f6 0B       		.uleb128 0xb
 16551 05f7 3B       		.uleb128 0x3b
 16552 05f8 0B       		.uleb128 0xb
 16553 05f9 39       		.uleb128 0x39
 16554 05fa 0B       		.uleb128 0xb
 16555 05fb 01       		.uleb128 0x1
 16556 05fc 13       		.uleb128 0x13
 16557 05fd 00       		.byte	0
 16558 05fe 00       		.byte	0
 16559 05ff 61       		.uleb128 0x61
 16560 0600 28       		.uleb128 0x28
 16561 0601 00       		.byte	0
 16562 0602 03       		.uleb128 0x3
 16563 0603 0E       		.uleb128 0xe
 16564 0604 1C       		.uleb128 0x1c
 16565 0605 0D       		.uleb128 0xd
 16566 0606 00       		.byte	0
 16567 0607 00       		.byte	0
AARCH64 GAS  obj/extInstr.s 			page 504


 16568 0608 62       		.uleb128 0x62
 16569 0609 0D       		.uleb128 0xd
 16570 060a 00       		.byte	0
 16571 060b 03       		.uleb128 0x3
 16572 060c 0E       		.uleb128 0xe
 16573 060d 3A       		.uleb128 0x3a
 16574 060e 0B       		.uleb128 0xb
 16575 060f 3B       		.uleb128 0x3b
 16576 0610 05       		.uleb128 0x5
 16577 0611 39       		.uleb128 0x39
 16578 0612 0B       		.uleb128 0xb
 16579 0613 49       		.uleb128 0x49
 16580 0614 13       		.uleb128 0x13
 16581 0615 3F       		.uleb128 0x3f
 16582 0616 19       		.uleb128 0x19
 16583 0617 3C       		.uleb128 0x3c
 16584 0618 19       		.uleb128 0x19
 16585 0619 00       		.byte	0
 16586 061a 00       		.byte	0
 16587 061b 63       		.uleb128 0x63
 16588 061c 2E       		.uleb128 0x2e
 16589 061d 01       		.byte	0x1
 16590 061e 3F       		.uleb128 0x3f
 16591 061f 19       		.uleb128 0x19
 16592 0620 03       		.uleb128 0x3
 16593 0621 0E       		.uleb128 0xe
 16594 0622 3A       		.uleb128 0x3a
 16595 0623 0B       		.uleb128 0xb
 16596 0624 3B       		.uleb128 0x3b
 16597 0625 0B       		.uleb128 0xb
 16598 0626 39       		.uleb128 0x39
 16599 0627 0B       		.uleb128 0xb
 16600 0628 6E       		.uleb128 0x6e
 16601 0629 0E       		.uleb128 0xe
 16602 062a 4C       		.uleb128 0x4c
 16603 062b 0B       		.uleb128 0xb
 16604 062c 1D       		.uleb128 0x1d
 16605 062d 13       		.uleb128 0x13
 16606 062e 32       		.uleb128 0x32
 16607 062f 0B       		.uleb128 0xb
 16608 0630 3C       		.uleb128 0x3c
 16609 0631 19       		.uleb128 0x19
 16610 0632 64       		.uleb128 0x64
 16611 0633 13       		.uleb128 0x13
 16612 0634 01       		.uleb128 0x1
 16613 0635 13       		.uleb128 0x13
 16614 0636 00       		.byte	0
 16615 0637 00       		.byte	0
 16616 0638 64       		.uleb128 0x64
 16617 0639 02       		.uleb128 0x2
 16618 063a 01       		.byte	0x1
 16619 063b 03       		.uleb128 0x3
 16620 063c 0E       		.uleb128 0xe
 16621 063d 0B       		.uleb128 0xb
 16622 063e 0B       		.uleb128 0xb
 16623 063f 3A       		.uleb128 0x3a
 16624 0640 0B       		.uleb128 0xb
AARCH64 GAS  obj/extInstr.s 			page 505


 16625 0641 3B       		.uleb128 0x3b
 16626 0642 05       		.uleb128 0x5
 16627 0643 39       		.uleb128 0x39
 16628 0644 0B       		.uleb128 0xb
 16629 0645 01       		.uleb128 0x1
 16630 0646 13       		.uleb128 0x13
 16631 0647 00       		.byte	0
 16632 0648 00       		.byte	0
 16633 0649 65       		.uleb128 0x65
 16634 064a 0D       		.uleb128 0xd
 16635 064b 00       		.byte	0
 16636 064c 03       		.uleb128 0x3
 16637 064d 0E       		.uleb128 0xe
 16638 064e 3A       		.uleb128 0x3a
 16639 064f 0B       		.uleb128 0xb
 16640 0650 3B       		.uleb128 0x3b
 16641 0651 05       		.uleb128 0x5
 16642 0652 39       		.uleb128 0x39
 16643 0653 0B       		.uleb128 0xb
 16644 0654 49       		.uleb128 0x49
 16645 0655 13       		.uleb128 0x13
 16646 0656 38       		.uleb128 0x38
 16647 0657 0B       		.uleb128 0xb
 16648 0658 32       		.uleb128 0x32
 16649 0659 0B       		.uleb128 0xb
 16650 065a 00       		.byte	0
 16651 065b 00       		.byte	0
 16652 065c 66       		.uleb128 0x66
 16653 065d 2E       		.uleb128 0x2e
 16654 065e 00       		.byte	0
 16655 065f 3F       		.uleb128 0x3f
 16656 0660 19       		.uleb128 0x19
 16657 0661 03       		.uleb128 0x3
 16658 0662 0E       		.uleb128 0xe
 16659 0663 3A       		.uleb128 0x3a
 16660 0664 0B       		.uleb128 0xb
 16661 0665 3B       		.uleb128 0x3b
 16662 0666 05       		.uleb128 0x5
 16663 0667 39       		.uleb128 0x39
 16664 0668 0B       		.uleb128 0xb
 16665 0669 49       		.uleb128 0x49
 16666 066a 13       		.uleb128 0x13
 16667 066b 3C       		.uleb128 0x3c
 16668 066c 19       		.uleb128 0x19
 16669 066d 00       		.byte	0
 16670 066e 00       		.byte	0
 16671 066f 67       		.uleb128 0x67
 16672 0670 15       		.uleb128 0x15
 16673 0671 01       		.byte	0x1
 16674 0672 49       		.uleb128 0x49
 16675 0673 13       		.uleb128 0x13
 16676 0674 01       		.uleb128 0x1
 16677 0675 13       		.uleb128 0x13
 16678 0676 00       		.byte	0
 16679 0677 00       		.byte	0
 16680 0678 68       		.uleb128 0x68
 16681 0679 2E       		.uleb128 0x2e
AARCH64 GAS  obj/extInstr.s 			page 506


 16682 067a 01       		.byte	0x1
 16683 067b 47       		.uleb128 0x47
 16684 067c 13       		.uleb128 0x13
 16685 067d 3A       		.uleb128 0x3a
 16686 067e 0B       		.uleb128 0xb
 16687 067f 3B       		.uleb128 0x3b
 16688 0680 0B       		.uleb128 0xb
 16689 0681 39       		.uleb128 0x39
 16690 0682 0B       		.uleb128 0xb
 16691 0683 64       		.uleb128 0x64
 16692 0684 13       		.uleb128 0x13
 16693 0685 20       		.uleb128 0x20
 16694 0686 0B       		.uleb128 0xb
 16695 0687 01       		.uleb128 0x1
 16696 0688 13       		.uleb128 0x13
 16697 0689 00       		.byte	0
 16698 068a 00       		.byte	0
 16699 068b 69       		.uleb128 0x69
 16700 068c 34       		.uleb128 0x34
 16701 068d 00       		.byte	0
 16702 068e 31       		.uleb128 0x31
 16703 068f 13       		.uleb128 0x13
 16704 0690 02       		.uleb128 0x2
 16705 0691 18       		.uleb128 0x18
 16706 0692 00       		.byte	0
 16707 0693 00       		.byte	0
 16708 0694 6A       		.uleb128 0x6a
 16709 0695 0B       		.uleb128 0xb
 16710 0696 01       		.byte	0x1
 16711 0697 31       		.uleb128 0x31
 16712 0698 13       		.uleb128 0x13
 16713 0699 55       		.uleb128 0x55
 16714 069a 17       		.uleb128 0x17
 16715 069b 01       		.uleb128 0x1
 16716 069c 13       		.uleb128 0x13
 16717 069d 00       		.byte	0
 16718 069e 00       		.byte	0
 16719 069f 6B       		.uleb128 0x6b
 16720 06a0 1D       		.uleb128 0x1d
 16721 06a1 01       		.byte	0x1
 16722 06a2 31       		.uleb128 0x31
 16723 06a3 13       		.uleb128 0x13
 16724 06a4 52       		.uleb128 0x52
 16725 06a5 01       		.uleb128 0x1
 16726 06a6 B842     		.uleb128 0x2138
 16727 06a8 05       		.uleb128 0x5
 16728 06a9 55       		.uleb128 0x55
 16729 06aa 17       		.uleb128 0x17
 16730 06ab 58       		.uleb128 0x58
 16731 06ac 0B       		.uleb128 0xb
 16732 06ad 59       		.uleb128 0x59
 16733 06ae 05       		.uleb128 0x5
 16734 06af 57       		.uleb128 0x57
 16735 06b0 0B       		.uleb128 0xb
 16736 06b1 00       		.byte	0
 16737 06b2 00       		.byte	0
 16738 06b3 6C       		.uleb128 0x6c
AARCH64 GAS  obj/extInstr.s 			page 507


 16739 06b4 2E       		.uleb128 0x2e
 16740 06b5 00       		.byte	0
 16741 06b6 3F       		.uleb128 0x3f
 16742 06b7 19       		.uleb128 0x19
 16743 06b8 3C       		.uleb128 0x3c
 16744 06b9 19       		.uleb128 0x19
 16745 06ba 6E       		.uleb128 0x6e
 16746 06bb 0E       		.uleb128 0xe
 16747 06bc 03       		.uleb128 0x3
 16748 06bd 0E       		.uleb128 0xe
 16749 06be 00       		.byte	0
 16750 06bf 00       		.byte	0
 16751 06c0 6D       		.uleb128 0x6d
 16752 06c1 11       		.uleb128 0x11
 16753 06c2 01       		.byte	0x1
 16754 06c3 25       		.uleb128 0x25
 16755 06c4 0E       		.uleb128 0xe
 16756 06c5 13       		.uleb128 0x13
 16757 06c6 0B       		.uleb128 0xb
 16758 06c7 03       		.uleb128 0x3
 16759 06c8 0E       		.uleb128 0xe
 16760 06c9 1B       		.uleb128 0x1b
 16761 06ca 0E       		.uleb128 0xe
 16762 06cb 55       		.uleb128 0x55
 16763 06cc 17       		.uleb128 0x17
 16764 06cd 11       		.uleb128 0x11
 16765 06ce 01       		.uleb128 0x1
 16766 06cf 10       		.uleb128 0x10
 16767 06d0 17       		.uleb128 0x17
 16768 06d1 00       		.byte	0
 16769 06d2 00       		.byte	0
 16770 06d3 6E       		.uleb128 0x6e
 16771 06d4 39       		.uleb128 0x39
 16772 06d5 01       		.byte	0x1
 16773 06d6 03       		.uleb128 0x3
 16774 06d7 08       		.uleb128 0x8
 16775 06d8 3A       		.uleb128 0x3a
 16776 06d9 0B       		.uleb128 0xb
 16777 06da 3B       		.uleb128 0x3b
 16778 06db 0B       		.uleb128 0xb
 16779 06dc 01       		.uleb128 0x1
 16780 06dd 13       		.uleb128 0x13
 16781 06de 00       		.byte	0
 16782 06df 00       		.byte	0
 16783 06e0 6F       		.uleb128 0x6f
 16784 06e1 2E       		.uleb128 0x2e
 16785 06e2 01       		.byte	0x1
 16786 06e3 3F       		.uleb128 0x3f
 16787 06e4 19       		.uleb128 0x19
 16788 06e5 03       		.uleb128 0x3
 16789 06e6 0E       		.uleb128 0xe
 16790 06e7 6E       		.uleb128 0x6e
 16791 06e8 0E       		.uleb128 0xe
 16792 06e9 34       		.uleb128 0x34
 16793 06ea 19       		.uleb128 0x19
 16794 06eb 3C       		.uleb128 0x3c
 16795 06ec 19       		.uleb128 0x19
AARCH64 GAS  obj/extInstr.s 			page 508


 16796 06ed 64       		.uleb128 0x64
 16797 06ee 13       		.uleb128 0x13
 16798 06ef 00       		.byte	0
 16799 06f0 00       		.byte	0
 16800 06f1 70       		.uleb128 0x70
 16801 06f2 04       		.uleb128 0x4
 16802 06f3 01       		.byte	0x1
 16803 06f4 3E       		.uleb128 0x3e
 16804 06f5 0B       		.uleb128 0xb
 16805 06f6 0B       		.uleb128 0xb
 16806 06f7 0B       		.uleb128 0xb
 16807 06f8 49       		.uleb128 0x49
 16808 06f9 13       		.uleb128 0x13
 16809 06fa 3A       		.uleb128 0x3a
 16810 06fb 0B       		.uleb128 0xb
 16811 06fc 3B       		.uleb128 0x3b
 16812 06fd 0B       		.uleb128 0xb
 16813 06fe 39       		.uleb128 0x39
 16814 06ff 0B       		.uleb128 0xb
 16815 0700 01       		.uleb128 0x1
 16816 0701 13       		.uleb128 0x13
 16817 0702 00       		.byte	0
 16818 0703 00       		.byte	0
 16819 0704 71       		.uleb128 0x71
 16820 0705 0D       		.uleb128 0xd
 16821 0706 00       		.byte	0
 16822 0707 03       		.uleb128 0x3
 16823 0708 0E       		.uleb128 0xe
 16824 0709 3A       		.uleb128 0x3a
 16825 070a 0B       		.uleb128 0xb
 16826 070b 3B       		.uleb128 0x3b
 16827 070c 0B       		.uleb128 0xb
 16828 070d 39       		.uleb128 0x39
 16829 070e 0B       		.uleb128 0xb
 16830 070f 49       		.uleb128 0x49
 16831 0710 13       		.uleb128 0x13
 16832 0711 3F       		.uleb128 0x3f
 16833 0712 19       		.uleb128 0x19
 16834 0713 32       		.uleb128 0x32
 16835 0714 0B       		.uleb128 0xb
 16836 0715 3C       		.uleb128 0x3c
 16837 0716 19       		.uleb128 0x19
 16838 0717 1C       		.uleb128 0x1c
 16839 0718 07       		.uleb128 0x7
 16840 0719 00       		.byte	0
 16841 071a 00       		.byte	0
 16842 071b 72       		.uleb128 0x72
 16843 071c 2E       		.uleb128 0x2e
 16844 071d 01       		.byte	0x1
 16845 071e 3F       		.uleb128 0x3f
 16846 071f 19       		.uleb128 0x19
 16847 0720 03       		.uleb128 0x3
 16848 0721 0E       		.uleb128 0xe
 16849 0722 3A       		.uleb128 0x3a
 16850 0723 0B       		.uleb128 0xb
 16851 0724 3B       		.uleb128 0x3b
 16852 0725 0B       		.uleb128 0xb
AARCH64 GAS  obj/extInstr.s 			page 509


 16853 0726 39       		.uleb128 0x39
 16854 0727 0B       		.uleb128 0xb
 16855 0728 6E       		.uleb128 0x6e
 16856 0729 0E       		.uleb128 0xe
 16857 072a 32       		.uleb128 0x32
 16858 072b 0B       		.uleb128 0xb
 16859 072c 3C       		.uleb128 0x3c
 16860 072d 19       		.uleb128 0x19
 16861 072e 63       		.uleb128 0x63
 16862 072f 19       		.uleb128 0x19
 16863 0730 64       		.uleb128 0x64
 16864 0731 13       		.uleb128 0x13
 16865 0732 01       		.uleb128 0x1
 16866 0733 13       		.uleb128 0x13
 16867 0734 00       		.byte	0
 16868 0735 00       		.byte	0
 16869 0736 73       		.uleb128 0x73
 16870 0737 2E       		.uleb128 0x2e
 16871 0738 01       		.byte	0x1
 16872 0739 3F       		.uleb128 0x3f
 16873 073a 19       		.uleb128 0x19
 16874 073b 03       		.uleb128 0x3
 16875 073c 0E       		.uleb128 0xe
 16876 073d 6E       		.uleb128 0x6e
 16877 073e 0E       		.uleb128 0xe
 16878 073f 4C       		.uleb128 0x4c
 16879 0740 0B       		.uleb128 0xb
 16880 0741 1D       		.uleb128 0x1d
 16881 0742 13       		.uleb128 0x13
 16882 0743 34       		.uleb128 0x34
 16883 0744 19       		.uleb128 0x19
 16884 0745 32       		.uleb128 0x32
 16885 0746 0B       		.uleb128 0xb
 16886 0747 3C       		.uleb128 0x3c
 16887 0748 19       		.uleb128 0x19
 16888 0749 64       		.uleb128 0x64
 16889 074a 13       		.uleb128 0x13
 16890 074b 01       		.uleb128 0x1
 16891 074c 13       		.uleb128 0x13
 16892 074d 00       		.byte	0
 16893 074e 00       		.byte	0
 16894 074f 74       		.uleb128 0x74
 16895 0750 2E       		.uleb128 0x2e
 16896 0751 01       		.byte	0x1
 16897 0752 3F       		.uleb128 0x3f
 16898 0753 19       		.uleb128 0x19
 16899 0754 03       		.uleb128 0x3
 16900 0755 0E       		.uleb128 0xe
 16901 0756 3A       		.uleb128 0x3a
 16902 0757 0B       		.uleb128 0xb
 16903 0758 3B       		.uleb128 0x3b
 16904 0759 0B       		.uleb128 0xb
 16905 075a 39       		.uleb128 0x39
 16906 075b 0B       		.uleb128 0xb
 16907 075c 6E       		.uleb128 0x6e
 16908 075d 0E       		.uleb128 0xe
 16909 075e 3C       		.uleb128 0x3c
AARCH64 GAS  obj/extInstr.s 			page 510


 16910 075f 19       		.uleb128 0x19
 16911 0760 63       		.uleb128 0x63
 16912 0761 19       		.uleb128 0x19
 16913 0762 64       		.uleb128 0x64
 16914 0763 13       		.uleb128 0x13
 16915 0764 01       		.uleb128 0x1
 16916 0765 13       		.uleb128 0x13
 16917 0766 00       		.byte	0
 16918 0767 00       		.byte	0
 16919 0768 75       		.uleb128 0x75
 16920 0769 2E       		.uleb128 0x2e
 16921 076a 01       		.byte	0x1
 16922 076b 3F       		.uleb128 0x3f
 16923 076c 19       		.uleb128 0x19
 16924 076d 03       		.uleb128 0x3
 16925 076e 0E       		.uleb128 0xe
 16926 076f 3A       		.uleb128 0x3a
 16927 0770 0B       		.uleb128 0xb
 16928 0771 3B       		.uleb128 0x3b
 16929 0772 0B       		.uleb128 0xb
 16930 0773 39       		.uleb128 0x39
 16931 0774 0B       		.uleb128 0xb
 16932 0775 6E       		.uleb128 0x6e
 16933 0776 0E       		.uleb128 0xe
 16934 0777 49       		.uleb128 0x49
 16935 0778 13       		.uleb128 0x13
 16936 0779 32       		.uleb128 0x32
 16937 077a 0B       		.uleb128 0xb
 16938 077b 3C       		.uleb128 0x3c
 16939 077c 19       		.uleb128 0x19
 16940 077d 63       		.uleb128 0x63
 16941 077e 19       		.uleb128 0x19
 16942 077f 64       		.uleb128 0x64
 16943 0780 13       		.uleb128 0x13
 16944 0781 01       		.uleb128 0x1
 16945 0782 13       		.uleb128 0x13
 16946 0783 00       		.byte	0
 16947 0784 00       		.byte	0
 16948 0785 76       		.uleb128 0x76
 16949 0786 2E       		.uleb128 0x2e
 16950 0787 01       		.byte	0x1
 16951 0788 3F       		.uleb128 0x3f
 16952 0789 19       		.uleb128 0x19
 16953 078a 03       		.uleb128 0x3
 16954 078b 0E       		.uleb128 0xe
 16955 078c 3A       		.uleb128 0x3a
 16956 078d 0B       		.uleb128 0xb
 16957 078e 3B       		.uleb128 0x3b
 16958 078f 0B       		.uleb128 0xb
 16959 0790 39       		.uleb128 0x39
 16960 0791 0B       		.uleb128 0xb
 16961 0792 6E       		.uleb128 0x6e
 16962 0793 0E       		.uleb128 0xe
 16963 0794 8701     		.uleb128 0x87
 16964 0796 19       		.uleb128 0x19
 16965 0797 3C       		.uleb128 0x3c
 16966 0798 19       		.uleb128 0x19
AARCH64 GAS  obj/extInstr.s 			page 511


 16967 0799 01       		.uleb128 0x1
 16968 079a 13       		.uleb128 0x13
 16969 079b 00       		.byte	0
 16970 079c 00       		.byte	0
 16971 079d 77       		.uleb128 0x77
 16972 079e 39       		.uleb128 0x39
 16973 079f 00       		.byte	0
 16974 07a0 03       		.uleb128 0x3
 16975 07a1 0E       		.uleb128 0xe
 16976 07a2 3A       		.uleb128 0x3a
 16977 07a3 0B       		.uleb128 0xb
 16978 07a4 3B       		.uleb128 0x3b
 16979 07a5 05       		.uleb128 0x5
 16980 07a6 39       		.uleb128 0x39
 16981 07a7 0B       		.uleb128 0xb
 16982 07a8 00       		.byte	0
 16983 07a9 00       		.byte	0
 16984 07aa 78       		.uleb128 0x78
 16985 07ab 2E       		.uleb128 0x2e
 16986 07ac 00       		.byte	0
 16987 07ad 3F       		.uleb128 0x3f
 16988 07ae 19       		.uleb128 0x19
 16989 07af 03       		.uleb128 0x3
 16990 07b0 08       		.uleb128 0x8
 16991 07b1 3A       		.uleb128 0x3a
 16992 07b2 0B       		.uleb128 0xb
 16993 07b3 3B       		.uleb128 0x3b
 16994 07b4 05       		.uleb128 0x5
 16995 07b5 39       		.uleb128 0x39
 16996 07b6 0B       		.uleb128 0xb
 16997 07b7 6E       		.uleb128 0x6e
 16998 07b8 0E       		.uleb128 0xe
 16999 07b9 49       		.uleb128 0x49
 17000 07ba 13       		.uleb128 0x13
 17001 07bb 3C       		.uleb128 0x3c
 17002 07bc 19       		.uleb128 0x19
 17003 07bd 00       		.byte	0
 17004 07be 00       		.byte	0
 17005 07bf 79       		.uleb128 0x79
 17006 07c0 1C       		.uleb128 0x1c
 17007 07c1 00       		.byte	0
 17008 07c2 49       		.uleb128 0x49
 17009 07c3 13       		.uleb128 0x13
 17010 07c4 38       		.uleb128 0x38
 17011 07c5 0B       		.uleb128 0xb
 17012 07c6 32       		.uleb128 0x32
 17013 07c7 0B       		.uleb128 0xb
 17014 07c8 00       		.byte	0
 17015 07c9 00       		.byte	0
 17016 07ca 7A       		.uleb128 0x7a
 17017 07cb 2E       		.uleb128 0x2e
 17018 07cc 01       		.byte	0x1
 17019 07cd 3F       		.uleb128 0x3f
 17020 07ce 19       		.uleb128 0x19
 17021 07cf 03       		.uleb128 0x3
 17022 07d0 0E       		.uleb128 0xe
 17023 07d1 3A       		.uleb128 0x3a
AARCH64 GAS  obj/extInstr.s 			page 512


 17024 07d2 0B       		.uleb128 0xb
 17025 07d3 3B       		.uleb128 0x3b
 17026 07d4 0B       		.uleb128 0xb
 17027 07d5 39       		.uleb128 0x39
 17028 07d6 0B       		.uleb128 0xb
 17029 07d7 6E       		.uleb128 0x6e
 17030 07d8 0E       		.uleb128 0xe
 17031 07d9 49       		.uleb128 0x49
 17032 07da 13       		.uleb128 0x13
 17033 07db 32       		.uleb128 0x32
 17034 07dc 0B       		.uleb128 0xb
 17035 07dd 3C       		.uleb128 0x3c
 17036 07de 19       		.uleb128 0x19
 17037 07df 8B01     		.uleb128 0x8b
 17038 07e1 0B       		.uleb128 0xb
 17039 07e2 64       		.uleb128 0x64
 17040 07e3 13       		.uleb128 0x13
 17041 07e4 01       		.uleb128 0x1
 17042 07e5 13       		.uleb128 0x13
 17043 07e6 00       		.byte	0
 17044 07e7 00       		.byte	0
 17045 07e8 7B       		.uleb128 0x7b
 17046 07e9 2E       		.uleb128 0x2e
 17047 07ea 01       		.byte	0x1
 17048 07eb 3F       		.uleb128 0x3f
 17049 07ec 19       		.uleb128 0x19
 17050 07ed 03       		.uleb128 0x3
 17051 07ee 0E       		.uleb128 0xe
 17052 07ef 3A       		.uleb128 0x3a
 17053 07f0 0B       		.uleb128 0xb
 17054 07f1 3B       		.uleb128 0x3b
 17055 07f2 0B       		.uleb128 0xb
 17056 07f3 39       		.uleb128 0x39
 17057 07f4 0B       		.uleb128 0xb
 17058 07f5 6E       		.uleb128 0x6e
 17059 07f6 0E       		.uleb128 0xe
 17060 07f7 32       		.uleb128 0x32
 17061 07f8 0B       		.uleb128 0xb
 17062 07f9 3C       		.uleb128 0x3c
 17063 07fa 19       		.uleb128 0x19
 17064 07fb 64       		.uleb128 0x64
 17065 07fc 13       		.uleb128 0x13
 17066 07fd 00       		.byte	0
 17067 07fe 00       		.byte	0
 17068 07ff 7C       		.uleb128 0x7c
 17069 0800 39       		.uleb128 0x39
 17070 0801 00       		.byte	0
 17071 0802 03       		.uleb128 0x3
 17072 0803 08       		.uleb128 0x8
 17073 0804 3A       		.uleb128 0x3a
 17074 0805 0B       		.uleb128 0xb
 17075 0806 3B       		.uleb128 0x3b
 17076 0807 0B       		.uleb128 0xb
 17077 0808 39       		.uleb128 0x39
 17078 0809 0B       		.uleb128 0xb
 17079 080a 8901     		.uleb128 0x89
 17080 080c 19       		.uleb128 0x19
AARCH64 GAS  obj/extInstr.s 			page 513


 17081 080d 00       		.byte	0
 17082 080e 00       		.byte	0
 17083 080f 7D       		.uleb128 0x7d
 17084 0810 02       		.uleb128 0x2
 17085 0811 01       		.byte	0x1
 17086 0812 03       		.uleb128 0x3
 17087 0813 0E       		.uleb128 0xe
 17088 0814 0B       		.uleb128 0xb
 17089 0815 0B       		.uleb128 0xb
 17090 0816 3A       		.uleb128 0x3a
 17091 0817 0B       		.uleb128 0xb
 17092 0818 3B       		.uleb128 0x3b
 17093 0819 05       		.uleb128 0x5
 17094 081a 39       		.uleb128 0x39
 17095 081b 0B       		.uleb128 0xb
 17096 081c 32       		.uleb128 0x32
 17097 081d 0B       		.uleb128 0xb
 17098 081e 01       		.uleb128 0x1
 17099 081f 13       		.uleb128 0x13
 17100 0820 00       		.byte	0
 17101 0821 00       		.byte	0
 17102 0822 7E       		.uleb128 0x7e
 17103 0823 2E       		.uleb128 0x2e
 17104 0824 01       		.byte	0x1
 17105 0825 3F       		.uleb128 0x3f
 17106 0826 19       		.uleb128 0x19
 17107 0827 03       		.uleb128 0x3
 17108 0828 0E       		.uleb128 0xe
 17109 0829 3A       		.uleb128 0x3a
 17110 082a 0B       		.uleb128 0xb
 17111 082b 3B       		.uleb128 0x3b
 17112 082c 05       		.uleb128 0x5
 17113 082d 39       		.uleb128 0x39
 17114 082e 0B       		.uleb128 0xb
 17115 082f 6E       		.uleb128 0x6e
 17116 0830 0E       		.uleb128 0xe
 17117 0831 32       		.uleb128 0x32
 17118 0832 0B       		.uleb128 0xb
 17119 0833 3C       		.uleb128 0x3c
 17120 0834 19       		.uleb128 0x19
 17121 0835 8B01     		.uleb128 0x8b
 17122 0837 0B       		.uleb128 0xb
 17123 0838 64       		.uleb128 0x64
 17124 0839 13       		.uleb128 0x13
 17125 083a 01       		.uleb128 0x1
 17126 083b 13       		.uleb128 0x13
 17127 083c 00       		.byte	0
 17128 083d 00       		.byte	0
 17129 083e 7F       		.uleb128 0x7f
 17130 083f 2E       		.uleb128 0x2e
 17131 0840 01       		.byte	0x1
 17132 0841 3F       		.uleb128 0x3f
 17133 0842 19       		.uleb128 0x19
 17134 0843 03       		.uleb128 0x3
 17135 0844 0E       		.uleb128 0xe
 17136 0845 3A       		.uleb128 0x3a
 17137 0846 0B       		.uleb128 0xb
AARCH64 GAS  obj/extInstr.s 			page 514


 17138 0847 3B       		.uleb128 0x3b
 17139 0848 05       		.uleb128 0x5
 17140 0849 39       		.uleb128 0x39
 17141 084a 0B       		.uleb128 0xb
 17142 084b 6E       		.uleb128 0x6e
 17143 084c 0E       		.uleb128 0xe
 17144 084d 49       		.uleb128 0x49
 17145 084e 13       		.uleb128 0x13
 17146 084f 32       		.uleb128 0x32
 17147 0850 0B       		.uleb128 0xb
 17148 0851 3C       		.uleb128 0x3c
 17149 0852 19       		.uleb128 0x19
 17150 0853 8B01     		.uleb128 0x8b
 17151 0855 0B       		.uleb128 0xb
 17152 0856 64       		.uleb128 0x64
 17153 0857 13       		.uleb128 0x13
 17154 0858 01       		.uleb128 0x1
 17155 0859 13       		.uleb128 0x13
 17156 085a 00       		.byte	0
 17157 085b 00       		.byte	0
 17158 085c 8001     		.uleb128 0x80
 17159 085e 2E       		.uleb128 0x2e
 17160 085f 01       		.byte	0x1
 17161 0860 3F       		.uleb128 0x3f
 17162 0861 19       		.uleb128 0x19
 17163 0862 03       		.uleb128 0x3
 17164 0863 0E       		.uleb128 0xe
 17165 0864 3A       		.uleb128 0x3a
 17166 0865 0B       		.uleb128 0xb
 17167 0866 3B       		.uleb128 0x3b
 17168 0867 05       		.uleb128 0x5
 17169 0868 39       		.uleb128 0x39
 17170 0869 0B       		.uleb128 0xb
 17171 086a 6E       		.uleb128 0x6e
 17172 086b 0E       		.uleb128 0xe
 17173 086c 49       		.uleb128 0x49
 17174 086d 13       		.uleb128 0x13
 17175 086e 32       		.uleb128 0x32
 17176 086f 0B       		.uleb128 0xb
 17177 0870 3C       		.uleb128 0x3c
 17178 0871 19       		.uleb128 0x19
 17179 0872 64       		.uleb128 0x64
 17180 0873 13       		.uleb128 0x13
 17181 0874 00       		.byte	0
 17182 0875 00       		.byte	0
 17183 0876 8101     		.uleb128 0x81
 17184 0878 2E       		.uleb128 0x2e
 17185 0879 00       		.byte	0
 17186 087a 3F       		.uleb128 0x3f
 17187 087b 19       		.uleb128 0x19
 17188 087c 3C       		.uleb128 0x3c
 17189 087d 19       		.uleb128 0x19
 17190 087e 6E       		.uleb128 0x6e
 17191 087f 0E       		.uleb128 0xe
 17192 0880 03       		.uleb128 0x3
 17193 0881 08       		.uleb128 0x8
 17194 0882 3A       		.uleb128 0x3a
AARCH64 GAS  obj/extInstr.s 			page 515


 17195 0883 0B       		.uleb128 0xb
 17196 0884 3B       		.uleb128 0x3b
 17197 0885 0B       		.uleb128 0xb
 17198 0886 39       		.uleb128 0x39
 17199 0887 0B       		.uleb128 0xb
 17200 0888 00       		.byte	0
 17201 0889 00       		.byte	0
 17202 088a 8201     		.uleb128 0x82
 17203 088c 2E       		.uleb128 0x2e
 17204 088d 01       		.byte	0x1
 17205 088e 3F       		.uleb128 0x3f
 17206 088f 19       		.uleb128 0x19
 17207 0890 03       		.uleb128 0x3
 17208 0891 0E       		.uleb128 0xe
 17209 0892 3A       		.uleb128 0x3a
 17210 0893 0B       		.uleb128 0xb
 17211 0894 3B       		.uleb128 0x3b
 17212 0895 05       		.uleb128 0x5
 17213 0896 39       		.uleb128 0x39
 17214 0897 0B       		.uleb128 0xb
 17215 0898 6E       		.uleb128 0x6e
 17216 0899 0E       		.uleb128 0xe
 17217 089a 49       		.uleb128 0x49
 17218 089b 13       		.uleb128 0x13
 17219 089c 4C       		.uleb128 0x4c
 17220 089d 0B       		.uleb128 0xb
 17221 089e 4D       		.uleb128 0x4d
 17222 089f 18       		.uleb128 0x18
 17223 08a0 1D       		.uleb128 0x1d
 17224 08a1 13       		.uleb128 0x13
 17225 08a2 32       		.uleb128 0x32
 17226 08a3 0B       		.uleb128 0xb
 17227 08a4 3C       		.uleb128 0x3c
 17228 08a5 19       		.uleb128 0x19
 17229 08a6 64       		.uleb128 0x64
 17230 08a7 13       		.uleb128 0x13
 17231 08a8 01       		.uleb128 0x1
 17232 08a9 13       		.uleb128 0x13
 17233 08aa 00       		.byte	0
 17234 08ab 00       		.byte	0
 17235 08ac 8301     		.uleb128 0x83
 17236 08ae 2E       		.uleb128 0x2e
 17237 08af 00       		.byte	0
 17238 08b0 3F       		.uleb128 0x3f
 17239 08b1 19       		.uleb128 0x19
 17240 08b2 3C       		.uleb128 0x3c
 17241 08b3 19       		.uleb128 0x19
 17242 08b4 6E       		.uleb128 0x6e
 17243 08b5 0E       		.uleb128 0xe
 17244 08b6 03       		.uleb128 0x3
 17245 08b7 0E       		.uleb128 0xe
 17246 08b8 3A       		.uleb128 0x3a
 17247 08b9 0B       		.uleb128 0xb
 17248 08ba 3B       		.uleb128 0x3b
 17249 08bb 05       		.uleb128 0x5
 17250 08bc 39       		.uleb128 0x39
 17251 08bd 0B       		.uleb128 0xb
AARCH64 GAS  obj/extInstr.s 			page 516


 17252 08be 00       		.byte	0
 17253 08bf 00       		.byte	0
 17254 08c0 8401     		.uleb128 0x84
 17255 08c2 34       		.uleb128 0x34
 17256 08c3 00       		.byte	0
 17257 08c4 03       		.uleb128 0x3
 17258 08c5 0E       		.uleb128 0xe
 17259 08c6 3A       		.uleb128 0x3a
 17260 08c7 0B       		.uleb128 0xb
 17261 08c8 3B       		.uleb128 0x3b
 17262 08c9 0B       		.uleb128 0xb
 17263 08ca 39       		.uleb128 0x39
 17264 08cb 0B       		.uleb128 0xb
 17265 08cc 6E       		.uleb128 0x6e
 17266 08cd 0E       		.uleb128 0xe
 17267 08ce 49       		.uleb128 0x49
 17268 08cf 13       		.uleb128 0x13
 17269 08d0 3F       		.uleb128 0x3f
 17270 08d1 19       		.uleb128 0x19
 17271 08d2 3C       		.uleb128 0x3c
 17272 08d3 19       		.uleb128 0x19
 17273 08d4 00       		.byte	0
 17274 08d5 00       		.byte	0
 17275 08d6 8501     		.uleb128 0x85
 17276 08d8 34       		.uleb128 0x34
 17277 08d9 00       		.byte	0
 17278 08da 03       		.uleb128 0x3
 17279 08db 0E       		.uleb128 0xe
 17280 08dc 3A       		.uleb128 0x3a
 17281 08dd 0B       		.uleb128 0xb
 17282 08de 3B       		.uleb128 0x3b
 17283 08df 0B       		.uleb128 0xb
 17284 08e0 39       		.uleb128 0x39
 17285 08e1 0B       		.uleb128 0xb
 17286 08e2 49       		.uleb128 0x49
 17287 08e3 13       		.uleb128 0x13
 17288 08e4 3C       		.uleb128 0x3c
 17289 08e5 19       		.uleb128 0x19
 17290 08e6 00       		.byte	0
 17291 08e7 00       		.byte	0
 17292 08e8 8601     		.uleb128 0x86
 17293 08ea 13       		.uleb128 0x13
 17294 08eb 00       		.byte	0
 17295 08ec 03       		.uleb128 0x3
 17296 08ed 0E       		.uleb128 0xe
 17297 08ee 0B       		.uleb128 0xb
 17298 08ef 0B       		.uleb128 0xb
 17299 08f0 3A       		.uleb128 0x3a
 17300 08f1 0B       		.uleb128 0xb
 17301 08f2 3B       		.uleb128 0x3b
 17302 08f3 05       		.uleb128 0x5
 17303 08f4 39       		.uleb128 0x39
 17304 08f5 0B       		.uleb128 0xb
 17305 08f6 00       		.byte	0
 17306 08f7 00       		.byte	0
 17307 08f8 8701     		.uleb128 0x87
 17308 08fa 34       		.uleb128 0x34
AARCH64 GAS  obj/extInstr.s 			page 517


 17309 08fb 00       		.byte	0
 17310 08fc 03       		.uleb128 0x3
 17311 08fd 0E       		.uleb128 0xe
 17312 08fe 3A       		.uleb128 0x3a
 17313 08ff 0B       		.uleb128 0xb
 17314 0900 3B       		.uleb128 0x3b
 17315 0901 05       		.uleb128 0x5
 17316 0902 39       		.uleb128 0x39
 17317 0903 0B       		.uleb128 0xb
 17318 0904 49       		.uleb128 0x49
 17319 0905 13       		.uleb128 0x13
 17320 0906 3C       		.uleb128 0x3c
 17321 0907 19       		.uleb128 0x19
 17322 0908 1C       		.uleb128 0x1c
 17323 0909 0A       		.uleb128 0xa
 17324 090a 6C       		.uleb128 0x6c
 17325 090b 19       		.uleb128 0x19
 17326 090c 00       		.byte	0
 17327 090d 00       		.byte	0
 17328 090e 8801     		.uleb128 0x88
 17329 0910 39       		.uleb128 0x39
 17330 0911 01       		.byte	0x1
 17331 0912 03       		.uleb128 0x3
 17332 0913 0E       		.uleb128 0xe
 17333 0914 3A       		.uleb128 0x3a
 17334 0915 0B       		.uleb128 0xb
 17335 0916 3B       		.uleb128 0x3b
 17336 0917 05       		.uleb128 0x5
 17337 0918 39       		.uleb128 0x39
 17338 0919 0B       		.uleb128 0xb
 17339 091a 01       		.uleb128 0x1
 17340 091b 13       		.uleb128 0x13
 17341 091c 00       		.byte	0
 17342 091d 00       		.byte	0
 17343 091e 8901     		.uleb128 0x89
 17344 0920 2E       		.uleb128 0x2e
 17345 0921 01       		.byte	0x1
 17346 0922 3F       		.uleb128 0x3f
 17347 0923 19       		.uleb128 0x19
 17348 0924 03       		.uleb128 0x3
 17349 0925 08       		.uleb128 0x8
 17350 0926 3A       		.uleb128 0x3a
 17351 0927 0B       		.uleb128 0xb
 17352 0928 3B       		.uleb128 0x3b
 17353 0929 0B       		.uleb128 0xb
 17354 092a 39       		.uleb128 0x39
 17355 092b 0B       		.uleb128 0xb
 17356 092c 6E       		.uleb128 0x6e
 17357 092d 0E       		.uleb128 0xe
 17358 092e 49       		.uleb128 0x49
 17359 092f 13       		.uleb128 0x13
 17360 0930 3C       		.uleb128 0x3c
 17361 0931 19       		.uleb128 0x19
 17362 0932 01       		.uleb128 0x1
 17363 0933 13       		.uleb128 0x13
 17364 0934 00       		.byte	0
 17365 0935 00       		.byte	0
AARCH64 GAS  obj/extInstr.s 			page 518


 17366 0936 8A01     		.uleb128 0x8a
 17367 0938 2E       		.uleb128 0x2e
 17368 0939 01       		.byte	0x1
 17369 093a 3F       		.uleb128 0x3f
 17370 093b 19       		.uleb128 0x19
 17371 093c 03       		.uleb128 0x3
 17372 093d 0E       		.uleb128 0xe
 17373 093e 3A       		.uleb128 0x3a
 17374 093f 0B       		.uleb128 0xb
 17375 0940 3B       		.uleb128 0x3b
 17376 0941 0B       		.uleb128 0xb
 17377 0942 39       		.uleb128 0x39
 17378 0943 0B       		.uleb128 0xb
 17379 0944 6E       		.uleb128 0x6e
 17380 0945 0E       		.uleb128 0xe
 17381 0946 3C       		.uleb128 0x3c
 17382 0947 19       		.uleb128 0x19
 17383 0948 01       		.uleb128 0x1
 17384 0949 13       		.uleb128 0x13
 17385 094a 00       		.byte	0
 17386 094b 00       		.byte	0
 17387 094c 8B01     		.uleb128 0x8b
 17388 094e 2E       		.uleb128 0x2e
 17389 094f 01       		.byte	0x1
 17390 0950 3F       		.uleb128 0x3f
 17391 0951 19       		.uleb128 0x19
 17392 0952 03       		.uleb128 0x3
 17393 0953 0E       		.uleb128 0xe
 17394 0954 3A       		.uleb128 0x3a
 17395 0955 0B       		.uleb128 0xb
 17396 0956 3B       		.uleb128 0x3b
 17397 0957 05       		.uleb128 0x5
 17398 0958 39       		.uleb128 0x39
 17399 0959 0B       		.uleb128 0xb
 17400 095a 6E       		.uleb128 0x6e
 17401 095b 0E       		.uleb128 0xe
 17402 095c 49       		.uleb128 0x49
 17403 095d 13       		.uleb128 0x13
 17404 095e 3C       		.uleb128 0x3c
 17405 095f 19       		.uleb128 0x19
 17406 0960 00       		.byte	0
 17407 0961 00       		.byte	0
 17408 0962 8C01     		.uleb128 0x8c
 17409 0964 13       		.uleb128 0x13
 17410 0965 01       		.byte	0x1
 17411 0966 03       		.uleb128 0x3
 17412 0967 0E       		.uleb128 0xe
 17413 0968 0B       		.uleb128 0xb
 17414 0969 0B       		.uleb128 0xb
 17415 096a 3A       		.uleb128 0x3a
 17416 096b 0B       		.uleb128 0xb
 17417 096c 3B       		.uleb128 0x3b
 17418 096d 0B       		.uleb128 0xb
 17419 096e 01       		.uleb128 0x1
 17420 096f 13       		.uleb128 0x13
 17421 0970 00       		.byte	0
 17422 0971 00       		.byte	0
AARCH64 GAS  obj/extInstr.s 			page 519


 17423 0972 8D01     		.uleb128 0x8d
 17424 0974 0F       		.uleb128 0xf
 17425 0975 00       		.byte	0
 17426 0976 0B       		.uleb128 0xb
 17427 0977 0B       		.uleb128 0xb
 17428 0978 00       		.byte	0
 17429 0979 00       		.byte	0
 17430 097a 8E01     		.uleb128 0x8e
 17431 097c 24       		.uleb128 0x24
 17432 097d 00       		.byte	0
 17433 097e 0B       		.uleb128 0xb
 17434 097f 0B       		.uleb128 0xb
 17435 0980 3E       		.uleb128 0x3e
 17436 0981 0B       		.uleb128 0xb
 17437 0982 03       		.uleb128 0x3
 17438 0983 08       		.uleb128 0x8
 17439 0984 00       		.byte	0
 17440 0985 00       		.byte	0
 17441 0986 8F01     		.uleb128 0x8f
 17442 0988 13       		.uleb128 0x13
 17443 0989 01       		.byte	0x1
 17444 098a 03       		.uleb128 0x3
 17445 098b 08       		.uleb128 0x8
 17446 098c 0B       		.uleb128 0xb
 17447 098d 0B       		.uleb128 0xb
 17448 098e 3A       		.uleb128 0x3a
 17449 098f 0B       		.uleb128 0xb
 17450 0990 3B       		.uleb128 0x3b
 17451 0991 0B       		.uleb128 0xb
 17452 0992 39       		.uleb128 0x39
 17453 0993 0B       		.uleb128 0xb
 17454 0994 01       		.uleb128 0x1
 17455 0995 13       		.uleb128 0x13
 17456 0996 00       		.byte	0
 17457 0997 00       		.byte	0
 17458 0998 9001     		.uleb128 0x90
 17459 099a 3B       		.uleb128 0x3b
 17460 099b 00       		.byte	0
 17461 099c 03       		.uleb128 0x3
 17462 099d 0E       		.uleb128 0xe
 17463 099e 00       		.byte	0
 17464 099f 00       		.byte	0
 17465 09a0 9101     		.uleb128 0x91
 17466 09a2 26       		.uleb128 0x26
 17467 09a3 00       		.byte	0
 17468 09a4 00       		.byte	0
 17469 09a5 00       		.byte	0
 17470 09a6 9201     		.uleb128 0x92
 17471 09a8 15       		.uleb128 0x15
 17472 09a9 00       		.byte	0
 17473 09aa 00       		.byte	0
 17474 09ab 00       		.byte	0
 17475 09ac 9301     		.uleb128 0x93
 17476 09ae 2E       		.uleb128 0x2e
 17477 09af 01       		.byte	0x1
 17478 09b0 3F       		.uleb128 0x3f
 17479 09b1 19       		.uleb128 0x19
AARCH64 GAS  obj/extInstr.s 			page 520


 17480 09b2 03       		.uleb128 0x3
 17481 09b3 08       		.uleb128 0x8
 17482 09b4 3A       		.uleb128 0x3a
 17483 09b5 0B       		.uleb128 0xb
 17484 09b6 3B       		.uleb128 0x3b
 17485 09b7 05       		.uleb128 0x5
 17486 09b8 39       		.uleb128 0x39
 17487 09b9 0B       		.uleb128 0xb
 17488 09ba 49       		.uleb128 0x49
 17489 09bb 13       		.uleb128 0x13
 17490 09bc 3C       		.uleb128 0x3c
 17491 09bd 19       		.uleb128 0x19
 17492 09be 01       		.uleb128 0x1
 17493 09bf 13       		.uleb128 0x13
 17494 09c0 00       		.byte	0
 17495 09c1 00       		.byte	0
 17496 09c2 9401     		.uleb128 0x94
 17497 09c4 2E       		.uleb128 0x2e
 17498 09c5 01       		.byte	0x1
 17499 09c6 3F       		.uleb128 0x3f
 17500 09c7 19       		.uleb128 0x19
 17501 09c8 03       		.uleb128 0x3
 17502 09c9 0E       		.uleb128 0xe
 17503 09ca 3A       		.uleb128 0x3a
 17504 09cb 0B       		.uleb128 0xb
 17505 09cc 3B       		.uleb128 0x3b
 17506 09cd 05       		.uleb128 0x5
 17507 09ce 39       		.uleb128 0x39
 17508 09cf 0B       		.uleb128 0xb
 17509 09d0 8701     		.uleb128 0x87
 17510 09d2 19       		.uleb128 0x19
 17511 09d3 3C       		.uleb128 0x3c
 17512 09d4 19       		.uleb128 0x19
 17513 09d5 01       		.uleb128 0x1
 17514 09d6 13       		.uleb128 0x13
 17515 09d7 00       		.byte	0
 17516 09d8 00       		.byte	0
 17517 09d9 9501     		.uleb128 0x95
 17518 09db 16       		.uleb128 0x16
 17519 09dc 00       		.byte	0
 17520 09dd 03       		.uleb128 0x3
 17521 09de 0E       		.uleb128 0xe
 17522 09df 3A       		.uleb128 0x3a
 17523 09e0 0B       		.uleb128 0xb
 17524 09e1 3B       		.uleb128 0x3b
 17525 09e2 0B       		.uleb128 0xb
 17526 09e3 39       		.uleb128 0x39
 17527 09e4 0B       		.uleb128 0xb
 17528 09e5 00       		.byte	0
 17529 09e6 00       		.byte	0
 17530 09e7 9601     		.uleb128 0x96
 17531 09e9 34       		.uleb128 0x34
 17532 09ea 00       		.byte	0
 17533 09eb 47       		.uleb128 0x47
 17534 09ec 13       		.uleb128 0x13
 17535 09ed 02       		.uleb128 0x2
 17536 09ee 18       		.uleb128 0x18
AARCH64 GAS  obj/extInstr.s 			page 521


 17537 09ef 00       		.byte	0
 17538 09f0 00       		.byte	0
 17539 09f1 9701     		.uleb128 0x97
 17540 09f3 13       		.uleb128 0x13
 17541 09f4 01       		.byte	0x1
 17542 09f5 03       		.uleb128 0x3
 17543 09f6 0E       		.uleb128 0xe
 17544 09f7 0B       		.uleb128 0xb
 17545 09f8 0B       		.uleb128 0xb
 17546 09f9 8801     		.uleb128 0x88
 17547 09fb 0B       		.uleb128 0xb
 17548 09fc 3A       		.uleb128 0x3a
 17549 09fd 0B       		.uleb128 0xb
 17550 09fe 3B       		.uleb128 0x3b
 17551 09ff 0B       		.uleb128 0xb
 17552 0a00 39       		.uleb128 0x39
 17553 0a01 0B       		.uleb128 0xb
 17554 0a02 01       		.uleb128 0x1
 17555 0a03 13       		.uleb128 0x13
 17556 0a04 00       		.byte	0
 17557 0a05 00       		.byte	0
 17558 0a06 9801     		.uleb128 0x98
 17559 0a08 34       		.uleb128 0x34
 17560 0a09 00       		.byte	0
 17561 0a0a 03       		.uleb128 0x3
 17562 0a0b 0E       		.uleb128 0xe
 17563 0a0c 3A       		.uleb128 0x3a
 17564 0a0d 0B       		.uleb128 0xb
 17565 0a0e 3B       		.uleb128 0x3b
 17566 0a0f 0B       		.uleb128 0xb
 17567 0a10 39       		.uleb128 0x39
 17568 0a11 0B       		.uleb128 0xb
 17569 0a12 49       		.uleb128 0x49
 17570 0a13 13       		.uleb128 0x13
 17571 0a14 3F       		.uleb128 0x3f
 17572 0a15 19       		.uleb128 0x19
 17573 0a16 02       		.uleb128 0x2
 17574 0a17 18       		.uleb128 0x18
 17575 0a18 00       		.byte	0
 17576 0a19 00       		.byte	0
 17577 0a1a 9901     		.uleb128 0x99
 17578 0a1c 34       		.uleb128 0x34
 17579 0a1d 00       		.byte	0
 17580 0a1e 03       		.uleb128 0x3
 17581 0a1f 0E       		.uleb128 0xe
 17582 0a20 49       		.uleb128 0x49
 17583 0a21 13       		.uleb128 0x13
 17584 0a22 3F       		.uleb128 0x3f
 17585 0a23 19       		.uleb128 0x19
 17586 0a24 34       		.uleb128 0x34
 17587 0a25 19       		.uleb128 0x19
 17588 0a26 3C       		.uleb128 0x3c
 17589 0a27 19       		.uleb128 0x19
 17590 0a28 00       		.byte	0
 17591 0a29 00       		.byte	0
 17592 0a2a 9A01     		.uleb128 0x9a
 17593 0a2c 2E       		.uleb128 0x2e
AARCH64 GAS  obj/extInstr.s 			page 522


 17594 0a2d 01       		.byte	0x1
 17595 0a2e 03       		.uleb128 0x3
 17596 0a2f 0E       		.uleb128 0xe
 17597 0a30 34       		.uleb128 0x34
 17598 0a31 19       		.uleb128 0x19
 17599 0a32 11       		.uleb128 0x11
 17600 0a33 01       		.uleb128 0x1
 17601 0a34 12       		.uleb128 0x12
 17602 0a35 07       		.uleb128 0x7
 17603 0a36 40       		.uleb128 0x40
 17604 0a37 18       		.uleb128 0x18
 17605 0a38 9742     		.uleb128 0x2117
 17606 0a3a 19       		.uleb128 0x19
 17607 0a3b 01       		.uleb128 0x1
 17608 0a3c 13       		.uleb128 0x13
 17609 0a3d 00       		.byte	0
 17610 0a3e 00       		.byte	0
 17611 0a3f 9B01     		.uleb128 0x9b
 17612 0a41 05       		.uleb128 0x5
 17613 0a42 00       		.byte	0
 17614 0a43 31       		.uleb128 0x31
 17615 0a44 13       		.uleb128 0x13
 17616 0a45 1C       		.uleb128 0x1c
 17617 0a46 05       		.uleb128 0x5
 17618 0a47 00       		.byte	0
 17619 0a48 00       		.byte	0
 17620 0a49 9C01     		.uleb128 0x9c
 17621 0a4b 05       		.uleb128 0x5
 17622 0a4c 00       		.byte	0
 17623 0a4d 31       		.uleb128 0x31
 17624 0a4e 13       		.uleb128 0x13
 17625 0a4f 1C       		.uleb128 0x1c
 17626 0a50 0B       		.uleb128 0xb
 17627 0a51 00       		.byte	0
 17628 0a52 00       		.byte	0
 17629 0a53 9D01     		.uleb128 0x9d
 17630 0a55 898201   		.uleb128 0x4109
 17631 0a58 01       		.byte	0x1
 17632 0a59 11       		.uleb128 0x11
 17633 0a5a 01       		.uleb128 0x1
 17634 0a5b 01       		.uleb128 0x1
 17635 0a5c 13       		.uleb128 0x13
 17636 0a5d 00       		.byte	0
 17637 0a5e 00       		.byte	0
 17638 0a5f 9E01     		.uleb128 0x9e
 17639 0a61 898201   		.uleb128 0x4109
 17640 0a64 01       		.byte	0x1
 17641 0a65 11       		.uleb128 0x11
 17642 0a66 01       		.uleb128 0x1
 17643 0a67 9542     		.uleb128 0x2115
 17644 0a69 19       		.uleb128 0x19
 17645 0a6a 31       		.uleb128 0x31
 17646 0a6b 13       		.uleb128 0x13
 17647 0a6c 00       		.byte	0
 17648 0a6d 00       		.byte	0
 17649 0a6e 9F01     		.uleb128 0x9f
 17650 0a70 8A8201   		.uleb128 0x410a
AARCH64 GAS  obj/extInstr.s 			page 523


 17651 0a73 00       		.byte	0
 17652 0a74 02       		.uleb128 0x2
 17653 0a75 18       		.uleb128 0x18
 17654 0a76 00       		.byte	0
 17655 0a77 00       		.byte	0
 17656 0a78 A001     		.uleb128 0xa0
 17657 0a7a 2E       		.uleb128 0x2e
 17658 0a7b 01       		.byte	0x1
 17659 0a7c 03       		.uleb128 0x3
 17660 0a7d 0E       		.uleb128 0xe
 17661 0a7e 34       		.uleb128 0x34
 17662 0a7f 19       		.uleb128 0x19
 17663 0a80 20       		.uleb128 0x20
 17664 0a81 0B       		.uleb128 0xb
 17665 0a82 01       		.uleb128 0x1
 17666 0a83 13       		.uleb128 0x13
 17667 0a84 00       		.byte	0
 17668 0a85 00       		.byte	0
 17669 0a86 A101     		.uleb128 0xa1
 17670 0a88 34       		.uleb128 0x34
 17671 0a89 00       		.byte	0
 17672 0a8a 03       		.uleb128 0x3
 17673 0a8b 0E       		.uleb128 0xe
 17674 0a8c 3A       		.uleb128 0x3a
 17675 0a8d 0B       		.uleb128 0xb
 17676 0a8e 3B       		.uleb128 0x3b
 17677 0a8f 0B       		.uleb128 0xb
 17678 0a90 39       		.uleb128 0x39
 17679 0a91 0B       		.uleb128 0xb
 17680 0a92 49       		.uleb128 0x49
 17681 0a93 13       		.uleb128 0x13
 17682 0a94 00       		.byte	0
 17683 0a95 00       		.byte	0
 17684 0a96 A201     		.uleb128 0xa2
 17685 0a98 2E       		.uleb128 0x2e
 17686 0a99 01       		.byte	0x1
 17687 0a9a 3F       		.uleb128 0x3f
 17688 0a9b 19       		.uleb128 0x19
 17689 0a9c 03       		.uleb128 0x3
 17690 0a9d 0E       		.uleb128 0xe
 17691 0a9e 3A       		.uleb128 0x3a
 17692 0a9f 0B       		.uleb128 0xb
 17693 0aa0 3B       		.uleb128 0x3b
 17694 0aa1 0B       		.uleb128 0xb
 17695 0aa2 39       		.uleb128 0x39
 17696 0aa3 0B       		.uleb128 0xb
 17697 0aa4 49       		.uleb128 0x49
 17698 0aa5 13       		.uleb128 0x13
 17699 0aa6 11       		.uleb128 0x11
 17700 0aa7 01       		.uleb128 0x1
 17701 0aa8 12       		.uleb128 0x12
 17702 0aa9 07       		.uleb128 0x7
 17703 0aaa 40       		.uleb128 0x40
 17704 0aab 18       		.uleb128 0x18
 17705 0aac 9742     		.uleb128 0x2117
 17706 0aae 19       		.uleb128 0x19
 17707 0aaf 01       		.uleb128 0x1
AARCH64 GAS  obj/extInstr.s 			page 524


 17708 0ab0 13       		.uleb128 0x13
 17709 0ab1 00       		.byte	0
 17710 0ab2 00       		.byte	0
 17711 0ab3 A301     		.uleb128 0xa3
 17712 0ab5 2E       		.uleb128 0x2e
 17713 0ab6 01       		.byte	0x1
 17714 0ab7 31       		.uleb128 0x31
 17715 0ab8 13       		.uleb128 0x13
 17716 0ab9 11       		.uleb128 0x11
 17717 0aba 01       		.uleb128 0x1
 17718 0abb 12       		.uleb128 0x12
 17719 0abc 07       		.uleb128 0x7
 17720 0abd 40       		.uleb128 0x40
 17721 0abe 18       		.uleb128 0x18
 17722 0abf 9742     		.uleb128 0x2117
 17723 0ac1 19       		.uleb128 0x19
 17724 0ac2 01       		.uleb128 0x1
 17725 0ac3 13       		.uleb128 0x13
 17726 0ac4 00       		.byte	0
 17727 0ac5 00       		.byte	0
 17728 0ac6 A401     		.uleb128 0xa4
 17729 0ac8 898201   		.uleb128 0x4109
 17730 0acb 01       		.byte	0x1
 17731 0acc 11       		.uleb128 0x11
 17732 0acd 01       		.uleb128 0x1
 17733 0ace 00       		.byte	0
 17734 0acf 00       		.byte	0
 17735 0ad0 A501     		.uleb128 0xa5
 17736 0ad2 898201   		.uleb128 0x4109
 17737 0ad5 00       		.byte	0
 17738 0ad6 11       		.uleb128 0x11
 17739 0ad7 01       		.uleb128 0x1
 17740 0ad8 9542     		.uleb128 0x2115
 17741 0ada 19       		.uleb128 0x19
 17742 0adb 31       		.uleb128 0x31
 17743 0adc 13       		.uleb128 0x13
 17744 0add 00       		.byte	0
 17745 0ade 00       		.byte	0
 17746 0adf 00       		.byte	0
 17747              		.section	.debug_loc,"",@progbits
 17748              	.Ldebug_loc0:
 17749              	.LVUS9:
 17750 0000 01       		.uleb128 .LVU92
 17751 0001 00       		.uleb128 .LVU96
 17752              	.LLST9:
 17753 0002 00000000 		.8byte	.LVL14
 17753      00000000 
 17754 000a 00000000 		.8byte	.LVL15
 17754      00000000 
 17755 0012 0A00     		.2byte	0xa
 17756 0014 03       		.byte	0x3
 17757 0015 00000000 		.8byte	.LC0
 17757      00000000 
 17758 001d 9F       		.byte	0x9f
 17759 001e 00000000 		.8byte	0
 17759      00000000 
 17760 0026 00000000 		.8byte	0
AARCH64 GAS  obj/extInstr.s 			page 525


 17760      00000000 
 17761              	.LVUS10:
 17762 002e 00       		.uleb128 .LVU105
 17763 002f 00       		.uleb128 .LVU136
 17764 0030 00       		.uleb128 .LVU256
 17765 0031 00       		.uleb128 .LVU261
 17766              	.LLST10:
 17767 0032 00000000 		.8byte	.LVL17
 17767      00000000 
 17768 003a 00000000 		.8byte	.LVL25
 17768      00000000 
 17769 0042 0A00     		.2byte	0xa
 17770 0044 03       		.byte	0x3
 17771 0045 00000000 		.8byte	x
 17771      00000000 
 17772 004d 9F       		.byte	0x9f
 17773 004e 00000000 		.8byte	.LVL52
 17773      00000000 
 17774 0056 00000000 		.8byte	.LVL54
 17774      00000000 
 17775 005e 0A00     		.2byte	0xa
 17776 0060 03       		.byte	0x3
 17777 0061 00000000 		.8byte	x
 17777      00000000 
 17778 0069 9F       		.byte	0x9f
 17779 006a 00000000 		.8byte	0
 17779      00000000 
 17780 0072 00000000 		.8byte	0
 17780      00000000 
 17781              	.LVUS11:
 17782 007a 04       		.uleb128 .LVU109
 17783 007b 00       		.uleb128 .LVU136
 17784 007c 00       		.uleb128 .LVU256
 17785 007d 00       		.uleb128 .LVU261
 17786              	.LLST11:
 17787 007e 00000000 		.8byte	.LVL17
 17787      00000000 
 17788 0086 00000000 		.8byte	.LVL25
 17788      00000000 
 17789 008e 0A00     		.2byte	0xa
 17790 0090 03       		.byte	0x3
 17791 0091 00000000 		.8byte	x
 17791      00000000 
 17792 0099 9F       		.byte	0x9f
 17793 009a 00000000 		.8byte	.LVL52
 17793      00000000 
 17794 00a2 00000000 		.8byte	.LVL54
 17794      00000000 
 17795 00aa 0A00     		.2byte	0xa
 17796 00ac 03       		.byte	0x3
 17797 00ad 00000000 		.8byte	x
 17797      00000000 
 17798 00b5 9F       		.byte	0x9f
 17799 00b6 00000000 		.8byte	0
 17799      00000000 
 17800 00be 00000000 		.8byte	0
 17800      00000000 
AARCH64 GAS  obj/extInstr.s 			page 526


 17801              	.LVUS12:
 17802 00c6 03       		.uleb128 .LVU108
 17803 00c7 00       		.uleb128 .LVU136
 17804 00c8 00       		.uleb128 .LVU256
 17805 00c9 00       		.uleb128 .LVU261
 17806              	.LLST12:
 17807 00ca 00000000 		.8byte	.LVL17
 17807      00000000 
 17808 00d2 00000000 		.8byte	.LVL25
 17808      00000000 
 17809 00da 0200     		.2byte	0x2
 17810 00dc 38       		.byte	0x38
 17811 00dd 9F       		.byte	0x9f
 17812 00de 00000000 		.8byte	.LVL52
 17812      00000000 
 17813 00e6 00000000 		.8byte	.LVL54
 17813      00000000 
 17814 00ee 0200     		.2byte	0x2
 17815 00f0 38       		.byte	0x38
 17816 00f1 9F       		.byte	0x9f
 17817 00f2 00000000 		.8byte	0
 17817      00000000 
 17818 00fa 00000000 		.8byte	0
 17818      00000000 
 17819              	.LVUS14:
 17820 0102 03       		.uleb128 .LVU108
 17821 0103 00       		.uleb128 .LVU136
 17822 0104 00       		.uleb128 .LVU256
 17823 0105 00       		.uleb128 .LVU261
 17824              	.LLST14:
 17825 0106 00000000 		.8byte	.LVL17
 17825      00000000 
 17826 010e 00000000 		.8byte	.LVL25
 17826      00000000 
 17827 0116 0A00     		.2byte	0xa
 17828 0118 03       		.byte	0x3
 17829 0119 00000000 		.8byte	x
 17829      00000000 
 17830 0121 9F       		.byte	0x9f
 17831 0122 00000000 		.8byte	.LVL52
 17831      00000000 
 17832 012a 00000000 		.8byte	.LVL54
 17832      00000000 
 17833 0132 0A00     		.2byte	0xa
 17834 0134 03       		.byte	0x3
 17835 0135 00000000 		.8byte	x
 17835      00000000 
 17836 013d 9F       		.byte	0x9f
 17837 013e 00000000 		.8byte	0
 17837      00000000 
 17838 0146 00000000 		.8byte	0
 17838      00000000 
 17839              	.LVUS15:
 17840 014e 00       		.uleb128 .LVU110
 17841 014f 01       		.uleb128 .LVU111
 17842 0150 01       		.uleb128 .LVU111
 17843 0151 00       		.uleb128 .LVU129
AARCH64 GAS  obj/extInstr.s 			page 527


 17844 0152 00       		.uleb128 .LVU129
 17845 0153 00       		.uleb128 .LVU130
 17846 0154 00       		.uleb128 .LVU130
 17847 0155 00       		.uleb128 .LVU136
 17848 0156 00       		.uleb128 .LVU256
 17849 0157 00       		.uleb128 .LVU261
 17850              	.LLST15:
 17851 0158 00000000 		.8byte	.LVL18
 17851      00000000 
 17852 0160 00000000 		.8byte	.LVL18
 17852      00000000 
 17853 0168 0200     		.2byte	0x2
 17854 016a 30       		.byte	0x30
 17855 016b 9F       		.byte	0x9f
 17856 016c 00000000 		.8byte	.LVL18
 17856      00000000 
 17857 0174 00000000 		.8byte	.LVL21
 17857      00000000 
 17858 017c 0100     		.2byte	0x1
 17859 017e 64       		.byte	0x64
 17860 017f 00000000 		.8byte	.LVL21
 17860      00000000 
 17861 0187 00000000 		.8byte	.LVL22
 17861      00000000 
 17862 018f 0300     		.2byte	0x3
 17863 0191 84       		.byte	0x84
 17864 0192 7F       		.sleb128 -1
 17865 0193 9F       		.byte	0x9f
 17866 0194 00000000 		.8byte	.LVL22
 17866      00000000 
 17867 019c 00000000 		.8byte	.LVL25
 17867      00000000 
 17868 01a4 0100     		.2byte	0x1
 17869 01a6 64       		.byte	0x64
 17870 01a7 00000000 		.8byte	.LVL52
 17870      00000000 
 17871 01af 00000000 		.8byte	.LVL54
 17871      00000000 
 17872 01b7 0300     		.2byte	0x3
 17873 01b9 84       		.byte	0x84
 17874 01ba 7F       		.sleb128 -1
 17875 01bb 9F       		.byte	0x9f
 17876 01bc 00000000 		.8byte	0
 17876      00000000 
 17877 01c4 00000000 		.8byte	0
 17877      00000000 
 17878              	.LVUS16:
 17879 01cc 03       		.uleb128 .LVU113
 17880 01cd 01       		.uleb128 .LVU124
 17881              	.LLST16:
 17882 01ce 00000000 		.8byte	.LVL18
 17882      00000000 
 17883 01d6 00000000 		.8byte	.LVL19
 17883      00000000 
 17884 01de 0100     		.2byte	0x1
 17885 01e0 63       		.byte	0x63
 17886 01e1 00000000 		.8byte	0
AARCH64 GAS  obj/extInstr.s 			page 528


 17886      00000000 
 17887 01e9 00000000 		.8byte	0
 17887      00000000 
 17888              	.LVUS17:
 17889 01f1 04       		.uleb128 .LVU114
 17890 01f2 01       		.uleb128 .LVU124
 17891              	.LLST17:
 17892 01f3 00000000 		.8byte	.LVL18
 17892      00000000 
 17893 01fb 00000000 		.8byte	.LVL19
 17893      00000000 
 17894 0203 0200     		.2byte	0x2
 17895 0205 38       		.byte	0x38
 17896 0206 9F       		.byte	0x9f
 17897 0207 00000000 		.8byte	0
 17897      00000000 
 17898 020f 00000000 		.8byte	0
 17898      00000000 
 17899              	.LVUS18:
 17900 0217 04       		.uleb128 .LVU114
 17901 0218 00       		.uleb128 .LVU123
 17902              	.LLST18:
 17903 0219 00000000 		.8byte	.LVL18
 17903      00000000 
 17904 0221 00000000 		.8byte	.LVL19
 17904      00000000 
 17905 0229 0E00     		.2byte	0xe
 17906 022b 91       		.byte	0x91
 17907 022c 00       		.sleb128 0
 17908 022d 83       		.byte	0x83
 17909 022e 00       		.sleb128 0
 17910 022f 06       		.byte	0x6
 17911 0230 48       		.byte	0x48
 17912 0231 1C       		.byte	0x1c
 17913 0232 06       		.byte	0x6
 17914 0233 22       		.byte	0x22
 17915 0234 0A       		.byte	0xa
 17916 0235 7801     		.2byte	0x178
 17917 0237 1C       		.byte	0x1c
 17918 0238 9F       		.byte	0x9f
 17919 0239 00000000 		.8byte	0
 17919      00000000 
 17920 0241 00000000 		.8byte	0
 17920      00000000 
 17921              	.LVUS19:
 17922 0249 06       		.uleb128 .LVU116
 17923 024a 00       		.uleb128 .LVU123
 17924              	.LLST19:
 17925 024b 00000000 		.8byte	.LVL18
 17925      00000000 
 17926 0253 00000000 		.8byte	.LVL19
 17926      00000000 
 17927 025b 0D00     		.2byte	0xd
 17928 025d 91       		.byte	0x91
 17929 025e 00       		.sleb128 0
 17930 025f 83       		.byte	0x83
 17931 0260 00       		.sleb128 0
AARCH64 GAS  obj/extInstr.s 			page 529


 17932 0261 06       		.byte	0x6
 17933 0262 48       		.byte	0x48
 17934 0263 1C       		.byte	0x1c
 17935 0264 06       		.byte	0x6
 17936 0265 22       		.byte	0x22
 17937 0266 0A       		.byte	0xa
 17938 0267 6801     		.2byte	0x168
 17939 0269 1C       		.byte	0x1c
 17940 026a 00000000 		.8byte	0
 17940      00000000 
 17941 0272 00000000 		.8byte	0
 17941      00000000 
 17942              	.LVUS20:
 17943 027a 00       		.uleb128 .LVU256
 17944 027b 00       		.uleb128 .LVU261
 17945              	.LLST20:
 17946 027c 00000000 		.8byte	.LVL52
 17946      00000000 
 17947 0284 00000000 		.8byte	.LVL54
 17947      00000000 
 17948 028c 0A00     		.2byte	0xa
 17949 028e 03       		.byte	0x3
 17950 028f 00000000 		.8byte	.LC2
 17950      00000000 
 17951 0297 9F       		.byte	0x9f
 17952 0298 00000000 		.8byte	0
 17952      00000000 
 17953 02a0 00000000 		.8byte	0
 17953      00000000 
 17954              	.LVUS21:
 17955 02a8 00       		.uleb128 .LVU256
 17956 02a9 00       		.uleb128 .LVU261
 17957              	.LLST21:
 17958 02aa 00000000 		.8byte	.LVL52
 17958      00000000 
 17959 02b2 00000000 		.8byte	.LVL54
 17959      00000000 
 17960 02ba 0100     		.2byte	0x1
 17961 02bc 63       		.byte	0x63
 17962 02bd 00000000 		.8byte	0
 17962      00000000 
 17963 02c5 00000000 		.8byte	0
 17963      00000000 
 17964              	.LVUS22:
 17965 02cd 01       		.uleb128 .LVU124
 17966 02ce 00       		.uleb128 .LVU127
 17967              	.LLST22:
 17968 02cf 00000000 		.8byte	.LVL19
 17968      00000000 
 17969 02d7 00000000 		.8byte	.LVL20-1
 17969      00000000 
 17970 02df 1B00     		.2byte	0x1b
 17971 02e1 84       		.byte	0x84
 17972 02e2 00       		.sleb128 0
 17973 02e3 08       		.byte	0x8
 17974 02e4 20       		.byte	0x20
 17975 02e5 24       		.byte	0x24
AARCH64 GAS  obj/extInstr.s 			page 530


 17976 02e6 08       		.byte	0x8
 17977 02e7 20       		.byte	0x20
 17978 02e8 26       		.byte	0x26
 17979 02e9 31       		.byte	0x31
 17980 02ea 24       		.byte	0x24
 17981 02eb 03       		.byte	0x3
 17982 02ec 00000000 		.8byte	x
 17982      00000000 
 17983 02f4 22       		.byte	0x22
 17984 02f5 94       		.byte	0x94
 17985 02f6 02       		.byte	0x2
 17986 02f7 0A       		.byte	0xa
 17987 02f8 FFFF     		.2byte	0xffff
 17988 02fa 1A       		.byte	0x1a
 17989 02fb 9F       		.byte	0x9f
 17990 02fc 00000000 		.8byte	0
 17990      00000000 
 17991 0304 00000000 		.8byte	0
 17991      00000000 
 17992              	.LVUS23:
 17993 030c 01       		.uleb128 .LVU124
 17994 030d 00       		.uleb128 .LVU127
 17995              	.LLST23:
 17996 030e 00000000 		.8byte	.LVL19
 17996      00000000 
 17997 0316 00000000 		.8byte	.LVL20
 17997      00000000 
 17998 031e 0100     		.2byte	0x1
 17999 0320 63       		.byte	0x63
 18000 0321 00000000 		.8byte	0
 18000      00000000 
 18001 0329 00000000 		.8byte	0
 18001      00000000 
 18002              	.LVUS24:
 18003 0331 00       		.uleb128 .LVU131
 18004 0332 00       		.uleb128 .LVU134
 18005              	.LLST24:
 18006 0333 00000000 		.8byte	.LVL23
 18006      00000000 
 18007 033b 00000000 		.8byte	.LVL24
 18007      00000000 
 18008 0343 0100     		.2byte	0x1
 18009 0345 63       		.byte	0x63
 18010 0346 00000000 		.8byte	0
 18010      00000000 
 18011 034e 00000000 		.8byte	0
 18011      00000000 
 18012              	.LVUS25:
 18013 0356 02       		.uleb128 .LVU101
 18014 0357 00       		.uleb128 .LVU105
 18015              	.LLST25:
 18016 0358 00000000 		.8byte	.LVL16
 18016      00000000 
 18017 0360 00000000 		.8byte	.LVL17
 18017      00000000 
 18018 0368 0A00     		.2byte	0xa
 18019 036a 03       		.byte	0x3
AARCH64 GAS  obj/extInstr.s 			page 531


 18020 036b 00000000 		.8byte	.LC1
 18020      00000000 
 18021 0373 9F       		.byte	0x9f
 18022 0374 00000000 		.8byte	0
 18022      00000000 
 18023 037c 00000000 		.8byte	0
 18023      00000000 
 18024              	.LVUS26:
 18025 0384 00       		.uleb128 .LVU136
 18026 0385 00       		.uleb128 .LVU144
 18027              	.LLST26:
 18028 0386 00000000 		.8byte	.LVL25
 18028      00000000 
 18029 038e 00000000 		.8byte	.LVL26
 18029      00000000 
 18030 0396 0100     		.2byte	0x1
 18031 0398 6B       		.byte	0x6b
 18032 0399 00000000 		.8byte	0
 18032      00000000 
 18033 03a1 00000000 		.8byte	0
 18033      00000000 
 18034              	.LVUS27:
 18035 03a9 02       		.uleb128 .LVU138
 18036 03aa 04       		.uleb128 .LVU140
 18037              	.LLST27:
 18038 03ab 00000000 		.8byte	.LVL25
 18038      00000000 
 18039 03b3 00000000 		.8byte	.LVL25
 18039      00000000 
 18040 03bb 0100     		.2byte	0x1
 18041 03bd 6B       		.byte	0x6b
 18042 03be 00000000 		.8byte	0
 18042      00000000 
 18043 03c6 00000000 		.8byte	0
 18043      00000000 
 18044              	.LVUS28:
 18045 03ce 03       		.uleb128 .LVU139
 18046 03cf 04       		.uleb128 .LVU140
 18047              	.LLST28:
 18048 03d0 00000000 		.8byte	.LVL25
 18048      00000000 
 18049 03d8 00000000 		.8byte	.LVL25
 18049      00000000 
 18050 03e0 0100     		.2byte	0x1
 18051 03e2 6B       		.byte	0x6b
 18052 03e3 00000000 		.8byte	0
 18052      00000000 
 18053 03eb 00000000 		.8byte	0
 18053      00000000 
 18054              	.LVUS29:
 18055 03f3 04       		.uleb128 .LVU140
 18056 03f4 06       		.uleb128 .LVU142
 18057              	.LLST29:
 18058 03f5 00000000 		.8byte	.LVL25
 18058      00000000 
 18059 03fd 00000000 		.8byte	.LVL25
 18059      00000000 
AARCH64 GAS  obj/extInstr.s 			page 532


 18060 0405 0100     		.2byte	0x1
 18061 0407 6B       		.byte	0x6b
 18062 0408 00000000 		.8byte	0
 18062      00000000 
 18063 0410 00000000 		.8byte	0
 18063      00000000 
 18064              	.LVUS30:
 18065 0418 00       		.uleb128 .LVU144
 18066 0419 00       		.uleb128 .LVU147
 18067              	.LLST30:
 18068 041a 00000000 		.8byte	.LVL26
 18068      00000000 
 18069 0422 00000000 		.8byte	.LVL27-1
 18069      00000000 
 18070 042a 0100     		.2byte	0x1
 18071 042c 50       		.byte	0x50
 18072 042d 00000000 		.8byte	0
 18072      00000000 
 18073 0435 00000000 		.8byte	0
 18073      00000000 
 18074              	.LVUS31:
 18075 043d 00       		.uleb128 .LVU147
 18076 043e 04       		.uleb128 .LVU167
 18077              	.LLST31:
 18078 043f 00000000 		.8byte	.LVL27
 18078      00000000 
 18079 0447 00000000 		.8byte	.LVL31
 18079      00000000 
 18080 044f 0100     		.2byte	0x1
 18081 0451 6B       		.byte	0x6b
 18082 0452 00000000 		.8byte	0
 18082      00000000 
 18083 045a 00000000 		.8byte	0
 18083      00000000 
 18084              	.LVUS32:
 18085 0462 02       		.uleb128 .LVU149
 18086 0463 00       		.uleb128 .LVU163
 18087              	.LLST32:
 18088 0464 00000000 		.8byte	.LVL27
 18088      00000000 
 18089 046c 00000000 		.8byte	.LVL31
 18089      00000000 
 18090 0474 0100     		.2byte	0x1
 18091 0476 6B       		.byte	0x6b
 18092 0477 00000000 		.8byte	0
 18092      00000000 
 18093 047f 00000000 		.8byte	0
 18093      00000000 
 18094              	.LVUS33:
 18095 0487 03       		.uleb128 .LVU150
 18096 0488 02       		.uleb128 .LVU155
 18097              	.LLST33:
 18098 0489 00000000 		.8byte	.LVL27
 18098      00000000 
 18099 0491 00000000 		.8byte	.LVL28
 18099      00000000 
 18100 0499 0100     		.2byte	0x1
AARCH64 GAS  obj/extInstr.s 			page 533


 18101 049b 6B       		.byte	0x6b
 18102 049c 00000000 		.8byte	0
 18102      00000000 
 18103 04a4 00000000 		.8byte	0
 18103      00000000 
 18104              	.LVUS34:
 18105 04ac 04       		.uleb128 .LVU151
 18106 04ad 00       		.uleb128 .LVU153
 18107              	.LLST34:
 18108 04ae 00000000 		.8byte	.LVL27
 18108      00000000 
 18109 04b6 00000000 		.8byte	.LVL28
 18109      00000000 
 18110 04be 0100     		.2byte	0x1
 18111 04c0 6B       		.byte	0x6b
 18112 04c1 00000000 		.8byte	0
 18112      00000000 
 18113 04c9 00000000 		.8byte	0
 18113      00000000 
 18114              	.LVUS35:
 18115 04d1 00       		.uleb128 .LVU153
 18116 04d2 02       		.uleb128 .LVU155
 18117              	.LLST35:
 18118 04d3 00000000 		.8byte	.LVL28
 18118      00000000 
 18119 04db 00000000 		.8byte	.LVL28
 18119      00000000 
 18120 04e3 0100     		.2byte	0x1
 18121 04e5 6B       		.byte	0x6b
 18122 04e6 00000000 		.8byte	0
 18122      00000000 
 18123 04ee 00000000 		.8byte	0
 18123      00000000 
 18124              	.LVUS36:
 18125 04f6 00       		.uleb128 .LVU157
 18126 04f7 00       		.uleb128 .LVU163
 18127              	.LLST36:
 18128 04f8 00000000 		.8byte	.LVL29
 18128      00000000 
 18129 0500 00000000 		.8byte	.LVL31-1
 18129      00000000 
 18130 0508 0200     		.2byte	0x2
 18131 050a 89       		.byte	0x89
 18132 050b 00       		.sleb128 0
 18133 050c 00000000 		.8byte	0
 18133      00000000 
 18134 0514 00000000 		.8byte	0
 18134      00000000 
 18135              	.LVUS37:
 18136 051c 00       		.uleb128 .LVU157
 18137 051d 00       		.uleb128 .LVU163
 18138              	.LLST37:
 18139 051e 00000000 		.8byte	.LVL29
 18139      00000000 
 18140 0526 00000000 		.8byte	.LVL31
 18140      00000000 
 18141 052e 0100     		.2byte	0x1
AARCH64 GAS  obj/extInstr.s 			page 534


 18142 0530 6B       		.byte	0x6b
 18143 0531 00000000 		.8byte	0
 18143      00000000 
 18144 0539 00000000 		.8byte	0
 18144      00000000 
 18145              	.LVUS38:
 18146 0541 01       		.uleb128 .LVU158
 18147 0542 00       		.uleb128 .LVU162
 18148 0543 00       		.uleb128 .LVU162
 18149 0544 00       		.uleb128 .LVU163
 18150              	.LLST38:
 18151 0545 00000000 		.8byte	.LVL29
 18151      00000000 
 18152 054d 00000000 		.8byte	.LVL30
 18152      00000000 
 18153 0555 0600     		.2byte	0x6
 18154 0557 89       		.byte	0x89
 18155 0558 00       		.sleb128 0
 18156 0559 06       		.byte	0x6
 18157 055a 23       		.byte	0x23
 18158 055b 01       		.uleb128 0x1
 18159 055c 9F       		.byte	0x9f
 18160 055d 00000000 		.8byte	.LVL30
 18160      00000000 
 18161 0565 00000000 		.8byte	.LVL31-1
 18161      00000000 
 18162 056d 0100     		.2byte	0x1
 18163 056f 51       		.byte	0x51
 18164 0570 00000000 		.8byte	0
 18164      00000000 
 18165 0578 00000000 		.8byte	0
 18165      00000000 
 18166              	.LVUS39:
 18167 0580 01       		.uleb128 .LVU158
 18168 0581 00       		.uleb128 .LVU163
 18169              	.LLST39:
 18170 0582 00000000 		.8byte	.LVL29
 18170      00000000 
 18171 058a 00000000 		.8byte	.LVL31-1
 18171      00000000 
 18172 0592 0100     		.2byte	0x1
 18173 0594 50       		.byte	0x50
 18174 0595 00000000 		.8byte	0
 18174      00000000 
 18175 059d 00000000 		.8byte	0
 18175      00000000 
 18176              	.LVUS40:
 18177 05a5 01       		.uleb128 .LVU158
 18178 05a6 00       		.uleb128 .LVU163
 18179              	.LLST40:
 18180 05a7 00000000 		.8byte	.LVL29
 18180      00000000 
 18181 05af 00000000 		.8byte	.LVL31
 18181      00000000 
 18182 05b7 0100     		.2byte	0x1
 18183 05b9 6B       		.byte	0x6b
 18184 05ba 00000000 		.8byte	0
AARCH64 GAS  obj/extInstr.s 			page 535


 18184      00000000 
 18185 05c2 00000000 		.8byte	0
 18185      00000000 
 18186              	.LVUS41:
 18187 05ca 02       		.uleb128 .LVU159
 18188 05cb 00       		.uleb128 .LVU162
 18189 05cc 00       		.uleb128 .LVU162
 18190 05cd 00       		.uleb128 .LVU163
 18191              	.LLST41:
 18192 05ce 00000000 		.8byte	.LVL29
 18192      00000000 
 18193 05d6 00000000 		.8byte	.LVL30
 18193      00000000 
 18194 05de 0600     		.2byte	0x6
 18195 05e0 89       		.byte	0x89
 18196 05e1 00       		.sleb128 0
 18197 05e2 06       		.byte	0x6
 18198 05e3 23       		.byte	0x23
 18199 05e4 01       		.uleb128 0x1
 18200 05e5 9F       		.byte	0x9f
 18201 05e6 00000000 		.8byte	.LVL30
 18201      00000000 
 18202 05ee 00000000 		.8byte	.LVL31-1
 18202      00000000 
 18203 05f6 0100     		.2byte	0x1
 18204 05f8 51       		.byte	0x51
 18205 05f9 00000000 		.8byte	0
 18205      00000000 
 18206 0601 00000000 		.8byte	0
 18206      00000000 
 18207              	.LVUS42:
 18208 0609 02       		.uleb128 .LVU159
 18209 060a 00       		.uleb128 .LVU163
 18210              	.LLST42:
 18211 060b 00000000 		.8byte	.LVL29
 18211      00000000 
 18212 0613 00000000 		.8byte	.LVL31-1
 18212      00000000 
 18213 061b 0100     		.2byte	0x1
 18214 061d 50       		.byte	0x50
 18215 061e 00000000 		.8byte	0
 18215      00000000 
 18216 0626 00000000 		.8byte	0
 18216      00000000 
 18217              	.LVUS43:
 18218 062e 02       		.uleb128 .LVU159
 18219 062f 00       		.uleb128 .LVU163
 18220              	.LLST43:
 18221 0630 00000000 		.8byte	.LVL29
 18221      00000000 
 18222 0638 00000000 		.8byte	.LVL31
 18222      00000000 
 18223 0640 0100     		.2byte	0x1
 18224 0642 6B       		.byte	0x6b
 18225 0643 00000000 		.8byte	0
 18225      00000000 
 18226 064b 00000000 		.8byte	0
AARCH64 GAS  obj/extInstr.s 			page 536


 18226      00000000 
 18227              	.LVUS44:
 18228 0653 00       		.uleb128 .LVU163
 18229 0654 04       		.uleb128 .LVU167
 18230              	.LLST44:
 18231 0655 00000000 		.8byte	.LVL31
 18231      00000000 
 18232 065d 00000000 		.8byte	.LVL31
 18232      00000000 
 18233 0665 0100     		.2byte	0x1
 18234 0667 6B       		.byte	0x6b
 18235 0668 00000000 		.8byte	0
 18235      00000000 
 18236 0670 00000000 		.8byte	0
 18236      00000000 
 18237              	.LVUS45:
 18238 0678 02       		.uleb128 .LVU165
 18239 0679 04       		.uleb128 .LVU167
 18240              	.LLST45:
 18241 067a 00000000 		.8byte	.LVL31
 18241      00000000 
 18242 0682 00000000 		.8byte	.LVL31
 18242      00000000 
 18243 068a 0100     		.2byte	0x1
 18244 068c 6B       		.byte	0x6b
 18245 068d 00000000 		.8byte	0
 18245      00000000 
 18246 0695 00000000 		.8byte	0
 18246      00000000 
 18247              	.LVUS46:
 18248 069d 03       		.uleb128 .LVU166
 18249 069e 04       		.uleb128 .LVU167
 18250              	.LLST46:
 18251 069f 00000000 		.8byte	.LVL31
 18251      00000000 
 18252 06a7 00000000 		.8byte	.LVL31
 18252      00000000 
 18253 06af 0100     		.2byte	0x1
 18254 06b1 6B       		.byte	0x6b
 18255 06b2 00000000 		.8byte	0
 18255      00000000 
 18256 06ba 00000000 		.8byte	0
 18256      00000000 
 18257              	.LVUS47:
 18258 06c2 00       		.uleb128 .LVU187
 18259 06c3 00       		.uleb128 .LVU218
 18260 06c4 00       		.uleb128 .LVU252
 18261 06c5 00       		.uleb128 .LVU256
 18262 06c6 00       		.uleb128 .LVU285
 18263 06c7 00       		.uleb128 .LVU286
 18264              	.LLST47:
 18265 06c8 00000000 		.8byte	.LVL35
 18265      00000000 
 18266 06d0 00000000 		.8byte	.LVL43
 18266      00000000 
 18267 06d8 0A00     		.2byte	0xa
 18268 06da 03       		.byte	0x3
AARCH64 GAS  obj/extInstr.s 			page 537


 18269 06db 00000000 		.8byte	y
 18269      00000000 
 18270 06e3 9F       		.byte	0x9f
 18271 06e4 00000000 		.8byte	.LVL50
 18271      00000000 
 18272 06ec 00000000 		.8byte	.LVL52
 18272      00000000 
 18273 06f4 0A00     		.2byte	0xa
 18274 06f6 03       		.byte	0x3
 18275 06f7 00000000 		.8byte	y
 18275      00000000 
 18276 06ff 9F       		.byte	0x9f
 18277 0700 00000000 		.8byte	.LVL61
 18277      00000000 
 18278 0708 00000000 		.8byte	.LVL62
 18278      00000000 
 18279 0710 0A00     		.2byte	0xa
 18280 0712 03       		.byte	0x3
 18281 0713 00000000 		.8byte	y
 18281      00000000 
 18282 071b 9F       		.byte	0x9f
 18283 071c 00000000 		.8byte	0
 18283      00000000 
 18284 0724 00000000 		.8byte	0
 18284      00000000 
 18285              	.LVUS48:
 18286 072c 04       		.uleb128 .LVU191
 18287 072d 00       		.uleb128 .LVU218
 18288 072e 00       		.uleb128 .LVU252
 18289 072f 00       		.uleb128 .LVU256
 18290 0730 00       		.uleb128 .LVU285
 18291 0731 00       		.uleb128 .LVU286
 18292              	.LLST48:
 18293 0732 00000000 		.8byte	.LVL35
 18293      00000000 
 18294 073a 00000000 		.8byte	.LVL43
 18294      00000000 
 18295 0742 0A00     		.2byte	0xa
 18296 0744 03       		.byte	0x3
 18297 0745 00000000 		.8byte	y
 18297      00000000 
 18298 074d 9F       		.byte	0x9f
 18299 074e 00000000 		.8byte	.LVL50
 18299      00000000 
 18300 0756 00000000 		.8byte	.LVL52
 18300      00000000 
 18301 075e 0A00     		.2byte	0xa
 18302 0760 03       		.byte	0x3
 18303 0761 00000000 		.8byte	y
 18303      00000000 
 18304 0769 9F       		.byte	0x9f
 18305 076a 00000000 		.8byte	.LVL61
 18305      00000000 
 18306 0772 00000000 		.8byte	.LVL62
 18306      00000000 
 18307 077a 0A00     		.2byte	0xa
 18308 077c 03       		.byte	0x3
AARCH64 GAS  obj/extInstr.s 			page 538


 18309 077d 00000000 		.8byte	y
 18309      00000000 
 18310 0785 9F       		.byte	0x9f
 18311 0786 00000000 		.8byte	0
 18311      00000000 
 18312 078e 00000000 		.8byte	0
 18312      00000000 
 18313              	.LVUS49:
 18314 0796 03       		.uleb128 .LVU190
 18315 0797 00       		.uleb128 .LVU218
 18316 0798 00       		.uleb128 .LVU252
 18317 0799 00       		.uleb128 .LVU256
 18318 079a 00       		.uleb128 .LVU285
 18319 079b 00       		.uleb128 .LVU286
 18320              	.LLST49:
 18321 079c 00000000 		.8byte	.LVL35
 18321      00000000 
 18322 07a4 00000000 		.8byte	.LVL43
 18322      00000000 
 18323 07ac 0200     		.2byte	0x2
 18324 07ae 34       		.byte	0x34
 18325 07af 9F       		.byte	0x9f
 18326 07b0 00000000 		.8byte	.LVL50
 18326      00000000 
 18327 07b8 00000000 		.8byte	.LVL52
 18327      00000000 
 18328 07c0 0200     		.2byte	0x2
 18329 07c2 34       		.byte	0x34
 18330 07c3 9F       		.byte	0x9f
 18331 07c4 00000000 		.8byte	.LVL61
 18331      00000000 
 18332 07cc 00000000 		.8byte	.LVL62
 18332      00000000 
 18333 07d4 0200     		.2byte	0x2
 18334 07d6 34       		.byte	0x34
 18335 07d7 9F       		.byte	0x9f
 18336 07d8 00000000 		.8byte	0
 18336      00000000 
 18337 07e0 00000000 		.8byte	0
 18337      00000000 
 18338              	.LVUS50:
 18339 07e8 03       		.uleb128 .LVU190
 18340 07e9 00       		.uleb128 .LVU218
 18341 07ea 00       		.uleb128 .LVU252
 18342 07eb 00       		.uleb128 .LVU256
 18343 07ec 00       		.uleb128 .LVU285
 18344 07ed 00       		.uleb128 .LVU286
 18345              	.LLST50:
 18346 07ee 00000000 		.8byte	.LVL35
 18346      00000000 
 18347 07f6 00000000 		.8byte	.LVL43
 18347      00000000 
 18348 07fe 0200     		.2byte	0x2
 18349 0800 40       		.byte	0x40
 18350 0801 9F       		.byte	0x9f
 18351 0802 00000000 		.8byte	.LVL50
 18351      00000000 
AARCH64 GAS  obj/extInstr.s 			page 539


 18352 080a 00000000 		.8byte	.LVL52
 18352      00000000 
 18353 0812 0200     		.2byte	0x2
 18354 0814 40       		.byte	0x40
 18355 0815 9F       		.byte	0x9f
 18356 0816 00000000 		.8byte	.LVL61
 18356      00000000 
 18357 081e 00000000 		.8byte	.LVL62
 18357      00000000 
 18358 0826 0200     		.2byte	0x2
 18359 0828 40       		.byte	0x40
 18360 0829 9F       		.byte	0x9f
 18361 082a 00000000 		.8byte	0
 18361      00000000 
 18362 0832 00000000 		.8byte	0
 18362      00000000 
 18363              	.LVUS51:
 18364 083a 03       		.uleb128 .LVU190
 18365 083b 00       		.uleb128 .LVU218
 18366 083c 00       		.uleb128 .LVU252
 18367 083d 00       		.uleb128 .LVU256
 18368 083e 00       		.uleb128 .LVU285
 18369 083f 00       		.uleb128 .LVU286
 18370              	.LLST51:
 18371 0840 00000000 		.8byte	.LVL35
 18371      00000000 
 18372 0848 00000000 		.8byte	.LVL43
 18372      00000000 
 18373 0850 0A00     		.2byte	0xa
 18374 0852 03       		.byte	0x3
 18375 0853 00000000 		.8byte	y
 18375      00000000 
 18376 085b 9F       		.byte	0x9f
 18377 085c 00000000 		.8byte	.LVL50
 18377      00000000 
 18378 0864 00000000 		.8byte	.LVL52
 18378      00000000 
 18379 086c 0A00     		.2byte	0xa
 18380 086e 03       		.byte	0x3
 18381 086f 00000000 		.8byte	y
 18381      00000000 
 18382 0877 9F       		.byte	0x9f
 18383 0878 00000000 		.8byte	.LVL61
 18383      00000000 
 18384 0880 00000000 		.8byte	.LVL62
 18384      00000000 
 18385 0888 0A00     		.2byte	0xa
 18386 088a 03       		.byte	0x3
 18387 088b 00000000 		.8byte	y
 18387      00000000 
 18388 0893 9F       		.byte	0x9f
 18389 0894 00000000 		.8byte	0
 18389      00000000 
 18390 089c 00000000 		.8byte	0
 18390      00000000 
 18391              	.LVUS52:
 18392 08a4 00       		.uleb128 .LVU192
AARCH64 GAS  obj/extInstr.s 			page 540


 18393 08a5 01       		.uleb128 .LVU193
 18394 08a6 01       		.uleb128 .LVU193
 18395 08a7 00       		.uleb128 .LVU211
 18396 08a8 00       		.uleb128 .LVU211
 18397 08a9 00       		.uleb128 .LVU212
 18398 08aa 00       		.uleb128 .LVU212
 18399 08ab 00       		.uleb128 .LVU218
 18400 08ac 00       		.uleb128 .LVU252
 18401 08ad 00       		.uleb128 .LVU256
 18402              	.LLST52:
 18403 08ae 00000000 		.8byte	.LVL36
 18403      00000000 
 18404 08b6 00000000 		.8byte	.LVL36
 18404      00000000 
 18405 08be 0200     		.2byte	0x2
 18406 08c0 30       		.byte	0x30
 18407 08c1 9F       		.byte	0x9f
 18408 08c2 00000000 		.8byte	.LVL36
 18408      00000000 
 18409 08ca 00000000 		.8byte	.LVL39
 18409      00000000 
 18410 08d2 0100     		.2byte	0x1
 18411 08d4 64       		.byte	0x64
 18412 08d5 00000000 		.8byte	.LVL39
 18412      00000000 
 18413 08dd 00000000 		.8byte	.LVL40
 18413      00000000 
 18414 08e5 0300     		.2byte	0x3
 18415 08e7 84       		.byte	0x84
 18416 08e8 7F       		.sleb128 -1
 18417 08e9 9F       		.byte	0x9f
 18418 08ea 00000000 		.8byte	.LVL40
 18418      00000000 
 18419 08f2 00000000 		.8byte	.LVL43
 18419      00000000 
 18420 08fa 0100     		.2byte	0x1
 18421 08fc 64       		.byte	0x64
 18422 08fd 00000000 		.8byte	.LVL50
 18422      00000000 
 18423 0905 00000000 		.8byte	.LVL52
 18423      00000000 
 18424 090d 0300     		.2byte	0x3
 18425 090f 84       		.byte	0x84
 18426 0910 7F       		.sleb128 -1
 18427 0911 9F       		.byte	0x9f
 18428 0912 00000000 		.8byte	0
 18428      00000000 
 18429 091a 00000000 		.8byte	0
 18429      00000000 
 18430              	.LVUS53:
 18431 0922 03       		.uleb128 .LVU195
 18432 0923 01       		.uleb128 .LVU206
 18433              	.LLST53:
 18434 0924 00000000 		.8byte	.LVL36
 18434      00000000 
 18435 092c 00000000 		.8byte	.LVL37
 18435      00000000 
AARCH64 GAS  obj/extInstr.s 			page 541


 18436 0934 0100     		.2byte	0x1
 18437 0936 63       		.byte	0x63
 18438 0937 00000000 		.8byte	0
 18438      00000000 
 18439 093f 00000000 		.8byte	0
 18439      00000000 
 18440              	.LVUS54:
 18441 0947 04       		.uleb128 .LVU196
 18442 0948 01       		.uleb128 .LVU206
 18443              	.LLST54:
 18444 0949 00000000 		.8byte	.LVL36
 18444      00000000 
 18445 0951 00000000 		.8byte	.LVL37
 18445      00000000 
 18446 0959 0200     		.2byte	0x2
 18447 095b 34       		.byte	0x34
 18448 095c 9F       		.byte	0x9f
 18449 095d 00000000 		.8byte	0
 18449      00000000 
 18450 0965 00000000 		.8byte	0
 18450      00000000 
 18451              	.LVUS55:
 18452 096d 04       		.uleb128 .LVU196
 18453 096e 00       		.uleb128 .LVU205
 18454              	.LLST55:
 18455 096f 00000000 		.8byte	.LVL36
 18455      00000000 
 18456 0977 00000000 		.8byte	.LVL37
 18456      00000000 
 18457 097f 0E00     		.2byte	0xe
 18458 0981 91       		.byte	0x91
 18459 0982 00       		.sleb128 0
 18460 0983 83       		.byte	0x83
 18461 0984 00       		.sleb128 0
 18462 0985 06       		.byte	0x6
 18463 0986 48       		.byte	0x48
 18464 0987 1C       		.byte	0x1c
 18465 0988 06       		.byte	0x6
 18466 0989 22       		.byte	0x22
 18467 098a 0A       		.byte	0xa
 18468 098b 7801     		.2byte	0x178
 18469 098d 1C       		.byte	0x1c
 18470 098e 9F       		.byte	0x9f
 18471 098f 00000000 		.8byte	0
 18471      00000000 
 18472 0997 00000000 		.8byte	0
 18472      00000000 
 18473              	.LVUS56:
 18474 099f 06       		.uleb128 .LVU198
 18475 09a0 00       		.uleb128 .LVU205
 18476              	.LLST56:
 18477 09a1 00000000 		.8byte	.LVL36
 18477      00000000 
 18478 09a9 00000000 		.8byte	.LVL37
 18478      00000000 
 18479 09b1 0D00     		.2byte	0xd
 18480 09b3 91       		.byte	0x91
AARCH64 GAS  obj/extInstr.s 			page 542


 18481 09b4 00       		.sleb128 0
 18482 09b5 83       		.byte	0x83
 18483 09b6 00       		.sleb128 0
 18484 09b7 06       		.byte	0x6
 18485 09b8 48       		.byte	0x48
 18486 09b9 1C       		.byte	0x1c
 18487 09ba 06       		.byte	0x6
 18488 09bb 22       		.byte	0x22
 18489 09bc 0A       		.byte	0xa
 18490 09bd 6801     		.2byte	0x168
 18491 09bf 1C       		.byte	0x1c
 18492 09c0 00000000 		.8byte	0
 18492      00000000 
 18493 09c8 00000000 		.8byte	0
 18493      00000000 
 18494              	.LVUS57:
 18495 09d0 00       		.uleb128 .LVU252
 18496 09d1 00       		.uleb128 .LVU256
 18497              	.LLST57:
 18498 09d2 00000000 		.8byte	.LVL50
 18498      00000000 
 18499 09da 00000000 		.8byte	.LVL52
 18499      00000000 
 18500 09e2 0A00     		.2byte	0xa
 18501 09e4 03       		.byte	0x3
 18502 09e5 00000000 		.8byte	.LC2
 18502      00000000 
 18503 09ed 9F       		.byte	0x9f
 18504 09ee 00000000 		.8byte	0
 18504      00000000 
 18505 09f6 00000000 		.8byte	0
 18505      00000000 
 18506              	.LVUS58:
 18507 09fe 00       		.uleb128 .LVU252
 18508 09ff 00       		.uleb128 .LVU256
 18509              	.LLST58:
 18510 0a00 00000000 		.8byte	.LVL50
 18510      00000000 
 18511 0a08 00000000 		.8byte	.LVL52
 18511      00000000 
 18512 0a10 0100     		.2byte	0x1
 18513 0a12 63       		.byte	0x63
 18514 0a13 00000000 		.8byte	0
 18514      00000000 
 18515 0a1b 00000000 		.8byte	0
 18515      00000000 
 18516              	.LVUS59:
 18517 0a23 01       		.uleb128 .LVU206
 18518 0a24 00       		.uleb128 .LVU209
 18519              	.LLST59:
 18520 0a25 00000000 		.8byte	.LVL37
 18520      00000000 
 18521 0a2d 00000000 		.8byte	.LVL38-1
 18521      00000000 
 18522 0a35 1800     		.2byte	0x18
 18523 0a37 84       		.byte	0x84
 18524 0a38 00       		.sleb128 0
AARCH64 GAS  obj/extInstr.s 			page 543


 18525 0a39 08       		.byte	0x8
 18526 0a3a 20       		.byte	0x20
 18527 0a3b 24       		.byte	0x24
 18528 0a3c 08       		.byte	0x8
 18529 0a3d 20       		.byte	0x20
 18530 0a3e 26       		.byte	0x26
 18531 0a3f 03       		.byte	0x3
 18532 0a40 00000000 		.8byte	y
 18532      00000000 
 18533 0a48 22       		.byte	0x22
 18534 0a49 94       		.byte	0x94
 18535 0a4a 01       		.byte	0x1
 18536 0a4b 08       		.byte	0x8
 18537 0a4c FF       		.byte	0xff
 18538 0a4d 1A       		.byte	0x1a
 18539 0a4e 9F       		.byte	0x9f
 18540 0a4f 00000000 		.8byte	0
 18540      00000000 
 18541 0a57 00000000 		.8byte	0
 18541      00000000 
 18542              	.LVUS60:
 18543 0a5f 01       		.uleb128 .LVU206
 18544 0a60 00       		.uleb128 .LVU209
 18545              	.LLST60:
 18546 0a61 00000000 		.8byte	.LVL37
 18546      00000000 
 18547 0a69 00000000 		.8byte	.LVL38
 18547      00000000 
 18548 0a71 0100     		.2byte	0x1
 18549 0a73 63       		.byte	0x63
 18550 0a74 00000000 		.8byte	0
 18550      00000000 
 18551 0a7c 00000000 		.8byte	0
 18551      00000000 
 18552              	.LVUS61:
 18553 0a84 00       		.uleb128 .LVU213
 18554 0a85 00       		.uleb128 .LVU216
 18555              	.LLST61:
 18556 0a86 00000000 		.8byte	.LVL41
 18556      00000000 
 18557 0a8e 00000000 		.8byte	.LVL42
 18557      00000000 
 18558 0a96 0100     		.2byte	0x1
 18559 0a98 63       		.byte	0x63
 18560 0a99 00000000 		.8byte	0
 18560      00000000 
 18561 0aa1 00000000 		.8byte	0
 18561      00000000 
 18562              	.LVUS62:
 18563 0aa9 01       		.uleb128 .LVU173
 18564 0aaa 00       		.uleb128 .LVU178
 18565              	.LLST62:
 18566 0aab 00000000 		.8byte	.LVL32
 18566      00000000 
 18567 0ab3 00000000 		.8byte	.LVL33
 18567      00000000 
 18568 0abb 0A00     		.2byte	0xa
AARCH64 GAS  obj/extInstr.s 			page 544


 18569 0abd 03       		.byte	0x3
 18570 0abe 00000000 		.8byte	.LC3
 18570      00000000 
 18571 0ac6 9F       		.byte	0x9f
 18572 0ac7 00000000 		.8byte	0
 18572      00000000 
 18573 0acf 00000000 		.8byte	0
 18573      00000000 
 18574              	.LVUS63:
 18575 0ad7 02       		.uleb128 .LVU183
 18576 0ad8 00       		.uleb128 .LVU187
 18577              	.LLST63:
 18578 0ad9 00000000 		.8byte	.LVL34
 18578      00000000 
 18579 0ae1 00000000 		.8byte	.LVL35
 18579      00000000 
 18580 0ae9 0A00     		.2byte	0xa
 18581 0aeb 03       		.byte	0x3
 18582 0aec 00000000 		.8byte	.LC4
 18582      00000000 
 18583 0af4 9F       		.byte	0x9f
 18584 0af5 00000000 		.8byte	0
 18584      00000000 
 18585 0afd 00000000 		.8byte	0
 18585      00000000 
 18586              	.LVUS64:
 18587 0b05 00       		.uleb128 .LVU218
 18588 0b06 00       		.uleb128 .LVU226
 18589              	.LLST64:
 18590 0b07 00000000 		.8byte	.LVL43
 18590      00000000 
 18591 0b0f 00000000 		.8byte	.LVL44
 18591      00000000 
 18592 0b17 0100     		.2byte	0x1
 18593 0b19 6B       		.byte	0x6b
 18594 0b1a 00000000 		.8byte	0
 18594      00000000 
 18595 0b22 00000000 		.8byte	0
 18595      00000000 
 18596              	.LVUS65:
 18597 0b2a 02       		.uleb128 .LVU220
 18598 0b2b 04       		.uleb128 .LVU222
 18599              	.LLST65:
 18600 0b2c 00000000 		.8byte	.LVL43
 18600      00000000 
 18601 0b34 00000000 		.8byte	.LVL43
 18601      00000000 
 18602 0b3c 0100     		.2byte	0x1
 18603 0b3e 6B       		.byte	0x6b
 18604 0b3f 00000000 		.8byte	0
 18604      00000000 
 18605 0b47 00000000 		.8byte	0
 18605      00000000 
 18606              	.LVUS66:
 18607 0b4f 03       		.uleb128 .LVU221
 18608 0b50 04       		.uleb128 .LVU222
 18609              	.LLST66:
AARCH64 GAS  obj/extInstr.s 			page 545


 18610 0b51 00000000 		.8byte	.LVL43
 18610      00000000 
 18611 0b59 00000000 		.8byte	.LVL43
 18611      00000000 
 18612 0b61 0100     		.2byte	0x1
 18613 0b63 6B       		.byte	0x6b
 18614 0b64 00000000 		.8byte	0
 18614      00000000 
 18615 0b6c 00000000 		.8byte	0
 18615      00000000 
 18616              	.LVUS67:
 18617 0b74 04       		.uleb128 .LVU222
 18618 0b75 06       		.uleb128 .LVU224
 18619              	.LLST67:
 18620 0b76 00000000 		.8byte	.LVL43
 18620      00000000 
 18621 0b7e 00000000 		.8byte	.LVL43
 18621      00000000 
 18622 0b86 0100     		.2byte	0x1
 18623 0b88 6B       		.byte	0x6b
 18624 0b89 00000000 		.8byte	0
 18624      00000000 
 18625 0b91 00000000 		.8byte	0
 18625      00000000 
 18626              	.LVUS68:
 18627 0b99 00       		.uleb128 .LVU226
 18628 0b9a 00       		.uleb128 .LVU229
 18629              	.LLST68:
 18630 0b9b 00000000 		.8byte	.LVL44
 18630      00000000 
 18631 0ba3 00000000 		.8byte	.LVL45-1
 18631      00000000 
 18632 0bab 0100     		.2byte	0x1
 18633 0bad 50       		.byte	0x50
 18634 0bae 00000000 		.8byte	0
 18634      00000000 
 18635 0bb6 00000000 		.8byte	0
 18635      00000000 
 18636              	.LVUS69:
 18637 0bbe 00       		.uleb128 .LVU229
 18638 0bbf 04       		.uleb128 .LVU249
 18639              	.LLST69:
 18640 0bc0 00000000 		.8byte	.LVL45
 18640      00000000 
 18641 0bc8 00000000 		.8byte	.LVL49
 18641      00000000 
 18642 0bd0 0100     		.2byte	0x1
 18643 0bd2 6B       		.byte	0x6b
 18644 0bd3 00000000 		.8byte	0
 18644      00000000 
 18645 0bdb 00000000 		.8byte	0
 18645      00000000 
 18646              	.LVUS70:
 18647 0be3 02       		.uleb128 .LVU231
 18648 0be4 00       		.uleb128 .LVU245
 18649              	.LLST70:
 18650 0be5 00000000 		.8byte	.LVL45
AARCH64 GAS  obj/extInstr.s 			page 546


 18650      00000000 
 18651 0bed 00000000 		.8byte	.LVL49
 18651      00000000 
 18652 0bf5 0100     		.2byte	0x1
 18653 0bf7 6B       		.byte	0x6b
 18654 0bf8 00000000 		.8byte	0
 18654      00000000 
 18655 0c00 00000000 		.8byte	0
 18655      00000000 
 18656              	.LVUS71:
 18657 0c08 03       		.uleb128 .LVU232
 18658 0c09 02       		.uleb128 .LVU237
 18659              	.LLST71:
 18660 0c0a 00000000 		.8byte	.LVL45
 18660      00000000 
 18661 0c12 00000000 		.8byte	.LVL46
 18661      00000000 
 18662 0c1a 0100     		.2byte	0x1
 18663 0c1c 6B       		.byte	0x6b
 18664 0c1d 00000000 		.8byte	0
 18664      00000000 
 18665 0c25 00000000 		.8byte	0
 18665      00000000 
 18666              	.LVUS72:
 18667 0c2d 04       		.uleb128 .LVU233
 18668 0c2e 00       		.uleb128 .LVU235
 18669              	.LLST72:
 18670 0c2f 00000000 		.8byte	.LVL45
 18670      00000000 
 18671 0c37 00000000 		.8byte	.LVL46
 18671      00000000 
 18672 0c3f 0100     		.2byte	0x1
 18673 0c41 6B       		.byte	0x6b
 18674 0c42 00000000 		.8byte	0
 18674      00000000 
 18675 0c4a 00000000 		.8byte	0
 18675      00000000 
 18676              	.LVUS73:
 18677 0c52 00       		.uleb128 .LVU235
 18678 0c53 02       		.uleb128 .LVU237
 18679              	.LLST73:
 18680 0c54 00000000 		.8byte	.LVL46
 18680      00000000 
 18681 0c5c 00000000 		.8byte	.LVL46
 18681      00000000 
 18682 0c64 0100     		.2byte	0x1
 18683 0c66 6B       		.byte	0x6b
 18684 0c67 00000000 		.8byte	0
 18684      00000000 
 18685 0c6f 00000000 		.8byte	0
 18685      00000000 
 18686              	.LVUS74:
 18687 0c77 00       		.uleb128 .LVU239
 18688 0c78 00       		.uleb128 .LVU245
 18689              	.LLST74:
 18690 0c79 00000000 		.8byte	.LVL47
 18690      00000000 
AARCH64 GAS  obj/extInstr.s 			page 547


 18691 0c81 00000000 		.8byte	.LVL49-1
 18691      00000000 
 18692 0c89 0200     		.2byte	0x2
 18693 0c8b 89       		.byte	0x89
 18694 0c8c 00       		.sleb128 0
 18695 0c8d 00000000 		.8byte	0
 18695      00000000 
 18696 0c95 00000000 		.8byte	0
 18696      00000000 
 18697              	.LVUS75:
 18698 0c9d 00       		.uleb128 .LVU239
 18699 0c9e 00       		.uleb128 .LVU245
 18700              	.LLST75:
 18701 0c9f 00000000 		.8byte	.LVL47
 18701      00000000 
 18702 0ca7 00000000 		.8byte	.LVL49
 18702      00000000 
 18703 0caf 0100     		.2byte	0x1
 18704 0cb1 6B       		.byte	0x6b
 18705 0cb2 00000000 		.8byte	0
 18705      00000000 
 18706 0cba 00000000 		.8byte	0
 18706      00000000 
 18707              	.LVUS76:
 18708 0cc2 01       		.uleb128 .LVU240
 18709 0cc3 00       		.uleb128 .LVU244
 18710 0cc4 00       		.uleb128 .LVU244
 18711 0cc5 00       		.uleb128 .LVU245
 18712              	.LLST76:
 18713 0cc6 00000000 		.8byte	.LVL47
 18713      00000000 
 18714 0cce 00000000 		.8byte	.LVL48
 18714      00000000 
 18715 0cd6 0600     		.2byte	0x6
 18716 0cd8 89       		.byte	0x89
 18717 0cd9 00       		.sleb128 0
 18718 0cda 06       		.byte	0x6
 18719 0cdb 23       		.byte	0x23
 18720 0cdc 01       		.uleb128 0x1
 18721 0cdd 9F       		.byte	0x9f
 18722 0cde 00000000 		.8byte	.LVL48
 18722      00000000 
 18723 0ce6 00000000 		.8byte	.LVL49-1
 18723      00000000 
 18724 0cee 0100     		.2byte	0x1
 18725 0cf0 51       		.byte	0x51
 18726 0cf1 00000000 		.8byte	0
 18726      00000000 
 18727 0cf9 00000000 		.8byte	0
 18727      00000000 
 18728              	.LVUS77:
 18729 0d01 01       		.uleb128 .LVU240
 18730 0d02 00       		.uleb128 .LVU245
 18731              	.LLST77:
 18732 0d03 00000000 		.8byte	.LVL47
 18732      00000000 
 18733 0d0b 00000000 		.8byte	.LVL49-1
AARCH64 GAS  obj/extInstr.s 			page 548


 18733      00000000 
 18734 0d13 0100     		.2byte	0x1
 18735 0d15 50       		.byte	0x50
 18736 0d16 00000000 		.8byte	0
 18736      00000000 
 18737 0d1e 00000000 		.8byte	0
 18737      00000000 
 18738              	.LVUS78:
 18739 0d26 01       		.uleb128 .LVU240
 18740 0d27 00       		.uleb128 .LVU245
 18741              	.LLST78:
 18742 0d28 00000000 		.8byte	.LVL47
 18742      00000000 
 18743 0d30 00000000 		.8byte	.LVL49
 18743      00000000 
 18744 0d38 0100     		.2byte	0x1
 18745 0d3a 6B       		.byte	0x6b
 18746 0d3b 00000000 		.8byte	0
 18746      00000000 
 18747 0d43 00000000 		.8byte	0
 18747      00000000 
 18748              	.LVUS79:
 18749 0d4b 02       		.uleb128 .LVU241
 18750 0d4c 00       		.uleb128 .LVU244
 18751 0d4d 00       		.uleb128 .LVU244
 18752 0d4e 00       		.uleb128 .LVU245
 18753              	.LLST79:
 18754 0d4f 00000000 		.8byte	.LVL47
 18754      00000000 
 18755 0d57 00000000 		.8byte	.LVL48
 18755      00000000 
 18756 0d5f 0600     		.2byte	0x6
 18757 0d61 89       		.byte	0x89
 18758 0d62 00       		.sleb128 0
 18759 0d63 06       		.byte	0x6
 18760 0d64 23       		.byte	0x23
 18761 0d65 01       		.uleb128 0x1
 18762 0d66 9F       		.byte	0x9f
 18763 0d67 00000000 		.8byte	.LVL48
 18763      00000000 
 18764 0d6f 00000000 		.8byte	.LVL49-1
 18764      00000000 
 18765 0d77 0100     		.2byte	0x1
 18766 0d79 51       		.byte	0x51
 18767 0d7a 00000000 		.8byte	0
 18767      00000000 
 18768 0d82 00000000 		.8byte	0
 18768      00000000 
 18769              	.LVUS80:
 18770 0d8a 02       		.uleb128 .LVU241
 18771 0d8b 00       		.uleb128 .LVU245
 18772              	.LLST80:
 18773 0d8c 00000000 		.8byte	.LVL47
 18773      00000000 
 18774 0d94 00000000 		.8byte	.LVL49-1
 18774      00000000 
 18775 0d9c 0100     		.2byte	0x1
AARCH64 GAS  obj/extInstr.s 			page 549


 18776 0d9e 50       		.byte	0x50
 18777 0d9f 00000000 		.8byte	0
 18777      00000000 
 18778 0da7 00000000 		.8byte	0
 18778      00000000 
 18779              	.LVUS81:
 18780 0daf 02       		.uleb128 .LVU241
 18781 0db0 00       		.uleb128 .LVU245
 18782              	.LLST81:
 18783 0db1 00000000 		.8byte	.LVL47
 18783      00000000 
 18784 0db9 00000000 		.8byte	.LVL49
 18784      00000000 
 18785 0dc1 0100     		.2byte	0x1
 18786 0dc3 6B       		.byte	0x6b
 18787 0dc4 00000000 		.8byte	0
 18787      00000000 
 18788 0dcc 00000000 		.8byte	0
 18788      00000000 
 18789              	.LVUS82:
 18790 0dd4 00       		.uleb128 .LVU245
 18791 0dd5 04       		.uleb128 .LVU249
 18792              	.LLST82:
 18793 0dd6 00000000 		.8byte	.LVL49
 18793      00000000 
 18794 0dde 00000000 		.8byte	.LVL49
 18794      00000000 
 18795 0de6 0100     		.2byte	0x1
 18796 0de8 6B       		.byte	0x6b
 18797 0de9 00000000 		.8byte	0
 18797      00000000 
 18798 0df1 00000000 		.8byte	0
 18798      00000000 
 18799              	.LVUS83:
 18800 0df9 02       		.uleb128 .LVU247
 18801 0dfa 04       		.uleb128 .LVU249
 18802              	.LLST83:
 18803 0dfb 00000000 		.8byte	.LVL49
 18803      00000000 
 18804 0e03 00000000 		.8byte	.LVL49
 18804      00000000 
 18805 0e0b 0100     		.2byte	0x1
 18806 0e0d 6B       		.byte	0x6b
 18807 0e0e 00000000 		.8byte	0
 18807      00000000 
 18808 0e16 00000000 		.8byte	0
 18808      00000000 
 18809              	.LVUS84:
 18810 0e1e 03       		.uleb128 .LVU248
 18811 0e1f 04       		.uleb128 .LVU249
 18812              	.LLST84:
 18813 0e20 00000000 		.8byte	.LVL49
 18813      00000000 
 18814 0e28 00000000 		.8byte	.LVL49
 18814      00000000 
 18815 0e30 0100     		.2byte	0x1
 18816 0e32 6B       		.byte	0x6b
AARCH64 GAS  obj/extInstr.s 			page 550


 18817 0e33 00000000 		.8byte	0
 18817      00000000 
 18818 0e3b 00000000 		.8byte	0
 18818      00000000 
 18819              	.LVUS85:
 18820 0e43 00       		.uleb128 .LVU264
 18821 0e44 00       		.uleb128 .LVU273
 18822              	.LLST85:
 18823 0e45 00000000 		.8byte	.LVL57
 18823      00000000 
 18824 0e4d 00000000 		.8byte	.LVL58
 18824      00000000 
 18825 0e55 0100     		.2byte	0x1
 18826 0e57 6B       		.byte	0x6b
 18827 0e58 00000000 		.8byte	0
 18827      00000000 
 18828 0e60 00000000 		.8byte	0
 18828      00000000 
 18829              	.LVUS86:
 18830 0e68 02       		.uleb128 .LVU266
 18831 0e69 00       		.uleb128 .LVU273
 18832              	.LLST86:
 18833 0e6a 00000000 		.8byte	.LVL57
 18833      00000000 
 18834 0e72 00000000 		.8byte	.LVL58
 18834      00000000 
 18835 0e7a 0100     		.2byte	0x1
 18836 0e7c 6B       		.byte	0x6b
 18837 0e7d 00000000 		.8byte	0
 18837      00000000 
 18838 0e85 00000000 		.8byte	0
 18838      00000000 
 18839              	.LVUS87:
 18840 0e8d 03       		.uleb128 .LVU267
 18841 0e8e 07       		.uleb128 .LVU271
 18842              	.LLST87:
 18843 0e8f 00000000 		.8byte	.LVL57
 18843      00000000 
 18844 0e97 00000000 		.8byte	.LVL57
 18844      00000000 
 18845 0e9f 0100     		.2byte	0x1
 18846 0ea1 6B       		.byte	0x6b
 18847 0ea2 00000000 		.8byte	0
 18847      00000000 
 18848 0eaa 00000000 		.8byte	0
 18848      00000000 
 18849              	.LVUS88:
 18850 0eb2 04       		.uleb128 .LVU268
 18851 0eb3 05       		.uleb128 .LVU269
 18852              	.LLST88:
 18853 0eb4 00000000 		.8byte	.LVL57
 18853      00000000 
 18854 0ebc 00000000 		.8byte	.LVL57
 18854      00000000 
 18855 0ec4 0100     		.2byte	0x1
 18856 0ec6 6B       		.byte	0x6b
 18857 0ec7 00000000 		.8byte	0
AARCH64 GAS  obj/extInstr.s 			page 551


 18857      00000000 
 18858 0ecf 00000000 		.8byte	0
 18858      00000000 
 18859              	.LVUS89:
 18860 0ed7 05       		.uleb128 .LVU269
 18861 0ed8 07       		.uleb128 .LVU271
 18862              	.LLST89:
 18863 0ed9 00000000 		.8byte	.LVL57
 18863      00000000 
 18864 0ee1 00000000 		.8byte	.LVL57
 18864      00000000 
 18865 0ee9 0100     		.2byte	0x1
 18866 0eeb 6B       		.byte	0x6b
 18867 0eec 00000000 		.8byte	0
 18867      00000000 
 18868 0ef4 00000000 		.8byte	0
 18868      00000000 
 18869              	.LVUS90:
 18870 0efc 00       		.uleb128 .LVU273
 18871 0efd 00       		.uleb128 .LVU279
 18872              	.LLST90:
 18873 0efe 00000000 		.8byte	.LVL58
 18873      00000000 
 18874 0f06 00000000 		.8byte	.LVL60-1
 18874      00000000 
 18875 0f0e 0300     		.2byte	0x3
 18876 0f10 91       		.byte	0x91
 18877 0f11 F87C     		.sleb128 -392
 18878 0f13 00000000 		.8byte	0
 18878      00000000 
 18879 0f1b 00000000 		.8byte	0
 18879      00000000 
 18880              	.LVUS91:
 18881 0f23 00       		.uleb128 .LVU273
 18882 0f24 00       		.uleb128 .LVU279
 18883              	.LLST91:
 18884 0f25 00000000 		.8byte	.LVL58
 18884      00000000 
 18885 0f2d 00000000 		.8byte	.LVL60
 18885      00000000 
 18886 0f35 0100     		.2byte	0x1
 18887 0f37 6B       		.byte	0x6b
 18888 0f38 00000000 		.8byte	0
 18888      00000000 
 18889 0f40 00000000 		.8byte	0
 18889      00000000 
 18890              	.LVUS92:
 18891 0f48 01       		.uleb128 .LVU274
 18892 0f49 00       		.uleb128 .LVU278
 18893 0f4a 00       		.uleb128 .LVU278
 18894 0f4b 00       		.uleb128 .LVU279
 18895              	.LLST92:
 18896 0f4c 00000000 		.8byte	.LVL58
 18896      00000000 
 18897 0f54 00000000 		.8byte	.LVL59
 18897      00000000 
 18898 0f5c 0700     		.2byte	0x7
AARCH64 GAS  obj/extInstr.s 			page 552


 18899 0f5e 91       		.byte	0x91
 18900 0f5f F87C     		.sleb128 -392
 18901 0f61 06       		.byte	0x6
 18902 0f62 23       		.byte	0x23
 18903 0f63 01       		.uleb128 0x1
 18904 0f64 9F       		.byte	0x9f
 18905 0f65 00000000 		.8byte	.LVL59
 18905      00000000 
 18906 0f6d 00000000 		.8byte	.LVL60-1
 18906      00000000 
 18907 0f75 0100     		.2byte	0x1
 18908 0f77 51       		.byte	0x51
 18909 0f78 00000000 		.8byte	0
 18909      00000000 
 18910 0f80 00000000 		.8byte	0
 18910      00000000 
 18911              	.LVUS93:
 18912 0f88 01       		.uleb128 .LVU274
 18913 0f89 00       		.uleb128 .LVU279
 18914              	.LLST93:
 18915 0f8a 00000000 		.8byte	.LVL58
 18915      00000000 
 18916 0f92 00000000 		.8byte	.LVL60-1
 18916      00000000 
 18917 0f9a 0100     		.2byte	0x1
 18918 0f9c 52       		.byte	0x52
 18919 0f9d 00000000 		.8byte	0
 18919      00000000 
 18920 0fa5 00000000 		.8byte	0
 18920      00000000 
 18921              	.LVUS94:
 18922 0fad 01       		.uleb128 .LVU274
 18923 0fae 00       		.uleb128 .LVU279
 18924              	.LLST94:
 18925 0faf 00000000 		.8byte	.LVL58
 18925      00000000 
 18926 0fb7 00000000 		.8byte	.LVL60
 18926      00000000 
 18927 0fbf 0100     		.2byte	0x1
 18928 0fc1 6B       		.byte	0x6b
 18929 0fc2 00000000 		.8byte	0
 18929      00000000 
 18930 0fca 00000000 		.8byte	0
 18930      00000000 
 18931              	.LVUS95:
 18932 0fd2 02       		.uleb128 .LVU275
 18933 0fd3 00       		.uleb128 .LVU278
 18934 0fd4 00       		.uleb128 .LVU278
 18935 0fd5 00       		.uleb128 .LVU279
 18936              	.LLST95:
 18937 0fd6 00000000 		.8byte	.LVL58
 18937      00000000 
 18938 0fde 00000000 		.8byte	.LVL59
 18938      00000000 
 18939 0fe6 0700     		.2byte	0x7
 18940 0fe8 91       		.byte	0x91
 18941 0fe9 F87C     		.sleb128 -392
AARCH64 GAS  obj/extInstr.s 			page 553


 18942 0feb 06       		.byte	0x6
 18943 0fec 23       		.byte	0x23
 18944 0fed 01       		.uleb128 0x1
 18945 0fee 9F       		.byte	0x9f
 18946 0fef 00000000 		.8byte	.LVL59
 18946      00000000 
 18947 0ff7 00000000 		.8byte	.LVL60-1
 18947      00000000 
 18948 0fff 0100     		.2byte	0x1
 18949 1001 51       		.byte	0x51
 18950 1002 00000000 		.8byte	0
 18950      00000000 
 18951 100a 00000000 		.8byte	0
 18951      00000000 
 18952              	.LVUS96:
 18953 1012 02       		.uleb128 .LVU275
 18954 1013 00       		.uleb128 .LVU279
 18955              	.LLST96:
 18956 1014 00000000 		.8byte	.LVL58
 18956      00000000 
 18957 101c 00000000 		.8byte	.LVL60-1
 18957      00000000 
 18958 1024 0100     		.2byte	0x1
 18959 1026 52       		.byte	0x52
 18960 1027 00000000 		.8byte	0
 18960      00000000 
 18961 102f 00000000 		.8byte	0
 18961      00000000 
 18962              	.LVUS97:
 18963 1037 02       		.uleb128 .LVU275
 18964 1038 00       		.uleb128 .LVU279
 18965              	.LLST97:
 18966 1039 00000000 		.8byte	.LVL58
 18966      00000000 
 18967 1041 00000000 		.8byte	.LVL60
 18967      00000000 
 18968 1049 0100     		.2byte	0x1
 18969 104b 6B       		.byte	0x6b
 18970 104c 00000000 		.8byte	0
 18970      00000000 
 18971 1054 00000000 		.8byte	0
 18971      00000000 
 18972              	.LVUS98:
 18973 105c 00       		.uleb128 .LVU279
 18974 105d 04       		.uleb128 .LVU283
 18975              	.LLST98:
 18976 105e 00000000 		.8byte	.LVL60
 18976      00000000 
 18977 1066 00000000 		.8byte	.LVL60
 18977      00000000 
 18978 106e 0100     		.2byte	0x1
 18979 1070 6B       		.byte	0x6b
 18980 1071 00000000 		.8byte	0
 18980      00000000 
 18981 1079 00000000 		.8byte	0
 18981      00000000 
 18982              	.LVUS99:
AARCH64 GAS  obj/extInstr.s 			page 554


 18983 1081 02       		.uleb128 .LVU281
 18984 1082 04       		.uleb128 .LVU283
 18985              	.LLST99:
 18986 1083 00000000 		.8byte	.LVL60
 18986      00000000 
 18987 108b 00000000 		.8byte	.LVL60
 18987      00000000 
 18988 1093 0100     		.2byte	0x1
 18989 1095 6B       		.byte	0x6b
 18990 1096 00000000 		.8byte	0
 18990      00000000 
 18991 109e 00000000 		.8byte	0
 18991      00000000 
 18992              	.LVUS100:
 18993 10a6 03       		.uleb128 .LVU282
 18994 10a7 04       		.uleb128 .LVU283
 18995              	.LLST100:
 18996 10a8 00000000 		.8byte	.LVL60
 18996      00000000 
 18997 10b0 00000000 		.8byte	.LVL60
 18997      00000000 
 18998 10b8 0100     		.2byte	0x1
 18999 10ba 6B       		.byte	0x6b
 19000 10bb 00000000 		.8byte	0
 19000      00000000 
 19001 10c3 00000000 		.8byte	0
 19001      00000000 
 19002              	.LVUS101:
 19003 10cb 00       		.uleb128 .LVU290
 19004 10cc 00       		.uleb128 0
 19005              	.LLST101:
 19006 10cd 00000000 		.8byte	.LVL63
 19006      00000000 
 19007 10d5 00000000 		.8byte	.LFE2202
 19007      00000000 
 19008 10dd 0100     		.2byte	0x1
 19009 10df 6B       		.byte	0x6b
 19010 10e0 00000000 		.8byte	0
 19010      00000000 
 19011 10e8 00000000 		.8byte	0
 19011      00000000 
 19012              	.LVUS102:
 19013 10f0 02       		.uleb128 .LVU292
 19014 10f1 00       		.uleb128 0
 19015              	.LLST102:
 19016 10f2 00000000 		.8byte	.LVL63
 19016      00000000 
 19017 10fa 00000000 		.8byte	.LFE2202
 19017      00000000 
 19018 1102 0100     		.2byte	0x1
 19019 1104 6B       		.byte	0x6b
 19020 1105 00000000 		.8byte	0
 19020      00000000 
 19021 110d 00000000 		.8byte	0
 19021      00000000 
 19022              	.LVUS103:
 19023 1115 03       		.uleb128 .LVU293
AARCH64 GAS  obj/extInstr.s 			page 555


 19024 1116 07       		.uleb128 .LVU297
 19025              	.LLST103:
 19026 1117 00000000 		.8byte	.LVL63
 19026      00000000 
 19027 111f 00000000 		.8byte	.LVL63
 19027      00000000 
 19028 1127 0100     		.2byte	0x1
 19029 1129 6B       		.byte	0x6b
 19030 112a 00000000 		.8byte	0
 19030      00000000 
 19031 1132 00000000 		.8byte	0
 19031      00000000 
 19032              	.LVUS104:
 19033 113a 04       		.uleb128 .LVU294
 19034 113b 05       		.uleb128 .LVU295
 19035              	.LLST104:
 19036 113c 00000000 		.8byte	.LVL63
 19036      00000000 
 19037 1144 00000000 		.8byte	.LVL63
 19037      00000000 
 19038 114c 0100     		.2byte	0x1
 19039 114e 6B       		.byte	0x6b
 19040 114f 00000000 		.8byte	0
 19040      00000000 
 19041 1157 00000000 		.8byte	0
 19041      00000000 
 19042              	.LVUS105:
 19043 115f 05       		.uleb128 .LVU295
 19044 1160 07       		.uleb128 .LVU297
 19045              	.LLST105:
 19046 1161 00000000 		.8byte	.LVL63
 19046      00000000 
 19047 1169 00000000 		.8byte	.LVL63
 19047      00000000 
 19048 1171 0100     		.2byte	0x1
 19049 1173 6B       		.byte	0x6b
 19050 1174 00000000 		.8byte	0
 19050      00000000 
 19051 117c 00000000 		.8byte	0
 19051      00000000 
 19052              	.LVUS0:
 19053 1184 00       		.uleb128 0
 19054 1185 00       		.uleb128 .LVU4
 19055 1186 00       		.uleb128 .LVU4
 19056 1187 00       		.uleb128 .LVU18
 19057 1188 00       		.uleb128 .LVU18
 19058 1189 00       		.uleb128 .LVU20
 19059 118a 00       		.uleb128 .LVU20
 19060 118b 00       		.uleb128 0
 19061              	.LLST0:
 19062 118c 00000000 		.8byte	.LVL0
 19062      00000000 
 19063 1194 00000000 		.8byte	.LVL1
 19063      00000000 
 19064 119c 0100     		.2byte	0x1
 19065 119e 50       		.byte	0x50
 19066 119f 00000000 		.8byte	.LVL1
AARCH64 GAS  obj/extInstr.s 			page 556


 19066      00000000 
 19067 11a7 00000000 		.8byte	.LVL7
 19067      00000000 
 19068 11af 0100     		.2byte	0x1
 19069 11b1 63       		.byte	0x63
 19070 11b2 00000000 		.8byte	.LVL7
 19070      00000000 
 19071 11ba 00000000 		.8byte	.LVL8
 19071      00000000 
 19072 11c2 0400     		.2byte	0x4
 19073 11c4 F3       		.byte	0xf3
 19074 11c5 01       		.uleb128 0x1
 19075 11c6 50       		.byte	0x50
 19076 11c7 9F       		.byte	0x9f
 19077 11c8 00000000 		.8byte	.LVL8
 19077      00000000 
 19078 11d0 00000000 		.8byte	.LFE2823
 19078      00000000 
 19079 11d8 0100     		.2byte	0x1
 19080 11da 63       		.byte	0x63
 19081 11db 00000000 		.8byte	0
 19081      00000000 
 19082 11e3 00000000 		.8byte	0
 19082      00000000 
 19083              	.LVUS1:
 19084 11eb 01       		.uleb128 .LVU6
 19085 11ec 00       		.uleb128 .LVU11
 19086 11ed 00       		.uleb128 .LVU11
 19087 11ee 00       		.uleb128 .LVU14
 19088 11ef 00       		.uleb128 .LVU20
 19089 11f0 00       		.uleb128 .LVU24
 19090 11f1 00       		.uleb128 .LVU28
 19091 11f2 00       		.uleb128 .LVU30
 19092              	.LLST1:
 19093 11f3 00000000 		.8byte	.LVL2
 19093      00000000 
 19094 11fb 00000000 		.8byte	.LVL4
 19094      00000000 
 19095 1203 0100     		.2byte	0x1
 19096 1205 50       		.byte	0x50
 19097 1206 00000000 		.8byte	.LVL4
 19097      00000000 
 19098 120e 00000000 		.8byte	.LVL5
 19098      00000000 
 19099 1216 0A00     		.2byte	0xa
 19100 1218 83       		.byte	0x83
 19101 1219 00       		.sleb128 0
 19102 121a 83       		.byte	0x83
 19103 121b 00       		.sleb128 0
 19104 121c 06       		.byte	0x6
 19105 121d 48       		.byte	0x48
 19106 121e 1C       		.byte	0x1c
 19107 121f 06       		.byte	0x6
 19108 1220 22       		.byte	0x22
 19109 1221 9F       		.byte	0x9f
 19110 1222 00000000 		.8byte	.LVL8
 19110      00000000 
AARCH64 GAS  obj/extInstr.s 			page 557


 19111 122a 00000000 		.8byte	.LVL9-1
 19111      00000000 
 19112 1232 0A00     		.2byte	0xa
 19113 1234 83       		.byte	0x83
 19114 1235 00       		.sleb128 0
 19115 1236 83       		.byte	0x83
 19116 1237 00       		.sleb128 0
 19117 1238 06       		.byte	0x6
 19118 1239 48       		.byte	0x48
 19119 123a 1C       		.byte	0x1c
 19120 123b 06       		.byte	0x6
 19121 123c 22       		.byte	0x22
 19122 123d 9F       		.byte	0x9f
 19123 123e 00000000 		.8byte	.LVL12
 19123      00000000 
 19124 1246 00000000 		.8byte	.LVL13-1
 19124      00000000 
 19125 124e 0100     		.2byte	0x1
 19126 1250 50       		.byte	0x50
 19127 1251 00000000 		.8byte	0
 19127      00000000 
 19128 1259 00000000 		.8byte	0
 19128      00000000 
 19129              	.LVUS2:
 19130 1261 00       		.uleb128 .LVU5
 19131 1262 00       		.uleb128 .LVU14
 19132 1263 00       		.uleb128 .LVU20
 19133 1264 00       		.uleb128 0
 19134              	.LLST2:
 19135 1265 00000000 		.8byte	.LVL2
 19135      00000000 
 19136 126d 00000000 		.8byte	.LVL5
 19136      00000000 
 19137 1275 0200     		.2byte	0x2
 19138 1277 3A       		.byte	0x3a
 19139 1278 9F       		.byte	0x9f
 19140 1279 00000000 		.8byte	.LVL8
 19140      00000000 
 19141 1281 00000000 		.8byte	.LFE2823
 19141      00000000 
 19142 1289 0200     		.2byte	0x2
 19143 128b 3A       		.byte	0x3a
 19144 128c 9F       		.byte	0x9f
 19145 128d 00000000 		.8byte	0
 19145      00000000 
 19146 1295 00000000 		.8byte	0
 19146      00000000 
 19147              	.LVUS3:
 19148 129d 01       		.uleb128 .LVU6
 19149 129e 00       		.uleb128 .LVU8
 19150 129f 00       		.uleb128 .LVU28
 19151 12a0 00       		.uleb128 0
 19152              	.LLST3:
 19153 12a1 00000000 		.8byte	.LVL2
 19153      00000000 
 19154 12a9 00000000 		.8byte	.LVL3
 19154      00000000 
AARCH64 GAS  obj/extInstr.s 			page 558


 19155 12b1 0100     		.2byte	0x1
 19156 12b3 64       		.byte	0x64
 19157 12b4 00000000 		.8byte	.LVL12
 19157      00000000 
 19158 12bc 00000000 		.8byte	.LFE2823
 19158      00000000 
 19159 12c4 0100     		.2byte	0x1
 19160 12c6 64       		.byte	0x64
 19161 12c7 00000000 		.8byte	0
 19161      00000000 
 19162 12cf 00000000 		.8byte	0
 19162      00000000 
 19163              	.LVUS4:
 19164 12d7 00       		.uleb128 .LVU8
 19165 12d8 00       		.uleb128 .LVU14
 19166 12d9 00       		.uleb128 .LVU20
 19167 12da 00       		.uleb128 .LVU28
 19168              	.LLST4:
 19169 12db 00000000 		.8byte	.LVL3
 19169      00000000 
 19170 12e3 00000000 		.8byte	.LVL5
 19170      00000000 
 19171 12eb 0200     		.2byte	0x2
 19172 12ed 3A       		.byte	0x3a
 19173 12ee 9F       		.byte	0x9f
 19174 12ef 00000000 		.8byte	.LVL8
 19174      00000000 
 19175 12f7 00000000 		.8byte	.LVL12
 19175      00000000 
 19176 12ff 0200     		.2byte	0x2
 19177 1301 3A       		.byte	0x3a
 19178 1302 9F       		.byte	0x9f
 19179 1303 00000000 		.8byte	0
 19179      00000000 
 19180 130b 00000000 		.8byte	0
 19180      00000000 
 19181              	.LVUS5:
 19182 1313 00       		.uleb128 .LVU8
 19183 1314 00       		.uleb128 .LVU14
 19184 1315 00       		.uleb128 .LVU20
 19185 1316 00       		.uleb128 .LVU28
 19186              	.LLST5:
 19187 1317 00000000 		.8byte	.LVL3
 19187      00000000 
 19188 131f 00000000 		.8byte	.LVL5
 19188      00000000 
 19189 1327 0100     		.2byte	0x1
 19190 1329 64       		.byte	0x64
 19191 132a 00000000 		.8byte	.LVL8
 19191      00000000 
 19192 1332 00000000 		.8byte	.LVL12
 19192      00000000 
 19193 133a 0100     		.2byte	0x1
 19194 133c 64       		.byte	0x64
 19195 133d 00000000 		.8byte	0
 19195      00000000 
 19196 1345 00000000 		.8byte	0
AARCH64 GAS  obj/extInstr.s 			page 559


 19196      00000000 
 19197              	.LVUS6:
 19198 134d 00       		.uleb128 .LVU20
 19199 134e 00       		.uleb128 .LVU27
 19200              	.LLST6:
 19201 134f 00000000 		.8byte	.LVL8
 19201      00000000 
 19202 1357 00000000 		.8byte	.LVL11
 19202      00000000 
 19203 135f 0200     		.2byte	0x2
 19204 1361 3A       		.byte	0x3a
 19205 1362 9F       		.byte	0x9f
 19206 1363 00000000 		.8byte	0
 19206      00000000 
 19207 136b 00000000 		.8byte	0
 19207      00000000 
 19208              	.LVUS7:
 19209 1373 00       		.uleb128 .LVU20
 19210 1374 00       		.uleb128 .LVU27
 19211              	.LLST7:
 19212 1375 00000000 		.8byte	.LVL8
 19212      00000000 
 19213 137d 00000000 		.8byte	.LVL11
 19213      00000000 
 19214 1385 0100     		.2byte	0x1
 19215 1387 64       		.byte	0x64
 19216 1388 00000000 		.8byte	0
 19216      00000000 
 19217 1390 00000000 		.8byte	0
 19217      00000000 
 19218              	.LVUS8:
 19219 1398 00       		.uleb128 .LVU16
 19220 1399 00       		.uleb128 .LVU20
 19221              	.LLST8:
 19222 139a 00000000 		.8byte	.LVL6
 19222      00000000 
 19223 13a2 00000000 		.8byte	.LVL8-1
 19223      00000000 
 19224 13aa 0100     		.2byte	0x1
 19225 13ac 50       		.byte	0x50
 19226 13ad 00000000 		.8byte	0
 19226      00000000 
 19227 13b5 00000000 		.8byte	0
 19227      00000000 
 19228              		.section	.debug_aranges,"",@progbits
 19229 0000 4C000000 		.4byte	0x4c
 19230 0004 0200     		.2byte	0x2
 19231 0006 00000000 		.4byte	.Ldebug_info0
 19232 000a 08       		.byte	0x8
 19233 000b 00       		.byte	0
 19234 000c 0000     		.2byte	0
 19235 000e 0000     		.2byte	0
 19236 0010 00000000 		.8byte	.Ltext0
 19236      00000000 
 19237 0018 6C000000 		.8byte	.Letext0-.Ltext0
 19237      00000000 
 19238 0020 00000000 		.8byte	.LFB2202
AARCH64 GAS  obj/extInstr.s 			page 560


 19238      00000000 
 19239 0028 AC020000 		.8byte	.LFE2202-.LFB2202
 19239      00000000 
 19240 0030 00000000 		.8byte	.LFB2817
 19240      00000000 
 19241 0038 40000000 		.8byte	.LFE2817-.LFB2817
 19241      00000000 
 19242 0040 00000000 		.8byte	0
 19242      00000000 
 19243 0048 00000000 		.8byte	0
 19243      00000000 
 19244              		.section	.debug_ranges,"",@progbits
 19245              	.Ldebug_ranges0:
 19246 0000 00000000 		.8byte	.LBB605
 19246      00000000 
 19247 0008 00000000 		.8byte	.LBE605
 19247      00000000 
 19248 0010 00000000 		.8byte	.LBB619
 19248      00000000 
 19249 0018 00000000 		.8byte	.LBE619
 19249      00000000 
 19250 0020 00000000 		.8byte	0
 19250      00000000 
 19251 0028 00000000 		.8byte	0
 19251      00000000 
 19252 0030 00000000 		.8byte	.LBB606
 19252      00000000 
 19253 0038 00000000 		.8byte	.LBE606
 19253      00000000 
 19254 0040 00000000 		.8byte	.LBB615
 19254      00000000 
 19255 0048 00000000 		.8byte	.LBE615
 19255      00000000 
 19256 0050 00000000 		.8byte	0
 19256      00000000 
 19257 0058 00000000 		.8byte	0
 19257      00000000 
 19258 0060 00000000 		.8byte	.LBB609
 19258      00000000 
 19259 0068 00000000 		.8byte	.LBE609
 19259      00000000 
 19260 0070 00000000 		.8byte	.LBB614
 19260      00000000 
 19261 0078 00000000 		.8byte	.LBE614
 19261      00000000 
 19262 0080 00000000 		.8byte	0
 19262      00000000 
 19263 0088 00000000 		.8byte	0
 19263      00000000 
 19264 0090 00000000 		.8byte	.LBB616
 19264      00000000 
 19265 0098 00000000 		.8byte	.LBE616
 19265      00000000 
 19266 00a0 00000000 		.8byte	.LBB618
 19266      00000000 
 19267 00a8 00000000 		.8byte	.LBE618
 19267      00000000 
AARCH64 GAS  obj/extInstr.s 			page 561


 19268 00b0 00000000 		.8byte	0
 19268      00000000 
 19269 00b8 00000000 		.8byte	0
 19269      00000000 
 19270 00c0 00000000 		.8byte	.LBB748
 19270      00000000 
 19271 00c8 00000000 		.8byte	.LBE748
 19271      00000000 
 19272 00d0 00000000 		.8byte	.LBB811
 19272      00000000 
 19273 00d8 00000000 		.8byte	.LBE811
 19273      00000000 
 19274 00e0 00000000 		.8byte	.LBB812
 19274      00000000 
 19275 00e8 00000000 		.8byte	.LBE812
 19275      00000000 
 19276 00f0 00000000 		.8byte	0
 19276      00000000 
 19277 00f8 00000000 		.8byte	0
 19277      00000000 
 19278 0100 00000000 		.8byte	.LBB751
 19278      00000000 
 19279 0108 00000000 		.8byte	.LBE751
 19279      00000000 
 19280 0110 00000000 		.8byte	.LBB809
 19280      00000000 
 19281 0118 00000000 		.8byte	.LBE809
 19281      00000000 
 19282 0120 00000000 		.8byte	.LBB810
 19282      00000000 
 19283 0128 00000000 		.8byte	.LBE810
 19283      00000000 
 19284 0130 00000000 		.8byte	.LBB820
 19284      00000000 
 19285 0138 00000000 		.8byte	.LBE820
 19285      00000000 
 19286 0140 00000000 		.8byte	.LBB822
 19286      00000000 
 19287 0148 00000000 		.8byte	.LBE822
 19287      00000000 
 19288 0150 00000000 		.8byte	.LBB824
 19288      00000000 
 19289 0158 00000000 		.8byte	.LBE824
 19289      00000000 
 19290 0160 00000000 		.8byte	.LBB825
 19290      00000000 
 19291 0168 00000000 		.8byte	.LBE825
 19291      00000000 
 19292 0170 00000000 		.8byte	.LBB826
 19292      00000000 
 19293 0178 00000000 		.8byte	.LBE826
 19293      00000000 
 19294 0180 00000000 		.8byte	.LBB955
 19294      00000000 
 19295 0188 00000000 		.8byte	.LBE955
 19295      00000000 
 19296 0190 00000000 		.8byte	.LBB956
AARCH64 GAS  obj/extInstr.s 			page 562


 19296      00000000 
 19297 0198 00000000 		.8byte	.LBE956
 19297      00000000 
 19298 01a0 00000000 		.8byte	0
 19298      00000000 
 19299 01a8 00000000 		.8byte	0
 19299      00000000 
 19300 01b0 00000000 		.8byte	.LBB752
 19300      00000000 
 19301 01b8 00000000 		.8byte	.LBE752
 19301      00000000 
 19302 01c0 00000000 		.8byte	.LBB801
 19302      00000000 
 19303 01c8 00000000 		.8byte	.LBE801
 19303      00000000 
 19304 01d0 00000000 		.8byte	.LBB802
 19304      00000000 
 19305 01d8 00000000 		.8byte	.LBE802
 19305      00000000 
 19306 01e0 00000000 		.8byte	.LBB803
 19306      00000000 
 19307 01e8 00000000 		.8byte	.LBE803
 19307      00000000 
 19308 01f0 00000000 		.8byte	.LBB804
 19308      00000000 
 19309 01f8 00000000 		.8byte	.LBE804
 19309      00000000 
 19310 0200 00000000 		.8byte	.LBB805
 19310      00000000 
 19311 0208 00000000 		.8byte	.LBE805
 19311      00000000 
 19312 0210 00000000 		.8byte	.LBB806
 19312      00000000 
 19313 0218 00000000 		.8byte	.LBE806
 19313      00000000 
 19314 0220 00000000 		.8byte	.LBB807
 19314      00000000 
 19315 0228 00000000 		.8byte	.LBE807
 19315      00000000 
 19316 0230 00000000 		.8byte	.LBB808
 19316      00000000 
 19317 0238 00000000 		.8byte	.LBE808
 19317      00000000 
 19318 0240 00000000 		.8byte	0
 19318      00000000 
 19319 0248 00000000 		.8byte	0
 19319      00000000 
 19320 0250 00000000 		.8byte	.LBB754
 19320      00000000 
 19321 0258 00000000 		.8byte	.LBE754
 19321      00000000 
 19322 0260 00000000 		.8byte	.LBB784
 19322      00000000 
 19323 0268 00000000 		.8byte	.LBE784
 19323      00000000 
 19324 0270 00000000 		.8byte	.LBB785
 19324      00000000 
AARCH64 GAS  obj/extInstr.s 			page 563


 19325 0278 00000000 		.8byte	.LBE785
 19325      00000000 
 19326 0280 00000000 		.8byte	.LBB786
 19326      00000000 
 19327 0288 00000000 		.8byte	.LBE786
 19327      00000000 
 19328 0290 00000000 		.8byte	.LBB787
 19328      00000000 
 19329 0298 00000000 		.8byte	.LBE787
 19329      00000000 
 19330 02a0 00000000 		.8byte	.LBB788
 19330      00000000 
 19331 02a8 00000000 		.8byte	.LBE788
 19331      00000000 
 19332 02b0 00000000 		.8byte	.LBB791
 19332      00000000 
 19333 02b8 00000000 		.8byte	.LBE791
 19333      00000000 
 19334 02c0 00000000 		.8byte	.LBB792
 19334      00000000 
 19335 02c8 00000000 		.8byte	.LBE792
 19335      00000000 
 19336 02d0 00000000 		.8byte	0
 19336      00000000 
 19337 02d8 00000000 		.8byte	0
 19337      00000000 
 19338 02e0 00000000 		.8byte	.LBB755
 19338      00000000 
 19339 02e8 00000000 		.8byte	.LBE755
 19339      00000000 
 19340 02f0 00000000 		.8byte	.LBB773
 19340      00000000 
 19341 02f8 00000000 		.8byte	.LBE773
 19341      00000000 
 19342 0300 00000000 		.8byte	.LBB778
 19342      00000000 
 19343 0308 00000000 		.8byte	.LBE778
 19343      00000000 
 19344 0310 00000000 		.8byte	.LBB780
 19344      00000000 
 19345 0318 00000000 		.8byte	.LBE780
 19345      00000000 
 19346 0320 00000000 		.8byte	0
 19346      00000000 
 19347 0328 00000000 		.8byte	0
 19347      00000000 
 19348 0330 00000000 		.8byte	.LBB757
 19348      00000000 
 19349 0338 00000000 		.8byte	.LBE757
 19349      00000000 
 19350 0340 00000000 		.8byte	.LBB762
 19350      00000000 
 19351 0348 00000000 		.8byte	.LBE762
 19351      00000000 
 19352 0350 00000000 		.8byte	.LBB763
 19352      00000000 
 19353 0358 00000000 		.8byte	.LBE763
AARCH64 GAS  obj/extInstr.s 			page 564


 19353      00000000 
 19354 0360 00000000 		.8byte	.LBB764
 19354      00000000 
 19355 0368 00000000 		.8byte	.LBE764
 19355      00000000 
 19356 0370 00000000 		.8byte	0
 19356      00000000 
 19357 0378 00000000 		.8byte	0
 19357      00000000 
 19358 0380 00000000 		.8byte	.LBB768
 19358      00000000 
 19359 0388 00000000 		.8byte	.LBE768
 19359      00000000 
 19360 0390 00000000 		.8byte	.LBB772
 19360      00000000 
 19361 0398 00000000 		.8byte	.LBE772
 19361      00000000 
 19362 03a0 00000000 		.8byte	.LBB782
 19362      00000000 
 19363 03a8 00000000 		.8byte	.LBE782
 19363      00000000 
 19364 03b0 00000000 		.8byte	.LBB783
 19364      00000000 
 19365 03b8 00000000 		.8byte	.LBE783
 19365      00000000 
 19366 03c0 00000000 		.8byte	0
 19366      00000000 
 19367 03c8 00000000 		.8byte	0
 19367      00000000 
 19368 03d0 00000000 		.8byte	.LBB774
 19368      00000000 
 19369 03d8 00000000 		.8byte	.LBE774
 19369      00000000 
 19370 03e0 00000000 		.8byte	.LBB779
 19370      00000000 
 19371 03e8 00000000 		.8byte	.LBE779
 19371      00000000 
 19372 03f0 00000000 		.8byte	.LBB781
 19372      00000000 
 19373 03f8 00000000 		.8byte	.LBE781
 19373      00000000 
 19374 0400 00000000 		.8byte	0
 19374      00000000 
 19375 0408 00000000 		.8byte	0
 19375      00000000 
 19376 0410 00000000 		.8byte	.LBB815
 19376      00000000 
 19377 0418 00000000 		.8byte	.LBE815
 19377      00000000 
 19378 0420 00000000 		.8byte	.LBB819
 19378      00000000 
 19379 0428 00000000 		.8byte	.LBE819
 19379      00000000 
 19380 0430 00000000 		.8byte	.LBB821
 19380      00000000 
 19381 0438 00000000 		.8byte	.LBE821
 19381      00000000 
AARCH64 GAS  obj/extInstr.s 			page 565


 19382 0440 00000000 		.8byte	.LBB823
 19382      00000000 
 19383 0448 00000000 		.8byte	.LBE823
 19383      00000000 
 19384 0450 00000000 		.8byte	0
 19384      00000000 
 19385 0458 00000000 		.8byte	0
 19385      00000000 
 19386 0460 00000000 		.8byte	.LBB844
 19386      00000000 
 19387 0468 00000000 		.8byte	.LBE844
 19387      00000000 
 19388 0470 00000000 		.8byte	.LBB848
 19388      00000000 
 19389 0478 00000000 		.8byte	.LBE848
 19389      00000000 
 19390 0480 00000000 		.8byte	0
 19390      00000000 
 19391 0488 00000000 		.8byte	0
 19391      00000000 
 19392 0490 00000000 		.8byte	.LBB852
 19392      00000000 
 19393 0498 00000000 		.8byte	.LBE852
 19393      00000000 
 19394 04a0 00000000 		.8byte	.LBB912
 19394      00000000 
 19395 04a8 00000000 		.8byte	.LBE912
 19395      00000000 
 19396 04b0 00000000 		.8byte	.LBB921
 19396      00000000 
 19397 04b8 00000000 		.8byte	.LBE921
 19397      00000000 
 19398 04c0 00000000 		.8byte	.LBB923
 19398      00000000 
 19399 04c8 00000000 		.8byte	.LBE923
 19399      00000000 
 19400 04d0 00000000 		.8byte	.LBB925
 19400      00000000 
 19401 04d8 00000000 		.8byte	.LBE925
 19401      00000000 
 19402 04e0 00000000 		.8byte	.LBB926
 19402      00000000 
 19403 04e8 00000000 		.8byte	.LBE926
 19403      00000000 
 19404 04f0 00000000 		.8byte	.LBB927
 19404      00000000 
 19405 04f8 00000000 		.8byte	.LBE927
 19405      00000000 
 19406 0500 00000000 		.8byte	.LBB953
 19406      00000000 
 19407 0508 00000000 		.8byte	.LBE953
 19407      00000000 
 19408 0510 00000000 		.8byte	.LBB954
 19408      00000000 
 19409 0518 00000000 		.8byte	.LBE954
 19409      00000000 
 19410 0520 00000000 		.8byte	.LBB957
AARCH64 GAS  obj/extInstr.s 			page 566


 19410      00000000 
 19411 0528 00000000 		.8byte	.LBE957
 19411      00000000 
 19412 0530 00000000 		.8byte	0
 19412      00000000 
 19413 0538 00000000 		.8byte	0
 19413      00000000 
 19414 0540 00000000 		.8byte	.LBB853
 19414      00000000 
 19415 0548 00000000 		.8byte	.LBE853
 19415      00000000 
 19416 0550 00000000 		.8byte	.LBB902
 19416      00000000 
 19417 0558 00000000 		.8byte	.LBE902
 19417      00000000 
 19418 0560 00000000 		.8byte	.LBB903
 19418      00000000 
 19419 0568 00000000 		.8byte	.LBE903
 19419      00000000 
 19420 0570 00000000 		.8byte	.LBB904
 19420      00000000 
 19421 0578 00000000 		.8byte	.LBE904
 19421      00000000 
 19422 0580 00000000 		.8byte	.LBB905
 19422      00000000 
 19423 0588 00000000 		.8byte	.LBE905
 19423      00000000 
 19424 0590 00000000 		.8byte	.LBB906
 19424      00000000 
 19425 0598 00000000 		.8byte	.LBE906
 19425      00000000 
 19426 05a0 00000000 		.8byte	.LBB907
 19426      00000000 
 19427 05a8 00000000 		.8byte	.LBE907
 19427      00000000 
 19428 05b0 00000000 		.8byte	.LBB908
 19428      00000000 
 19429 05b8 00000000 		.8byte	.LBE908
 19429      00000000 
 19430 05c0 00000000 		.8byte	.LBB909
 19430      00000000 
 19431 05c8 00000000 		.8byte	.LBE909
 19431      00000000 
 19432 05d0 00000000 		.8byte	0
 19432      00000000 
 19433 05d8 00000000 		.8byte	0
 19433      00000000 
 19434 05e0 00000000 		.8byte	.LBB855
 19434      00000000 
 19435 05e8 00000000 		.8byte	.LBE855
 19435      00000000 
 19436 05f0 00000000 		.8byte	.LBB885
 19436      00000000 
 19437 05f8 00000000 		.8byte	.LBE885
 19437      00000000 
 19438 0600 00000000 		.8byte	.LBB886
 19438      00000000 
AARCH64 GAS  obj/extInstr.s 			page 567


 19439 0608 00000000 		.8byte	.LBE886
 19439      00000000 
 19440 0610 00000000 		.8byte	.LBB887
 19440      00000000 
 19441 0618 00000000 		.8byte	.LBE887
 19441      00000000 
 19442 0620 00000000 		.8byte	.LBB888
 19442      00000000 
 19443 0628 00000000 		.8byte	.LBE888
 19443      00000000 
 19444 0630 00000000 		.8byte	.LBB889
 19444      00000000 
 19445 0638 00000000 		.8byte	.LBE889
 19445      00000000 
 19446 0640 00000000 		.8byte	.LBB892
 19446      00000000 
 19447 0648 00000000 		.8byte	.LBE892
 19447      00000000 
 19448 0650 00000000 		.8byte	.LBB893
 19448      00000000 
 19449 0658 00000000 		.8byte	.LBE893
 19449      00000000 
 19450 0660 00000000 		.8byte	0
 19450      00000000 
 19451 0668 00000000 		.8byte	0
 19451      00000000 
 19452 0670 00000000 		.8byte	.LBB856
 19452      00000000 
 19453 0678 00000000 		.8byte	.LBE856
 19453      00000000 
 19454 0680 00000000 		.8byte	.LBB874
 19454      00000000 
 19455 0688 00000000 		.8byte	.LBE874
 19455      00000000 
 19456 0690 00000000 		.8byte	.LBB879
 19456      00000000 
 19457 0698 00000000 		.8byte	.LBE879
 19457      00000000 
 19458 06a0 00000000 		.8byte	.LBB881
 19458      00000000 
 19459 06a8 00000000 		.8byte	.LBE881
 19459      00000000 
 19460 06b0 00000000 		.8byte	0
 19460      00000000 
 19461 06b8 00000000 		.8byte	0
 19461      00000000 
 19462 06c0 00000000 		.8byte	.LBB858
 19462      00000000 
 19463 06c8 00000000 		.8byte	.LBE858
 19463      00000000 
 19464 06d0 00000000 		.8byte	.LBB863
 19464      00000000 
 19465 06d8 00000000 		.8byte	.LBE863
 19465      00000000 
 19466 06e0 00000000 		.8byte	.LBB864
 19466      00000000 
 19467 06e8 00000000 		.8byte	.LBE864
AARCH64 GAS  obj/extInstr.s 			page 568


 19467      00000000 
 19468 06f0 00000000 		.8byte	.LBB865
 19468      00000000 
 19469 06f8 00000000 		.8byte	.LBE865
 19469      00000000 
 19470 0700 00000000 		.8byte	0
 19470      00000000 
 19471 0708 00000000 		.8byte	0
 19471      00000000 
 19472 0710 00000000 		.8byte	.LBB869
 19472      00000000 
 19473 0718 00000000 		.8byte	.LBE869
 19473      00000000 
 19474 0720 00000000 		.8byte	.LBB873
 19474      00000000 
 19475 0728 00000000 		.8byte	.LBE873
 19475      00000000 
 19476 0730 00000000 		.8byte	.LBB883
 19476      00000000 
 19477 0738 00000000 		.8byte	.LBE883
 19477      00000000 
 19478 0740 00000000 		.8byte	.LBB884
 19478      00000000 
 19479 0748 00000000 		.8byte	.LBE884
 19479      00000000 
 19480 0750 00000000 		.8byte	0
 19480      00000000 
 19481 0758 00000000 		.8byte	0
 19481      00000000 
 19482 0760 00000000 		.8byte	.LBB875
 19482      00000000 
 19483 0768 00000000 		.8byte	.LBE875
 19483      00000000 
 19484 0770 00000000 		.8byte	.LBB880
 19484      00000000 
 19485 0778 00000000 		.8byte	.LBE880
 19485      00000000 
 19486 0780 00000000 		.8byte	.LBB882
 19486      00000000 
 19487 0788 00000000 		.8byte	.LBE882
 19487      00000000 
 19488 0790 00000000 		.8byte	0
 19488      00000000 
 19489 0798 00000000 		.8byte	0
 19489      00000000 
 19490 07a0 00000000 		.8byte	.LBB910
 19490      00000000 
 19491 07a8 00000000 		.8byte	.LBE910
 19491      00000000 
 19492 07b0 00000000 		.8byte	.LBB913
 19492      00000000 
 19493 07b8 00000000 		.8byte	.LBE913
 19493      00000000 
 19494 07c0 00000000 		.8byte	0
 19494      00000000 
 19495 07c8 00000000 		.8byte	0
 19495      00000000 
AARCH64 GAS  obj/extInstr.s 			page 569


 19496 07d0 00000000 		.8byte	.LBB916
 19496      00000000 
 19497 07d8 00000000 		.8byte	.LBE916
 19497      00000000 
 19498 07e0 00000000 		.8byte	.LBB920
 19498      00000000 
 19499 07e8 00000000 		.8byte	.LBE920
 19499      00000000 
 19500 07f0 00000000 		.8byte	.LBB922
 19500      00000000 
 19501 07f8 00000000 		.8byte	.LBE922
 19501      00000000 
 19502 0800 00000000 		.8byte	.LBB924
 19502      00000000 
 19503 0808 00000000 		.8byte	.LBE924
 19503      00000000 
 19504 0810 00000000 		.8byte	0
 19504      00000000 
 19505 0818 00000000 		.8byte	0
 19505      00000000 
 19506 0820 00000000 		.8byte	.LBB945
 19506      00000000 
 19507 0828 00000000 		.8byte	.LBE945
 19507      00000000 
 19508 0830 00000000 		.8byte	.LBB949
 19508      00000000 
 19509 0838 00000000 		.8byte	.LBE949
 19509      00000000 
 19510 0840 00000000 		.8byte	0
 19510      00000000 
 19511 0848 00000000 		.8byte	0
 19511      00000000 
 19512 0850 00000000 		.8byte	.LBB960
 19512      00000000 
 19513 0858 00000000 		.8byte	.LBE960
 19513      00000000 
 19514 0860 00000000 		.8byte	.LBB979
 19514      00000000 
 19515 0868 00000000 		.8byte	.LBE979
 19515      00000000 
 19516 0870 00000000 		.8byte	.LBB983
 19516      00000000 
 19517 0878 00000000 		.8byte	.LBE983
 19517      00000000 
 19518 0880 00000000 		.8byte	0
 19518      00000000 
 19519 0888 00000000 		.8byte	0
 19519      00000000 
 19520 0890 00000000 		.8byte	.LBB962
 19520      00000000 
 19521 0898 00000000 		.8byte	.LBE962
 19521      00000000 
 19522 08a0 00000000 		.8byte	.LBB967
 19522      00000000 
 19523 08a8 00000000 		.8byte	.LBE967
 19523      00000000 
 19524 08b0 00000000 		.8byte	0
AARCH64 GAS  obj/extInstr.s 			page 570


 19524      00000000 
 19525 08b8 00000000 		.8byte	0
 19525      00000000 
 19526 08c0 00000000 		.8byte	.LBB963
 19526      00000000 
 19527 08c8 00000000 		.8byte	.LBE963
 19527      00000000 
 19528 08d0 00000000 		.8byte	.LBB965
 19528      00000000 
 19529 08d8 00000000 		.8byte	.LBE965
 19529      00000000 
 19530 08e0 00000000 		.8byte	0
 19530      00000000 
 19531 08e8 00000000 		.8byte	0
 19531      00000000 
 19532 08f0 00000000 		.8byte	.LBB968
 19532      00000000 
 19533 08f8 00000000 		.8byte	.LBE968
 19533      00000000 
 19534 0900 00000000 		.8byte	.LBB976
 19534      00000000 
 19535 0908 00000000 		.8byte	.LBE976
 19535      00000000 
 19536 0910 00000000 		.8byte	0
 19536      00000000 
 19537 0918 00000000 		.8byte	0
 19537      00000000 
 19538 0920 00000000 		.8byte	.LBB970
 19538      00000000 
 19539 0928 00000000 		.8byte	.LBE970
 19539      00000000 
 19540 0930 00000000 		.8byte	.LBB974
 19540      00000000 
 19541 0938 00000000 		.8byte	.LBE974
 19541      00000000 
 19542 0940 00000000 		.8byte	0
 19542      00000000 
 19543 0948 00000000 		.8byte	0
 19543      00000000 
 19544 0950 00000000 		.8byte	.LBB987
 19544      00000000 
 19545 0958 00000000 		.8byte	.LBE987
 19545      00000000 
 19546 0960 00000000 		.8byte	.LBB999
 19546      00000000 
 19547 0968 00000000 		.8byte	.LBE999
 19547      00000000 
 19548 0970 00000000 		.8byte	0
 19548      00000000 
 19549 0978 00000000 		.8byte	0
 19549      00000000 
 19550 0980 00000000 		.8byte	.LBB989
 19550      00000000 
 19551 0988 00000000 		.8byte	.LBE989
 19551      00000000 
 19552 0990 00000000 		.8byte	.LBB996
 19552      00000000 
AARCH64 GAS  obj/extInstr.s 			page 571


 19553 0998 00000000 		.8byte	.LBE996
 19553      00000000 
 19554 09a0 00000000 		.8byte	.LBB997
 19554      00000000 
 19555 09a8 00000000 		.8byte	.LBE997
 19555      00000000 
 19556 09b0 00000000 		.8byte	0
 19556      00000000 
 19557 09b8 00000000 		.8byte	0
 19557      00000000 
 19558 09c0 00000000 		.8byte	.LBB990
 19558      00000000 
 19559 09c8 00000000 		.8byte	.LBE990
 19559      00000000 
 19560 09d0 00000000 		.8byte	.LBB993
 19560      00000000 
 19561 09d8 00000000 		.8byte	.LBE993
 19561      00000000 
 19562 09e0 00000000 		.8byte	.LBB994
 19562      00000000 
 19563 09e8 00000000 		.8byte	.LBE994
 19563      00000000 
 19564 09f0 00000000 		.8byte	0
 19564      00000000 
 19565 09f8 00000000 		.8byte	0
 19565      00000000 
 19566 0a00 00000000 		.8byte	.LBB1001
 19566      00000000 
 19567 0a08 00000000 		.8byte	.LBE1001
 19567      00000000 
 19568 0a10 00000000 		.8byte	.LBB1005
 19568      00000000 
 19569 0a18 00000000 		.8byte	.LBE1005
 19569      00000000 
 19570 0a20 00000000 		.8byte	.LBB1006
 19570      00000000 
 19571 0a28 00000000 		.8byte	.LBE1006
 19571      00000000 
 19572 0a30 00000000 		.8byte	.LBB1007
 19572      00000000 
 19573 0a38 00000000 		.8byte	.LBE1007
 19573      00000000 
 19574 0a40 00000000 		.8byte	0
 19574      00000000 
 19575 0a48 00000000 		.8byte	0
 19575      00000000 
 19576 0a50 00000000 		.8byte	.Ltext0
 19576      00000000 
 19577 0a58 00000000 		.8byte	.Letext0
 19577      00000000 
 19578 0a60 00000000 		.8byte	.LFB2202
 19578      00000000 
 19579 0a68 00000000 		.8byte	.LFE2202
 19579      00000000 
 19580 0a70 00000000 		.8byte	.LFB2817
 19580      00000000 
 19581 0a78 00000000 		.8byte	.LFE2817
AARCH64 GAS  obj/extInstr.s 			page 572


 19581      00000000 
 19582 0a80 00000000 		.8byte	0
 19582      00000000 
 19583 0a88 00000000 		.8byte	0
 19583      00000000 
 19584              		.section	.debug_line,"",@progbits
 19585              	.Ldebug_line0:
 19586 0000 DC0A0000 		.section	.debug_str,"MS",@progbits,1
 19586      03003305 
 19586      00000401 
 19586      FB0E0D00 
 19586      01010101 
 19587              	.LASF892:
 19588 0000 546F5374 		.string	"ToStringU16"
 19588      72696E67 
 19588      55313600 
 19589              	.LASF937:
 19590 000c 5F5F7465 		.string	"__testoff"
 19590      73746F66 
 19590      6600
 19591              	.LASF577:
 19592 0016 5F5F7672 		.string	"__vr_top"
 19592      5F746F70 
 19592      00
 19593              	.LASF698:
 19594 001f 6C6F6E67 		.string	"long long int"
 19594      206C6F6E 
 19594      6720696E 
 19594      7400
 19595              	.LASF873:
 19596 002d 6D5F4931 		.string	"m_I16"
 19596      3600
 19597              	.LASF895:
 19598 0033 5F5A4E36 		.string	"_ZN6Vec12811ToStringU32B5cxx11Ev"
 19598      56656331 
 19598      32383131 
 19598      546F5374 
 19598      72696E67 
 19599              	.LASF767:
 19600 0054 706F7369 		.string	"positive_sign"
 19600      74697665 
 19600      5F736967 
 19600      6E00
 19601              	.LASF205:
 19602 0062 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_"
 19602      74375F5F 
 19602      63787831 
 19602      31313262 
 19602      61736963 
 19603              	.LASF870:
 19604 00a2 676D7469 		.string	"gmtime"
 19604      6D6500
 19605              	.LASF807:
 19606 00a9 6D627374 		.string	"mbstowcs"
 19606      6F776373 
 19606      00
 19607              	.LASF197:
AARCH64 GAS  obj/extInstr.s 			page 573


 19608 00b2 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc"
 19608      74375F5F 
 19608      63787831 
 19608      31313262 
 19608      61736963 
 19609              	.LASF270:
 19610 00fd 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptr9_M_addrefEv"
 19610      7431355F 
 19610      5F657863 
 19610      65707469 
 19610      6F6E5F70 
 19611              	.LASF561:
 19612 012f 5F5F6E6F 		.string	"__normal_iterator<char*>"
 19612      726D616C 
 19612      5F697465 
 19612      7261746F 
 19612      723C6368 
 19613              	.LASF438:
 19614 0148 5F507472 		.string	"_Ptr"
 19614      00
 19615              	.LASF617:
 19616 014d 5F5F7061 		.string	"__pad5"
 19616      643500
 19617              	.LASF815:
 19618 0154 73747274 		.string	"strtoul"
 19618      6F756C00 
 19619              	.LASF784:
 19620 015c 67657477 		.string	"getwchar"
 19620      63686172 
 19620      00
 19621              	.LASF573:
 19622 0165 6C6F6E67 		.string	"long unsigned int"
 19622      20756E73 
 19622      69676E65 
 19622      6420696E 
 19622      7400
 19623              	.LASF49:
 19624 0177 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm"
 19624      74375F5F 
 19624      63787831 
 19624      31313262 
 19624      61736963 
 19625              	.LASF253:
 19626 01bc 5F496E70 		.string	"_InputIterator"
 19626      75744974 
 19626      65726174 
 19626      6F7200
 19627              	.LASF855:
 19628 01cb 746D7066 		.string	"tmpfile"
 19628      696C6500 
 19629              	.LASF894:
 19630 01d3 546F5374 		.string	"ToStringU32"
 19630      72696E67 
 19630      55333200 
 19631              	.LASF343:
 19632 01df 696E6974 		.string	"initializer_list"
 19632      69616C69 
AARCH64 GAS  obj/extInstr.s 			page 574


 19632      7A65725F 
 19632      6C697374 
 19632      00
 19633              	.LASF874:
 19634 01f0 6D5F4933 		.string	"m_I32"
 19634      3200
 19635              	.LASF616:
 19636 01f6 5F667265 		.string	"_freeres_buf"
 19636      65726573 
 19636      5F627566 
 19636      00
 19637              	.LASF22:
 19638 0203 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm"
 19638      74375F5F 
 19638      63787831 
 19638      31313262 
 19638      61736963 
 19639              	.LASF120:
 19640 024a 73687269 		.string	"shrink_to_fit"
 19640      6E6B5F74 
 19640      6F5F6669 
 19640      7400
 19641              	.LASF346:
 19642 0258 5F5A4E4B 		.string	"_ZNKSt16initializer_listIcE4sizeEv"
 19642      53743136 
 19642      696E6974 
 19642      69616C69 
 19642      7A65725F 
 19643              	.LASF464:
 19644 027b 666C7573 		.string	"flush<char, std::char_traits<char> >"
 19644      683C6368 
 19644      61722C20 
 19644      7374643A 
 19644      3A636861 
 19645              	.LASF229:
 19646 02a0 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcmm"
 19646      5374375F 
 19646      5F637878 
 19646      31313132 
 19646      62617369 
 19647              	.LASF116:
 19648 02eb 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv"
 19648      5374375F 
 19648      5F637878 
 19648      31313132 
 19648      62617369 
 19649              	.LASF318:
 19650 032d 5F5A4E53 		.string	"_ZNSt11char_traitsIcE7not_eofERKi"
 19650      74313163 
 19650      6861725F 
 19650      74726169 
 19650      74734963 
 19651              	.LASF108:
 19652 034f 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7crbeginEv"
 19652      5374375F 
 19652      5F637878 
 19652      31313132 
AARCH64 GAS  obj/extInstr.s 			page 575


 19652      62617369 
 19653              	.LASF235:
 19654 0390 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcm"
 19654      5374375F 
 19654      5F637878 
 19654      31313132 
 19654      62617369 
 19655              	.LASF28:
 19656 03df 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv"
 19656      74375F5F 
 19656      63787831 
 19656      31313262 
 19656      61736963 
 19657              	.LASF221:
 19658 0423 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEcm"
 19658      5374375F 
 19658      5F637878 
 19658      31313132 
 19658      62617369 
 19659              	.LASF761:
 19660 0463 67726F75 		.string	"grouping"
 19660      70696E67 
 19660      00
 19661              	.LASF107:
 19662 046c 63726265 		.string	"crbegin"
 19662      67696E00 
 19663              	.LASF876:
 19664 0474 6D5F5538 		.string	"m_U8"
 19664      00
 19665              	.LASF755:
 19666 0479 75696E74 		.string	"uintptr_t"
 19666      7074725F 
 19666      7400
 19667              	.LASF521:
 19668 0483 5F5F6E6F 		.string	"__normal_iterator"
 19668      726D616C 
 19668      5F697465 
 19668      7261746F 
 19668      7200
 19669              	.LASF563:
 19670 0495 5F497465 		.string	"_Iter"
 19670      7200
 19671              	.LASF15:
 19672 049b 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv"
 19672      5374375F 
 19672      5F637878 
 19672      31313132 
 19672      62617369 
 19673              	.LASF69:
 19674 04dc 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC4Ev"
 19674      74375F5F 
 19674      63787831 
 19674      31313262 
 19674      61736963 
 19675              	.LASF131:
 19676 0516 6F706572 		.string	"operator[]"
 19676      61746F72 
AARCH64 GAS  obj/extInstr.s 			page 576


 19676      5B5D00
 19677              	.LASF206:
 19678 0521 635F7374 		.string	"c_str"
 19678      7200
 19679              	.LASF365:
 19680 0527 5F535F69 		.string	"_S_ios_openmode_max"
 19680      6F735F6F 
 19680      70656E6D 
 19680      6F64655F 
 19680      6D617800 
 19681              	.LASF759:
 19682 053b 64656369 		.string	"decimal_point"
 19682      6D616C5F 
 19682      706F696E 
 19682      7400
 19683              	.LASF50:
 19684 0549 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm"
 19684      74375F5F 
 19684      63787831 
 19684      31313262 
 19684      61736963 
 19685              	.LASF476:
 19686 058e 6F737472 		.string	"ostringstream"
 19686      696E6773 
 19686      74726561 
 19686      6D00
 19687              	.LASF237:
 19688 059c 66696E64 		.string	"find_last_not_of"
 19688      5F6C6173 
 19688      745F6E6F 
 19688      745F6F66 
 19688      00
 19689              	.LASF896:
 19690 05ad 546F5374 		.string	"ToStringU64"
 19690      72696E67 
 19690      55363400 
 19691              	.LASF261:
 19692 05b9 62617369 		.string	"basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >"
 19692      635F6F73 
 19692      7472696E 
 19692      67737472 
 19692      65616D3C 
 19693              	.LASF931:
 19694 0602 5F5F6669 		.string	"__first"
 19694      72737400 
 19695              	.LASF875:
 19696 060a 6D5F4936 		.string	"m_I64"
 19696      3400
 19697              	.LASF81:
 19698 0610 7E626173 		.string	"~basic_string"
 19698      69635F73 
 19698      7472696E 
 19698      6700
 19699              	.LASF962:
 19700 061e 5F5F6461 		.string	"__dat"
 19700      7400
 19701              	.LASF223:
AARCH64 GAS  obj/extInstr.s 			page 577


 19702 0624 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofERKS4_m"
 19702      5374375F 
 19702      5F637878 
 19702      31313132 
 19702      62617369 
 19703              	.LASF59:
 19704 0671 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_"
 19704      74375F5F 
 19704      63787831 
 19704      31313262 
 19704      61736963 
 19705              	.LASF452:
 19706 06bf 5F5A5374 		.string	"_ZSt13__check_facetISt5ctypeIcEERKT_PS3_"
 19706      31335F5F 
 19706      63686563 
 19706      6B5F6661 
 19706      63657449 
 19707              	.LASF864:
 19708 06e8 636C6F63 		.string	"clock"
 19708      6B00
 19709              	.LASF857:
 19710 06ee 756E6765 		.string	"ungetc"
 19710      746300
 19711              	.LASF983:
 19712 06f5 74626C49 		.string	"tblInstr_"
 19712      6E737472 
 19712      5F00
 19713              	.LASF549:
 19714 06ff 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 19714      395F5F67 
 19714      6E755F63 
 19714      78783137 
 19714      5F5F6E6F 
 19715              	.LASF358:
 19716 075e 5F535F61 		.string	"_S_app"
 19716      707000
 19717              	.LASF949:
 19718 0765 5F5A4E53 		.string	"_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev"
 19718      74396261 
 19718      7369635F 
 19718      696F7349 
 19718      63537431 
 19719              	.LASF4:
 19720 078e 5F4D5F61 		.string	"_M_allocated_capacity"
 19720      6C6C6F63 
 19720      61746564 
 19720      5F636170 
 19720      61636974 
 19721              	.LASF724:
 19722 07a4 5F5F696E 		.string	"__intmax_t"
 19722      746D6178 
 19722      5F7400
 19723              	.LASF555:
 19724 07af 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 19724      395F5F67 
 19724      6E755F63 
 19724      78783137 
AARCH64 GAS  obj/extInstr.s 			page 578


 19724      5F5F6E6F 
 19725              	.LASF38:
 19726 080e 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv"
 19726      5374375F 
 19726      5F637878 
 19726      31313132 
 19726      62617369 
 19727              	.LASF758:
 19728 0859 6C636F6E 		.string	"lconv"
 19728      7600
 19729              	.LASF456:
 19730 085f 5F5A4E4B 		.string	"_ZNKSt9basic_iosIcSt11char_traitsIcEE7rdstateEv"
 19730      53743962 
 19730      61736963 
 19730      5F696F73 
 19730      49635374 
 19731              	.LASF917:
 19732 088f 5F5F6C68 		.string	"__lhs"
 19732      7300
 19733              	.LASF530:
 19734 0895 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEp
 19734      5F5F676E 
 19734      755F6378 
 19734      7831375F 
 19734      5F6E6F72 
 19735              	.LASF529:
 19736 08f2 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEp
 19736      5F5F676E 
 19736      755F6378 
 19736      7831375F 
 19736      5F6E6F72 
 19737              	.LASF641:
 19738 094f 5F5F6973 		.string	"__isoc99_swscanf"
 19738      6F633939 
 19738      5F737773 
 19738      63616E66 
 19738      00
 19739              	.LASF373:
 19740 0960 5F535F69 		.string	"_S_ios_iostate_end"
 19740      6F735F69 
 19740      6F737461 
 19740      74655F65 
 19740      6E6400
 19741              	.LASF481:
 19742 0973 5F5A5374 		.string	"_ZStorSt12_Ios_IostateS_"
 19742      6F725374 
 19742      31325F49 
 19742      6F735F49 
 19742      6F737461 
 19743              	.LASF236:
 19744 098c 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEcm"
 19744      5374375F 
 19744      5F637878 
 19744      31313132 
 19744      62617369 
 19745              	.LASF252:
 19746 09d9 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignIPcvEERS4_T_S8_"
AARCH64 GAS  obj/extInstr.s 			page 579


 19746      74375F5F 
 19746      63787831 
 19746      31313262 
 19746      61736963 
 19747              	.LASF342:
 19748 0a25 5F4D5F6C 		.string	"_M_len"
 19748      656E00
 19749              	.LASF449:
 19750 0a2c 5F5F6164 		.string	"__addressof<char>"
 19750      64726573 
 19750      736F663C 
 19750      63686172 
 19750      3E00
 19751              	.LASF483:
 19752 0a3e 5F5F6F73 		.string	"__ostream_insert<char, std::char_traits<char> >"
 19752      74726561 
 19752      6D5F696E 
 19752      73657274 
 19752      3C636861 
 19753              	.LASF233:
 19754 0a6e 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofERKS4_m"
 19754      5374375F 
 19754      5F637878 
 19754      31313132 
 19754      62617369 
 19755              	.LASF1005:
 19756 0abf 56656331 		.string	"Vec128"
 19756      323800
 19757              	.LASF254:
 19758 0ac6 5F436861 		.string	"_CharT"
 19758      725400
 19759              	.LASF662:
 19760 0acd 746D5F6D 		.string	"tm_mday"
 19760      64617900 
 19761              	.LASF393:
 19762 0ad5 62617369 		.string	"basic_ostream"
 19762      635F6F73 
 19762      74726561 
 19762      6D00
 19763              	.LASF274:
 19764 0ae3 5F5A4E4B 		.string	"_ZNKSt15__exception_ptr13exception_ptr6_M_getEv"
 19764      53743135 
 19764      5F5F6578 
 19764      63657074 
 19764      696F6E5F 
 19765              	.LASF388:
 19766 0b13 77696474 		.string	"width"
 19766      6800
 19767              	.LASF67:
 19768 0b19 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEmm"
 19768      74375F5F 
 19768      63787831 
 19768      31313262 
 19768      61736963 
 19769              	.LASF565:
 19770 0b5b 5F5A4E39 		.string	"_ZN9__gnu_cxxmiIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_17__normal_it
 19770      5F5F676E 
AARCH64 GAS  obj/extInstr.s 			page 580


 19770      755F6378 
 19770      786D6949 
 19770      504B634E 
 19771              	.LASF736:
 19772 0bdc 75696E74 		.string	"uint32_t"
 19772      33325F74 
 19772      00
 19773              	.LASF133:
 19774 0be5 72656665 		.string	"reference"
 19774      72656E63 
 19774      6500
 19775              	.LASF356:
 19776 0bef 73747269 		.string	"string_literals"
 19776      6E675F6C 
 19776      69746572 
 19776      616C7300 
 19777              	.LASF306:
 19778 0bff 6D6F7665 		.string	"move"
 19778      00
 19779              	.LASF844:
 19780 0c04 66736565 		.string	"fseek"
 19780      6B00
 19781              	.LASF136:
 19782 0c0a 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE2atEm"
 19782      74375F5F 
 19782      63787831 
 19782      31313262 
 19782      61736963 
 19783              	.LASF669:
 19784 0c45 746D5F7A 		.string	"tm_zone"
 19784      6F6E6500 
 19785              	.LASF367:
 19786 0c4d 5F496F73 		.string	"_Ios_Openmode"
 19786      5F4F7065 
 19786      6E6D6F64 
 19786      6500
 19787              	.LASF941:
 19788 0c5b 5F5A4E53 		.string	"_ZNSt15basic_streambufIcSt11char_traitsIcEED0Ev"
 19788      74313562 
 19788      61736963 
 19788      5F737472 
 19788      65616D62 
 19789              	.LASF359:
 19790 0c8b 5F535F61 		.string	"_S_ate"
 19790      746500
 19791              	.LASF671:
 19792 0c92 7763736E 		.string	"wcsncat"
 19792      63617400 
 19793              	.LASF976:
 19794 0c9a 5F5F6331 		.string	"__c1"
 19794      00
 19795              	.LASF977:
 19796 0c9f 5F5F6332 		.string	"__c2"
 19796      00
 19797              	.LASF811:
 19798 0ca4 71736F72 		.string	"qsort"
 19798      7400
AARCH64 GAS  obj/extInstr.s 			page 581


 19799              	.LASF457:
 19800 0caa 7E626173 		.string	"~basic_ios"
 19800      69635F69 
 19800      6F7300
 19801              	.LASF19:
 19802 0cb5 5F4D5F63 		.string	"_M_capacity"
 19802      61706163 
 19802      69747900 
 19803              	.LASF55:
 19804 0cc1 69746572 		.string	"iterator"
 19804      61746F72 
 19804      00
 19805              	.LASF257:
 19806 0cca 5F5F7374 		.string	"__string_type"
 19806      72696E67 
 19806      5F747970 
 19806      6500
 19807              	.LASF485:
 19808 0cd8 5F5F7468 		.string	"__throw_bad_cast"
 19808      726F775F 
 19808      6261645F 
 19808      63617374 
 19808      00
 19809              	.LASF994:
 19810 0ce9 5F5A4E53 		.string	"_ZNSt11char_traitsIcE3eofEv"
 19810      74313163 
 19810      6861725F 
 19810      74726169 
 19810      74734963 
 19811              	.LASF831:
 19812 0d05 5F494F5F 		.string	"_IO_wide_data"
 19812      77696465 
 19812      5F646174 
 19812      6100
 19813              	.LASF64:
 19814 0d13 5F4D5F6D 		.string	"_M_mutate"
 19814      75746174 
 19814      6500
 19815              	.LASF623:
 19816 0d1d 66676574 		.string	"fgetwc"
 19816      776300
 19817              	.LASF624:
 19818 0d24 66676574 		.string	"fgetws"
 19818      777300
 19819              	.LASF742:
 19820 0d2b 75696E74 		.string	"uint_least8_t"
 19820      5F6C6561 
 19820      7374385F 
 19820      7400
 19821              	.LASF213:
 19822 0d39 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcmm"
 19822      5374375F 
 19822      5F637878 
 19822      31313132 
 19822      62617369 
 19823              	.LASF366:
 19824 0d7b 5F535F69 		.string	"_S_ios_openmode_min"
AARCH64 GAS  obj/extInstr.s 			page 582


 19824      6F735F6F 
 19824      70656E6D 
 19824      6F64655F 
 19824      6D696E00 
 19825              	.LASF354:
 19826 0d8f 5F5F6378 		.string	"__cxx11"
 19826      78313100 
 19827              	.LASF567:
 19828 0d97 5F5A4E39 		.string	"_ZN9__gnu_cxxmiIPKcPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEDTmicldtfp_4ba
 19828      5F5F676E 
 19828      755F6378 
 19828      786D6949 
 19828      504B6350 
 19829              	.LASF86:
 19830 0e32 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc"
 19830      74375F5F 
 19830      63787831 
 19830      31313262 
 19830      61736963 
 19831              	.LASF442:
 19832 0e6e 5F5A4E53 		.string	"_ZNSt14pointer_traitsIPKcE10pointer_toERS0_"
 19832      74313470 
 19832      6F696E74 
 19832      65725F74 
 19832      72616974 
 19833              	.LASF297:
 19834 0e9a 5F5F6465 		.string	"__debug"
 19834      62756700 
 19835              	.LASF130:
 19836 0ea2 636F6E73 		.string	"const_reference"
 19836      745F7265 
 19836      66657265 
 19836      6E636500 
 19837              	.LASF959:
 19838 0eb2 5F5A4E53 		.string	"_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED0Ev"
 19838      74375F5F 
 19838      63787831 
 19838      31313562 
 19838      61736963 
 19839              	.LASF463:
 19840 0eef 5F5A4E53 		.string	"_ZNSt9basic_iosIcSt11char_traitsIcEE8setstateESt12_Ios_Iostate"
 19840      74396261 
 19840      7369635F 
 19840      696F7349 
 19840      63537431 
 19841              	.LASF277:
 19842 0f2e 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptrC4EDn"
 19842      7431355F 
 19842      5F657863 
 19842      65707469 
 19842      6F6E5F70 
 19843              	.LASF682:
 19844 0f59 77637378 		.string	"wcsxfrm"
 19844      66726D00 
 19845              	.LASF936:
 19846 0f61 5F5F6F66 		.string	"__off"
 19846      6600
AARCH64 GAS  obj/extInstr.s 			page 583


 19847              	.LASF118:
 19848 0f67 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6resizeEmc"
 19848      74375F5F 
 19848      63787831 
 19848      31313262 
 19848      61736963 
 19849              	.LASF790:
 19850 0fa7 35646976 		.string	"5div_t"
 19850      5F7400
 19851              	.LASF701:
 19852 0fae 626F6F6C 		.string	"bool"
 19852      00
 19853              	.LASF100:
 19854 0fb3 72656E64 		.string	"rend"
 19854      00
 19855              	.LASF428:
 19856 0fb8 616C6C6F 		.string	"allocator_arg"
 19856      6361746F 
 19856      725F6172 
 19856      6700
 19857              	.LASF193:
 19858 0fc6 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_itera
 19858      74375F5F 
 19858      63787831 
 19858      31313262 
 19858      61736963 
 19859              	.LASF721:
 19860 103e 5F5F7569 		.string	"__uint_least32_t"
 19860      6E745F6C 
 19860      65617374 
 19860      33325F74 
 19860      00
 19861              	.LASF430:
 19862 104f 5F536574 		.string	"_Setw"
 19862      7700
 19863              	.LASF111:
 19864 1055 73697A65 		.string	"size"
 19864      00
 19865              	.LASF175:
 19866 105a 65726173 		.string	"erase"
 19866      6500
 19867              	.LASF390:
 19868 1060 62617369 		.string	"basic_ostream<char, std::char_traits<char> >"
 19868      635F6F73 
 19868      74726561 
 19868      6D3C6368 
 19868      61722C20 
 19869              	.LASF465:
 19870 108d 5F5A5374 		.string	"_ZSt5flushIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_"
 19870      35666C75 
 19870      73684963 
 19870      53743131 
 19870      63686172 
 19871              	.LASF547:
 19872 10c9 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
 19872      5F5F676E 
 19872      755F6378 
AARCH64 GAS  obj/extInstr.s 			page 584


 19872      7831375F 
 19872      5F6E6F72 
 19873              	.LASF147:
 19874 1127 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLESt16initializer_listIcE"
 19874      74375F5F 
 19874      63787831 
 19874      31313262 
 19874      61736963 
 19875              	.LASF385:
 19876 1177 5F535F73 		.string	"_S_synced_with_stdio"
 19876      796E6365 
 19876      645F7769 
 19876      74685F73 
 19876      7464696F 
 19877              	.LASF65:
 19878 118c 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm"
 19878      74375F5F 
 19878      63787831 
 19878      31313262 
 19878      61736963 
 19879              	.LASF328:
 19880 11d3 616C6C6F 		.string	"allocator_traits<std::allocator<char> >"
 19880      6361746F 
 19880      725F7472 
 19880      61697473 
 19880      3C737464 
 19881              	.LASF60:
 19882 11fb 5F535F63 		.string	"_S_compare"
 19882      6F6D7061 
 19882      726500
 19883              	.LASF226:
 19884 1206 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEcm"
 19884      5374375F 
 19884      5F637878 
 19884      31313132 
 19884      62617369 
 19885              	.LASF809:
 19886 124f 71756963 		.string	"quick_exit"
 19886      6B5F6578 
 19886      697400
 19887              	.LASF925:
 19888 125a 5F5F6931 		.string	"__i1"
 19888      00
 19889              	.LASF926:
 19890 125f 5F5F6932 		.string	"__i2"
 19890      00
 19891              	.LASF660:
 19892 1264 746D5F6D 		.string	"tm_min"
 19892      696E00
 19893              	.LASF763:
 19894 126b 63757272 		.string	"currency_symbol"
 19894      656E6379 
 19894      5F73796D 
 19894      626F6C00 
 19895              	.LASF954:
 19896 127b 5F5A4E53 		.string	"_ZNSaIcEC2ERKS_"
 19896      61496345 
AARCH64 GAS  obj/extInstr.s 			page 585


 19896      43324552 
 19896      4B535F00 
 19897              	.LASF628:
 19898 128b 66776964 		.string	"fwide"
 19898      6500
 19899              	.LASF800:
 19900 1291 61746F66 		.string	"atof"
 19900      00
 19901              	.LASF132:
 19902 1296 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm"
 19902      5374375F 
 19902      5F637878 
 19902      31313132 
 19902      62617369 
 19903              	.LASF801:
 19904 12d1 61746F69 		.string	"atoi"
 19904      00
 19905              	.LASF802:
 19906 12d6 61746F6C 		.string	"atol"
 19906      00
 19907              	.LASF46:
 19908 12db 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc"
 19908      5374375F 
 19908      5F637878 
 19908      31313132 
 19908      62617369 
 19909              	.LASF164:
 19910 1323 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignESt16initializer_listIcE"
 19910      74375F5F 
 19910      63787831 
 19910      31313262 
 19910      61736963 
 19911              	.LASF889:
 19912 1378 5F5A4E36 		.string	"_ZN6Vec12811ToStringI64B5cxx11Ev"
 19912      56656331 
 19912      32383131 
 19912      546F5374 
 19912      72696E67 
 19913              	.LASF224:
 19914 1399 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcmm"
 19914      5374375F 
 19914      5F637878 
 19914      31313132 
 19914      62617369 
 19915              	.LASF1001:
 19916 13e5 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIcEcE10_S_on_swapERS1_S3_"
 19916      5F5F676E 
 19916      755F6378 
 19916      7831345F 
 19916      5F616C6C 
 19917              	.LASF982:
 19918 141f 65787449 		.string	"extInstr_"
 19918      6E737472 
 19918      5F00
 19919              	.LASF619:
 19920 1429 5F756E75 		.string	"_unused2"
 19920      73656432 
AARCH64 GAS  obj/extInstr.s 			page 586


 19920      00
 19921              	.LASF990:
 19922 1432 7E5F416C 		.string	"~_Alloc_hider"
 19922      6C6F635F 
 19922      68696465 
 19922      7200
 19923              	.LASF293:
 19924 1440 73697A65 		.string	"size_t"
 19924      5F7400
 19925              	.LASF510:
 19926 1447 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIcEcE27_S_propagate_on_move_assignEv"
 19926      5F5F676E 
 19926      755F6378 
 19926      7831345F 
 19926      5F616C6C 
 19927              	.LASF101:
 19928 148c 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4rendEv"
 19928      74375F5F 
 19928      63787831 
 19928      31313262 
 19928      61736963 
 19929              	.LASF286:
 19930 14c9 6F706572 		.string	"operator bool"
 19930      61746F72 
 19930      20626F6F 
 19930      6C00
 19931              	.LASF458:
 19932 14d7 5F5A4E53 		.string	"_ZNSt9basic_iosIcSt11char_traitsIcEED4Ev"
 19932      74396261 
 19932      7369635F 
 19932      696F7349 
 19932      63537431 
 19933              	.LASF648:
 19934 1500 5F5F6973 		.string	"__isoc99_vswscanf"
 19934      6F633939 
 19934      5F767377 
 19934      7363616E 
 19934      6600
 19935              	.LASF927:
 19936 1512 5F5F6B31 		.string	"__k1"
 19936      00
 19937              	.LASF928:
 19938 1517 5F5F6B32 		.string	"__k2"
 19938      00
 19939              	.LASF690:
 19940 151c 5F5F6973 		.string	"__isoc99_wscanf"
 19940      6F633939 
 19940      5F777363 
 19940      616E6600 
 19941              	.LASF222:
 19942 152c 66696E64 		.string	"find_first_of"
 19942      5F666972 
 19942      73745F6F 
 19942      6600
 19943              	.LASF292:
 19944 153a 6E756C6C 		.string	"nullptr_t"
 19944      7074725F 
AARCH64 GAS  obj/extInstr.s 			page 587


 19944      7400
 19945              	.LASF179:
 19946 1544 706F705F 		.string	"pop_back"
 19946      6261636B 
 19946      00
 19947              	.LASF408:
 19948 154d 5F5A4E4B 		.string	"_ZNKSt15basic_streambufIcSt11char_traitsIcEE5egptrEv"
 19948      53743135 
 19948      62617369 
 19948      635F7374 
 19948      7265616D 
 19949              	.LASF640:
 19950 1582 73777363 		.string	"swscanf"
 19950      616E6600 
 19951              	.LASF103:
 19952 158a 63626567 		.string	"cbegin"
 19952      696E00
 19953              	.LASF744:
 19954 1591 75696E74 		.string	"uint_least32_t"
 19954      5F6C6561 
 19954      73743332 
 19954      5F7400
 19955              	.LASF209:
 19956 15a0 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4dataEv"
 19956      5374375F 
 19956      5F637878 
 19956      31313132 
 19956      62617369 
 19957              	.LASF232:
 19958 15de 66696E64 		.string	"find_first_not_of"
 19958      5F666972 
 19958      73745F6E 
 19958      6F745F6F 
 19958      6600
 19959              	.LASF37:
 19960 15f0 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv"
 19960      74375F5F 
 19960      63787831 
 19960      31313262 
 19960      61736963 
 19961              	.LASF618:
 19962 163a 5F6D6F64 		.string	"_mode"
 19962      6500
 19963              	.LASF919:
 19964 1640 74686973 		.string	"this"
 19964      00
 19965              	.LASF491:
 19966 1645 5F5A4E39 		.string	"_ZN9__gnu_cxx13new_allocatorIcEC4Ev"
 19966      5F5F676E 
 19966      755F6378 
 19966      7831336E 
 19966      65775F61 
 19967              	.LASF975:
 19968 1669 5F5F6F6C 		.string	"__old"
 19968      6400
 19969              	.LASF324:
 19970 166f 5F5A4E4B 		.string	"_ZNKSt15__exception_ptr13exception_ptrcvbEv"
AARCH64 GAS  obj/extInstr.s 			page 588


 19970      53743135 
 19970      5F5F6578 
 19970      63657074 
 19970      696F6E5F 
 19971              	.LASF33:
 19972 169b 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE18_M_construct_aux_2Emc"
 19972      74375F5F 
 19972      63787831 
 19972      31313262 
 19972      61736963 
 19973              	.LASF885:
 19974 16e8 5F5A4E36 		.string	"_ZN6Vec12811ToStringI16B5cxx11Ev"
 19974      56656331 
 19974      32383131 
 19974      546F5374 
 19974      72696E67 
 19975              	.LASF645:
 19976 1709 5F5F6973 		.string	"__isoc99_vfwscanf"
 19976      6F633939 
 19976      5F766677 
 19976      7363616E 
 19976      6600
 19977              	.LASF631:
 19978 171b 5F5F6973 		.string	"__isoc99_fwscanf"
 19978      6F633939 
 19978      5F667773 
 19978      63616E66 
 19978      00
 19979              	.LASF951:
 19980 172c 5F5F6E31 		.string	"__n1"
 19980      00
 19981              	.LASF952:
 19982 1731 5F5F6E32 		.string	"__n2"
 19982      00
 19983              	.LASF461:
 19984 1736 5F5A4E4B 		.string	"_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc"
 19984      53743962 
 19984      61736963 
 19984      5F696F73 
 19984      49635374 
 19985              	.LASF195:
 19986 1764 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_itera
 19986      74375F5F 
 19986      63787831 
 19986      31313262 
 19986      61736963 
 19987              	.LASF781:
 19988 17e4 696E745F 		.string	"int_p_sign_posn"
 19988      705F7369 
 19988      676E5F70 
 19988      6F736E00 
 19989              	.LASF791:
 19990 17f4 71756F74 		.string	"quot"
 19990      00
 19991              	.LASF583:
 19992 17f9 5F5F7763 		.string	"__wchb"
 19992      686200
AARCH64 GAS  obj/extInstr.s 			page 589


 19993              	.LASF942:
 19994 1800 5F5A4E53 		.string	"_ZNSt15basic_streambufIcSt11char_traitsIcEED2Ev"
 19994      74313562 
 19994      61736963 
 19994      5F737472 
 19994      65616D62 
 19995              	.LASF308:
 19996 1830 5F5A4E53 		.string	"_ZNSt11char_traitsIcE4copyEPcPKcm"
 19996      74313163 
 19996      6861725F 
 19996      74726169 
 19996      74734963 
 19997              	.LASF1007:
 19998 1852 5F5F7374 		.string	"__static_initialization_and_destruction_0"
 19998      61746963 
 19998      5F696E69 
 19998      7469616C 
 19998      697A6174 
 19999              	.LASF934:
 20000 187c 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2Ev"
 20000      74375F5F 
 20000      63787831 
 20000      31313262 
 20000      61736963 
 20001              	.LASF663:
 20002 18b6 746D5F6D 		.string	"tm_mon"
 20002      6F6E00
 20003              	.LASF817:
 20004 18bd 77637374 		.string	"wcstombs"
 20004      6F6D6273 
 20004      00
 20005              	.LASF861:
 20006 18c6 746F7763 		.string	"towctrans"
 20006      7472616E 
 20006      7300
 20007              	.LASF966:
 20008 18d0 5F5A4E39 		.string	"_ZN9__gnu_cxx13new_allocatorIcEC2Ev"
 20008      5F5F676E 
 20008      755F6378 
 20008      7831336E 
 20008      65775F61 
 20009              	.LASF955:
 20010 18f4 5F5F6F73 		.string	"__os"
 20010      00
 20011              	.LASF220:
 20012 18f9 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcm"
 20012      5374375F 
 20012      5F637878 
 20012      31313132 
 20012      62617369 
 20013              	.LASF121:
 20014 193b 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13shrink_to_fitEv"
 20014      74375F5F 
 20014      63787831 
 20014      31313262 
 20014      61736963 
 20015              	.LASF786:
AARCH64 GAS  obj/extInstr.s 			page 590


 20016 1982 74696D65 		.string	"time_t"
 20016      5F7400
 20017              	.LASF341:
 20018 1989 5F4D5F61 		.string	"_M_array"
 20018      72726179 
 20018      00
 20019              	.LASF431:
 20020 1992 5F4D5F6E 		.string	"_M_n"
 20020      00
 20021              	.LASF389:
 20022 1997 5F5A4E53 		.string	"_ZNSt8ios_base5widthEl"
 20022      7438696F 
 20022      735F6261 
 20022      73653577 
 20022      69647468 
 20023              	.LASF7:
 20024 19ae 5F4D5F70 		.string	"_M_p"
 20024      00
 20025              	.LASF467:
 20026 19b3 5F5A5374 		.string	"_ZStlsIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_St5_Setw"
 20026      6C734963 
 20026      53743131 
 20026      63686172 
 20026      5F747261 
 20027              	.LASF978:
 20028 19f3 5F5F696E 		.string	"__int128"
 20028      74313238 
 20028      00
 20029              	.LASF370:
 20030 19fc 5F535F62 		.string	"_S_badbit"
 20030      61646269 
 20030      7400
 20031              	.LASF537:
 20032 1a06 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
 20032      395F5F67 
 20032      6E755F63 
 20032      78783137 
 20032      5F5F6E6F 
 20033              	.LASF488:
 20034 1a64 5F5F6F70 		.string	"__ops"
 20034      7300
 20035              	.LASF751:
 20036 1a6a 75696E74 		.string	"uint_fast16_t"
 20036      5F666173 
 20036      7431365F 
 20036      7400
 20037              	.LASF987:
 20038 1a78 474E5520 		.string	"GNU C++14 10.2.1 20210110 -march=armv8-a+simd -mlittle-endian -mabi=lp64 -g -O3 -std=c++1
 20038      432B2B31 
 20038      34203130 
 20038      2E322E31 
 20038      20323032 
 20039              	.LASF339:
 20040 1af0 72656269 		.string	"rebind_alloc"
 20040      6E645F61 
 20040      6C6C6F63 
 20040      00
AARCH64 GAS  obj/extInstr.s 			page 591


 20041              	.LASF709:
 20042 1afd 5F5F7569 		.string	"__uint8_t"
 20042      6E74385F 
 20042      7400
 20043              	.LASF661:
 20044 1b07 746D5F68 		.string	"tm_hour"
 20044      6F757200 
 20045              	.LASF307:
 20046 1b0f 5F5A4E53 		.string	"_ZNSt11char_traitsIcE4moveEPcPKcm"
 20046      74313163 
 20046      6861725F 
 20046      74726169 
 20046      74734963 
 20047              	.LASF970:
 20048 1b31 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev"
 20048      74375F5F 
 20048      63787831 
 20048      31313262 
 20048      61736963 
 20049              	.LASF39:
 20050 1b79 5F4D5F63 		.string	"_M_check"
 20050      6865636B 
 20050      00
 20051              	.LASF757:
 20052 1b82 75696E74 		.string	"uintmax_t"
 20052      6D61785F 
 20052      7400
 20053              	.LASF177:
 20054 1b8c 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEN9__gnu_cxx17__normal_iterato
 20054      74375F5F 
 20054      63787831 
 20054      31313262 
 20054      61736963 
 20055              	.LASF609:
 20056 1bf0 5F767461 		.string	"_vtable_offset"
 20056      626C655F 
 20056      6F666673 
 20056      657400
 20057              	.LASF381:
 20058 1bff 5F5A4E53 		.string	"_ZNSt8ios_base4InitC4ERKS0_"
 20058      7438696F 
 20058      735F6261 
 20058      73653449 
 20058      6E697443 
 20059              	.LASF502:
 20060 1c1b 5F5A4E4B 		.string	"_ZNK9__gnu_cxx13new_allocatorIcE11_M_max_sizeEv"
 20060      395F5F67 
 20060      6E755F63 
 20060      78783133 
 20060      6E65775F 
 20061              	.LASF891:
 20062 1c4b 5F5A4E36 		.string	"_ZN6Vec12810ToStringU8B5cxx11Ev"
 20062      56656331 
 20062      32383130 
 20062      546F5374 
 20062      72696E67 
 20063              	.LASF85:
AARCH64 GAS  obj/extInstr.s 			page 592


 20064 1c6b 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_"
 20064      74375F5F 
 20064      63787831 
 20064      31313262 
 20064      61736963 
 20065              	.LASF268:
 20066 1ca9 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptrC4EPv"
 20066      7431355F 
 20066      5F657863 
 20066      65707469 
 20066      6F6E5F70 
 20067              	.LASF514:
 20068 1cd4 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIcEcE15_S_always_equalEv"
 20068      5F5F676E 
 20068      755F6378 
 20068      7831345F 
 20068      5F616C6C 
 20069              	.LASF135:
 20070 1d0d 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE2atEm"
 20070      5374375F 
 20070      5F637878 
 20070      31313132 
 20070      62617369 
 20071              	.LASF183:
 20072 1d49 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEmmRKS4_mm"
 20072      74375F5F 
 20072      63787831 
 20072      31313262 
 20072      61736963 
 20073              	.LASF808:
 20074 1d91 6D62746F 		.string	"mbtowc"
 20074      776300
 20075              	.LASF805:
 20076 1d98 6C646976 		.string	"ldiv"
 20076      00
 20077              	.LASF338:
 20078 1d9d 76616C75 		.string	"value_type"
 20078      655F7479 
 20078      706500
 20079              	.LASF666:
 20080 1da8 746D5F79 		.string	"tm_yday"
 20080      64617900 
 20081              	.LASF841:
 20082 1db0 666F7065 		.string	"fopen"
 20082      6E00
 20083              	.LASF271:
 20084 1db6 5F4D5F72 		.string	"_M_release"
 20084      656C6561 
 20084      736500
 20085              	.LASF733:
 20086 1dc1 696E7436 		.string	"int64_t"
 20086      345F7400 
 20087              	.LASF149:
 20088 1dc9 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_"
 20088      74375F5F 
 20088      63787831 
 20088      31313262 
AARCH64 GAS  obj/extInstr.s 			page 593


 20088      61736963 
 20089              	.LASF655:
 20090 1e0c 77637363 		.string	"wcscoll"
 20090      6F6C6C00 
 20091              	.LASF462:
 20092 1e14 73657473 		.string	"setstate"
 20092      74617465 
 20092      00
 20093              	.LASF968:
 20094 1e1d 5F5F6F75 		.string	"__out"
 20094      7400
 20095              	.LASF989:
 20096 1e23 2F686F6D 		.string	"/home/piusr/SIMD_Programming/ARMv8-A_programming/Chapter14/extInstr"
 20096      652F7069 
 20096      7573722F 
 20096      53494D44 
 20096      5F50726F 
 20097              	.LASF47:
 20098 1e67 5F535F63 		.string	"_S_copy"
 20098      6F707900 
 20099              	.LASF264:
 20100 1e6f 5F5A4E53 		.string	"_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEC4Ev"
 20100      74375F5F 
 20100      63787831 
 20100      31313962 
 20100      61736963 
 20101              	.LASF591:
 20102 1eb0 5F666C61 		.string	"_flags"
 20102      677300
 20103              	.LASF770:
 20104 1eb7 66726163 		.string	"frac_digits"
 20104      5F646967 
 20104      69747300 
 20105              	.LASF129:
 20106 1ec3 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5emptyEv"
 20106      5374375F 
 20106      5F637878 
 20106      31313132 
 20106      62617369 
 20107              	.LASF675:
 20108 1f02 77637373 		.string	"wcsspn"
 20108      706E00
 20109              	.LASF642:
 20110 1f09 756E6765 		.string	"ungetwc"
 20110      74776300 
 20111              	.LASF51:
 20112 1f11 5F535F61 		.string	"_S_assign"
 20112      73736967 
 20112      6E00
 20113              	.LASF570:
 20114 1f1b 6C6F6E67 		.string	"long double"
 20114      20646F75 
 20114      626C6500 
 20115              	.LASF572:
 20116 1f27 646F7562 		.string	"double"
 20116      6C6500
 20117              	.LASF543:
AARCH64 GAS  obj/extInstr.s 			page 594


 20118 1f2e 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
 20118      395F5F67 
 20118      6E755F63 
 20118      78783137 
 20118      5F5F6E6F 
 20119              	.LASF963:
 20120 1f8f 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcOS3_"
 20120      74375F5F 
 20120      63787831 
 20120      31313262 
 20120      61736963 
 20121              	.LASF863:
 20122 1fdc 77637479 		.string	"wctype"
 20122      706500
 20123              	.LASF387:
 20124 1fe3 6F70656E 		.string	"openmode"
 20124      6D6F6465 
 20124      00
 20125              	.LASF601:
 20126 1fec 5F494F5F 		.string	"_IO_backup_base"
 20126      6261636B 
 20126      75705F62 
 20126      61736500 
 20127              	.LASF533:
 20128 1ffc 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEm
 20128      5F5F676E 
 20128      755F6378 
 20128      7831375F 
 20128      5F6E6F72 
 20129              	.LASF532:
 20130 2059 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEm
 20130      5F5F676E 
 20130      755F6378 
 20130      7831375F 
 20130      5F6E6F72 
 20131              	.LASF799:
 20132 20b6 61745F71 		.string	"at_quick_exit"
 20132      7569636B 
 20132      5F657869 
 20132      7400
 20133              	.LASF493:
 20134 20c4 7E6E6577 		.string	"~new_allocator"
 20134      5F616C6C 
 20134      6F636174 
 20134      6F7200
 20135              	.LASF587:
 20136 20d3 5F5F6D62 		.string	"__mbstate_t"
 20136      73746174 
 20136      655F7400 
 20137              	.LASF332:
 20138 20df 636F6E73 		.string	"const_void_pointer"
 20138      745F766F 
 20138      69645F70 
 20138      6F696E74 
 20138      657200
 20139              	.LASF443:
 20140 20f2 61646472 		.string	"addressof<char const>"
AARCH64 GAS  obj/extInstr.s 			page 595


 20140      6573736F 
 20140      663C6368 
 20140      61722063 
 20140      6F6E7374 
 20141              	.LASF789:
 20142 2108 31315F5F 		.string	"11__mbstate_t"
 20142      6D627374 
 20142      6174655F 
 20142      7400
 20143              	.LASF99:
 20144 2116 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6rbeginEv"
 20144      5374375F 
 20144      5F637878 
 20144      31313132 
 20144      62617369 
 20145              	.LASF300:
 20146 2156 63686172 		.string	"char_type"
 20146      5F747970 
 20146      6500
 20147              	.LASF265:
 20148 2160 62617369 		.string	"basic_string<char, std::char_traits<char>, std::allocator<char> >"
 20148      635F7374 
 20148      72696E67 
 20148      3C636861 
 20148      722C2073 
 20149              	.LASF932:
 20150 21a2 5F5F6C61 		.string	"__last"
 20150      737400
 20151              	.LASF780:
 20152 21a9 696E745F 		.string	"int_n_sep_by_space"
 20152      6E5F7365 
 20152      705F6279 
 20152      5F737061 
 20152      636500
 20153              	.LASF420:
 20154 21bc 6F737472 		.string	"ostream"
 20154      65616D00 
 20155              	.LASF42:
 20156 21c4 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc"
 20156      5374375F 
 20156      5F637878 
 20156      31313132 
 20156      62617369 
 20157              	.LASF414:
 20158 2212 5F5A4E53 		.string	"_ZNSt15basic_streambufIcSt11char_traitsIcEED4Ev"
 20158      74313562 
 20158      61736963 
 20158      5F737472 
 20158      65616D62 
 20159              	.LASF505:
 20160 2242 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_"
 20160      5F5F676E 
 20160      755F6378 
 20160      7831345F 
 20160      5F616C6C 
 20161              	.LASF68:
 20162 2281 62617369 		.string	"basic_string"
AARCH64 GAS  obj/extInstr.s 			page 596


 20162      635F7374 
 20162      72696E67 
 20162      00
 20163              	.LASF593:
 20164 228e 5F494F5F 		.string	"_IO_read_end"
 20164      72656164 
 20164      5F656E64 
 20164      00
 20165              	.LASF155:
 20166 229b 70757368 		.string	"push_back"
 20166      5F626163 
 20166      6B00
 20167              	.LASF694:
 20168 22a5 77637373 		.string	"wcsstr"
 20168      747200
 20169              	.LASF794:
 20170 22ac 6C646976 		.string	"ldiv_t"
 20170      5F7400
 20171              	.LASF579:
 20172 22b3 5F5F7672 		.string	"__vr_offs"
 20172      5F6F6666 
 20172      7300
 20173              	.LASF999:
 20174 22bd 5F537761 		.string	"_Swallow_assign"
 20174      6C6C6F77 
 20174      5F617373 
 20174      69676E00 
 20175              	.LASF945:
 20176 22cd 5F5F7674 		.string	"__vtt_parm"
 20176      745F7061 
 20176      726D00
 20177              	.LASF600:
 20178 22d8 5F494F5F 		.string	"_IO_save_base"
 20178      73617665 
 20178      5F626173 
 20178      6500
 20179              	.LASF992:
 20180 22e6 6E706F73 		.string	"npos"
 20180      00
 20181              	.LASF568:
 20182 22eb 5F497465 		.string	"_IteratorL"
 20182      7261746F 
 20182      724C00
 20183              	.LASF478:
 20184 22f6 5F5A5374 		.string	"_ZSt4setwi"
 20184      34736574 
 20184      776900
 20185              	.LASF909:
 20186 2301 5F5A4E36 		.string	"_ZN6Vec12811ToStringF64B5cxx11Ev"
 20186      56656331 
 20186      32383131 
 20186      546F5374 
 20186      72696E67 
 20187              	.LASF157:
 20188 2322 61737369 		.string	"assign"
 20188      676E00
 20189              	.LASF967:
AARCH64 GAS  obj/extInstr.s 			page 597


 20190 2329 5F5F7066 		.string	"__pf"
 20190      00
 20191              	.LASF258:
 20192 232e 62617369 		.string	"basic_stringbuf"
 20192      635F7374 
 20192      72696E67 
 20192      62756600 
 20193              	.LASF304:
 20194 233e 5F5A4E53 		.string	"_ZNSt11char_traitsIcE6lengthEPKc"
 20194      74313163 
 20194      6861725F 
 20194      74726169 
 20194      74734963 
 20195              	.LASF376:
 20196 235f 696F735F 		.string	"ios_base"
 20196      62617365 
 20196      00
 20197              	.LASF765:
 20198 2368 6D6F6E5F 		.string	"mon_thousands_sep"
 20198      74686F75 
 20198      73616E64 
 20198      735F7365 
 20198      7000
 20199              	.LASF597:
 20200 237a 5F494F5F 		.string	"_IO_write_end"
 20200      77726974 
 20200      655F656E 
 20200      6400
 20201              	.LASF930:
 20202 2388 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
 20202      5F5F676E 
 20202      755F6378 
 20202      7831375F 
 20202      5F6E6F72 
 20203              	.LASF424:
 20204 2433 64696666 		.string	"difference_type"
 20204      6572656E 
 20204      63655F74 
 20204      79706500 
 20205              	.LASF993:
 20206 2443 5F5A4E53 		.string	"_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED4Ev"
 20206      74375F5F 
 20206      63787831 
 20206      31313562 
 20206      61736963 
 20207              	.LASF295:
 20208 2480 5F5A4E53 		.string	"_ZNSt21piecewise_construct_tC4Ev"
 20208      74323170 
 20208      69656365 
 20208      77697365 
 20208      5F636F6E 
 20209              	.LASF12:
 20210 24a1 5F4D5F6C 		.string	"_M_length"
 20210      656E6774 
 20210      6800
 20211              	.LASF652:
 20212 24ab 77637274 		.string	"wcrtomb"
AARCH64 GAS  obj/extInstr.s 			page 598


 20212      6F6D6200 
 20213              	.LASF72:
 20214 24b3 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC4ERKS4_mm"
 20214      74375F5F 
 20214      63787831 
 20214      31313262 
 20214      61736963 
 20215              	.LASF331:
 20216 24f3 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIcEE8allocateERS0_mPKv"
 20216      74313661 
 20216      6C6C6F63 
 20216      61746F72 
 20216      5F747261 
 20217              	.LASF310:
 20218 2524 746F5F63 		.string	"to_char_type"
 20218      6861725F 
 20218      74797065 
 20218      00
 20219              	.LASF484:
 20220 2531 5F5A5374 		.string	"_ZSt16__throw_bad_castv"
 20220      31365F5F 
 20220      7468726F 
 20220      775F6261 
 20220      645F6361 
 20221              	.LASF598:
 20222 2549 5F494F5F 		.string	"_IO_buf_base"
 20222      6275665F 
 20222      62617365 
 20222      00
 20223              	.LASF612:
 20224 2556 5F6F6666 		.string	"_offset"
 20224      73657400 
 20225              	.LASF355:
 20226 255e 6C697465 		.string	"literals"
 20226      72616C73 
 20226      00
 20227              	.LASF711:
 20228 2567 5F5F7569 		.string	"__uint16_t"
 20228      6E743136 
 20228      5F7400
 20229              	.LASF845:
 20230 2572 66736574 		.string	"fsetpos"
 20230      706F7300 
 20231              	.LASF1:
 20232 257a 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC4EPcRKS3_"
 20232      74375F5F 
 20232      63787831 
 20232      31313262 
 20232      61736963 
 20233              	.LASF957:
 20234 25c8 5F5A4E53 		.string	"_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev"
 20234      74375F5F 
 20234      63787831 
 20234      31313962 
 20234      61736963 
 20235              	.LASF893:
 20236 2609 5F5A4E36 		.string	"_ZN6Vec12811ToStringU16B5cxx11Ev"
AARCH64 GAS  obj/extInstr.s 			page 599


 20236      56656331 
 20236      32383131 
 20236      546F5374 
 20236      72696E67 
 20237              	.LASF405:
 20238 262a 70626173 		.string	"pbase"
 20238      6500
 20239              	.LASF327:
 20240 2630 5F5A4E53 		.string	"_ZNSaIcED4Ev"
 20240      61496345 
 20240      44344576 
 20240      00
 20241              	.LASF576:
 20242 263d 5F5F6772 		.string	"__gr_top"
 20242      5F746F70 
 20242      00
 20243              	.LASF334:
 20244 2646 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm"
 20244      74313661 
 20244      6C6C6F63 
 20244      61746F72 
 20244      5F747261 
 20245              	.LASF842:
 20246 2679 66726561 		.string	"fread"
 20246      6400
 20247              	.LASF482:
 20248 267f 5F5A5374 		.string	"_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l"
 20248      31365F5F 
 20248      6F737472 
 20248      65616D5F 
 20248      696E7365 
 20249              	.LASF35:
 20250 26cd 616C6C6F 		.string	"allocator_type"
 20250      6361746F 
 20250      725F7479 
 20250      706500
 20251              	.LASF843:
 20252 26dc 6672656F 		.string	"freopen"
 20252      70656E00 
 20253              	.LASF273:
 20254 26e4 5F4D5F67 		.string	"_M_get"
 20254      657400
 20255              	.LASF737:
 20256 26eb 75696E74 		.string	"uint64_t"
 20256      36345F74 
 20256      00
 20257              	.LASF27:
 20258 26f4 5F4D5F64 		.string	"_M_dispose"
 20258      6973706F 
 20258      736500
 20259              	.LASF633:
 20260 26ff 6D62726C 		.string	"mbrlen"
 20260      656E00
 20261              	.LASF793:
 20262 2706 366C6469 		.string	"6ldiv_t"
 20262      765F7400 
 20263              	.LASF535:
AARCH64 GAS  obj/extInstr.s 			page 600


 20264 270e 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEp
 20264      5F5F676E 
 20264      755F6378 
 20264      7831375F 
 20264      5F6E6F72 
 20265              	.LASF397:
 20266 276b 5F5A4E53 		.string	"_ZNSolsEm"
 20266      6F6C7345 
 20266      6D00
 20267              	.LASF689:
 20268 2775 77736361 		.string	"wscanf"
 20268      6E6600
 20269              	.LASF122:
 20270 277c 63617061 		.string	"capacity"
 20270      63697479 
 20270      00
 20271              	.LASF950:
 20272 2785 5F5A4E53 		.string	"_ZNSt9basic_iosIcSt11char_traitsIcEEC2Ev"
 20272      74396261 
 20272      7369635F 
 20272      696F7349 
 20272      63537431 
 20273              	.LASF997:
 20274 27ae 5F5A5374 		.string	"_ZSt4cout"
 20274      34636F75 
 20274      7400
 20275              	.LASF649:
 20276 27b8 76777072 		.string	"vwprintf"
 20276      696E7466 
 20276      00
 20277              	.LASF289:
 20278 27c1 72657468 		.string	"rethrow_exception"
 20278      726F775F 
 20278      65786365 
 20278      7074696F 
 20278      6E00
 20279              	.LASF459:
 20280 27d3 62617369 		.string	"basic_ios"
 20280      635F696F 
 20280      7300
 20281              	.LASF829:
 20282 27dd 5F494F5F 		.string	"_IO_marker"
 20282      6D61726B 
 20282      657200
 20283              	.LASF440:
 20284 27e8 636F6E64 		.string	"conditional<false, std::__undefined, char const>"
 20284      6974696F 
 20284      6E616C3C 
 20284      66616C73 
 20284      652C2073 
 20285              	.LASF374:
 20286 2819 5F535F69 		.string	"_S_ios_iostate_max"
 20286      6F735F69 
 20286      6F737461 
 20286      74655F6D 
 20286      617800
 20287              	.LASF105:
AARCH64 GAS  obj/extInstr.s 			page 601


 20288 282c 63656E64 		.string	"cend"
 20288      00
 20289              	.LASF905:
 20290 2831 5F5A4E36 		.string	"_ZN6Vec12811ToStringX64B5cxx11Ev"
 20290      56656331 
 20290      32383131 
 20290      546F5374 
 20290      72696E67 
 20291              	.LASF125:
 20292 2852 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm"
 20292      74375F5F 
 20292      63787831 
 20292      31313262 
 20292      61736963 
 20293              	.LASF363:
 20294 2892 5F535F74 		.string	"_S_trunc"
 20294      72756E63 
 20294      00
 20295              	.LASF98:
 20296 289b 636F6E73 		.string	"const_reverse_iterator"
 20296      745F7265 
 20296      76657273 
 20296      655F6974 
 20296      65726174 
 20297              	.LASF16:
 20298 28b2 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv"
 20298      74375F5F 
 20298      63787831 
 20298      31313262 
 20298      61736963 
 20299              	.LASF552:
 20300 28f9 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
 20300      5F5F676E 
 20300      755F6378 
 20300      7831375F 
 20300      5F6E6F72 
 20301              	.LASF154:
 20302 2957 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendESt16initializer_listIcE"
 20302      74375F5F 
 20302      63787831 
 20302      31313262 
 20302      61736963 
 20303              	.LASF551:
 20304 29ac 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
 20304      5F5F676E 
 20304      755F6378 
 20304      7831375F 
 20304      5F6E6F72 
 20305              	.LASF411:
 20306 2a0a 62617369 		.string	"basic_streambuf"
 20306      635F7374 
 20306      7265616D 
 20306      62756600 
 20307              	.LASF61:
 20308 2a1a 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_S_compareEmm"
 20308      74375F5F 
 20308      63787831 
AARCH64 GAS  obj/extInstr.s 			page 602


 20308      31313262 
 20308      61736963 
 20309              	.LASF522:
 20310 2a5f 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC
 20310      5F5F676E 
 20310      755F6378 
 20310      7831375F 
 20310      5F6E6F72 
 20311              	.LASF329:
 20312 2abc 616C6C6F 		.string	"allocate"
 20312      63617465 
 20312      00
 20313              	.LASF653:
 20314 2ac5 77637363 		.string	"wcscat"
 20314      617400
 20315              	.LASF1004:
 20316 2acc 5F494F5F 		.string	"_IO_lock_t"
 20316      6C6F636B 
 20316      5F7400
 20317              	.LASF333:
 20318 2ad7 6465616C 		.string	"deallocate"
 20318      6C6F6361 
 20318      746500
 20319              	.LASF592:
 20320 2ae2 5F494F5F 		.string	"_IO_read_ptr"
 20320      72656164 
 20320      5F707472 
 20320      00
 20321              	.LASF910:
 20322 2aef 546F5374 		.string	"ToStringUint<short unsigned int>"
 20322      72696E67 
 20322      55696E74 
 20322      3C73686F 
 20322      72742075 
 20323              	.LASF241:
 20324 2b10 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEcm"
 20324      5374375F 
 20324      5F637878 
 20324      31313132 
 20324      62617369 
 20325              	.LASF606:
 20326 2b5c 5F666C61 		.string	"_flags2"
 20326      67733200 
 20327              	.LASF852:
 20328 2b64 72657769 		.string	"rewind"
 20328      6E6400
 20329              	.LASF357:
 20330 2b6b 5F535F6C 		.string	"_S_local_capacity"
 20330      6F63616C 
 20330      5F636170 
 20330      61636974 
 20330      7900
 20331              	.LASF773:
 20332 2b7d 6E5F6373 		.string	"n_cs_precedes"
 20332      5F707265 
 20332      63656465 
 20332      7300
AARCH64 GAS  obj/extInstr.s 			page 603


 20333              	.LASF613:
 20334 2b8b 5F636F64 		.string	"_codecvt"
 20334      65637674 
 20334      00
 20335              	.LASF944:
 20336 2b94 5F5A4E53 		.string	"_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEC2ESt13_Ios_Openmode"
 20336      74375F5F 
 20336      63787831 
 20336      31313562 
 20336      61736963 
 20337              	.LASF880:
 20338 2be1 6D5F4633 		.string	"m_F32"
 20338      3200
 20339              	.LASF723:
 20340 2be7 5F5F7569 		.string	"__uint_least64_t"
 20340      6E745F6C 
 20340      65617374 
 20340      36345F74 
 20340      00
 20341              	.LASF287:
 20342 2bf8 5F5F6378 		.string	"__cxa_exception_type"
 20342      615F6578 
 20342      63657074 
 20342      696F6E5F 
 20342      74797065 
 20343              	.LASF0:
 20344 2c0d 5F416C6C 		.string	"_Alloc_hider"
 20344      6F635F68 
 20344      69646572 
 20344      00
 20345              	.LASF596:
 20346 2c1a 5F494F5F 		.string	"_IO_write_ptr"
 20346      77726974 
 20346      655F7074 
 20346      7200
 20347              	.LASF234:
 20348 2c28 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcmm"
 20348      5374375F 
 20348      5F637878 
 20348      31313132 
 20348      62617369 
 20349              	.LASF192:
 20350 2c78 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_itera
 20350      74375F5F 
 20350      63787831 
 20350      31313262 
 20350      61736963 
 20351              	.LASF901:
 20352 2ce7 5F5A4E36 		.string	"_ZN6Vec12811ToStringX16B5cxx11Ev"
 20352      56656331 
 20352      32383131 
 20352      546F5374 
 20352      72696E67 
 20353              	.LASF1006:
 20354 2d08 5F474C4F 		.string	"_GLOBAL__sub_I_a"
 20354      42414C5F 
 20354      5F737562 
AARCH64 GAS  obj/extInstr.s 			page 604


 20354      5F495F61 
 20354      00
 20355              	.LASF280:
 20356 2d19 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptraSERKS0_"
 20356      7431355F 
 20356      5F657863 
 20356      65707469 
 20356      6F6E5F70 
 20357              	.LASF20:
 20358 2d47 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm"
 20358      74375F5F 
 20358      63787831 
 20358      31313262 
 20358      61736963 
 20359              	.LASF138:
 20360 2d8c 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5frontEv"
 20360      74375F5F 
 20360      63787831 
 20360      31313262 
 20360      61736963 
 20361              	.LASF659:
 20362 2dca 746D5F73 		.string	"tm_sec"
 20362      656300
 20363              	.LASF498:
 20364 2dd1 5F5A4E39 		.string	"_ZN9__gnu_cxx13new_allocatorIcE8allocateEmPKv"
 20364      5F5F676E 
 20364      755F6378 
 20364      7831336E 
 20364      65775F61 
 20365              	.LASF541:
 20366 2dff 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
 20366      395F5F67 
 20366      6E755F63 
 20366      78783137 
 20366      5F5F6E6F 
 20367              	.LASF571:
 20368 2e5d 666C6F61 		.string	"float"
 20368      7400
 20369              	.LASF881:
 20370 2e63 6D5F4636 		.string	"m_F64"
 20370      3400
 20371              	.LASF353:
 20372 2e69 73747269 		.string	"string"
 20372      6E6700
 20373              	.LASF754:
 20374 2e70 696E7470 		.string	"intptr_t"
 20374      74725F74 
 20374      00
 20375              	.LASF1003:
 20376 2e79 6465636C 		.string	"decltype(nullptr)"
 20376      74797065 
 20376      286E756C 
 20376      6C707472 
 20376      2900
 20377              	.LASF344:
 20378 2e8b 5F5A4E53 		.string	"_ZNSt16initializer_listIcEC4EPKcm"
 20378      74313669 
AARCH64 GAS  obj/extInstr.s 			page 605


 20378      6E697469 
 20378      616C697A 
 20378      65725F6C 
 20379              	.LASF708:
 20380 2ead 5F5F696E 		.string	"__int8_t"
 20380      74385F74 
 20380      00
 20381              	.LASF214:
 20382 2eb6 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findERKS4_m"
 20382      5374375F 
 20382      5F637878 
 20382      31313132 
 20382      62617369 
 20383              	.LASF375:
 20384 2ef9 5F535F69 		.string	"_S_ios_iostate_min"
 20384      6F735F69 
 20384      6F737461 
 20384      74655F6D 
 20384      696E00
 20385              	.LASF774:
 20386 2f0c 6E5F7365 		.string	"n_sep_by_space"
 20386      705F6279 
 20386      5F737061 
 20386      636500
 20387              	.LASF347:
 20388 2f1b 5F5A4E4B 		.string	"_ZNKSt16initializer_listIcE5beginEv"
 20388      53743136 
 20388      696E6974 
 20388      69616C69 
 20388      7A65725F 
 20389              	.LASF760:
 20390 2f3f 74686F75 		.string	"thousands_sep"
 20390      73616E64 
 20390      735F7365 
 20390      7000
 20391              	.LASF3:
 20392 2f4d 5F4D5F6C 		.string	"_M_local_buf"
 20392      6F63616C 
 20392      5F627566 
 20392      00
 20393              	.LASF691:
 20394 2f5a 77637363 		.string	"wcschr"
 20394      687200
 20395              	.LASF637:
 20396 2f61 70757477 		.string	"putwc"
 20396      6300
 20397              	.LASF920:
 20398 2f67 5F5F7374 		.string	"__str"
 20398      7200
 20399              	.LASF17:
 20400 2f6d 636F6E73 		.string	"const_pointer"
 20400      745F706F 
 20400      696E7465 
 20400      7200
 20401              	.LASF884:
 20402 2f7b 546F5374 		.string	"ToStringI16"
 20402      72696E67 
AARCH64 GAS  obj/extInstr.s 			page 606


 20402      49313600 
 20403              	.LASF123:
 20404 2f87 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv"
 20404      5374375F 
 20404      5F637878 
 20404      31313132 
 20404      62617369 
 20405              	.LASF981:
 20406 2fc9 6F706572 		.string	"operator delete"
 20406      61746F72 
 20406      2064656C 
 20406      65746500 
 20407              	.LASF560:
 20408 2fd9 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 20408      395F5F67 
 20408      6E755F63 
 20408      78783137 
 20408      5F5F6E6F 
 20409              	.LASF460:
 20410 303b 5F5A4E53 		.string	"_ZNSt9basic_iosIcSt11char_traitsIcEEC4Ev"
 20410      74396261 
 20410      7369635F 
 20410      696F7349 
 20410      63537431 
 20411              	.LASF269:
 20412 3064 5F4D5F61 		.string	"_M_addref"
 20412      64647265 
 20412      6600
 20413              	.LASF187:
 20414 306e 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_itera
 20414      74375F5F 
 20414      63787831 
 20414      31313262 
 20414      61736963 
 20415              	.LASF750:
 20416 30dc 75696E74 		.string	"uint_fast8_t"
 20416      5F666173 
 20416      74385F74 
 20416      00
 20417              	.LASF611:
 20418 30e9 5F6C6F63 		.string	"_lock"
 20418      6B00
 20419              	.LASF974:
 20420 30ef 5F5F7769 		.string	"__wide"
 20420      646500
 20421              	.LASF738:
 20422 30f6 696E745F 		.string	"int_least8_t"
 20422      6C656173 
 20422      74385F74 
 20422      00
 20423              	.LASF119:
 20424 3103 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6resizeEm"
 20424      74375F5F 
 20424      63787831 
 20424      31313262 
 20424      61736963 
 20425              	.LASF813:
AARCH64 GAS  obj/extInstr.s 			page 607


 20426 3142 73747274 		.string	"strtod"
 20426      6F6400
 20427              	.LASF823:
 20428 3149 73747274 		.string	"strtof"
 20428      6F6600
 20429              	.LASF160:
 20430 3150 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignERKS4_mm"
 20430      74375F5F 
 20430      63787831 
 20430      31313262 
 20430      61736963 
 20431              	.LASF814:
 20432 3195 73747274 		.string	"strtol"
 20432      6F6C00
 20433              	.LASF718:
 20434 319c 5F5F696E 		.string	"__int_least16_t"
 20434      745F6C65 
 20434      61737431 
 20434      365F7400 
 20435              	.LASF303:
 20436 31ac 5F5A4E53 		.string	"_ZNSt11char_traitsIcE7compareEPKcS2_m"
 20436      74313163 
 20436      6861725F 
 20436      74726169 
 20436      74734963 
 20437              	.LASF104:
 20438 31d2 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6cbeginEv"
 20438      5374375F 
 20438      5F637878 
 20438      31313132 
 20438      62617369 
 20439              	.LASF362:
 20440 3212 5F535F6F 		.string	"_S_out"
 20440      757400
 20441              	.LASF215:
 20442 3219 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcm"
 20442      5374375F 
 20442      5F637878 
 20442      31313132 
 20442      62617369 
 20443              	.LASF886:
 20444 325a 546F5374 		.string	"ToStringI32"
 20444      72696E67 
 20444      49333200 
 20445              	.LASF124:
 20446 3266 72657365 		.string	"reserve"
 20446      72766500 
 20447              	.LASF752:
 20448 326e 75696E74 		.string	"uint_fast32_t"
 20448      5F666173 
 20448      7433325F 
 20448      7400
 20449              	.LASF400:
 20450 327c 5F5A4E53 		.string	"_ZNSo3putEc"
 20450      6F337075 
 20450      74456300 
 20451              	.LASF486:
AARCH64 GAS  obj/extInstr.s 			page 608


 20452 3288 5F5F6578 		.string	"__exception_ptr"
 20452      63657074 
 20452      696F6E5F 
 20452      70747200 
 20453              	.LASF434:
 20454 3298 636F6E64 		.string	"conditional<false, std::__undefined, char>"
 20454      6974696F 
 20454      6E616C3C 
 20454      66616C73 
 20454      652C2073 
 20455              	.LASF10:
 20456 32c3 5F4D5F64 		.string	"_M_data"
 20456      61746100 
 20457              	.LASF946:
 20458 32cb 5F5A4E53 		.string	"_ZNSoD2Ev"
 20458      6F443245 
 20458      7600
 20459              	.LASF599:
 20460 32d5 5F494F5F 		.string	"_IO_buf_end"
 20460      6275665F 
 20460      656E6400 
 20461              	.LASF368:
 20462 32e1 5F496F73 		.string	"_Ios_Iostate"
 20462      5F496F73 
 20462      74617465 
 20462      00
 20463              	.LASF621:
 20464 32ee 73686F72 		.string	"short unsigned int"
 20464      7420756E 
 20464      7369676E 
 20464      65642069 
 20464      6E7400
 20465              	.LASF407:
 20466 3301 65677074 		.string	"egptr"
 20466      7200
 20467              	.LASF776:
 20468 3307 6E5F7369 		.string	"n_sign_posn"
 20468      676E5F70 
 20468      6F736E00 
 20469              	.LASF696:
 20470 3313 77637374 		.string	"wcstold"
 20470      6F6C6400 
 20471              	.LASF739:
 20472 331b 696E745F 		.string	"int_least16_t"
 20472      6C656173 
 20472      7431365F 
 20472      7400
 20473              	.LASF697:
 20474 3329 77637374 		.string	"wcstoll"
 20474      6F6C6C00 
 20475              	.LASF674:
 20476 3331 77637372 		.string	"wcsrtombs"
 20476      746F6D62 
 20476      7300
 20477              	.LASF819:
 20478 333b 6C6C6469 		.string	"lldiv"
 20478      7600
AARCH64 GAS  obj/extInstr.s 			page 609


 20479              	.LASF266:
 20480 3341 65786365 		.string	"exception_ptr"
 20480      7074696F 
 20480      6E5F7074 
 20480      7200
 20481              	.LASF654:
 20482 334f 77637363 		.string	"wcscmp"
 20482      6D7000
 20483              	.LASF710:
 20484 3356 5F5F696E 		.string	"__int16_t"
 20484      7431365F 
 20484      7400
 20485              	.LASF657:
 20486 3360 77637363 		.string	"wcscspn"
 20486      73706E00 
 20487              	.LASF830:
 20488 3368 5F494F5F 		.string	"_IO_codecvt"
 20488      636F6465 
 20488      63767400 
 20489              	.LASF935:
 20490 3374 5F5A4E53 		.string	"_ZNSt15basic_streambufIcSt11char_traitsIcEEC2Ev"
 20490      74313562 
 20490      61736963 
 20490      5F737472 
 20490      65616D62 
 20491              	.LASF594:
 20492 33a4 5F494F5F 		.string	"_IO_read_base"
 20492      72656164 
 20492      5F626173 
 20492      6500
 20493              	.LASF922:
 20494 33b2 5F5F6C65 		.string	"__len"
 20494      6E00
 20495              	.LASF110:
 20496 33b8 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5crendEv"
 20496      5374375F 
 20496      5F637878 
 20496      31313132 
 20496      62617369 
 20497              	.LASF888:
 20498 33f7 546F5374 		.string	"ToStringI64"
 20498      72696E67 
 20498      49363400 
 20499              	.LASF285:
 20500 3403 7E626173 		.string	"~basic_ostringstream"
 20500      69635F6F 
 20500      73747269 
 20500      6E677374 
 20500      7265616D 
 20501              	.LASF349:
 20502 3418 5F5A4E4B 		.string	"_ZNKSt16initializer_listIcE3endEv"
 20502      53743136 
 20502      696E6974 
 20502      69616C69 
 20502      7A65725F 
 20503              	.LASF141:
 20504 343a 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4backEv"
AARCH64 GAS  obj/extInstr.s 			page 610


 20504      74375F5F 
 20504      63787831 
 20504      31313262 
 20504      61736963 
 20505              	.LASF630:
 20506 3477 66777363 		.string	"fwscanf"
 20506      616E6600 
 20507              	.LASF582:
 20508 347f 5F5F7763 		.string	"__wch"
 20508      6800
 20509              	.LASF542:
 20510 3485 62617365 		.string	"base"
 20510      00
 20511              	.LASF495:
 20512 348a 61646472 		.string	"address"
 20512      65737300 
 20513              	.LASF48:
 20514 3492 5F535F6D 		.string	"_S_move"
 20514      6F766500 
 20515              	.LASF775:
 20516 349a 705F7369 		.string	"p_sign_posn"
 20516      676E5F70 
 20516      6F736E00 
 20517              	.LASF102:
 20518 34a6 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4rendEv"
 20518      5374375F 
 20518      5F637878 
 20518      31313132 
 20518      62617369 
 20519              	.LASF734:
 20520 34e4 75696E74 		.string	"uint8_t"
 20520      385F7400 
 20521              	.LASF263:
 20522 34ec 62617369 		.string	"basic_ostringstream"
 20522      635F6F73 
 20522      7472696E 
 20522      67737472 
 20522      65616D00 
 20523              	.LASF589:
 20524 3500 5F5F4649 		.string	"__FILE"
 20524      4C4500
 20525              	.LASF725:
 20526 3507 5F5F7569 		.string	"__uintmax_t"
 20526      6E746D61 
 20526      785F7400 
 20527              	.LASF191:
 20528 3513 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_itera
 20528      74375F5F 
 20528      63787831 
 20528      31313262 
 20528      61736963 
 20529              	.LASF244:
 20530 3581 636F6D70 		.string	"compare"
 20530      61726500 
 20531              	.LASF152:
 20532 3589 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc"
 20532      74375F5F 
AARCH64 GAS  obj/extInstr.s 			page 611


 20532      63787831 
 20532      31313262 
 20532      61736963 
 20533              	.LASF203:
 20534 35ca 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4copyEPcmm"
 20534      5374375F 
 20534      5F637878 
 20534      31313132 
 20534      62617369 
 20535              	.LASF656:
 20536 360b 77637363 		.string	"wcscpy"
 20536      707900
 20537              	.LASF585:
 20538 3612 5F5F7661 		.string	"__value"
 20538      6C756500 
 20539              	.LASF168:
 20540 361a 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEmRKS4_"
 20540      74375F5F 
 20540      63787831 
 20540      31313262 
 20540      61736963 
 20541              	.LASF610:
 20542 365e 5F73686F 		.string	"_shortbuf"
 20542      72746275 
 20542      6600
 20543              	.LASF267:
 20544 3668 5F4D5F65 		.string	"_M_exception_object"
 20544      78636570 
 20544      74696F6E 
 20544      5F6F626A 
 20544      65637400 
 20545              	.LASF683:
 20546 367c 7763746F 		.string	"wctob"
 20546      6200
 20547              	.LASF372:
 20548 3682 5F535F66 		.string	"_S_failbit"
 20548      61696C62 
 20548      697400
 20549              	.LASF986:
 20550 368d 5F5F6275 		.string	"__builtin_unwind_resume"
 20550      696C7469 
 20550      6E5F756E 
 20550      77696E64 
 20550      5F726573 
 20551              	.LASF837:
 20552 36a5 66666C75 		.string	"fflush"
 20552      736800
 20553              	.LASF290:
 20554 36ac 5F5A5374 		.string	"_ZSt17rethrow_exceptionNSt15__exception_ptr13exception_ptrE"
 20554      31377265 
 20554      7468726F 
 20554      775F6578 
 20554      63657074 
 20555              	.LASF453:
 20556 36e8 5F466163 		.string	"_Facet"
 20556      657400
 20557              	.LASF74:
AARCH64 GAS  obj/extInstr.s 			page 612


 20558 36ef 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC4EPKcmRKS3_"
 20558      74375F5F 
 20558      63787831 
 20558      31313262 
 20558      61736963 
 20559              	.LASF174:
 20560 3731 5F5F636F 		.string	"__const_iterator"
 20560      6E73745F 
 20560      69746572 
 20560      61746F72 
 20560      00
 20561              	.LASF584:
 20562 3742 5F5F636F 		.string	"__count"
 20562      756E7400 
 20563              	.LASF702:
 20564 374a 756E7369 		.string	"unsigned char"
 20564      676E6564 
 20564      20636861 
 20564      7200
 20565              	.LASF406:
 20566 3758 5F5A4E4B 		.string	"_ZNKSt15basic_streambufIcSt11char_traitsIcEE5pbaseEv"
 20566      53743135 
 20566      62617369 
 20566      635F7374 
 20566      7265616D 
 20567              	.LASF692:
 20568 378d 77637370 		.string	"wcspbrk"
 20568      62726B00 
 20569              	.LASF897:
 20570 3795 5F5A4E36 		.string	"_ZN6Vec12811ToStringU64B5cxx11Ev"
 20570      56656331 
 20570      32383131 
 20570      546F5374 
 20570      72696E67 
 20571              	.LASF575:
 20572 37b6 5F5F7374 		.string	"__stack"
 20572      61636B00 
 20573              	.LASF964:
 20574 37be 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcRKS3_"
 20574      74375F5F 
 20574      63787831 
 20574      31313262 
 20574      61736963 
 20575              	.LASF778:
 20576 380c 696E745F 		.string	"int_p_sep_by_space"
 20576      705F7365 
 20576      705F6279 
 20576      5F737061 
 20576      636500
 20577              	.LASF972:
 20578 381f 5F5A4E53 		.string	"_ZNSaIcEC2Ev"
 20578      61496345 
 20578      43324576 
 20578      00
 20579              	.LASF350:
 20580 382c 74797065 		.string	"type_info"
 20580      5F696E66 
AARCH64 GAS  obj/extInstr.s 			page 613


 20580      6F00
 20581              	.LASF847:
 20582 3836 67657463 		.string	"getc"
 20582      00
 20583              	.LASF835:
 20584 383b 66656F66 		.string	"feof"
 20584      00
 20585              	.LASF851:
 20586 3840 72656E61 		.string	"rename"
 20586      6D6500
 20587              	.LASF557:
 20588 3847 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 20588      395F5F67 
 20588      6E755F63 
 20588      78783137 
 20588      5F5F6E6F 
 20589              	.LASF914:
 20590 38a6 696E6478 		.string	"indx"
 20590      00
 20591              	.LASF762:
 20592 38ab 696E745F 		.string	"int_curr_symbol"
 20592      63757272 
 20592      5F73796D 
 20592      626F6C00 
 20593              	.LASF635:
 20594 38bb 6D627369 		.string	"mbsinit"
 20594      6E697400 
 20595              	.LASF71:
 20596 38c3 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC4ERKS4_mRKS3_"
 20596      74375F5F 
 20596      63787831 
 20596      31313262 
 20596      61736963 
 20597              	.LASF639:
 20598 3907 73777072 		.string	"swprintf"
 20598      696E7466 
 20598      00
 20599              	.LASF337:
 20600 3910 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_"
 20600      74313661 
 20600      6C6C6F63 
 20600      61746F72 
 20600      5F747261 
 20601              	.LASF862:
 20602 395c 77637472 		.string	"wctrans"
 20602      616E7300 
 20603              	.LASF401:
 20604 3964 5F4D5F69 		.string	"_M_insert<long unsigned int>"
 20604      6E736572 
 20604      743C6C6F 
 20604      6E672075 
 20604      6E736967 
 20605              	.LASF139:
 20606 3981 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5frontEv"
 20606      5374375F 
 20606      5F637878 
 20606      31313132 
AARCH64 GAS  obj/extInstr.s 			page 614


 20606      62617369 
 20607              	.LASF687:
 20608 39c0 776D656D 		.string	"wmemset"
 20608      73657400 
 20609              	.LASF445:
 20610 39c8 5F5F6164 		.string	"__addressof<char const>"
 20610      64726573 
 20610      736F663C 
 20610      63686172 
 20610      20636F6E 
 20611              	.LASF475:
 20612 39e0 5F5A5374 		.string	"_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc"
 20612      6C734953 
 20612      74313163 
 20612      6861725F 
 20612      74726169 
 20613              	.LASF658:
 20614 3a18 77637366 		.string	"wcsftime"
 20614      74696D65 
 20614      00
 20615              	.LASF828:
 20616 3a21 5F5F6670 		.string	"__fpos_t"
 20616      6F735F74 
 20616      00
 20617              	.LASF57:
 20618 3a2a 636F6E73 		.string	"const_iterator"
 20618      745F6974 
 20618      65726174 
 20618      6F7200
 20619              	.LASF499:
 20620 3a39 5F5A4E39 		.string	"_ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcm"
 20620      5F5F676E 
 20620      755F6378 
 20620      7831336E 
 20620      65775F61 
 20621              	.LASF783:
 20622 3a69 7365746C 		.string	"setlocale"
 20622      6F63616C 
 20622      6500
 20623              	.LASF421:
 20624 3a73 70696563 		.string	"piecewise_construct"
 20624      65776973 
 20624      655F636F 
 20624      6E737472 
 20624      75637400 
 20625              	.LASF833:
 20626 3a87 636C6561 		.string	"clearerr"
 20626      72657272 
 20626      00
 20627              	.LASF681:
 20628 3a90 77637374 		.string	"wcstoul"
 20628      6F756C00 
 20629              	.LASF146:
 20630 3a98 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc"
 20630      74375F5F 
 20630      63787831 
 20630      31313262 
AARCH64 GAS  obj/extInstr.s 			page 615


 20630      61736963 
 20631              	.LASF90:
 20632 3ad2 62656769 		.string	"begin"
 20632      6E00
 20633              	.LASF515:
 20634 3ad8 5F535F6E 		.string	"_S_nothrow_move"
 20634      6F746872 
 20634      6F775F6D 
 20634      6F766500 
 20635              	.LASF539:
 20636 3ae8 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEm
 20636      5F5F676E 
 20636      755F6378 
 20636      7831375F 
 20636      5F6E6F72 
 20637              	.LASF433:
 20638 3b45 74797065 		.string	"type"
 20638      00
 20639              	.LASF647:
 20640 3b4a 76737773 		.string	"vswscanf"
 20640      63616E66 
 20640      00
 20641              	.LASF726:
 20642 3b53 5F5F6F66 		.string	"__off_t"
 20642      665F7400 
 20643              	.LASF45:
 20644 3b5b 5F4D5F64 		.string	"_M_disjunct"
 20644      69736A75 
 20644      6E637400 
 20645              	.LASF380:
 20646 3b67 5F5A4E53 		.string	"_ZNSt8ios_base4InitD4Ev"
 20646      7438696F 
 20646      735F6261 
 20646      73653449 
 20646      6E697444 
 20647              	.LASF162:
 20648 3b7f 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc"
 20648      74375F5F 
 20648      63787831 
 20648      31313262 
 20648      61736963 
 20649              	.LASF943:
 20650 3bc0 5F5F6D6F 		.string	"__mode"
 20650      646500
 20651              	.LASF632:
 20652 3bc7 67657477 		.string	"getwc"
 20652      6300
 20653              	.LASF850:
 20654 3bcd 72656D6F 		.string	"remove"
 20654      766500
 20655              	.LASF148:
 20656 3bd4 61707065 		.string	"append"
 20656      6E6400
 20657              	.LASF181:
 20658 3bdb 7265706C 		.string	"replace"
 20658      61636500 
 20659              	.LASF194:
AARCH64 GAS  obj/extInstr.s 			page 616


 20660 3be3 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_itera
 20660      74375F5F 
 20660      63787831 
 20660      31313262 
 20660      61736963 
 20661              	.LASF890:
 20662 3c52 546F5374 		.string	"ToStringU8"
 20662      72696E67 
 20662      553800
 20663              	.LASF392:
 20664 3c5d 5F5A4E53 		.string	"_ZNSoD4Ev"
 20664      6F443445 
 20664      7600
 20665              	.LASF360:
 20666 3c67 5F535F62 		.string	"_S_bin"
 20666      696E00
 20667              	.LASF379:
 20668 3c6e 7E496E69 		.string	"~Init"
 20668      7400
 20669              	.LASF199:
 20670 3c74 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm"
 20670      74375F5F 
 20670      63787831 
 20670      31313262 
 20670      61736963 
 20671              	.LASF196:
 20672 3cbd 5F4D5F72 		.string	"_M_replace_aux"
 20672      65706C61 
 20672      63655F61 
 20672      757800
 20673              	.LASF646:
 20674 3ccc 76737770 		.string	"vswprintf"
 20674      72696E74 
 20674      6600
 20675              	.LASF377:
 20676 3cd6 496E6974 		.string	"Init"
 20676      00
 20677              	.LASF929:
 20678 3cdb 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC
 20678      5F5F676E 
 20678      755F6378 
 20678      7831375F 
 20678      5F6E6F72 
 20679              	.LASF554:
 20680 3d3c 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
 20680      5F5F676E 
 20680      755F6378 
 20680      7831375F 
 20680      5F6E6F72 
 20681              	.LASF126:
 20682 3d9a 636C6561 		.string	"clear"
 20682      7200
 20683              	.LASF553:
 20684 3da0 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
 20684      5F5F676E 
 20684      755F6378 
 20684      7831375F 
AARCH64 GAS  obj/extInstr.s 			page 617


 20684      5F6E6F72 
 20685              	.LASF250:
 20686 3dfe 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEmmPKcm"
 20686      5374375F 
 20686      5F637878 
 20686      31313132 
 20686      62617369 
 20687              	.LASF504:
 20688 3e44 5F535F73 		.string	"_S_select_on_copy"
 20688      656C6563 
 20688      745F6F6E 
 20688      5F636F70 
 20688      7900
 20689              	.LASF474:
 20690 3e56 6F706572 		.string	"operator<< <std::char_traits<char> >"
 20690      61746F72 
 20690      3C3C203C 
 20690      7374643A 
 20690      3A636861 
 20691              	.LASF782:
 20692 3e7b 696E745F 		.string	"int_n_sign_posn"
 20692      6E5F7369 
 20692      676E5F70 
 20692      6F736E00 
 20693              	.LASF412:
 20694 3e8b 5F5A4E53 		.string	"_ZNSt15basic_streambufIcSt11char_traitsIcEEC4Ev"
 20694      74313562 
 20694      61736963 
 20694      5F737472 
 20694      65616D62 
 20695              	.LASF728:
 20696 3ebb 5F5F636C 		.string	"__clock_t"
 20696      6F636B5F 
 20696      7400
 20697              	.LASF188:
 20698 3ec5 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_itera
 20698      74375F5F 
 20698      63787831 
 20698      31313262 
 20698      61736963 
 20699              	.LASF469:
 20700 3f32 5F5A5374 		.string	"_ZSt4moveIRSaIcEEONSt16remove_referenceIT_E4typeEOS3_"
 20700      346D6F76 
 20700      65495253 
 20700      61496345 
 20700      454F4E53 
 20701              	.LASF91:
 20702 3f68 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5beginEv"
 20702      74375F5F 
 20702      63787831 
 20702      31313262 
 20702      61736963 
 20703              	.LASF73:
 20704 3fa6 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC4ERKS4_mmRKS3_"
 20704      74375F5F 
 20704      63787831 
 20704      31313262 
AARCH64 GAS  obj/extInstr.s 			page 618


 20704      61736963 
 20705              	.LASF713:
 20706 3feb 5F5F7569 		.string	"__uint32_t"
 20706      6E743332 
 20706      5F7400
 20707              	.LASF391:
 20708 3ff6 7E626173 		.string	"~basic_ostream"
 20708      69635F6F 
 20708      73747265 
 20708      616D00
 20709              	.LASF1000:
 20710 4005 5F5A4E39 		.string	"_ZN9__gnu_cxx3divExx"
 20710      5F5F676E 
 20710      755F6378 
 20710      78336469 
 20710      76457878 
 20711              	.LASF820:
 20712 401a 61746F6C 		.string	"atoll"
 20712      6C00
 20713              	.LASF317:
 20714 4020 6E6F745F 		.string	"not_eof"
 20714      656F6600 
 20715              	.LASF839:
 20716 4028 66676574 		.string	"fgetpos"
 20716      706F7300 
 20717              	.LASF448:
 20718 4030 5F5A5374 		.string	"_ZSt9addressofIcEPT_RS0_"
 20718      39616464 
 20718      72657373 
 20718      6F664963 
 20718      4550545F 
 20719              	.LASF898:
 20720 4049 546F5374 		.string	"ToStringX8"
 20720      72696E67 
 20720      583800
 20721              	.LASF501:
 20722 4054 5F4D5F6D 		.string	"_M_max_size"
 20722      61785F73 
 20722      697A6500 
 20723              	.LASF13:
 20724 4060 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_lengthEm"
 20724      74375F5F 
 20724      63787831 
 20724      31313262 
 20724      61736963 
 20725              	.LASF578:
 20726 40a2 5F5F6772 		.string	"__gr_offs"
 20726      5F6F6666 
 20726      7300
 20727              	.LASF1002:
 20728 40ac 5F5F7661 		.string	"__va_list"
 20728      5F6C6973 
 20728      7400
 20729              	.LASF112:
 20730 40b6 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv"
 20730      5374375F 
 20730      5F637878 
AARCH64 GAS  obj/extInstr.s 			page 619


 20730      31313132 
 20730      62617369 
 20731              	.LASF614:
 20732 40f4 5F776964 		.string	"_wide_data"
 20732      655F6461 
 20732      746100
 20733              	.LASF866:
 20734 40ff 6D6B7469 		.string	"mktime"
 20734      6D6500
 20735              	.LASF426:
 20736 4106 616C6C6F 		.string	"allocator_arg_t"
 20736      6361746F 
 20736      725F6172 
 20736      675F7400 
 20737              	.LASF961:
 20738 4116 5F5F6C65 		.string	"__length"
 20738      6E677468 
 20738      00
 20739              	.LASF838:
 20740 411f 66676574 		.string	"fgetc"
 20740      6300
 20741              	.LASF29:
 20742 4125 5F4D5F64 		.string	"_M_destroy"
 20742      65737472 
 20742      6F7900
 20743              	.LASF32:
 20744 4130 5F4D5F63 		.string	"_M_construct"
 20744      6F6E7374 
 20744      72756374 
 20744      00
 20745              	.LASF756:
 20746 413d 696E746D 		.string	"intmax_t"
 20746      61785F74 
 20746      00
 20747              	.LASF840:
 20748 4146 66676574 		.string	"fgets"
 20748      7300
 20749              	.LASF216:
 20750 414c 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm"
 20750      5374375F 
 20750      5F637878 
 20750      31313132 
 20750      62617369 
 20751              	.LASF163:
 20752 418b 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEmc"
 20752      74375F5F 
 20752      63787831 
 20752      31313262 
 20752      61736963 
 20753              	.LASF858:
 20754 41cb 77637479 		.string	"wctype_t"
 20754      70655F74 
 20754      00
 20755              	.LASF868:
 20756 41d4 61736374 		.string	"asctime"
 20756      696D6500 
 20757              	.LASF284:
AARCH64 GAS  obj/extInstr.s 			page 620


 20758 41dc 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptr4swapERS0_"
 20758      7431355F 
 20758      5F657863 
 20758      65707469 
 20758      6F6E5F70 
 20759              	.LASF877:
 20760 420c 6D5F5531 		.string	"m_U16"
 20760      3600
 20761              	.LASF527:
 20762 4212 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
 20762      395F5F67 
 20762      6E755F63 
 20762      78783137 
 20762      5F5F6E6F 
 20763              	.LASF548:
 20764 4270 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
 20764      5F5F676E 
 20764      755F6378 
 20764      7831375F 
 20764      5F6E6F72 
 20765              	.LASF231:
 20766 42d2 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEcm"
 20766      5374375F 
 20766      5F637878 
 20766      31313132 
 20766      62617369 
 20767              	.LASF455:
 20768 431a 72647374 		.string	"rdstate"
 20768      61746500 
 20769              	.LASF87:
 20770 4322 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEc"
 20770      74375F5F 
 20770      63787831 
 20770      31313262 
 20770      61736963 
 20771              	.LASF432:
 20772 435c 72656D6F 		.string	"remove_reference<std::allocator<char>&>"
 20772      76655F72 
 20772      65666572 
 20772      656E6365 
 20772      3C737464 
 20773              	.LASF409:
 20774 4384 70707472 		.string	"pptr"
 20774      00
 20775              	.LASF242:
 20776 4389 73756273 		.string	"substr"
 20776      747200
 20777              	.LASF939:
 20778 4390 5F5F7265 		.string	"__ret"
 20778      7400
 20779              	.LASF768:
 20780 4396 6E656761 		.string	"negative_sign"
 20780      74697665 
 20780      5F736967 
 20780      6E00
 20781              	.LASF869:
 20782 43a4 6374696D 		.string	"ctime"
AARCH64 GAS  obj/extInstr.s 			page 621


 20782      6500
 20783              	.LASF871:
 20784 43aa 6C6F6361 		.string	"localtime"
 20784      6C74696D 
 20784      6500
 20785              	.LASF435:
 20786 43b4 706F696E 		.string	"pointer_traits<char*>"
 20786      7465725F 
 20786      74726169 
 20786      74733C63 
 20786      6861722A 
 20787              	.LASF117:
 20788 43ca 72657369 		.string	"resize"
 20788      7A6500
 20789              	.LASF607:
 20790 43d1 5F6F6C64 		.string	"_old_offset"
 20790      5F6F6666 
 20790      73657400 
 20791              	.LASF804:
 20792 43dd 67657465 		.string	"getenv"
 20792      6E7600
 20793              	.LASF636:
 20794 43e4 6D627372 		.string	"mbsrtowcs"
 20794      746F7763 
 20794      7300
 20795              	.LASF204:
 20796 43ee 73776170 		.string	"swap"
 20796      00
 20797              	.LASF878:
 20798 43f3 6D5F5533 		.string	"m_U32"
 20798      3200
 20799              	.LASF825:
 20800 43f9 5F475F66 		.string	"_G_fpos_t"
 20800      706F735F 
 20800      7400
 20801              	.LASF673:
 20802 4403 7763736E 		.string	"wcsncpy"
 20802      63707900 
 20803              	.LASF410:
 20804 440b 5F5A4E4B 		.string	"_ZNKSt15basic_streambufIcSt11char_traitsIcEE4pptrEv"
 20804      53743135 
 20804      62617369 
 20804      635F7374 
 20804      7265616D 
 20805              	.LASF827:
 20806 443f 5F5F7374 		.string	"__state"
 20806      61746500 
 20807              	.LASF958:
 20808 4447 5F5A4E53 		.string	"_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEC1Ev"
 20808      74375F5F 
 20808      63787831 
 20808      31313962 
 20808      61736963 
 20809              	.LASF54:
 20810 4488 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcN9__gnu_cxx17__nor
 20810      74375F5F 
 20810      63787831 
AARCH64 GAS  obj/extInstr.s 			page 622


 20810      31313262 
 20810      61736963 
 20811              	.LASF322:
 20812 44fa 5F5A4E53 		.string	"_ZNSaIcEC4Ev"
 20812      61496345 
 20812      43344576 
 20812      00
 20813              	.LASF745:
 20814 4507 75696E74 		.string	"uint_least64_t"
 20814      5F6C6561 
 20814      73743634 
 20814      5F7400
 20815              	.LASF302:
 20816 4516 5F5A4E53 		.string	"_ZNSt11char_traitsIcE2ltERKcS2_"
 20816      74313163 
 20816      6861725F 
 20816      74726169 
 20816      74734963 
 20817              	.LASF225:
 20818 4536 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcm"
 20818      5374375F 
 20818      5F637878 
 20818      31313132 
 20818      62617369 
 20819              	.LASF294:
 20820 4581 70696563 		.string	"piecewise_construct_t"
 20820      65776973 
 20820      655F636F 
 20820      6E737472 
 20820      7563745F 
 20821              	.LASF707:
 20822 4597 5F5F676E 		.string	"__gnu_debug"
 20822      755F6465 
 20822      62756700 
 20823              	.LASF84:
 20824 45a3 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC4ERKS3_"
 20824      74375F5F 
 20824      63787831 
 20824      31313262 
 20824      61736963 
 20825              	.LASF218:
 20826 45e1 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindERKS4_m"
 20826      5374375F 
 20826      5F637878 
 20826      31313132 
 20826      62617369 
 20827              	.LASF62:
 20828 4625 5F4D5F61 		.string	"_M_assign"
 20828      73736967 
 20828      6E00
 20829              	.LASF991:
 20830 462f 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD4Ev"
 20830      74375F5F 
 20830      63787831 
 20830      31313262 
 20830      61736963 
 20831              	.LASF189:
AARCH64 GAS  obj/extInstr.s 			page 623


 20832 4677 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_itera
 20832      74375F5F 
 20832      63787831 
 20832      31313262 
 20832      61736963 
 20833              	.LASF8:
 20834 46e3 5F4D5F64 		.string	"_M_dataplus"
 20834      61746170 
 20834      6C757300 
 20835              	.LASF705:
 20836 46ef 63686172 		.string	"char16_t"
 20836      31365F74 
 20836      00
 20837              	.LASF184:
 20838 46f8 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEmmPKcm"
 20838      74375F5F 
 20838      63787831 
 20838      31313262 
 20838      61736963 
 20839              	.LASF602:
 20840 473d 5F494F5F 		.string	"_IO_save_end"
 20840      73617665 
 20840      5F656E64 
 20840      00
 20841              	.LASF134:
 20842 474a 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm"
 20842      74375F5F 
 20842      63787831 
 20842      31313262 
 20842      61736963 
 20843              	.LASF140:
 20844 4784 6261636B 		.string	"back"
 20844      00
 20845              	.LASF70:
 20846 4789 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC4ERKS4_"
 20846      74375F5F 
 20846      63787831 
 20846      31313262 
 20846      61736963 
 20847              	.LASF492:
 20848 47c7 5F5A4E39 		.string	"_ZN9__gnu_cxx13new_allocatorIcEC4ERKS1_"
 20848      5F5F676E 
 20848      755F6378 
 20848      7831336E 
 20848      65775F61 
 20849              	.LASF546:
 20850 47ef 5F5F6E6F 		.string	"__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, s
 20850      726D616C 
 20850      5F697465 
 20850      7261746F 
 20850      723C6368 
 20851              	.LASF479:
 20852 4860 73747265 		.string	"streamsize"
 20852      616D7369 
 20852      7A6500
 20853              	.LASF441:
 20854 486b 706F696E 		.string	"pointer_traits<char const*>"
AARCH64 GAS  obj/extInstr.s 			page 624


 20854      7465725F 
 20854      74726169 
 20854      74733C63 
 20854      68617220 
 20855              	.LASF879:
 20856 4887 6D5F5536 		.string	"m_U64"
 20856      3400
 20857              	.LASF988:
 20858 488d 65787449 		.string	"extInstr.cpp"
 20858      6E737472 
 20858      2E637070 
 20858      00
 20859              	.LASF882:
 20860 489a 546F5374 		.string	"ToStringI8"
 20860      72696E67 
 20860      493800
 20861              	.LASF260:
 20862 48a5 62617369 		.string	"basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >"
 20862      635F7374 
 20862      72696E67 
 20862      6275663C 
 20862      63686172 
 20863              	.LASF798:
 20864 48ea 61746578 		.string	"atexit"
 20864      697400
 20865              	.LASF5:
 20866 48f1 706F696E 		.string	"pointer"
 20866      74657200 
 20867              	.LASF556:
 20868 48f9 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
 20868      5F5F676E 
 20868      755F6378 
 20868      7831375F 
 20868      5F6E6F72 
 20869              	.LASF320:
 20870 4957 616C6C6F 		.string	"allocator<char>"
 20870      6361746F 
 20870      723C6368 
 20870      61723E00 
 20871              	.LASF9:
 20872 4967 5F4D5F73 		.string	"_M_string_length"
 20872      7472696E 
 20872      675F6C65 
 20872      6E677468 
 20872      00
 20873              	.LASF180:
 20874 4978 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8pop_backEv"
 20874      74375F5F 
 20874      63787831 
 20874      31313262 
 20874      61736963 
 20875              	.LASF638:
 20876 49b9 70757477 		.string	"putwchar"
 20876      63686172 
 20876      00
 20877              	.LASF887:
 20878 49c2 5F5A4E36 		.string	"_ZN6Vec12811ToStringI32B5cxx11Ev"
AARCH64 GAS  obj/extInstr.s 			page 625


 20878      56656331 
 20878      32383131 
 20878      546F5374 
 20878      72696E67 
 20879              	.LASF326:
 20880 49e3 7E616C6C 		.string	"~allocator"
 20880      6F636174 
 20880      6F7200
 20881              	.LASF296:
 20882 49ee 5F5F7377 		.string	"__swappable_details"
 20882      61707061 
 20882      626C655F 
 20882      64657461 
 20882      696C7300 
 20883              	.LASF528:
 20884 4a02 6F706572 		.string	"operator++"
 20884      61746F72 
 20884      2B2B00
 20885              	.LASF66:
 20886 4a0d 5F4D5F65 		.string	"_M_erase"
 20886      72617365 
 20886      00
 20887              	.LASF415:
 20888 4a16 63747970 		.string	"ctype<char>"
 20888      653C6368 
 20888      61723E00 
 20889              	.LASF143:
 20890 4a22 6F706572 		.string	"operator+="
 20890      61746F72 
 20890      2B3D00
 20891              	.LASF283:
 20892 4a2d 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptrD4Ev"
 20892      7431355F 
 20892      5F657863 
 20892      65707469 
 20892      6F6E5F70 
 20893              	.LASF156:
 20894 4a57 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc"
 20894      74375F5F 
 20894      63787831 
 20894      31313262 
 20894      61736963 
 20895              	.LASF625:
 20896 4a99 77636861 		.string	"wchar_t"
 20896      725F7400 
 20897              	.LASF772:
 20898 4aa1 705F7365 		.string	"p_sep_by_space"
 20898      705F6279 
 20898      5F737061 
 20898      636500
 20899              	.LASF256:
 20900 4ab0 5F416C6C 		.string	"_Alloc"
 20900      6F6300
 20901              	.LASF513:
 20902 4ab7 5F535F61 		.string	"_S_always_equal"
 20902      6C776179 
 20902      735F6571 
AARCH64 GAS  obj/extInstr.s 			page 626


 20902      75616C00 
 20903              	.LASF644:
 20904 4ac7 76667773 		.string	"vfwscanf"
 20904      63616E66 
 20904      00
 20905              	.LASF900:
 20906 4ad0 546F5374 		.string	"ToStringX16"
 20906      72696E67 
 20906      58313600 
 20907              	.LASF923:
 20908 4adc 5F5F616C 		.string	"__alloc"
 20908      6C6F6300 
 20909              	.LASF699:
 20910 4ae4 77637374 		.string	"wcstoull"
 20910      6F756C6C 
 20910      00
 20911              	.LASF667:
 20912 4aed 746D5F69 		.string	"tm_isdst"
 20912      73647374 
 20912      00
 20913              	.LASF771:
 20914 4af6 705F6373 		.string	"p_cs_precedes"
 20914      5F707265 
 20914      63656465 
 20914      7300
 20915              	.LASF94:
 20916 4b04 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE3endEv"
 20916      5374375F 
 20916      5F637878 
 20916      31313132 
 20916      62617369 
 20917              	.LASF352:
 20918 4b41 72657665 		.string	"reverse_iterator<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<cha
 20918      7273655F 
 20918      69746572 
 20918      61746F72 
 20918      3C5F5F67 
 20919              	.LASF153:
 20920 4bd0 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc"
 20920      74375F5F 
 20920      63787831 
 20920      31313262 
 20920      61736963 
 20921              	.LASF278:
 20922 4c10 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptrC4EOS0_"
 20922      7431355F 
 20922      5F657863 
 20922      65707469 
 20922      6F6E5F70 
 20923              	.LASF531:
 20924 4c3d 6F706572 		.string	"operator--"
 20924      61746F72 
 20924      2D2D00
 20925              	.LASF538:
 20926 4c48 6F706572 		.string	"operator-="
 20926      61746F72 
 20926      2D3D00
AARCH64 GAS  obj/extInstr.s 			page 627


 20927              	.LASF526:
 20928 4c53 6F706572 		.string	"operator->"
 20928      61746F72 
 20928      2D3E00
 20929              	.LASF470:
 20930 4c5e 6F706572 		.string	"operator<< <char, std::char_traits<char>, std::allocator<char> >"
 20930      61746F72 
 20930      3C3C203C 
 20930      63686172 
 20930      2C207374 
 20931              	.LASF747:
 20932 4c9f 696E745F 		.string	"int_fast16_t"
 20932      66617374 
 20932      31365F74 
 20932      00
 20933              	.LASF969:
 20934 4cac 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev"
 20934      74375F5F 
 20934      63787831 
 20934      31313262 
 20934      61736963 
 20935              	.LASF178:
 20936 4ce6 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEN9__gnu_cxx17__normal_iterato
 20936      74375F5F 
 20936      63787831 
 20936      31313262 
 20936      61736963 
 20937              	.LASF979:
 20938 4d4d 5F5F696E 		.string	"__int128 unsigned"
 20938      74313238 
 20938      20756E73 
 20938      69676E65 
 20938      6400
 20939              	.LASF444:
 20940 4d5f 5F5A5374 		.string	"_ZSt9addressofIKcEPT_RS1_"
 20940      39616464 
 20940      72657373 
 20940      6F66494B 
 20940      63455054 
 20941              	.LASF677:
 20942 4d79 77637374 		.string	"wcstof"
 20942      6F6600
 20943              	.LASF902:
 20944 4d80 546F5374 		.string	"ToStringX32"
 20944      72696E67 
 20944      58333200 
 20945              	.LASF678:
 20946 4d8c 77637374 		.string	"wcstok"
 20946      6F6B00
 20947              	.LASF248:
 20948 4d93 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc"
 20948      5374375F 
 20948      5F637878 
 20948      31313132 
 20948      62617369 
 20949              	.LASF704:
 20950 4dd6 73686F72 		.string	"short int"
AARCH64 GAS  obj/extInstr.s 			page 628


 20950      7420696E 
 20950      7400
 20951              	.LASF497:
 20952 4de0 5F5A4E4B 		.string	"_ZNK9__gnu_cxx13new_allocatorIcE7addressERKc"
 20952      395F5F67 
 20952      6E755F63 
 20952      78783133 
 20952      6E65775F 
 20953              	.LASF24:
 20954 4e0d 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv"
 20954      5374375F 
 20954      5F637878 
 20954      31313132 
 20954      62617369 
 20955              	.LASF399:
 20956 4e53 5F5A4E53 		.string	"_ZNSo9_M_insertImEERSoT_"
 20956      6F395F4D 
 20956      5F696E73 
 20956      65727449 
 20956      6D454552 
 20957              	.LASF207:
 20958 4e6c 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv"
 20958      5374375F 
 20958      5F637878 
 20958      31313132 
 20958      62617369 
 20959              	.LASF812:
 20960 4eab 7372616E 		.string	"srand"
 20960      6400
 20961              	.LASF419:
 20962 4eb1 5F4D5F77 		.string	"_M_widen_init"
 20962      6964656E 
 20962      5F696E69 
 20962      7400
 20963              	.LASF996:
 20964 4ebf 5F5A4E4B 		.string	"_ZNKSt5ctypeIcE8do_widenEc"
 20964      53743563 
 20964      74797065 
 20964      49634538 
 20964      646F5F77 
 20965              	.LASF912:
 20966 4eda 546F5374 		.string	"ToStringUint<unsigned char>"
 20966      72696E67 
 20966      55696E74 
 20966      3C756E73 
 20966      69676E65 
 20967              	.LASF785:
 20968 4ef6 6C6F6361 		.string	"localeconv"
 20968      6C65636F 
 20968      6E7600
 20969              	.LASF172:
 20970 4f01 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEmmc"
 20970      74375F5F 
 20970      63787831 
 20970      31313262 
 20970      61736963 
 20971              	.LASF603:
AARCH64 GAS  obj/extInstr.s 			page 629


 20972 4f42 5F6D6172 		.string	"_markers"
 20972      6B657273 
 20972      00
 20973              	.LASF605:
 20974 4f4b 5F66696C 		.string	"_fileno"
 20974      656E6F00 
 20975              	.LASF720:
 20976 4f53 5F5F696E 		.string	"__int_least32_t"
 20976      745F6C65 
 20976      61737433 
 20976      325F7400 
 20977              	.LASF92:
 20978 4f63 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5beginEv"
 20978      5374375F 
 20978      5F637878 
 20978      31313132 
 20978      62617369 
 20979              	.LASF26:
 20980 4fa2 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm"
 20980      74375F5F 
 20980      63787831 
 20980      31313262 
 20980      61736963 
 20981              	.LASF916:
 20982 4fe6 5F5F7072 		.string	"__priority"
 20982      696F7269 
 20982      747900
 20983              	.LASF904:
 20984 4ff1 546F5374 		.string	"ToStringX64"
 20984      72696E67 
 20984      58363400 
 20985              	.LASF779:
 20986 4ffd 696E745F 		.string	"int_n_cs_precedes"
 20986      6E5F6373 
 20986      5F707265 
 20986      63656465 
 20986      7300
 20987              	.LASF182:
 20988 500f 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEmmRKS4_"
 20988      74375F5F 
 20988      63787831 
 20988      31313262 
 20988      61736963 
 20989              	.LASF500:
 20990 5055 5F5A4E4B 		.string	"_ZNK9__gnu_cxx13new_allocatorIcE8max_sizeEv"
 20990      395F5F67 
 20990      6E755F63 
 20990      78783133 
 20990      6E65775F 
 20991              	.LASF161:
 20992 5081 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKcm"
 20992      74375F5F 
 20992      63787831 
 20992      31313262 
 20992      61736963 
 20993              	.LASF212:
 20994 50c3 66696E64 		.string	"find"
AARCH64 GAS  obj/extInstr.s 			page 630


 20994      00
 20995              	.LASF566:
 20996 50c8 6F706572 		.string	"operator-<char const*, char*, std::__cxx11::basic_string<char> >"
 20996      61746F72 
 20996      2D3C6368 
 20996      61722063 
 20996      6F6E7374 
 20997              	.LASF753:
 20998 5109 75696E74 		.string	"uint_fast64_t"
 20998      5F666173 
 20998      7436345F 
 20998      7400
 20999              	.LASF740:
 21000 5117 696E745F 		.string	"int_least32_t"
 21000      6C656173 
 21000      7433325F 
 21000      7400
 21001              	.LASF848:
 21002 5125 67657463 		.string	"getchar"
 21002      68617200 
 21003              	.LASF915:
 21004 512d 5F5F696E 		.string	"__initialize_p"
 21004      69746961 
 21004      6C697A65 
 21004      5F7000
 21005              	.LASF517:
 21006 513c 72656269 		.string	"rebind<char>"
 21006      6E643C63 
 21006      6861723E 
 21006      00
 21007              	.LASF471:
 21008 5149 5F5A5374 		.string	"_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS
 21008      6C734963 
 21008      53743131 
 21008      63686172 
 21008      5F747261 
 21009              	.LASF227:
 21010 51ad 66696E64 		.string	"find_last_of"
 21010      5F6C6173 
 21010      745F6F66 
 21010      00
 21011              	.LASF680:
 21012 51ba 6C6F6E67 		.string	"long int"
 21012      20696E74 
 21012      00
 21013              	.LASF79:
 21014 51c3 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC4ERKS4_RKS3_"
 21014      74375F5F 
 21014      63787831 
 21014      31313262 
 21014      61736963 
 21015              	.LASF251:
 21016 5206 61737369 		.string	"assign<char*>"
 21016      676E3C63 
 21016      6861722A 
 21016      3E00
 21017              	.LASF509:
AARCH64 GAS  obj/extInstr.s 			page 631


 21018 5214 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIcEcE27_S_propagate_on_copy_assignEv"
 21018      5F5F676E 
 21018      755F6378 
 21018      7831345F 
 21018      5F616C6C 
 21019              	.LASF712:
 21020 5259 5F5F696E 		.string	"__int32_t"
 21020      7433325F 
 21020      7400
 21021              	.LASF686:
 21022 5263 776D656D 		.string	"wmemmove"
 21022      6D6F7665 
 21022      00
 21023              	.LASF58:
 21024 526c 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_"
 21024      74375F5F 
 21024      63787831 
 21024      31313262 
 21024      61736963 
 21025              	.LASF299:
 21026 52ba 5F5A4E53 		.string	"_ZNSt11char_traitsIcE6assignERcRKc"
 21026      74313163 
 21026      6861725F 
 21026      74726169 
 21026      74734963 
 21027              	.LASF729:
 21028 52dd 5F5F7469 		.string	"__time_t"
 21028      6D655F74 
 21028      00
 21029              	.LASF145:
 21030 52e6 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc"
 21030      74375F5F 
 21030      63787831 
 21030      31313262 
 21030      61736963 
 21031              	.LASF468:
 21032 5322 6D6F7665 		.string	"move<std::allocator<char>&>"
 21032      3C737464 
 21032      3A3A616C 
 21032      6C6F6361 
 21032      746F723C 
 21033              	.LASF40:
 21034 533e 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEmPKc"
 21034      5374375F 
 21034      5F637878 
 21034      31313132 
 21034      62617369 
 21035              	.LASF559:
 21036 5383 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 21036      395F5F67 
 21036      6E755F63 
 21036      78783137 
 21036      5F5F6E6F 
 21037              	.LASF487:
 21038 53e2 5F5F676E 		.string	"__gnu_cxx"
 21038      755F6378 
 21038      7800
AARCH64 GAS  obj/extInstr.s 			page 632


 21039              	.LASF796:
 21040 53ec 6C6C6469 		.string	"lldiv_t"
 21040      765F7400 
 21041              	.LASF506:
 21042 53f4 5F535F6F 		.string	"_S_on_swap"
 21042      6E5F7377 
 21042      617000
 21043              	.LASF246:
 21044 53ff 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEmmRKS4_"
 21044      5374375F 
 21044      5F637878 
 21044      31313132 
 21044      62617369 
 21045              	.LASF427:
 21046 5446 5F5A4E53 		.string	"_ZNSt15allocator_arg_tC4Ev"
 21046      74313561 
 21046      6C6C6F63 
 21046      61746F72 
 21046      5F617267 
 21047              	.LASF940:
 21048 5461 5F5F696E 		.string	"__in_chrg"
 21048      5F636872 
 21048      6700
 21049              	.LASF185:
 21050 546b 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEmmPKc"
 21050      74375F5F 
 21050      63787831 
 21050      31313262 
 21050      61736963 
 21051              	.LASF56:
 21052 54af 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcN9__gnu_cxx17__nor
 21052      74375F5F 
 21052      63787831 
 21052      31313262 
 21052      61736963 
 21053              	.LASF425:
 21054 5521 69746572 		.string	"iterator_traits<char const*>"
 21054      61746F72 
 21054      5F747261 
 21054      6974733C 
 21054      63686172 
 21055              	.LASF429:
 21056 553e 69676E6F 		.string	"ignore"
 21056      726500
 21057              	.LASF30:
 21058 5545 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_destroyEm"
 21058      74375F5F 
 21058      63787831 
 21058      31313262 
 21058      61736963 
 21059              	.LASF595:
 21060 5589 5F494F5F 		.string	"_IO_write_base"
 21060      77726974 
 21060      655F6261 
 21060      736500
 21061              	.LASF980:
 21062 5598 5F5A646C 		.string	"_ZdlPvm"
AARCH64 GAS  obj/extInstr.s 			page 633


 21062      50766D00 
 21063              	.LASF371:
 21064 55a0 5F535F65 		.string	"_S_eofbit"
 21064      6F666269 
 21064      7400
 21065              	.LASF305:
 21066 55aa 5F5A4E53 		.string	"_ZNSt11char_traitsIcE4findEPKcmRS1_"
 21066      74313163 
 21066      6861725F 
 21066      74726169 
 21066      74734963 
 21067              	.LASF865:
 21068 55ce 64696666 		.string	"difftime"
 21068      74696D65 
 21068      00
 21069              	.LASF947:
 21070 55d7 5F5A4E53 		.string	"_ZNSoC2Ev"
 21070      6F433245 
 21070      7600
 21071              	.LASF670:
 21072 55e1 7763736C 		.string	"wcslen"
 21072      656E00
 21073              	.LASF167:
 21074 55e8 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEN9__gnu_cxx17__normal_iterat
 21074      74375F5F 
 21074      63787831 
 21074      31313262 
 21074      61736963 
 21075              	.LASF25:
 21076 5664 5F4D5F63 		.string	"_M_create"
 21076      72656174 
 21076      6500
 21077              	.LASF315:
 21078 566e 65715F69 		.string	"eq_int_type"
 21078      6E745F74 
 21078      79706500 
 21079              	.LASF97:
 21080 567a 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6rbeginEv"
 21080      74375F5F 
 21080      63787831 
 21080      31313262 
 21080      61736963 
 21081              	.LASF496:
 21082 56b9 5F5A4E4B 		.string	"_ZNK9__gnu_cxx13new_allocatorIcE7addressERc"
 21082      395F5F67 
 21082      6E755F63 
 21082      78783133 
 21082      6E65775F 
 21083              	.LASF731:
 21084 56e5 696E7431 		.string	"int16_t"
 21084      365F7400 
 21085              	.LASF826:
 21086 56ed 5F5F706F 		.string	"__pos"
 21086      7300
 21087              	.LASF395:
 21088 56f3 5F5F6F73 		.string	"__ostream_type"
 21088      74726561 
AARCH64 GAS  obj/extInstr.s 			page 634


 21088      6D5F7479 
 21088      706500
 21089              	.LASF525:
 21090 5702 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
 21090      395F5F67 
 21090      6E755F63 
 21090      78783137 
 21090      5F5F6E6F 
 21091              	.LASF867:
 21092 5760 74696D65 		.string	"time"
 21092      00
 21093              	.LASF953:
 21094 5765 5F5F7369 		.string	"__size"
 21094      7A6500
 21095              	.LASF398:
 21096 576c 5F5A4E53 		.string	"_ZNSolsEPFRSoS_E"
 21096      6F6C7345 
 21096      50465253 
 21096      6F535F45 
 21096      00
 21097              	.LASF834:
 21098 577d 66636C6F 		.string	"fclose"
 21098      736500
 21099              	.LASF534:
 21100 5784 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
 21100      395F5F67 
 21100      6E755F63 
 21100      78783137 
 21100      5F5F6E6F 
 21101              	.LASF166:
 21102 57e2 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEN9__gnu_cxx17__normal_iterat
 21102      74375F5F 
 21102      63787831 
 21102      31313262 
 21102      61736963 
 21103              	.LASF43:
 21104 5849 5F4D5F6C 		.string	"_M_limit"
 21104      696D6974 
 21104      00
 21105              	.LASF361:
 21106 5852 5F535F69 		.string	"_S_in"
 21106      6E00
 21107              	.LASF238:
 21108 5858 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofERKS4_m"
 21108      5374375F 
 21108      5F637878 
 21108      31313132 
 21108      62617369 
 21109              	.LASF240:
 21110 58a8 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcm"
 21110      5374375F 
 21110      5F637878 
 21110      31313132 
 21110      62617369 
 21111              	.LASF198:
 21112 58f6 5F4D5F72 		.string	"_M_replace"
 21112      65706C61 
AARCH64 GAS  obj/extInstr.s 			page 635


 21112      636500
 21113              	.LASF511:
 21114 5901 5F535F70 		.string	"_S_propagate_on_swap"
 21114      726F7061 
 21114      67617465 
 21114      5F6F6E5F 
 21114      73776170 
 21115              	.LASF853:
 21116 5916 73657462 		.string	"setbuf"
 21116      756600
 21117              	.LASF749:
 21118 591d 696E745F 		.string	"int_fast64_t"
 21118      66617374 
 21118      36345F74 
 21118      00
 21119              	.LASF818:
 21120 592a 7763746F 		.string	"wctomb"
 21120      6D6200
 21121              	.LASF219:
 21122 5931 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcmm"
 21122      5374375F 
 21122      5F637878 
 21122      31313132 
 21122      62617369 
 21123              	.LASF82:
 21124 5974 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED4Ev"
 21124      74375F5F 
 21124      63787831 
 21124      31313262 
 21124      61736963 
 21125              	.LASF364:
 21126 59ae 5F535F69 		.string	"_S_ios_openmode_end"
 21126      6F735F6F 
 21126      70656E6D 
 21126      6F64655F 
 21126      656E6400 
 21127              	.LASF466:
 21128 59c2 6F706572 		.string	"operator<< <char, std::char_traits<char> >"
 21128      61746F72 
 21128      3C3C203C 
 21128      63686172 
 21128      2C207374 
 21129              	.LASF519:
 21130 59ed 5F5F6E6F 		.string	"__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::al
 21130      726D616C 
 21130      5F697465 
 21130      7261746F 
 21130      723C6368 
 21131              	.LASF608:
 21132 5a58 5F637572 		.string	"_cur_column"
 21132      5F636F6C 
 21132      756D6E00 
 21133              	.LASF14:
 21134 5a64 5F4D5F6C 		.string	"_M_local_data"
 21134      6F63616C 
 21134      5F646174 
 21134      6100
AARCH64 GAS  obj/extInstr.s 			page 636


 21135              	.LASF312:
 21136 5a72 696E745F 		.string	"int_type"
 21136      74797065 
 21136      00
 21137              	.LASF473:
 21138 5a7b 5F5A5374 		.string	"_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_"
 21138      34656E64 
 21138      6C496353 
 21138      74313163 
 21138      6861725F 
 21139              	.LASF883:
 21140 5ab6 5F5A4E36 		.string	"_ZN6Vec12810ToStringI8B5cxx11Ev"
 21140      56656331 
 21140      32383130 
 21140      546F5374 
 21140      72696E67 
 21141              	.LASF281:
 21142 5ad6 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptraSEOS0_"
 21142      7431355F 
 21142      5F657863 
 21142      65707469 
 21142      6F6E5F70 
 21143              	.LASF128:
 21144 5b03 656D7074 		.string	"empty"
 21144      7900
 21145              	.LASF230:
 21146 5b09 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcm"
 21146      5374375F 
 21146      5F637878 
 21146      31313132 
 21146      62617369 
 21147              	.LASF323:
 21148 5b53 5F5A4E53 		.string	"_ZNSaIcEC4ERKS_"
 21148      61496345 
 21148      43344552 
 21148      4B535F00 
 21149              	.LASF971:
 21150 5b63 5F5A4E53 		.string	"_ZNSaIcED2Ev"
 21150      61496345 
 21150      44324576 
 21150      00
 21151              	.LASF23:
 21152 5b70 5F4D5F69 		.string	"_M_is_local"
 21152      735F6C6F 
 21152      63616C00 
 21153              	.LASF404:
 21154 5b7c 62617369 		.string	"basic_streambuf<char, std::char_traits<char> >"
 21154      635F7374 
 21154      7265616D 
 21154      6275663C 
 21154      63686172 
 21155              	.LASF545:
 21156 5bab 5F436F6E 		.string	"_Container"
 21156      7461696E 
 21156      657200
 21157              	.LASF335:
 21158 5bb6 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_"
AARCH64 GAS  obj/extInstr.s 			page 637


 21158      74313661 
 21158      6C6C6F63 
 21158      61746F72 
 21158      5F747261 
 21159              	.LASF766:
 21160 5be4 6D6F6E5F 		.string	"mon_grouping"
 21160      67726F75 
 21160      70696E67 
 21160      00
 21161              	.LASF956:
 21162 5bf1 5F5A4E53 		.string	"_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED0Ev"
 21162      74375F5F 
 21162      63787831 
 21162      31313962 
 21162      61736963 
 21163              	.LASF490:
 21164 5c32 6E65775F 		.string	"new_allocator"
 21164      616C6C6F 
 21164      6361746F 
 21164      7200
 21165              	.LASF695:
 21166 5c40 776D656D 		.string	"wmemchr"
 21166      63687200 
 21167              	.LASF245:
 21168 5c48 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_"
 21168      5374375F 
 21168      5F637878 
 21168      31313132 
 21168      62617369 
 21169              	.LASF806:
 21170 5c8d 6D626C65 		.string	"mblen"
 21170      6E00
 21171              	.LASF211:
 21172 5c93 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv"
 21172      5374375F 
 21172      5F637878 
 21172      31313132 
 21172      62617369 
 21173              	.LASF351:
 21174 5cdb 72657665 		.string	"reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std
 21174      7273655F 
 21174      69746572 
 21174      61746F72 
 21174      3C5F5F67 
 21175              	.LASF664:
 21176 5d64 746D5F79 		.string	"tm_year"
 21176      65617200 
 21177              	.LASF243:
 21178 5d6c 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm"
 21178      5374375F 
 21178      5F637878 
 21178      31313132 
 21178      62617369 
 21179              	.LASF933:
 21180 5dad 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS3_"
 21180      74375F5F 
 21180      63787831 
AARCH64 GAS  obj/extInstr.s 			page 638


 21180      31313262 
 21180      61736963 
 21181              	.LASF918:
 21182 5deb 5F5F7268 		.string	"__rhs"
 21182      7300
 21183              	.LASF795:
 21184 5df1 376C6C64 		.string	"7lldiv_t"
 21184      69765F74 
 21184      00
 21185              	.LASF924:
 21186 5dfa 5F5F7074 		.string	"__ptr"
 21186      7200
 21187              	.LASF313:
 21188 5e00 746F5F69 		.string	"to_int_type"
 21188      6E745F74 
 21188      79706500 
 21189              	.LASF52:
 21190 5e0c 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_S_assignEPcmc"
 21190      74375F5F 
 21190      63787831 
 21190      31313262 
 21190      61736963 
 21191              	.LASF396:
 21192 5e51 6F706572 		.string	"operator<<"
 21192      61746F72 
 21192      3C3C00
 21193              	.LASF151:
 21194 5e5c 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm"
 21194      74375F5F 
 21194      63787831 
 21194      31313262 
 21194      61736963 
 21195              	.LASF965:
 21196 5e9e 5F5A4E39 		.string	"_ZN9__gnu_cxx13new_allocatorIcED2Ev"
 21196      5F5F676E 
 21196      755F6378 
 21196      7831336E 
 21196      65775F61 
 21197              	.LASF574:
 21198 5ec2 5F5F676E 		.string	"__gnuc_va_list"
 21198      75635F76 
 21198      615F6C69 
 21198      737400
 21199              	.LASF276:
 21200 5ed1 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptrC4ERKS0_"
 21200      7431355F 
 21200      5F657863 
 21200      65707469 
 21200      6F6E5F70 
 21201              	.LASF938:
 21202 5eff 5F5A4E39 		.string	"_ZN9__gnu_cxx13new_allocatorIcEC2ERKS1_"
 21202      5F5F676E 
 21202      755F6378 
 21202      7831336E 
 21202      65775F61 
 21203              	.LASF386:
 21204 5f27 696F7374 		.string	"iostate"
AARCH64 GAS  obj/extInstr.s 			page 639


 21204      61746500 
 21205              	.LASF822:
 21206 5f2f 73747274 		.string	"strtoull"
 21206      6F756C6C 
 21206      00
 21207              	.LASF255:
 21208 5f38 5F547261 		.string	"_Traits"
 21208      69747300 
 21209              	.LASF291:
 21210 5f40 5F436861 		.string	"_Char_alloc_type"
 21210      725F616C 
 21210      6C6F635F 
 21210      74797065 
 21210      00
 21211              	.LASF106:
 21212 5f51 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4cendEv"
 21212      5374375F 
 21212      5F637878 
 21212      31313132 
 21212      62617369 
 21213              	.LASF727:
 21214 5f8f 5F5F6F66 		.string	"__off64_t"
 21214      6636345F 
 21214      7400
 21215              	.LASF676:
 21216 5f99 77637374 		.string	"wcstod"
 21216      6F6400
 21217              	.LASF998:
 21218 5fa0 5F5F696F 		.string	"__ioinit"
 21218      696E6974 
 21218      00
 21219              	.LASF450:
 21220 5fa9 5F5A5374 		.string	"_ZSt11__addressofIcEPT_RS0_"
 21220      31315F5F 
 21220      61646472 
 21220      6573736F 
 21220      66496345 
 21221              	.LASF665:
 21222 5fc5 746D5F77 		.string	"tm_wday"
 21222      64617900 
 21223              	.LASF679:
 21224 5fcd 77637374 		.string	"wcstol"
 21224      6F6C00
 21225              	.LASF114:
 21226 5fd4 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv"
 21226      5374375F 
 21226      5F637878 
 21226      31313132 
 21226      62617369 
 21227              	.LASF53:
 21228 6014 5F535F63 		.string	"_S_copy_chars"
 21228      6F70795F 
 21228      63686172 
 21228      7300
 21229              	.LASF31:
 21230 6022 5F4D5F63 		.string	"_M_construct_aux_2"
 21230      6F6E7374 
AARCH64 GAS  obj/extInstr.s 			page 640


 21230      72756374 
 21230      5F617578 
 21230      5F3200
 21231              	.LASF272:
 21232 6035 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptr10_M_releaseEv"
 21232      7431355F 
 21232      5F657863 
 21232      65707469 
 21232      6F6E5F70 
 21233              	.LASF703:
 21234 6069 7369676E 		.string	"signed char"
 21234      65642063 
 21234      68617200 
 21235              	.LASF907:
 21236 6075 5F5A4E36 		.string	"_ZN6Vec12811ToStringF32B5cxx11Ev"
 21236      56656331 
 21236      32383131 
 21236      546F5374 
 21236      72696E67 
 21237              	.LASF906:
 21238 6096 546F5374 		.string	"ToStringF32"
 21238      72696E67 
 21238      46333200 
 21239              	.LASF142:
 21240 60a2 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4backEv"
 21240      5374375F 
 21240      5F637878 
 21240      31313132 
 21240      62617369 
 21241              	.LASF127:
 21242 60e0 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5clearEv"
 21242      74375F5F 
 21242      63787831 
 21242      31313262 
 21242      61736963 
 21243              	.LASF849:
 21244 611e 70657272 		.string	"perror"
 21244      6F7200
 21245              	.LASF2:
 21246 6125 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC4EPcOS3_"
 21246      74375F5F 
 21246      63787831 
 21246      31313262 
 21246      61736963 
 21247              	.LASF169:
 21248 6172 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEmRKS4_mm"
 21248      74375F5F 
 21248      63787831 
 21248      31313262 
 21248      61736963 
 21249              	.LASF383:
 21250 61b8 5F5A4E53 		.string	"_ZNSt8ios_base4InitaSERKS0_"
 21250      7438696F 
 21250      735F6261 
 21250      73653449 
 21250      6E697461 
 21251              	.LASF345:
AARCH64 GAS  obj/extInstr.s 			page 641


 21252 61d4 5F5A4E53 		.string	"_ZNSt16initializer_listIcEC4Ev"
 21252      74313669 
 21252      6E697469 
 21252      616C697A 
 21252      65725F6C 
 21253              	.LASF651:
 21254 61f3 5F5F6973 		.string	"__isoc99_vwscanf"
 21254      6F633939 
 21254      5F767773 
 21254      63616E66 
 21254      00
 21255              	.LASF622:
 21256 6204 62746F77 		.string	"btowc"
 21256      6300
 21257              	.LASF569:
 21258 620a 5F497465 		.string	"_IteratorR"
 21258      7261746F 
 21258      725200
 21259              	.LASF76:
 21260 6215 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC4EmcRKS3_"
 21260      74375F5F 
 21260      63787831 
 21260      31313262 
 21260      61736963 
 21261              	.LASF451:
 21262 6255 5F5F6368 		.string	"__check_facet<std::ctype<char> >"
 21262      65636B5F 
 21262      66616365 
 21262      743C7374 
 21262      643A3A63 
 21263              	.LASF336:
 21264 6276 73656C65 		.string	"select_on_container_copy_construction"
 21264      63745F6F 
 21264      6E5F636F 
 21264      6E746169 
 21264      6E65725F 
 21265              	.LASF63:
 21266 629c 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_"
 21266      74375F5F 
 21266      63787831 
 21266      31313262 
 21266      61736963 
 21267              	.LASF684:
 21268 62e2 776D656D 		.string	"wmemcmp"
 21268      636D7000 
 21269              	.LASF507:
 21270 62ea 5F535F70 		.string	"_S_propagate_on_copy_assign"
 21270      726F7061 
 21270      67617465 
 21270      5F6F6E5F 
 21270      636F7079 
 21271              	.LASF715:
 21272 6306 5F5F7569 		.string	"__uint64_t"
 21272      6E743634 
 21272      5F7400
 21273              	.LASF115:
 21274 6311 6D61785F 		.string	"max_size"
AARCH64 GAS  obj/extInstr.s 			page 642


 21274      73697A65 
 21274      00
 21275              	.LASF378:
 21276 631a 5F5A4E53 		.string	"_ZNSt8ios_base4InitC4Ev"
 21276      7438696F 
 21276      735F6261 
 21276      73653449 
 21276      6E697443 
 21277              	.LASF298:
 21278 6332 63686172 		.string	"char_traits<char>"
 21278      5F747261 
 21278      6974733C 
 21278      63686172 
 21278      3E00
 21279              	.LASF908:
 21280 6344 546F5374 		.string	"ToStringF64"
 21280      72696E67 
 21280      46363400 
 21281              	.LASF562:
 21282 6350 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
 21282      5F5F676E 
 21282      755F6378 
 21282      7831375F 
 21282      5F6E6F72 
 21283              	.LASF41:
 21284 63fb 5F4D5F63 		.string	"_M_check_length"
 21284      6865636B 
 21284      5F6C656E 
 21284      67746800 
 21285              	.LASF394:
 21286 640b 5F5A4E53 		.string	"_ZNSoC4Ev"
 21286      6F433445 
 21286      7600
 21287              	.LASF279:
 21288 6415 5F5A4E53 		.string	"_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEC4ESt13_Ios_Openmode"
 21288      74375F5F 
 21288      63787831 
 21288      31313562 
 21288      61736963 
 21289              	.LASF518:
 21290 6462 6F746865 		.string	"other"
 21290      7200
 21291              	.LASF190:
 21292 6468 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_itera
 21292      74375F5F 
 21292      63787831 
 21292      31313262 
 21292      61736963 
 21293              	.LASF735:
 21294 64d3 75696E74 		.string	"uint16_t"
 21294      31365F74 
 21294      00
 21295              	.LASF201:
 21296 64dc 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm"
 21296      74375F5F 
 21296      63787831 
 21296      31313262 
AARCH64 GAS  obj/extInstr.s 			page 643


 21296      61736963 
 21297              	.LASF856:
 21298 6521 746D706E 		.string	"tmpnam"
 21298      616D00
 21299              	.LASF512:
 21300 6528 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIcEcE20_S_propagate_on_swapEv"
 21300      5F5F676E 
 21300      755F6378 
 21300      7831345F 
 21300      5F616C6C 
 21301              	.LASF96:
 21302 6566 72626567 		.string	"rbegin"
 21302      696E00
 21303              	.LASF787:
 21304 656d 636C6F63 		.string	"clock_t"
 21304      6B5F7400 
 21305              	.LASF700:
 21306 6575 6C6F6E67 		.string	"long long unsigned int"
 21306      206C6F6E 
 21306      6720756E 
 21306      7369676E 
 21306      65642069 
 21307              	.LASF508:
 21308 658c 5F535F70 		.string	"_S_propagate_on_move_assign"
 21308      726F7061 
 21308      67617465 
 21308      5F6F6E5F 
 21308      6D6F7665 
 21309              	.LASF685:
 21310 65a8 776D656D 		.string	"wmemcpy"
 21310      63707900 
 21311              	.LASF217:
 21312 65b0 7266696E 		.string	"rfind"
 21312      6400
 21313              	.LASF903:
 21314 65b6 5F5A4E36 		.string	"_ZN6Vec12811ToStringX32B5cxx11Ev"
 21314      56656331 
 21314      32383131 
 21314      546F5374 
 21314      72696E67 
 21315              	.LASF77:
 21316 65d7 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC4EOS4_"
 21316      74375F5F 
 21316      63787831 
 21316      31313262 
 21316      61736963 
 21317              	.LASF202:
 21318 6614 636F7079 		.string	"copy"
 21318      00
 21319              	.LASF816:
 21320 6619 73797374 		.string	"system"
 21320      656D00
 21321              	.LASF259:
 21322 6620 7E626173 		.string	"~basic_stringbuf"
 21322      69635F73 
 21322      7472696E 
 21322      67627566 
AARCH64 GAS  obj/extInstr.s 			page 644


 21322      00
 21323              	.LASF503:
 21324 6631 5F5F616C 		.string	"__alloc_traits<std::allocator<char>, char>"
 21324      6C6F635F 
 21324      74726169 
 21324      74733C73 
 21324      74643A3A 
 21325              	.LASF309:
 21326 665c 5F5A4E53 		.string	"_ZNSt11char_traitsIcE6assignEPcmc"
 21326      74313163 
 21326      6861725F 
 21326      74726169 
 21326      74734963 
 21327              	.LASF524:
 21328 667e 6F706572 		.string	"operator*"
 21328      61746F72 
 21328      2A00
 21329              	.LASF536:
 21330 6688 6F706572 		.string	"operator+"
 21330      61746F72 
 21330      2B00
 21331              	.LASF44:
 21332 6692 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_limitEmm"
 21332      5374375F 
 21332      5F637878 
 21332      31313132 
 21332      62617369 
 21333              	.LASF540:
 21334 66d5 6F706572 		.string	"operator-"
 21334      61746F72 
 21334      2D00
 21335              	.LASF792:
 21336 66df 6469765F 		.string	"div_t"
 21336      7400
 21337              	.LASF83:
 21338 66e5 6F706572 		.string	"operator="
 21338      61746F72 
 21338      3D00
 21339              	.LASF200:
 21340 66ef 5F4D5F61 		.string	"_M_append"
 21340      7070656E 
 21340      6400
 21341              	.LASF846:
 21342 66f9 6674656C 		.string	"ftell"
 21342      6C00
 21343              	.LASF913:
 21344 66ff 5F5A4E36 		.string	"_ZN6Vec12812ToStringUintIhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKT_ii"
 21344      56656331 
 21344      32383132 
 21344      546F5374 
 21344      72696E67 
 21345              	.LASF706:
 21346 6756 63686172 		.string	"char32_t"
 21346      33325F74 
 21346      00
 21347              	.LASF810:
 21348 675f 72616E64 		.string	"rand"
AARCH64 GAS  obj/extInstr.s 			page 645


 21348      00
 21349              	.LASF239:
 21350 6764 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcmm"
 21350      5374375F 
 21350      5F637878 
 21350      31313132 
 21350      62617369 
 21351              	.LASF36:
 21352 67b3 5F4D5F67 		.string	"_M_get_allocator"
 21352      65745F61 
 21352      6C6C6F63 
 21352      61746F72 
 21352      00
 21353              	.LASF480:
 21354 67c4 6F706572 		.string	"operator|"
 21354      61746F72 
 21354      7C00
 21355              	.LASF402:
 21356 67ce 5F5A4E53 		.string	"_ZNSo5flushEv"
 21356      6F35666C 
 21356      75736845 
 21356      7600
 21357              	.LASF489:
 21358 67dc 6E65775F 		.string	"new_allocator<char>"
 21358      616C6C6F 
 21358      6361746F 
 21358      723C6368 
 21358      61723E00 
 21359              	.LASF158:
 21360 67f0 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignERKS4_"
 21360      74375F5F 
 21360      63787831 
 21360      31313262 
 21360      61736963 
 21361              	.LASF6:
 21362 6833 73697A65 		.string	"size_type"
 21362      5F747970 
 21362      6500
 21363              	.LASF523:
 21364 683d 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC
 21364      5F5F676E 
 21364      755F6378 
 21364      7831375F 
 21364      5F6E6F72 
 21365              	.LASF89:
 21366 689e 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSESt16initializer_listIcE"
 21366      74375F5F 
 21366      63787831 
 21366      31313262 
 21366      61736963 
 21367              	.LASF620:
 21368 68ee 46494C45 		.string	"FILE"
 21368      00
 21369              	.LASF325:
 21370 68f3 5F5A4E53 		.string	"_ZNSaIcEaSERKS_"
 21370      61496345 
 21370      61534552 
AARCH64 GAS  obj/extInstr.s 			page 646


 21370      4B535F00 
 21371              	.LASF170:
 21372 6903 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEmPKcm"
 21372      74375F5F 
 21372      63787831 
 21372      31313262 
 21372      61736963 
 21373              	.LASF719:
 21374 6946 5F5F7569 		.string	"__uint_least16_t"
 21374      6E745F6C 
 21374      65617374 
 21374      31365F74 
 21374      00
 21375              	.LASF18:
 21376 6957 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv"
 21376      5374375F 
 21376      5F637878 
 21376      31313132 
 21376      62617369 
 21377              	.LASF494:
 21378 699f 5F5A4E39 		.string	"_ZN9__gnu_cxx13new_allocatorIcED4Ev"
 21378      5F5F676E 
 21378      755F6378 
 21378      7831336E 
 21378      65775F61 
 21379              	.LASF330:
 21380 69c3 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIcEE8allocateERS0_m"
 21380      74313661 
 21380      6C6C6F63 
 21380      61746F72 
 21380      5F747261 
 21381              	.LASF921:
 21382 69f1 5F5F6473 		.string	"__dso_handle"
 21382      6F5F6861 
 21382      6E646C65 
 21382      00
 21383              	.LASF985:
 21384 69fe 5F556E77 		.string	"_Unwind_Resume"
 21384      696E645F 
 21384      52657375 
 21384      6D6500
 21385              	.LASF586:
 21386 6a0d 63686172 		.string	"char"
 21386      00
 21387              	.LASF422:
 21388 6a12 636F7574 		.string	"cout"
 21388      00
 21389              	.LASF477:
 21390 6a17 73657477 		.string	"setw"
 21390      00
 21391              	.LASF860:
 21392 6a1c 69737763 		.string	"iswctype"
 21392      74797065 
 21392      00
 21393              	.LASF321:
 21394 6a25 616C6C6F 		.string	"allocator"
 21394      6361746F 
AARCH64 GAS  obj/extInstr.s 			page 647


 21394      7200
 21395              	.LASF262:
 21396 6a2f 5F5A4E4B 		.string	"_ZNKSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv"
 21396      5374375F 
 21396      5F637878 
 21396      31313139 
 21396      62617369 
 21397              	.LASF447:
 21398 6a73 61646472 		.string	"addressof<char>"
 21398      6573736F 
 21398      663C6368 
 21398      61723E00 
 21399              	.LASF564:
 21400 6a83 6F706572 		.string	"operator-<char const*, std::__cxx11::basic_string<char> >"
 21400      61746F72 
 21400      2D3C6368 
 21400      61722063 
 21400      6F6E7374 
 21401              	.LASF93:
 21402 6abd 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE3endEv"
 21402      74375F5F 
 21402      63787831 
 21402      31313262 
 21402      61736963 
 21403              	.LASF550:
 21404 6af9 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 21404      395F5F67 
 21404      6E755F63 
 21404      78783137 
 21404      5F5F6E6F 
 21405              	.LASF668:
 21406 6b58 746D5F67 		.string	"tm_gmtoff"
 21406      6D746F66 
 21406      6600
 21407              	.LASF788:
 21408 6b62 5F41746F 		.string	"_Atomic_word"
 21408      6D69635F 
 21408      776F7264 
 21408      00
 21409              	.LASF150:
 21410 6b6f 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_mm"
 21410      74375F5F 
 21410      63787831 
 21410      31313262 
 21410      61736963 
 21411              	.LASF650:
 21412 6bb4 76777363 		.string	"vwscanf"
 21412      616E6600 
 21413              	.LASF316:
 21414 6bbc 5F5A4E53 		.string	"_ZNSt11char_traitsIcE11eq_int_typeERKiS2_"
 21414      74313163 
 21414      6861725F 
 21414      74726169 
 21414      74734963 
 21415              	.LASF311:
 21416 6be6 5F5A4E53 		.string	"_ZNSt11char_traitsIcE12to_char_typeERKi"
 21416      74313163 
AARCH64 GAS  obj/extInstr.s 			page 648


 21416      6861725F 
 21416      74726169 
 21416      74734963 
 21417              	.LASF210:
 21418 6c0e 6765745F 		.string	"get_allocator"
 21418      616C6C6F 
 21418      6361746F 
 21418      7200
 21419              	.LASF748:
 21420 6c1c 696E745F 		.string	"int_fast32_t"
 21420      66617374 
 21420      33325F74 
 21420      00
 21421              	.LASF247:
 21422 6c29 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEmmRKS4_mm"
 21422      5374375F 
 21422      5F637878 
 21422      31313132 
 21422      62617369 
 21423              	.LASF413:
 21424 6c72 7E626173 		.string	"~basic_streambuf"
 21424      69635F73 
 21424      74726561 
 21424      6D627566 
 21424      00
 21425              	.LASF11:
 21426 6c83 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc"
 21426      74375F5F 
 21426      63787831 
 21426      31313262 
 21426      61736963 
 21427              	.LASF249:
 21428 6cc4 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEmmPKc"
 21428      5374375F 
 21428      5F637878 
 21428      31313132 
 21428      62617369 
 21429              	.LASF743:
 21430 6d09 75696E74 		.string	"uint_least16_t"
 21430      5F6C6561 
 21430      73743136 
 21430      5F7400
 21431              	.LASF137:
 21432 6d18 66726F6E 		.string	"front"
 21432      7400
 21433              	.LASF165:
 21434 6d1e 696E7365 		.string	"insert"
 21434      727400
 21435              	.LASF208:
 21436 6d25 64617461 		.string	"data"
 21436      00
 21437              	.LASF288:
 21438 6d2a 5F5A4E4B 		.string	"_ZNKSt15__exception_ptr13exception_ptr20__cxa_exception_typeEv"
 21438      53743135 
 21438      5F5F6578 
 21438      63657074 
 21438      696F6E5F 
AARCH64 GAS  obj/extInstr.s 			page 649


 21439              	.LASF960:
 21440 6d69 5F5A4E53 		.string	"_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED2Ev"
 21440      74375F5F 
 21440      63787831 
 21440      31313562 
 21440      61736963 
 21441              	.LASF275:
 21442 6da6 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptrC4Ev"
 21442      7431355F 
 21442      5F657863 
 21442      65707469 
 21442      6F6E5F70 
 21443              	.LASF634:
 21444 6dd0 6D627274 		.string	"mbrtowc"
 21444      6F776300 
 21445              	.LASF173:
 21446 6dd8 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEN9__gnu_cxx17__normal_iterat
 21446      74375F5F 
 21446      63787831 
 21446      31313262 
 21446      61736963 
 21447              	.LASF764:
 21448 6e3e 6D6F6E5F 		.string	"mon_decimal_point"
 21448      64656369 
 21448      6D616C5F 
 21448      706F696E 
 21448      7400
 21449              	.LASF418:
 21450 6e50 5F5A4E4B 		.string	"_ZNKSt5ctypeIcE13_M_widen_initEv"
 21450      53743563 
 21450      74797065 
 21450      49634531 
 21450      335F4D5F 
 21451              	.LASF144:
 21452 6e71 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_"
 21452      74375F5F 
 21452      63787831 
 21452      31313262 
 21452      61736963 
 21453              	.LASF301:
 21454 6eaf 5F5A4E53 		.string	"_ZNSt11char_traitsIcE2eqERKcS2_"
 21454      74313163 
 21454      6861725F 
 21454      74726169 
 21454      74734963 
 21455              	.LASF604:
 21456 6ecf 5F636861 		.string	"_chain"
 21456      696E00
 21457              	.LASF186:
 21458 6ed6 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEmmmc"
 21458      74375F5F 
 21458      63787831 
 21458      31313262 
 21458      61736963 
 21459              	.LASF797:
 21460 6f19 5F5F636F 		.string	"__compar_fn_t"
 21460      6D706172 
AARCH64 GAS  obj/extInstr.s 			page 650


 21460      5F666E5F 
 21460      7400
 21461              	.LASF403:
 21462 6f27 666C7573 		.string	"flush"
 21462      6800
 21463              	.LASF832:
 21464 6f2d 66706F73 		.string	"fpos_t"
 21464      5F7400
 21465              	.LASF520:
 21466 6f34 5F4D5F63 		.string	"_M_current"
 21466      75727265 
 21466      6E7400
 21467              	.LASF716:
 21468 6f3f 5F5F696E 		.string	"__int_least8_t"
 21468      745F6C65 
 21468      61737438 
 21468      5F7400
 21469              	.LASF436:
 21470 6f4e 706F696E 		.string	"pointer_to"
 21470      7465725F 
 21470      746F00
 21471              	.LASF439:
 21472 6f59 5F5F6D61 		.string	"__make_not_void"
 21472      6B655F6E 
 21472      6F745F76 
 21472      6F696400 
 21473              	.LASF171:
 21474 6f69 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEmPKc"
 21474      74375F5F 
 21474      63787831 
 21474      31313262 
 21474      61736963 
 21475              	.LASF872:
 21476 6fab 6D5F4938 		.string	"m_I8"
 21476      00
 21477              	.LASF384:
 21478 6fb0 5F535F72 		.string	"_S_refcount"
 21478      6566636F 
 21478      756E7400 
 21479              	.LASF722:
 21480 6fbc 5F5F696E 		.string	"__int_least64_t"
 21480      745F6C65 
 21480      61737436 
 21480      345F7400 
 21481              	.LASF995:
 21482 6fcc 646F5F77 		.string	"do_widen"
 21482      6964656E 
 21482      00
 21483              	.LASF80:
 21484 6fd5 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC4EOS4_RKS3_"
 21484      74375F5F 
 21484      63787831 
 21484      31313262 
 21484      61736963 
 21485              	.LASF824:
 21486 7017 73747274 		.string	"strtold"
 21486      6F6C6400 
AARCH64 GAS  obj/extInstr.s 			page 651


 21487              	.LASF821:
 21488 701f 73747274 		.string	"strtoll"
 21488      6F6C6C00 
 21489              	.LASF78:
 21490 7027 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC4ESt16initializer_listIcERKS3_"
 21490      74375F5F 
 21490      63787831 
 21490      31313262 
 21490      61736963 
 21491              	.LASF629:
 21492 707c 66777072 		.string	"fwprintf"
 21492      696E7466 
 21492      00
 21493              	.LASF369:
 21494 7085 5F535F67 		.string	"_S_goodbit"
 21494      6F6F6462 
 21494      697400
 21495              	.LASF973:
 21496 7090 6D61696E 		.string	"main"
 21496      00
 21497              	.LASF282:
 21498 7095 7E657863 		.string	"~exception_ptr"
 21498      65707469 
 21498      6F6E5F70 
 21498      747200
 21499              	.LASF21:
 21500 70a4 5F4D5F73 		.string	"_M_set_length"
 21500      65745F6C 
 21500      656E6774 
 21500      6800
 21501              	.LASF741:
 21502 70b2 696E745F 		.string	"int_least64_t"
 21502      6C656173 
 21502      7436345F 
 21502      7400
 21503              	.LASF769:
 21504 70c0 696E745F 		.string	"int_frac_digits"
 21504      66726163 
 21504      5F646967 
 21504      69747300 
 21505              	.LASF472:
 21506 70d0 656E646C 		.string	"endl<char, std::char_traits<char> >"
 21506      3C636861 
 21506      722C2073 
 21506      74643A3A 
 21506      63686172 
 21507              	.LASF228:
 21508 70f4 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofERKS4_m"
 21508      5374375F 
 21508      5F637878 
 21508      31313132 
 21508      62617369 
 21509              	.LASF416:
 21510 7140 77696465 		.string	"widen"
 21510      6E00
 21511              	.LASF340:
 21512 7146 696E6974 		.string	"initializer_list<char>"
AARCH64 GAS  obj/extInstr.s 			page 652


 21512      69616C69 
 21512      7A65725F 
 21512      6C697374 
 21512      3C636861 
 21513              	.LASF854:
 21514 715d 73657476 		.string	"setvbuf"
 21514      62756600 
 21515              	.LASF615:
 21516 7165 5F667265 		.string	"_freeres_list"
 21516      65726573 
 21516      5F6C6973 
 21516      7400
 21517              	.LASF714:
 21518 7173 5F5F696E 		.string	"__int64_t"
 21518      7436345F 
 21518      7400
 21519              	.LASF417:
 21520 717d 5F5A4E4B 		.string	"_ZNKSt5ctypeIcE5widenEc"
 21520      53743563 
 21520      74797065 
 21520      49634535 
 21520      77696465 
 21521              	.LASF948:
 21522 7195 5F5A4E53 		.string	"_ZNSt9basic_iosIcSt11char_traitsIcEED0Ev"
 21522      74396261 
 21522      7369635F 
 21522      696F7349 
 21522      63537431 
 21523              	.LASF777:
 21524 71be 696E745F 		.string	"int_p_cs_precedes"
 21524      705F6373 
 21524      5F707265 
 21524      63656465 
 21524      7300
 21525              	.LASF688:
 21526 71d0 77707269 		.string	"wprintf"
 21526      6E746600 
 21527              	.LASF88:
 21528 71d8 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_"
 21528      74375F5F 
 21528      63787831 
 21528      31313262 
 21528      61736963 
 21529              	.LASF590:
 21530 7215 5F494F5F 		.string	"_IO_FILE"
 21530      46494C45 
 21530      00
 21531              	.LASF516:
 21532 721e 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIcEcE15_S_nothrow_moveEv"
 21532      5F5F676E 
 21532      755F6378 
 21532      7831345F 
 21532      5F616C6C 
 21533              	.LASF382:
 21534 7257 5F5A4E53 		.string	"_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED4Ev"
 21534      74375F5F 
 21534      63787831 
AARCH64 GAS  obj/extInstr.s 			page 653


 21534      31313962 
 21534      61736963 
 21535              	.LASF319:
 21536 7298 70747264 		.string	"ptrdiff_t"
 21536      6966665F 
 21536      7400
 21537              	.LASF544:
 21538 72a2 5F497465 		.string	"_Iterator"
 21538      7261746F 
 21538      7200
 21539              	.LASF911:
 21540 72ac 5F5A4E36 		.string	"_ZN6Vec12812ToStringUintItEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKT_ii"
 21540      56656331 
 21540      32383132 
 21540      546F5374 
 21540      72696E67 
 21541              	.LASF176:
 21542 7303 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEmm"
 21542      74375F5F 
 21542      63787831 
 21542      31313262 
 21542      61736963 
 21543              	.LASF109:
 21544 7342 6372656E 		.string	"crend"
 21544      6400
 21545              	.LASF717:
 21546 7348 5F5F7569 		.string	"__uint_least8_t"
 21546      6E745F6C 
 21546      65617374 
 21546      385F7400 
 21547              	.LASF159:
 21548 7358 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEOS4_"
 21548      74375F5F 
 21548      63787831 
 21548      31313262 
 21548      61736963 
 21549              	.LASF348:
 21550 739a 5F5A4E4B 		.string	"_ZNKSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE3strEv"
 21550      5374375F 
 21550      5F637878 
 21550      31313135 
 21550      62617369 
 21551              	.LASF446:
 21552 73da 5F5A5374 		.string	"_ZSt11__addressofIKcEPT_RS1_"
 21552      31315F5F 
 21552      61646472 
 21552      6573736F 
 21552      66494B63 
 21553              	.LASF836:
 21554 73f7 66657272 		.string	"ferror"
 21554      6F7200
 21555              	.LASF314:
 21556 73fe 5F5A4E53 		.string	"_ZNSt11char_traitsIcE11to_int_typeERKc"
 21556      74313163 
 21556      6861725F 
 21556      74726169 
 21556      74734963 
AARCH64 GAS  obj/extInstr.s 			page 654


 21557              	.LASF643:
 21558 7425 76667770 		.string	"vfwprintf"
 21558      72696E74 
 21558      6600
 21559              	.LASF732:
 21560 742f 696E7433 		.string	"int32_t"
 21560      325F7400 
 21561              	.LASF454:
 21562 7437 62617369 		.string	"basic_ios<char, std::char_traits<char> >"
 21562      635F696F 
 21562      733C6368 
 21562      61722C20 
 21562      7374643A 
 21563              	.LASF113:
 21564 7460 6C656E67 		.string	"length"
 21564      746800
 21565              	.LASF746:
 21566 7467 696E745F 		.string	"int_fast8_t"
 21566      66617374 
 21566      385F7400 
 21567              	.LASF693:
 21568 7473 77637372 		.string	"wcsrchr"
 21568      63687200 
 21569              	.LASF626:
 21570 747b 66707574 		.string	"fputwc"
 21570      776300
 21571              	.LASF730:
 21572 7482 696E7438 		.string	"int8_t"
 21572      5F7400
 21573              	.LASF75:
 21574 7489 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC4EPKcRKS3_"
 21574      74375F5F 
 21574      63787831 
 21574      31313262 
 21574      61736963 
 21575              	.LASF627:
 21576 74ca 66707574 		.string	"fputws"
 21576      777300
 21577              	.LASF984:
 21578 74d1 5F5F6378 		.string	"__cxa_atexit"
 21578      615F6174 
 21578      65786974 
 21578      00
 21579              	.LASF672:
 21580 74de 7763736E 		.string	"wcsncmp"
 21580      636D7000 
 21581              	.LASF423:
 21582 74e6 69746572 		.string	"iterator_traits<char*>"
 21582      61746F72 
 21582      5F747261 
 21582      6974733C 
 21582      63686172 
 21583              	.LASF588:
 21584 74fd 6D627374 		.string	"mbstate_t"
 21584      6174655F 
 21584      7400
 21585              	.LASF34:
AARCH64 GAS  obj/extInstr.s 			page 655


 21586 7507 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc"
 21586      74375F5F 
 21586      63787831 
 21586      31313262 
 21586      61736963 
 21587              	.LASF580:
 21588 754e 77696E74 		.string	"wint_t"
 21588      5F7400
 21589              	.LASF859:
 21590 7555 77637472 		.string	"wctrans_t"
 21590      616E735F 
 21590      7400
 21591              	.LASF558:
 21592 755f 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
 21592      5F5F676E 
 21592      755F6378 
 21592      7831375F 
 21592      5F6E6F72 
 21593              	.LASF581:
 21594 75bd 756E7369 		.string	"unsigned int"
 21594      676E6564 
 21594      20696E74 
 21594      00
 21595              	.LASF95:
 21596 75ca 72657665 		.string	"reverse_iterator"
 21596      7273655F 
 21596      69746572 
 21596      61746F72 
 21596      00
 21597              	.LASF437:
 21598 75db 5F5A4E53 		.string	"_ZNSt14pointer_traitsIPcE10pointer_toERc"
 21598      74313470 
 21598      6F696E74 
 21598      65725F74 
 21598      72616974 
 21599              	.LASF803:
 21600 7604 62736561 		.string	"bsearch"
 21600      72636800 
 21601              	.LASF899:
 21602 760c 5F5A4E36 		.string	"_ZN6Vec12810ToStringX8B5cxx11Ev"
 21602      56656331 
 21602      32383130 
 21602      546F5374 
 21602      72696E67 
 21603              		.hidden	DW.ref.__gxx_personality_v0
 21604              		.weak	DW.ref.__gxx_personality_v0
 21605              		.section	.data.rel.local.DW.ref.__gxx_personality_v0,"awG",@progbits,DW.ref.__gxx_personality_v0,c
 21606              		.align	3
 21607              		.type	DW.ref.__gxx_personality_v0, %object
 21608              		.size	DW.ref.__gxx_personality_v0, 8
 21609              	DW.ref.__gxx_personality_v0:
 21610 0000 00000000 		.xword	__gxx_personality_v0
 21610      00000000 
 21611              		.hidden	__dso_handle
 21612              		.ident	"GCC: (Debian 10.2.1-6) 10.2.1 20210110"
 21613              		.section	.note.GNU-stack,"",@progbits
